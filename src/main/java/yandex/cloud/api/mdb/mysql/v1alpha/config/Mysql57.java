// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: yandex/cloud/mdb/mysql/v1alpha/config/mysql5_7.proto

package yandex.cloud.api.mdb.mysql.v1alpha.config;

public final class Mysql57 {
  private Mysql57() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface MysqlConfig5_7OrBuilder extends
      // @@protoc_insertion_point(interface_extends:yandex.cloud.mdb.mysql.v1alpha.config.MysqlConfig5_7)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Size of the InnoDB buffer pool used for caching table and index data.
     * For details, see [MySQL documentation for the parameter](https://dev.mysql.com/doc/refman/5.7/en/innodb-parameters.html#sysvar_innodb_buffer_pool_size).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value innodb_buffer_pool_size = 1 [(.yandex.cloud.value) = "&gt;=5242880"];</code>
     * @return Whether the innodbBufferPoolSize field is set.
     */
    boolean hasInnodbBufferPoolSize();
    /**
     * <pre>
     * Size of the InnoDB buffer pool used for caching table and index data.
     * For details, see [MySQL documentation for the parameter](https://dev.mysql.com/doc/refman/5.7/en/innodb-parameters.html#sysvar_innodb_buffer_pool_size).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value innodb_buffer_pool_size = 1 [(.yandex.cloud.value) = "&gt;=5242880"];</code>
     * @return The innodbBufferPoolSize.
     */
    com.google.protobuf.Int64Value getInnodbBufferPoolSize();
    /**
     * <pre>
     * Size of the InnoDB buffer pool used for caching table and index data.
     * For details, see [MySQL documentation for the parameter](https://dev.mysql.com/doc/refman/5.7/en/innodb-parameters.html#sysvar_innodb_buffer_pool_size).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value innodb_buffer_pool_size = 1 [(.yandex.cloud.value) = "&gt;=5242880"];</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getInnodbBufferPoolSizeOrBuilder();

    /**
     * <pre>
     * The maximum permitted number of simultaneous client connections.
     * For details, see [MySQL documentation for the variable](https://dev.mysql.com/doc/refman/5.7/en/server-system-variables.html#sysvar_max_connections).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_connections = 2 [(.yandex.cloud.value) = "10-10000"];</code>
     * @return Whether the maxConnections field is set.
     */
    boolean hasMaxConnections();
    /**
     * <pre>
     * The maximum permitted number of simultaneous client connections.
     * For details, see [MySQL documentation for the variable](https://dev.mysql.com/doc/refman/5.7/en/server-system-variables.html#sysvar_max_connections).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_connections = 2 [(.yandex.cloud.value) = "10-10000"];</code>
     * @return The maxConnections.
     */
    com.google.protobuf.Int64Value getMaxConnections();
    /**
     * <pre>
     * The maximum permitted number of simultaneous client connections.
     * For details, see [MySQL documentation for the variable](https://dev.mysql.com/doc/refman/5.7/en/server-system-variables.html#sysvar_max_connections).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_connections = 2 [(.yandex.cloud.value) = "10-10000"];</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getMaxConnectionsOrBuilder();

    /**
     * <pre>
     * Time that it takes to process a query before it is considered slow.
     * For details, see [MySQL documentation for the variable](https://dev.mysql.com/doc/refman/5.7/en/server-system-variables.html#sysvar_long_query_time).
     * </pre>
     *
     * <code>.google.protobuf.DoubleValue long_query_time = 3;</code>
     * @return Whether the longQueryTime field is set.
     */
    boolean hasLongQueryTime();
    /**
     * <pre>
     * Time that it takes to process a query before it is considered slow.
     * For details, see [MySQL documentation for the variable](https://dev.mysql.com/doc/refman/5.7/en/server-system-variables.html#sysvar_long_query_time).
     * </pre>
     *
     * <code>.google.protobuf.DoubleValue long_query_time = 3;</code>
     * @return The longQueryTime.
     */
    com.google.protobuf.DoubleValue getLongQueryTime();
    /**
     * <pre>
     * Time that it takes to process a query before it is considered slow.
     * For details, see [MySQL documentation for the variable](https://dev.mysql.com/doc/refman/5.7/en/server-system-variables.html#sysvar_long_query_time).
     * </pre>
     *
     * <code>.google.protobuf.DoubleValue long_query_time = 3;</code>
     */
    com.google.protobuf.DoubleValueOrBuilder getLongQueryTimeOrBuilder();
  }
  /**
   * <pre>
   * Options and structure of `MysqlConfig5_7` reflects MySQL 5.7 configuration file
   * </pre>
   *
   * Protobuf type {@code yandex.cloud.mdb.mysql.v1alpha.config.MysqlConfig5_7}
   */
  public static final class MysqlConfig5_7 extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:yandex.cloud.mdb.mysql.v1alpha.config.MysqlConfig5_7)
      MysqlConfig5_7OrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MysqlConfig5_7.newBuilder() to construct.
    private MysqlConfig5_7(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MysqlConfig5_7() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new MysqlConfig5_7();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MysqlConfig5_7(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (innodbBufferPoolSize_ != null) {
                subBuilder = innodbBufferPoolSize_.toBuilder();
              }
              innodbBufferPoolSize_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(innodbBufferPoolSize_);
                innodbBufferPoolSize_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (maxConnections_ != null) {
                subBuilder = maxConnections_.toBuilder();
              }
              maxConnections_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(maxConnections_);
                maxConnections_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              com.google.protobuf.DoubleValue.Builder subBuilder = null;
              if (longQueryTime_ != null) {
                subBuilder = longQueryTime_.toBuilder();
              }
              longQueryTime_ = input.readMessage(com.google.protobuf.DoubleValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(longQueryTime_);
                longQueryTime_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.internal_static_yandex_cloud_mdb_mysql_v1alpha_config_MysqlConfig5_7_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.internal_static_yandex_cloud_mdb_mysql_v1alpha_config_MysqlConfig5_7_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7.class, yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7.Builder.class);
    }

    public static final int INNODB_BUFFER_POOL_SIZE_FIELD_NUMBER = 1;
    private com.google.protobuf.Int64Value innodbBufferPoolSize_;
    /**
     * <pre>
     * Size of the InnoDB buffer pool used for caching table and index data.
     * For details, see [MySQL documentation for the parameter](https://dev.mysql.com/doc/refman/5.7/en/innodb-parameters.html#sysvar_innodb_buffer_pool_size).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value innodb_buffer_pool_size = 1 [(.yandex.cloud.value) = "&gt;=5242880"];</code>
     * @return Whether the innodbBufferPoolSize field is set.
     */
    @java.lang.Override
    public boolean hasInnodbBufferPoolSize() {
      return innodbBufferPoolSize_ != null;
    }
    /**
     * <pre>
     * Size of the InnoDB buffer pool used for caching table and index data.
     * For details, see [MySQL documentation for the parameter](https://dev.mysql.com/doc/refman/5.7/en/innodb-parameters.html#sysvar_innodb_buffer_pool_size).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value innodb_buffer_pool_size = 1 [(.yandex.cloud.value) = "&gt;=5242880"];</code>
     * @return The innodbBufferPoolSize.
     */
    @java.lang.Override
    public com.google.protobuf.Int64Value getInnodbBufferPoolSize() {
      return innodbBufferPoolSize_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : innodbBufferPoolSize_;
    }
    /**
     * <pre>
     * Size of the InnoDB buffer pool used for caching table and index data.
     * For details, see [MySQL documentation for the parameter](https://dev.mysql.com/doc/refman/5.7/en/innodb-parameters.html#sysvar_innodb_buffer_pool_size).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value innodb_buffer_pool_size = 1 [(.yandex.cloud.value) = "&gt;=5242880"];</code>
     */
    @java.lang.Override
    public com.google.protobuf.Int64ValueOrBuilder getInnodbBufferPoolSizeOrBuilder() {
      return getInnodbBufferPoolSize();
    }

    public static final int MAX_CONNECTIONS_FIELD_NUMBER = 2;
    private com.google.protobuf.Int64Value maxConnections_;
    /**
     * <pre>
     * The maximum permitted number of simultaneous client connections.
     * For details, see [MySQL documentation for the variable](https://dev.mysql.com/doc/refman/5.7/en/server-system-variables.html#sysvar_max_connections).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_connections = 2 [(.yandex.cloud.value) = "10-10000"];</code>
     * @return Whether the maxConnections field is set.
     */
    @java.lang.Override
    public boolean hasMaxConnections() {
      return maxConnections_ != null;
    }
    /**
     * <pre>
     * The maximum permitted number of simultaneous client connections.
     * For details, see [MySQL documentation for the variable](https://dev.mysql.com/doc/refman/5.7/en/server-system-variables.html#sysvar_max_connections).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_connections = 2 [(.yandex.cloud.value) = "10-10000"];</code>
     * @return The maxConnections.
     */
    @java.lang.Override
    public com.google.protobuf.Int64Value getMaxConnections() {
      return maxConnections_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : maxConnections_;
    }
    /**
     * <pre>
     * The maximum permitted number of simultaneous client connections.
     * For details, see [MySQL documentation for the variable](https://dev.mysql.com/doc/refman/5.7/en/server-system-variables.html#sysvar_max_connections).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_connections = 2 [(.yandex.cloud.value) = "10-10000"];</code>
     */
    @java.lang.Override
    public com.google.protobuf.Int64ValueOrBuilder getMaxConnectionsOrBuilder() {
      return getMaxConnections();
    }

    public static final int LONG_QUERY_TIME_FIELD_NUMBER = 3;
    private com.google.protobuf.DoubleValue longQueryTime_;
    /**
     * <pre>
     * Time that it takes to process a query before it is considered slow.
     * For details, see [MySQL documentation for the variable](https://dev.mysql.com/doc/refman/5.7/en/server-system-variables.html#sysvar_long_query_time).
     * </pre>
     *
     * <code>.google.protobuf.DoubleValue long_query_time = 3;</code>
     * @return Whether the longQueryTime field is set.
     */
    @java.lang.Override
    public boolean hasLongQueryTime() {
      return longQueryTime_ != null;
    }
    /**
     * <pre>
     * Time that it takes to process a query before it is considered slow.
     * For details, see [MySQL documentation for the variable](https://dev.mysql.com/doc/refman/5.7/en/server-system-variables.html#sysvar_long_query_time).
     * </pre>
     *
     * <code>.google.protobuf.DoubleValue long_query_time = 3;</code>
     * @return The longQueryTime.
     */
    @java.lang.Override
    public com.google.protobuf.DoubleValue getLongQueryTime() {
      return longQueryTime_ == null ? com.google.protobuf.DoubleValue.getDefaultInstance() : longQueryTime_;
    }
    /**
     * <pre>
     * Time that it takes to process a query before it is considered slow.
     * For details, see [MySQL documentation for the variable](https://dev.mysql.com/doc/refman/5.7/en/server-system-variables.html#sysvar_long_query_time).
     * </pre>
     *
     * <code>.google.protobuf.DoubleValue long_query_time = 3;</code>
     */
    @java.lang.Override
    public com.google.protobuf.DoubleValueOrBuilder getLongQueryTimeOrBuilder() {
      return getLongQueryTime();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (innodbBufferPoolSize_ != null) {
        output.writeMessage(1, getInnodbBufferPoolSize());
      }
      if (maxConnections_ != null) {
        output.writeMessage(2, getMaxConnections());
      }
      if (longQueryTime_ != null) {
        output.writeMessage(3, getLongQueryTime());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (innodbBufferPoolSize_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getInnodbBufferPoolSize());
      }
      if (maxConnections_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getMaxConnections());
      }
      if (longQueryTime_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getLongQueryTime());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7)) {
        return super.equals(obj);
      }
      yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7 other = (yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7) obj;

      if (hasInnodbBufferPoolSize() != other.hasInnodbBufferPoolSize()) return false;
      if (hasInnodbBufferPoolSize()) {
        if (!getInnodbBufferPoolSize()
            .equals(other.getInnodbBufferPoolSize())) return false;
      }
      if (hasMaxConnections() != other.hasMaxConnections()) return false;
      if (hasMaxConnections()) {
        if (!getMaxConnections()
            .equals(other.getMaxConnections())) return false;
      }
      if (hasLongQueryTime() != other.hasLongQueryTime()) return false;
      if (hasLongQueryTime()) {
        if (!getLongQueryTime()
            .equals(other.getLongQueryTime())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasInnodbBufferPoolSize()) {
        hash = (37 * hash) + INNODB_BUFFER_POOL_SIZE_FIELD_NUMBER;
        hash = (53 * hash) + getInnodbBufferPoolSize().hashCode();
      }
      if (hasMaxConnections()) {
        hash = (37 * hash) + MAX_CONNECTIONS_FIELD_NUMBER;
        hash = (53 * hash) + getMaxConnections().hashCode();
      }
      if (hasLongQueryTime()) {
        hash = (37 * hash) + LONG_QUERY_TIME_FIELD_NUMBER;
        hash = (53 * hash) + getLongQueryTime().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7 parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7 parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7 parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7 parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7 parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7 parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7 parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7 parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7 parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7 parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7 parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7 parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7 prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Options and structure of `MysqlConfig5_7` reflects MySQL 5.7 configuration file
     * </pre>
     *
     * Protobuf type {@code yandex.cloud.mdb.mysql.v1alpha.config.MysqlConfig5_7}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:yandex.cloud.mdb.mysql.v1alpha.config.MysqlConfig5_7)
        yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7OrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.internal_static_yandex_cloud_mdb_mysql_v1alpha_config_MysqlConfig5_7_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.internal_static_yandex_cloud_mdb_mysql_v1alpha_config_MysqlConfig5_7_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7.class, yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7.Builder.class);
      }

      // Construct using yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (innodbBufferPoolSizeBuilder_ == null) {
          innodbBufferPoolSize_ = null;
        } else {
          innodbBufferPoolSize_ = null;
          innodbBufferPoolSizeBuilder_ = null;
        }
        if (maxConnectionsBuilder_ == null) {
          maxConnections_ = null;
        } else {
          maxConnections_ = null;
          maxConnectionsBuilder_ = null;
        }
        if (longQueryTimeBuilder_ == null) {
          longQueryTime_ = null;
        } else {
          longQueryTime_ = null;
          longQueryTimeBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.internal_static_yandex_cloud_mdb_mysql_v1alpha_config_MysqlConfig5_7_descriptor;
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7 getDefaultInstanceForType() {
        return yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7.getDefaultInstance();
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7 build() {
        yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7 result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7 buildPartial() {
        yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7 result = new yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7(this);
        if (innodbBufferPoolSizeBuilder_ == null) {
          result.innodbBufferPoolSize_ = innodbBufferPoolSize_;
        } else {
          result.innodbBufferPoolSize_ = innodbBufferPoolSizeBuilder_.build();
        }
        if (maxConnectionsBuilder_ == null) {
          result.maxConnections_ = maxConnections_;
        } else {
          result.maxConnections_ = maxConnectionsBuilder_.build();
        }
        if (longQueryTimeBuilder_ == null) {
          result.longQueryTime_ = longQueryTime_;
        } else {
          result.longQueryTime_ = longQueryTimeBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7) {
          return mergeFrom((yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7 other) {
        if (other == yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7.getDefaultInstance()) return this;
        if (other.hasInnodbBufferPoolSize()) {
          mergeInnodbBufferPoolSize(other.getInnodbBufferPoolSize());
        }
        if (other.hasMaxConnections()) {
          mergeMaxConnections(other.getMaxConnections());
        }
        if (other.hasLongQueryTime()) {
          mergeLongQueryTime(other.getLongQueryTime());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7 parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.google.protobuf.Int64Value innodbBufferPoolSize_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> innodbBufferPoolSizeBuilder_;
      /**
       * <pre>
       * Size of the InnoDB buffer pool used for caching table and index data.
       * For details, see [MySQL documentation for the parameter](https://dev.mysql.com/doc/refman/5.7/en/innodb-parameters.html#sysvar_innodb_buffer_pool_size).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value innodb_buffer_pool_size = 1 [(.yandex.cloud.value) = "&gt;=5242880"];</code>
       * @return Whether the innodbBufferPoolSize field is set.
       */
      public boolean hasInnodbBufferPoolSize() {
        return innodbBufferPoolSizeBuilder_ != null || innodbBufferPoolSize_ != null;
      }
      /**
       * <pre>
       * Size of the InnoDB buffer pool used for caching table and index data.
       * For details, see [MySQL documentation for the parameter](https://dev.mysql.com/doc/refman/5.7/en/innodb-parameters.html#sysvar_innodb_buffer_pool_size).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value innodb_buffer_pool_size = 1 [(.yandex.cloud.value) = "&gt;=5242880"];</code>
       * @return The innodbBufferPoolSize.
       */
      public com.google.protobuf.Int64Value getInnodbBufferPoolSize() {
        if (innodbBufferPoolSizeBuilder_ == null) {
          return innodbBufferPoolSize_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : innodbBufferPoolSize_;
        } else {
          return innodbBufferPoolSizeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Size of the InnoDB buffer pool used for caching table and index data.
       * For details, see [MySQL documentation for the parameter](https://dev.mysql.com/doc/refman/5.7/en/innodb-parameters.html#sysvar_innodb_buffer_pool_size).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value innodb_buffer_pool_size = 1 [(.yandex.cloud.value) = "&gt;=5242880"];</code>
       */
      public Builder setInnodbBufferPoolSize(com.google.protobuf.Int64Value value) {
        if (innodbBufferPoolSizeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          innodbBufferPoolSize_ = value;
          onChanged();
        } else {
          innodbBufferPoolSizeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Size of the InnoDB buffer pool used for caching table and index data.
       * For details, see [MySQL documentation for the parameter](https://dev.mysql.com/doc/refman/5.7/en/innodb-parameters.html#sysvar_innodb_buffer_pool_size).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value innodb_buffer_pool_size = 1 [(.yandex.cloud.value) = "&gt;=5242880"];</code>
       */
      public Builder setInnodbBufferPoolSize(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (innodbBufferPoolSizeBuilder_ == null) {
          innodbBufferPoolSize_ = builderForValue.build();
          onChanged();
        } else {
          innodbBufferPoolSizeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Size of the InnoDB buffer pool used for caching table and index data.
       * For details, see [MySQL documentation for the parameter](https://dev.mysql.com/doc/refman/5.7/en/innodb-parameters.html#sysvar_innodb_buffer_pool_size).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value innodb_buffer_pool_size = 1 [(.yandex.cloud.value) = "&gt;=5242880"];</code>
       */
      public Builder mergeInnodbBufferPoolSize(com.google.protobuf.Int64Value value) {
        if (innodbBufferPoolSizeBuilder_ == null) {
          if (innodbBufferPoolSize_ != null) {
            innodbBufferPoolSize_ =
              com.google.protobuf.Int64Value.newBuilder(innodbBufferPoolSize_).mergeFrom(value).buildPartial();
          } else {
            innodbBufferPoolSize_ = value;
          }
          onChanged();
        } else {
          innodbBufferPoolSizeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Size of the InnoDB buffer pool used for caching table and index data.
       * For details, see [MySQL documentation for the parameter](https://dev.mysql.com/doc/refman/5.7/en/innodb-parameters.html#sysvar_innodb_buffer_pool_size).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value innodb_buffer_pool_size = 1 [(.yandex.cloud.value) = "&gt;=5242880"];</code>
       */
      public Builder clearInnodbBufferPoolSize() {
        if (innodbBufferPoolSizeBuilder_ == null) {
          innodbBufferPoolSize_ = null;
          onChanged();
        } else {
          innodbBufferPoolSize_ = null;
          innodbBufferPoolSizeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Size of the InnoDB buffer pool used for caching table and index data.
       * For details, see [MySQL documentation for the parameter](https://dev.mysql.com/doc/refman/5.7/en/innodb-parameters.html#sysvar_innodb_buffer_pool_size).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value innodb_buffer_pool_size = 1 [(.yandex.cloud.value) = "&gt;=5242880"];</code>
       */
      public com.google.protobuf.Int64Value.Builder getInnodbBufferPoolSizeBuilder() {
        
        onChanged();
        return getInnodbBufferPoolSizeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Size of the InnoDB buffer pool used for caching table and index data.
       * For details, see [MySQL documentation for the parameter](https://dev.mysql.com/doc/refman/5.7/en/innodb-parameters.html#sysvar_innodb_buffer_pool_size).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value innodb_buffer_pool_size = 1 [(.yandex.cloud.value) = "&gt;=5242880"];</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getInnodbBufferPoolSizeOrBuilder() {
        if (innodbBufferPoolSizeBuilder_ != null) {
          return innodbBufferPoolSizeBuilder_.getMessageOrBuilder();
        } else {
          return innodbBufferPoolSize_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : innodbBufferPoolSize_;
        }
      }
      /**
       * <pre>
       * Size of the InnoDB buffer pool used for caching table and index data.
       * For details, see [MySQL documentation for the parameter](https://dev.mysql.com/doc/refman/5.7/en/innodb-parameters.html#sysvar_innodb_buffer_pool_size).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value innodb_buffer_pool_size = 1 [(.yandex.cloud.value) = "&gt;=5242880"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getInnodbBufferPoolSizeFieldBuilder() {
        if (innodbBufferPoolSizeBuilder_ == null) {
          innodbBufferPoolSizeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getInnodbBufferPoolSize(),
                  getParentForChildren(),
                  isClean());
          innodbBufferPoolSize_ = null;
        }
        return innodbBufferPoolSizeBuilder_;
      }

      private com.google.protobuf.Int64Value maxConnections_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> maxConnectionsBuilder_;
      /**
       * <pre>
       * The maximum permitted number of simultaneous client connections.
       * For details, see [MySQL documentation for the variable](https://dev.mysql.com/doc/refman/5.7/en/server-system-variables.html#sysvar_max_connections).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_connections = 2 [(.yandex.cloud.value) = "10-10000"];</code>
       * @return Whether the maxConnections field is set.
       */
      public boolean hasMaxConnections() {
        return maxConnectionsBuilder_ != null || maxConnections_ != null;
      }
      /**
       * <pre>
       * The maximum permitted number of simultaneous client connections.
       * For details, see [MySQL documentation for the variable](https://dev.mysql.com/doc/refman/5.7/en/server-system-variables.html#sysvar_max_connections).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_connections = 2 [(.yandex.cloud.value) = "10-10000"];</code>
       * @return The maxConnections.
       */
      public com.google.protobuf.Int64Value getMaxConnections() {
        if (maxConnectionsBuilder_ == null) {
          return maxConnections_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : maxConnections_;
        } else {
          return maxConnectionsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The maximum permitted number of simultaneous client connections.
       * For details, see [MySQL documentation for the variable](https://dev.mysql.com/doc/refman/5.7/en/server-system-variables.html#sysvar_max_connections).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_connections = 2 [(.yandex.cloud.value) = "10-10000"];</code>
       */
      public Builder setMaxConnections(com.google.protobuf.Int64Value value) {
        if (maxConnectionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          maxConnections_ = value;
          onChanged();
        } else {
          maxConnectionsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The maximum permitted number of simultaneous client connections.
       * For details, see [MySQL documentation for the variable](https://dev.mysql.com/doc/refman/5.7/en/server-system-variables.html#sysvar_max_connections).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_connections = 2 [(.yandex.cloud.value) = "10-10000"];</code>
       */
      public Builder setMaxConnections(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (maxConnectionsBuilder_ == null) {
          maxConnections_ = builderForValue.build();
          onChanged();
        } else {
          maxConnectionsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The maximum permitted number of simultaneous client connections.
       * For details, see [MySQL documentation for the variable](https://dev.mysql.com/doc/refman/5.7/en/server-system-variables.html#sysvar_max_connections).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_connections = 2 [(.yandex.cloud.value) = "10-10000"];</code>
       */
      public Builder mergeMaxConnections(com.google.protobuf.Int64Value value) {
        if (maxConnectionsBuilder_ == null) {
          if (maxConnections_ != null) {
            maxConnections_ =
              com.google.protobuf.Int64Value.newBuilder(maxConnections_).mergeFrom(value).buildPartial();
          } else {
            maxConnections_ = value;
          }
          onChanged();
        } else {
          maxConnectionsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The maximum permitted number of simultaneous client connections.
       * For details, see [MySQL documentation for the variable](https://dev.mysql.com/doc/refman/5.7/en/server-system-variables.html#sysvar_max_connections).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_connections = 2 [(.yandex.cloud.value) = "10-10000"];</code>
       */
      public Builder clearMaxConnections() {
        if (maxConnectionsBuilder_ == null) {
          maxConnections_ = null;
          onChanged();
        } else {
          maxConnections_ = null;
          maxConnectionsBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The maximum permitted number of simultaneous client connections.
       * For details, see [MySQL documentation for the variable](https://dev.mysql.com/doc/refman/5.7/en/server-system-variables.html#sysvar_max_connections).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_connections = 2 [(.yandex.cloud.value) = "10-10000"];</code>
       */
      public com.google.protobuf.Int64Value.Builder getMaxConnectionsBuilder() {
        
        onChanged();
        return getMaxConnectionsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The maximum permitted number of simultaneous client connections.
       * For details, see [MySQL documentation for the variable](https://dev.mysql.com/doc/refman/5.7/en/server-system-variables.html#sysvar_max_connections).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_connections = 2 [(.yandex.cloud.value) = "10-10000"];</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getMaxConnectionsOrBuilder() {
        if (maxConnectionsBuilder_ != null) {
          return maxConnectionsBuilder_.getMessageOrBuilder();
        } else {
          return maxConnections_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : maxConnections_;
        }
      }
      /**
       * <pre>
       * The maximum permitted number of simultaneous client connections.
       * For details, see [MySQL documentation for the variable](https://dev.mysql.com/doc/refman/5.7/en/server-system-variables.html#sysvar_max_connections).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_connections = 2 [(.yandex.cloud.value) = "10-10000"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getMaxConnectionsFieldBuilder() {
        if (maxConnectionsBuilder_ == null) {
          maxConnectionsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getMaxConnections(),
                  getParentForChildren(),
                  isClean());
          maxConnections_ = null;
        }
        return maxConnectionsBuilder_;
      }

      private com.google.protobuf.DoubleValue longQueryTime_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.DoubleValue, com.google.protobuf.DoubleValue.Builder, com.google.protobuf.DoubleValueOrBuilder> longQueryTimeBuilder_;
      /**
       * <pre>
       * Time that it takes to process a query before it is considered slow.
       * For details, see [MySQL documentation for the variable](https://dev.mysql.com/doc/refman/5.7/en/server-system-variables.html#sysvar_long_query_time).
       * </pre>
       *
       * <code>.google.protobuf.DoubleValue long_query_time = 3;</code>
       * @return Whether the longQueryTime field is set.
       */
      public boolean hasLongQueryTime() {
        return longQueryTimeBuilder_ != null || longQueryTime_ != null;
      }
      /**
       * <pre>
       * Time that it takes to process a query before it is considered slow.
       * For details, see [MySQL documentation for the variable](https://dev.mysql.com/doc/refman/5.7/en/server-system-variables.html#sysvar_long_query_time).
       * </pre>
       *
       * <code>.google.protobuf.DoubleValue long_query_time = 3;</code>
       * @return The longQueryTime.
       */
      public com.google.protobuf.DoubleValue getLongQueryTime() {
        if (longQueryTimeBuilder_ == null) {
          return longQueryTime_ == null ? com.google.protobuf.DoubleValue.getDefaultInstance() : longQueryTime_;
        } else {
          return longQueryTimeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Time that it takes to process a query before it is considered slow.
       * For details, see [MySQL documentation for the variable](https://dev.mysql.com/doc/refman/5.7/en/server-system-variables.html#sysvar_long_query_time).
       * </pre>
       *
       * <code>.google.protobuf.DoubleValue long_query_time = 3;</code>
       */
      public Builder setLongQueryTime(com.google.protobuf.DoubleValue value) {
        if (longQueryTimeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          longQueryTime_ = value;
          onChanged();
        } else {
          longQueryTimeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Time that it takes to process a query before it is considered slow.
       * For details, see [MySQL documentation for the variable](https://dev.mysql.com/doc/refman/5.7/en/server-system-variables.html#sysvar_long_query_time).
       * </pre>
       *
       * <code>.google.protobuf.DoubleValue long_query_time = 3;</code>
       */
      public Builder setLongQueryTime(
          com.google.protobuf.DoubleValue.Builder builderForValue) {
        if (longQueryTimeBuilder_ == null) {
          longQueryTime_ = builderForValue.build();
          onChanged();
        } else {
          longQueryTimeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Time that it takes to process a query before it is considered slow.
       * For details, see [MySQL documentation for the variable](https://dev.mysql.com/doc/refman/5.7/en/server-system-variables.html#sysvar_long_query_time).
       * </pre>
       *
       * <code>.google.protobuf.DoubleValue long_query_time = 3;</code>
       */
      public Builder mergeLongQueryTime(com.google.protobuf.DoubleValue value) {
        if (longQueryTimeBuilder_ == null) {
          if (longQueryTime_ != null) {
            longQueryTime_ =
              com.google.protobuf.DoubleValue.newBuilder(longQueryTime_).mergeFrom(value).buildPartial();
          } else {
            longQueryTime_ = value;
          }
          onChanged();
        } else {
          longQueryTimeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Time that it takes to process a query before it is considered slow.
       * For details, see [MySQL documentation for the variable](https://dev.mysql.com/doc/refman/5.7/en/server-system-variables.html#sysvar_long_query_time).
       * </pre>
       *
       * <code>.google.protobuf.DoubleValue long_query_time = 3;</code>
       */
      public Builder clearLongQueryTime() {
        if (longQueryTimeBuilder_ == null) {
          longQueryTime_ = null;
          onChanged();
        } else {
          longQueryTime_ = null;
          longQueryTimeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Time that it takes to process a query before it is considered slow.
       * For details, see [MySQL documentation for the variable](https://dev.mysql.com/doc/refman/5.7/en/server-system-variables.html#sysvar_long_query_time).
       * </pre>
       *
       * <code>.google.protobuf.DoubleValue long_query_time = 3;</code>
       */
      public com.google.protobuf.DoubleValue.Builder getLongQueryTimeBuilder() {
        
        onChanged();
        return getLongQueryTimeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Time that it takes to process a query before it is considered slow.
       * For details, see [MySQL documentation for the variable](https://dev.mysql.com/doc/refman/5.7/en/server-system-variables.html#sysvar_long_query_time).
       * </pre>
       *
       * <code>.google.protobuf.DoubleValue long_query_time = 3;</code>
       */
      public com.google.protobuf.DoubleValueOrBuilder getLongQueryTimeOrBuilder() {
        if (longQueryTimeBuilder_ != null) {
          return longQueryTimeBuilder_.getMessageOrBuilder();
        } else {
          return longQueryTime_ == null ?
              com.google.protobuf.DoubleValue.getDefaultInstance() : longQueryTime_;
        }
      }
      /**
       * <pre>
       * Time that it takes to process a query before it is considered slow.
       * For details, see [MySQL documentation for the variable](https://dev.mysql.com/doc/refman/5.7/en/server-system-variables.html#sysvar_long_query_time).
       * </pre>
       *
       * <code>.google.protobuf.DoubleValue long_query_time = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.DoubleValue, com.google.protobuf.DoubleValue.Builder, com.google.protobuf.DoubleValueOrBuilder> 
          getLongQueryTimeFieldBuilder() {
        if (longQueryTimeBuilder_ == null) {
          longQueryTimeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.DoubleValue, com.google.protobuf.DoubleValue.Builder, com.google.protobuf.DoubleValueOrBuilder>(
                  getLongQueryTime(),
                  getParentForChildren(),
                  isClean());
          longQueryTime_ = null;
        }
        return longQueryTimeBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:yandex.cloud.mdb.mysql.v1alpha.config.MysqlConfig5_7)
    }

    // @@protoc_insertion_point(class_scope:yandex.cloud.mdb.mysql.v1alpha.config.MysqlConfig5_7)
    private static final yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7 DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7();
    }

    public static yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7 getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MysqlConfig5_7>
        PARSER = new com.google.protobuf.AbstractParser<MysqlConfig5_7>() {
      @java.lang.Override
      public MysqlConfig5_7 parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MysqlConfig5_7(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MysqlConfig5_7> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MysqlConfig5_7> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7 getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MysqlConfigSet5_7OrBuilder extends
      // @@protoc_insertion_point(interface_extends:yandex.cloud.mdb.mysql.v1alpha.config.MysqlConfigSet5_7)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Effective settings for a MySQL 5.7 cluster (a combination of settings defined
     * in [user_config] and [default_config]).
     * </pre>
     *
     * <code>.yandex.cloud.mdb.mysql.v1alpha.config.MysqlConfig5_7 effective_config = 1;</code>
     * @return Whether the effectiveConfig field is set.
     */
    boolean hasEffectiveConfig();
    /**
     * <pre>
     * Effective settings for a MySQL 5.7 cluster (a combination of settings defined
     * in [user_config] and [default_config]).
     * </pre>
     *
     * <code>.yandex.cloud.mdb.mysql.v1alpha.config.MysqlConfig5_7 effective_config = 1;</code>
     * @return The effectiveConfig.
     */
    yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7 getEffectiveConfig();
    /**
     * <pre>
     * Effective settings for a MySQL 5.7 cluster (a combination of settings defined
     * in [user_config] and [default_config]).
     * </pre>
     *
     * <code>.yandex.cloud.mdb.mysql.v1alpha.config.MysqlConfig5_7 effective_config = 1;</code>
     */
    yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7OrBuilder getEffectiveConfigOrBuilder();

    /**
     * <pre>
     * User-defined settings for a MySQL 5.7 cluster.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.mysql.v1alpha.config.MysqlConfig5_7 user_config = 2;</code>
     * @return Whether the userConfig field is set.
     */
    boolean hasUserConfig();
    /**
     * <pre>
     * User-defined settings for a MySQL 5.7 cluster.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.mysql.v1alpha.config.MysqlConfig5_7 user_config = 2;</code>
     * @return The userConfig.
     */
    yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7 getUserConfig();
    /**
     * <pre>
     * User-defined settings for a MySQL 5.7 cluster.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.mysql.v1alpha.config.MysqlConfig5_7 user_config = 2;</code>
     */
    yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7OrBuilder getUserConfigOrBuilder();

    /**
     * <pre>
     * Default configuration for a MySQL 5.7 cluster.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.mysql.v1alpha.config.MysqlConfig5_7 default_config = 3;</code>
     * @return Whether the defaultConfig field is set.
     */
    boolean hasDefaultConfig();
    /**
     * <pre>
     * Default configuration for a MySQL 5.7 cluster.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.mysql.v1alpha.config.MysqlConfig5_7 default_config = 3;</code>
     * @return The defaultConfig.
     */
    yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7 getDefaultConfig();
    /**
     * <pre>
     * Default configuration for a MySQL 5.7 cluster.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.mysql.v1alpha.config.MysqlConfig5_7 default_config = 3;</code>
     */
    yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7OrBuilder getDefaultConfigOrBuilder();
  }
  /**
   * Protobuf type {@code yandex.cloud.mdb.mysql.v1alpha.config.MysqlConfigSet5_7}
   */
  public static final class MysqlConfigSet5_7 extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:yandex.cloud.mdb.mysql.v1alpha.config.MysqlConfigSet5_7)
      MysqlConfigSet5_7OrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MysqlConfigSet5_7.newBuilder() to construct.
    private MysqlConfigSet5_7(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MysqlConfigSet5_7() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new MysqlConfigSet5_7();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MysqlConfigSet5_7(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7.Builder subBuilder = null;
              if (effectiveConfig_ != null) {
                subBuilder = effectiveConfig_.toBuilder();
              }
              effectiveConfig_ = input.readMessage(yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(effectiveConfig_);
                effectiveConfig_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7.Builder subBuilder = null;
              if (userConfig_ != null) {
                subBuilder = userConfig_.toBuilder();
              }
              userConfig_ = input.readMessage(yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(userConfig_);
                userConfig_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7.Builder subBuilder = null;
              if (defaultConfig_ != null) {
                subBuilder = defaultConfig_.toBuilder();
              }
              defaultConfig_ = input.readMessage(yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(defaultConfig_);
                defaultConfig_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.internal_static_yandex_cloud_mdb_mysql_v1alpha_config_MysqlConfigSet5_7_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.internal_static_yandex_cloud_mdb_mysql_v1alpha_config_MysqlConfigSet5_7_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfigSet5_7.class, yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfigSet5_7.Builder.class);
    }

    public static final int EFFECTIVE_CONFIG_FIELD_NUMBER = 1;
    private yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7 effectiveConfig_;
    /**
     * <pre>
     * Effective settings for a MySQL 5.7 cluster (a combination of settings defined
     * in [user_config] and [default_config]).
     * </pre>
     *
     * <code>.yandex.cloud.mdb.mysql.v1alpha.config.MysqlConfig5_7 effective_config = 1;</code>
     * @return Whether the effectiveConfig field is set.
     */
    @java.lang.Override
    public boolean hasEffectiveConfig() {
      return effectiveConfig_ != null;
    }
    /**
     * <pre>
     * Effective settings for a MySQL 5.7 cluster (a combination of settings defined
     * in [user_config] and [default_config]).
     * </pre>
     *
     * <code>.yandex.cloud.mdb.mysql.v1alpha.config.MysqlConfig5_7 effective_config = 1;</code>
     * @return The effectiveConfig.
     */
    @java.lang.Override
    public yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7 getEffectiveConfig() {
      return effectiveConfig_ == null ? yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7.getDefaultInstance() : effectiveConfig_;
    }
    /**
     * <pre>
     * Effective settings for a MySQL 5.7 cluster (a combination of settings defined
     * in [user_config] and [default_config]).
     * </pre>
     *
     * <code>.yandex.cloud.mdb.mysql.v1alpha.config.MysqlConfig5_7 effective_config = 1;</code>
     */
    @java.lang.Override
    public yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7OrBuilder getEffectiveConfigOrBuilder() {
      return getEffectiveConfig();
    }

    public static final int USER_CONFIG_FIELD_NUMBER = 2;
    private yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7 userConfig_;
    /**
     * <pre>
     * User-defined settings for a MySQL 5.7 cluster.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.mysql.v1alpha.config.MysqlConfig5_7 user_config = 2;</code>
     * @return Whether the userConfig field is set.
     */
    @java.lang.Override
    public boolean hasUserConfig() {
      return userConfig_ != null;
    }
    /**
     * <pre>
     * User-defined settings for a MySQL 5.7 cluster.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.mysql.v1alpha.config.MysqlConfig5_7 user_config = 2;</code>
     * @return The userConfig.
     */
    @java.lang.Override
    public yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7 getUserConfig() {
      return userConfig_ == null ? yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7.getDefaultInstance() : userConfig_;
    }
    /**
     * <pre>
     * User-defined settings for a MySQL 5.7 cluster.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.mysql.v1alpha.config.MysqlConfig5_7 user_config = 2;</code>
     */
    @java.lang.Override
    public yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7OrBuilder getUserConfigOrBuilder() {
      return getUserConfig();
    }

    public static final int DEFAULT_CONFIG_FIELD_NUMBER = 3;
    private yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7 defaultConfig_;
    /**
     * <pre>
     * Default configuration for a MySQL 5.7 cluster.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.mysql.v1alpha.config.MysqlConfig5_7 default_config = 3;</code>
     * @return Whether the defaultConfig field is set.
     */
    @java.lang.Override
    public boolean hasDefaultConfig() {
      return defaultConfig_ != null;
    }
    /**
     * <pre>
     * Default configuration for a MySQL 5.7 cluster.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.mysql.v1alpha.config.MysqlConfig5_7 default_config = 3;</code>
     * @return The defaultConfig.
     */
    @java.lang.Override
    public yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7 getDefaultConfig() {
      return defaultConfig_ == null ? yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7.getDefaultInstance() : defaultConfig_;
    }
    /**
     * <pre>
     * Default configuration for a MySQL 5.7 cluster.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.mysql.v1alpha.config.MysqlConfig5_7 default_config = 3;</code>
     */
    @java.lang.Override
    public yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7OrBuilder getDefaultConfigOrBuilder() {
      return getDefaultConfig();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (effectiveConfig_ != null) {
        output.writeMessage(1, getEffectiveConfig());
      }
      if (userConfig_ != null) {
        output.writeMessage(2, getUserConfig());
      }
      if (defaultConfig_ != null) {
        output.writeMessage(3, getDefaultConfig());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (effectiveConfig_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getEffectiveConfig());
      }
      if (userConfig_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getUserConfig());
      }
      if (defaultConfig_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getDefaultConfig());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfigSet5_7)) {
        return super.equals(obj);
      }
      yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfigSet5_7 other = (yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfigSet5_7) obj;

      if (hasEffectiveConfig() != other.hasEffectiveConfig()) return false;
      if (hasEffectiveConfig()) {
        if (!getEffectiveConfig()
            .equals(other.getEffectiveConfig())) return false;
      }
      if (hasUserConfig() != other.hasUserConfig()) return false;
      if (hasUserConfig()) {
        if (!getUserConfig()
            .equals(other.getUserConfig())) return false;
      }
      if (hasDefaultConfig() != other.hasDefaultConfig()) return false;
      if (hasDefaultConfig()) {
        if (!getDefaultConfig()
            .equals(other.getDefaultConfig())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasEffectiveConfig()) {
        hash = (37 * hash) + EFFECTIVE_CONFIG_FIELD_NUMBER;
        hash = (53 * hash) + getEffectiveConfig().hashCode();
      }
      if (hasUserConfig()) {
        hash = (37 * hash) + USER_CONFIG_FIELD_NUMBER;
        hash = (53 * hash) + getUserConfig().hashCode();
      }
      if (hasDefaultConfig()) {
        hash = (37 * hash) + DEFAULT_CONFIG_FIELD_NUMBER;
        hash = (53 * hash) + getDefaultConfig().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfigSet5_7 parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfigSet5_7 parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfigSet5_7 parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfigSet5_7 parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfigSet5_7 parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfigSet5_7 parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfigSet5_7 parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfigSet5_7 parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfigSet5_7 parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfigSet5_7 parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfigSet5_7 parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfigSet5_7 parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfigSet5_7 prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code yandex.cloud.mdb.mysql.v1alpha.config.MysqlConfigSet5_7}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:yandex.cloud.mdb.mysql.v1alpha.config.MysqlConfigSet5_7)
        yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfigSet5_7OrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.internal_static_yandex_cloud_mdb_mysql_v1alpha_config_MysqlConfigSet5_7_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.internal_static_yandex_cloud_mdb_mysql_v1alpha_config_MysqlConfigSet5_7_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfigSet5_7.class, yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfigSet5_7.Builder.class);
      }

      // Construct using yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfigSet5_7.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (effectiveConfigBuilder_ == null) {
          effectiveConfig_ = null;
        } else {
          effectiveConfig_ = null;
          effectiveConfigBuilder_ = null;
        }
        if (userConfigBuilder_ == null) {
          userConfig_ = null;
        } else {
          userConfig_ = null;
          userConfigBuilder_ = null;
        }
        if (defaultConfigBuilder_ == null) {
          defaultConfig_ = null;
        } else {
          defaultConfig_ = null;
          defaultConfigBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.internal_static_yandex_cloud_mdb_mysql_v1alpha_config_MysqlConfigSet5_7_descriptor;
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfigSet5_7 getDefaultInstanceForType() {
        return yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfigSet5_7.getDefaultInstance();
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfigSet5_7 build() {
        yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfigSet5_7 result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfigSet5_7 buildPartial() {
        yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfigSet5_7 result = new yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfigSet5_7(this);
        if (effectiveConfigBuilder_ == null) {
          result.effectiveConfig_ = effectiveConfig_;
        } else {
          result.effectiveConfig_ = effectiveConfigBuilder_.build();
        }
        if (userConfigBuilder_ == null) {
          result.userConfig_ = userConfig_;
        } else {
          result.userConfig_ = userConfigBuilder_.build();
        }
        if (defaultConfigBuilder_ == null) {
          result.defaultConfig_ = defaultConfig_;
        } else {
          result.defaultConfig_ = defaultConfigBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfigSet5_7) {
          return mergeFrom((yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfigSet5_7)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfigSet5_7 other) {
        if (other == yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfigSet5_7.getDefaultInstance()) return this;
        if (other.hasEffectiveConfig()) {
          mergeEffectiveConfig(other.getEffectiveConfig());
        }
        if (other.hasUserConfig()) {
          mergeUserConfig(other.getUserConfig());
        }
        if (other.hasDefaultConfig()) {
          mergeDefaultConfig(other.getDefaultConfig());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfigSet5_7 parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfigSet5_7) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7 effectiveConfig_;
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7, yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7.Builder, yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7OrBuilder> effectiveConfigBuilder_;
      /**
       * <pre>
       * Effective settings for a MySQL 5.7 cluster (a combination of settings defined
       * in [user_config] and [default_config]).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.mysql.v1alpha.config.MysqlConfig5_7 effective_config = 1;</code>
       * @return Whether the effectiveConfig field is set.
       */
      public boolean hasEffectiveConfig() {
        return effectiveConfigBuilder_ != null || effectiveConfig_ != null;
      }
      /**
       * <pre>
       * Effective settings for a MySQL 5.7 cluster (a combination of settings defined
       * in [user_config] and [default_config]).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.mysql.v1alpha.config.MysqlConfig5_7 effective_config = 1;</code>
       * @return The effectiveConfig.
       */
      public yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7 getEffectiveConfig() {
        if (effectiveConfigBuilder_ == null) {
          return effectiveConfig_ == null ? yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7.getDefaultInstance() : effectiveConfig_;
        } else {
          return effectiveConfigBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Effective settings for a MySQL 5.7 cluster (a combination of settings defined
       * in [user_config] and [default_config]).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.mysql.v1alpha.config.MysqlConfig5_7 effective_config = 1;</code>
       */
      public Builder setEffectiveConfig(yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7 value) {
        if (effectiveConfigBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          effectiveConfig_ = value;
          onChanged();
        } else {
          effectiveConfigBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Effective settings for a MySQL 5.7 cluster (a combination of settings defined
       * in [user_config] and [default_config]).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.mysql.v1alpha.config.MysqlConfig5_7 effective_config = 1;</code>
       */
      public Builder setEffectiveConfig(
          yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7.Builder builderForValue) {
        if (effectiveConfigBuilder_ == null) {
          effectiveConfig_ = builderForValue.build();
          onChanged();
        } else {
          effectiveConfigBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Effective settings for a MySQL 5.7 cluster (a combination of settings defined
       * in [user_config] and [default_config]).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.mysql.v1alpha.config.MysqlConfig5_7 effective_config = 1;</code>
       */
      public Builder mergeEffectiveConfig(yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7 value) {
        if (effectiveConfigBuilder_ == null) {
          if (effectiveConfig_ != null) {
            effectiveConfig_ =
              yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7.newBuilder(effectiveConfig_).mergeFrom(value).buildPartial();
          } else {
            effectiveConfig_ = value;
          }
          onChanged();
        } else {
          effectiveConfigBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Effective settings for a MySQL 5.7 cluster (a combination of settings defined
       * in [user_config] and [default_config]).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.mysql.v1alpha.config.MysqlConfig5_7 effective_config = 1;</code>
       */
      public Builder clearEffectiveConfig() {
        if (effectiveConfigBuilder_ == null) {
          effectiveConfig_ = null;
          onChanged();
        } else {
          effectiveConfig_ = null;
          effectiveConfigBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Effective settings for a MySQL 5.7 cluster (a combination of settings defined
       * in [user_config] and [default_config]).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.mysql.v1alpha.config.MysqlConfig5_7 effective_config = 1;</code>
       */
      public yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7.Builder getEffectiveConfigBuilder() {
        
        onChanged();
        return getEffectiveConfigFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Effective settings for a MySQL 5.7 cluster (a combination of settings defined
       * in [user_config] and [default_config]).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.mysql.v1alpha.config.MysqlConfig5_7 effective_config = 1;</code>
       */
      public yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7OrBuilder getEffectiveConfigOrBuilder() {
        if (effectiveConfigBuilder_ != null) {
          return effectiveConfigBuilder_.getMessageOrBuilder();
        } else {
          return effectiveConfig_ == null ?
              yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7.getDefaultInstance() : effectiveConfig_;
        }
      }
      /**
       * <pre>
       * Effective settings for a MySQL 5.7 cluster (a combination of settings defined
       * in [user_config] and [default_config]).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.mysql.v1alpha.config.MysqlConfig5_7 effective_config = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7, yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7.Builder, yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7OrBuilder> 
          getEffectiveConfigFieldBuilder() {
        if (effectiveConfigBuilder_ == null) {
          effectiveConfigBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7, yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7.Builder, yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7OrBuilder>(
                  getEffectiveConfig(),
                  getParentForChildren(),
                  isClean());
          effectiveConfig_ = null;
        }
        return effectiveConfigBuilder_;
      }

      private yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7 userConfig_;
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7, yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7.Builder, yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7OrBuilder> userConfigBuilder_;
      /**
       * <pre>
       * User-defined settings for a MySQL 5.7 cluster.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.mysql.v1alpha.config.MysqlConfig5_7 user_config = 2;</code>
       * @return Whether the userConfig field is set.
       */
      public boolean hasUserConfig() {
        return userConfigBuilder_ != null || userConfig_ != null;
      }
      /**
       * <pre>
       * User-defined settings for a MySQL 5.7 cluster.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.mysql.v1alpha.config.MysqlConfig5_7 user_config = 2;</code>
       * @return The userConfig.
       */
      public yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7 getUserConfig() {
        if (userConfigBuilder_ == null) {
          return userConfig_ == null ? yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7.getDefaultInstance() : userConfig_;
        } else {
          return userConfigBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * User-defined settings for a MySQL 5.7 cluster.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.mysql.v1alpha.config.MysqlConfig5_7 user_config = 2;</code>
       */
      public Builder setUserConfig(yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7 value) {
        if (userConfigBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          userConfig_ = value;
          onChanged();
        } else {
          userConfigBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * User-defined settings for a MySQL 5.7 cluster.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.mysql.v1alpha.config.MysqlConfig5_7 user_config = 2;</code>
       */
      public Builder setUserConfig(
          yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7.Builder builderForValue) {
        if (userConfigBuilder_ == null) {
          userConfig_ = builderForValue.build();
          onChanged();
        } else {
          userConfigBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * User-defined settings for a MySQL 5.7 cluster.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.mysql.v1alpha.config.MysqlConfig5_7 user_config = 2;</code>
       */
      public Builder mergeUserConfig(yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7 value) {
        if (userConfigBuilder_ == null) {
          if (userConfig_ != null) {
            userConfig_ =
              yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7.newBuilder(userConfig_).mergeFrom(value).buildPartial();
          } else {
            userConfig_ = value;
          }
          onChanged();
        } else {
          userConfigBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * User-defined settings for a MySQL 5.7 cluster.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.mysql.v1alpha.config.MysqlConfig5_7 user_config = 2;</code>
       */
      public Builder clearUserConfig() {
        if (userConfigBuilder_ == null) {
          userConfig_ = null;
          onChanged();
        } else {
          userConfig_ = null;
          userConfigBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * User-defined settings for a MySQL 5.7 cluster.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.mysql.v1alpha.config.MysqlConfig5_7 user_config = 2;</code>
       */
      public yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7.Builder getUserConfigBuilder() {
        
        onChanged();
        return getUserConfigFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * User-defined settings for a MySQL 5.7 cluster.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.mysql.v1alpha.config.MysqlConfig5_7 user_config = 2;</code>
       */
      public yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7OrBuilder getUserConfigOrBuilder() {
        if (userConfigBuilder_ != null) {
          return userConfigBuilder_.getMessageOrBuilder();
        } else {
          return userConfig_ == null ?
              yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7.getDefaultInstance() : userConfig_;
        }
      }
      /**
       * <pre>
       * User-defined settings for a MySQL 5.7 cluster.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.mysql.v1alpha.config.MysqlConfig5_7 user_config = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7, yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7.Builder, yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7OrBuilder> 
          getUserConfigFieldBuilder() {
        if (userConfigBuilder_ == null) {
          userConfigBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7, yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7.Builder, yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7OrBuilder>(
                  getUserConfig(),
                  getParentForChildren(),
                  isClean());
          userConfig_ = null;
        }
        return userConfigBuilder_;
      }

      private yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7 defaultConfig_;
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7, yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7.Builder, yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7OrBuilder> defaultConfigBuilder_;
      /**
       * <pre>
       * Default configuration for a MySQL 5.7 cluster.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.mysql.v1alpha.config.MysqlConfig5_7 default_config = 3;</code>
       * @return Whether the defaultConfig field is set.
       */
      public boolean hasDefaultConfig() {
        return defaultConfigBuilder_ != null || defaultConfig_ != null;
      }
      /**
       * <pre>
       * Default configuration for a MySQL 5.7 cluster.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.mysql.v1alpha.config.MysqlConfig5_7 default_config = 3;</code>
       * @return The defaultConfig.
       */
      public yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7 getDefaultConfig() {
        if (defaultConfigBuilder_ == null) {
          return defaultConfig_ == null ? yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7.getDefaultInstance() : defaultConfig_;
        } else {
          return defaultConfigBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Default configuration for a MySQL 5.7 cluster.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.mysql.v1alpha.config.MysqlConfig5_7 default_config = 3;</code>
       */
      public Builder setDefaultConfig(yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7 value) {
        if (defaultConfigBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          defaultConfig_ = value;
          onChanged();
        } else {
          defaultConfigBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Default configuration for a MySQL 5.7 cluster.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.mysql.v1alpha.config.MysqlConfig5_7 default_config = 3;</code>
       */
      public Builder setDefaultConfig(
          yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7.Builder builderForValue) {
        if (defaultConfigBuilder_ == null) {
          defaultConfig_ = builderForValue.build();
          onChanged();
        } else {
          defaultConfigBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Default configuration for a MySQL 5.7 cluster.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.mysql.v1alpha.config.MysqlConfig5_7 default_config = 3;</code>
       */
      public Builder mergeDefaultConfig(yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7 value) {
        if (defaultConfigBuilder_ == null) {
          if (defaultConfig_ != null) {
            defaultConfig_ =
              yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7.newBuilder(defaultConfig_).mergeFrom(value).buildPartial();
          } else {
            defaultConfig_ = value;
          }
          onChanged();
        } else {
          defaultConfigBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Default configuration for a MySQL 5.7 cluster.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.mysql.v1alpha.config.MysqlConfig5_7 default_config = 3;</code>
       */
      public Builder clearDefaultConfig() {
        if (defaultConfigBuilder_ == null) {
          defaultConfig_ = null;
          onChanged();
        } else {
          defaultConfig_ = null;
          defaultConfigBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Default configuration for a MySQL 5.7 cluster.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.mysql.v1alpha.config.MysqlConfig5_7 default_config = 3;</code>
       */
      public yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7.Builder getDefaultConfigBuilder() {
        
        onChanged();
        return getDefaultConfigFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Default configuration for a MySQL 5.7 cluster.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.mysql.v1alpha.config.MysqlConfig5_7 default_config = 3;</code>
       */
      public yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7OrBuilder getDefaultConfigOrBuilder() {
        if (defaultConfigBuilder_ != null) {
          return defaultConfigBuilder_.getMessageOrBuilder();
        } else {
          return defaultConfig_ == null ?
              yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7.getDefaultInstance() : defaultConfig_;
        }
      }
      /**
       * <pre>
       * Default configuration for a MySQL 5.7 cluster.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.mysql.v1alpha.config.MysqlConfig5_7 default_config = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7, yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7.Builder, yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7OrBuilder> 
          getDefaultConfigFieldBuilder() {
        if (defaultConfigBuilder_ == null) {
          defaultConfigBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7, yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7.Builder, yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfig5_7OrBuilder>(
                  getDefaultConfig(),
                  getParentForChildren(),
                  isClean());
          defaultConfig_ = null;
        }
        return defaultConfigBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:yandex.cloud.mdb.mysql.v1alpha.config.MysqlConfigSet5_7)
    }

    // @@protoc_insertion_point(class_scope:yandex.cloud.mdb.mysql.v1alpha.config.MysqlConfigSet5_7)
    private static final yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfigSet5_7 DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfigSet5_7();
    }

    public static yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfigSet5_7 getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MysqlConfigSet5_7>
        PARSER = new com.google.protobuf.AbstractParser<MysqlConfigSet5_7>() {
      @java.lang.Override
      public MysqlConfigSet5_7 parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MysqlConfigSet5_7(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MysqlConfigSet5_7> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MysqlConfigSet5_7> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public yandex.cloud.api.mdb.mysql.v1alpha.config.Mysql57.MysqlConfigSet5_7 getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_yandex_cloud_mdb_mysql_v1alpha_config_MysqlConfig5_7_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_yandex_cloud_mdb_mysql_v1alpha_config_MysqlConfig5_7_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_yandex_cloud_mdb_mysql_v1alpha_config_MysqlConfigSet5_7_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_yandex_cloud_mdb_mysql_v1alpha_config_MysqlConfigSet5_7_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n4yandex/cloud/mdb/mysql/v1alpha/config/" +
      "mysql5_7.proto\022%yandex.cloud.mdb.mysql.v" +
      "1alpha.config\032\036google/protobuf/wrappers." +
      "proto\032\035yandex/cloud/validation.proto\"\330\001\n" +
      "\016MysqlConfig5_7\022K\n\027innodb_buffer_pool_si" +
      "ze\030\001 \001(\0132\033.google.protobuf.Int64ValueB\r\372" +
      "\3071\t>=5242880\022B\n\017max_connections\030\002 \001(\0132\033." +
      "google.protobuf.Int64ValueB\014\372\3071\01010-10000" +
      "\0225\n\017long_query_time\030\003 \001(\0132\034.google.proto" +
      "buf.DoubleValue\"\377\001\n\021MysqlConfigSet5_7\022O\n" +
      "\020effective_config\030\001 \001(\01325.yandex.cloud.m" +
      "db.mysql.v1alpha.config.MysqlConfig5_7\022J" +
      "\n\013user_config\030\002 \001(\01325.yandex.cloud.mdb.m" +
      "ysql.v1alpha.config.MysqlConfig5_7\022M\n\016de" +
      "fault_config\030\003 \001(\01325.yandex.cloud.mdb.my" +
      "sql.v1alpha.config.MysqlConfig5_7B|\n)yan" +
      "dex.cloud.api.mdb.mysql.v1alpha.configZO" +
      "github.com/yandex-cloud/go-genproto/yand" +
      "ex/cloud/mdb/mysql/v1alpha/config;mysqlb" +
      "\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.protobuf.WrappersProto.getDescriptor(),
          yandex.cloud.api.Validation.getDescriptor(),
        });
    internal_static_yandex_cloud_mdb_mysql_v1alpha_config_MysqlConfig5_7_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_yandex_cloud_mdb_mysql_v1alpha_config_MysqlConfig5_7_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_yandex_cloud_mdb_mysql_v1alpha_config_MysqlConfig5_7_descriptor,
        new java.lang.String[] { "InnodbBufferPoolSize", "MaxConnections", "LongQueryTime", });
    internal_static_yandex_cloud_mdb_mysql_v1alpha_config_MysqlConfigSet5_7_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_yandex_cloud_mdb_mysql_v1alpha_config_MysqlConfigSet5_7_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_yandex_cloud_mdb_mysql_v1alpha_config_MysqlConfigSet5_7_descriptor,
        new java.lang.String[] { "EffectiveConfig", "UserConfig", "DefaultConfig", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(yandex.cloud.api.Validation.value);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.google.protobuf.WrappersProto.getDescriptor();
    yandex.cloud.api.Validation.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}

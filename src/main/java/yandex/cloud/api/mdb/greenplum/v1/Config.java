// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: yandex/cloud/mdb/greenplum/v1/config.proto

package yandex.cloud.api.mdb.greenplum.v1;

public final class Config {
  private Config() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ResourcesOrBuilder extends
      // @@protoc_insertion_point(interface_extends:yandex.cloud.mdb.greenplum.v1.Resources)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * ID of the preset for computational resources allocated to a host.
     * Available presets are listed in the [documentation](/docs/managed-greenplum/concepts/instance-types).
     * </pre>
     *
     * <code>string resource_preset_id = 1;</code>
     */
    java.lang.String getResourcePresetId();
    /**
     * <pre>
     * ID of the preset for computational resources allocated to a host.
     * Available presets are listed in the [documentation](/docs/managed-greenplum/concepts/instance-types).
     * </pre>
     *
     * <code>string resource_preset_id = 1;</code>
     */
    com.google.protobuf.ByteString
        getResourcePresetIdBytes();

    /**
     * <pre>
     * Volume of the storage used by the host, in bytes.
     * </pre>
     *
     * <code>int64 disk_size = 2;</code>
     */
    long getDiskSize();

    /**
     * <pre>
     * Type of the storage used by the host: `network-hdd`, `network-ssd` or `local-ssd`.
     * </pre>
     *
     * <code>string disk_type_id = 3;</code>
     */
    java.lang.String getDiskTypeId();
    /**
     * <pre>
     * Type of the storage used by the host: `network-hdd`, `network-ssd` or `local-ssd`.
     * </pre>
     *
     * <code>string disk_type_id = 3;</code>
     */
    com.google.protobuf.ByteString
        getDiskTypeIdBytes();
  }
  /**
   * <pre>
   * A list of computational resources allocated to a host.
   * </pre>
   *
   * Protobuf type {@code yandex.cloud.mdb.greenplum.v1.Resources}
   */
  public  static final class Resources extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:yandex.cloud.mdb.greenplum.v1.Resources)
      ResourcesOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Resources.newBuilder() to construct.
    private Resources(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Resources() {
      resourcePresetId_ = "";
      diskSize_ = 0L;
      diskTypeId_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Resources(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              resourcePresetId_ = s;
              break;
            }
            case 16: {

              diskSize_ = input.readInt64();
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              diskTypeId_ = s;
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return yandex.cloud.api.mdb.greenplum.v1.Config.internal_static_yandex_cloud_mdb_greenplum_v1_Resources_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return yandex.cloud.api.mdb.greenplum.v1.Config.internal_static_yandex_cloud_mdb_greenplum_v1_Resources_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              yandex.cloud.api.mdb.greenplum.v1.Config.Resources.class, yandex.cloud.api.mdb.greenplum.v1.Config.Resources.Builder.class);
    }

    public static final int RESOURCE_PRESET_ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object resourcePresetId_;
    /**
     * <pre>
     * ID of the preset for computational resources allocated to a host.
     * Available presets are listed in the [documentation](/docs/managed-greenplum/concepts/instance-types).
     * </pre>
     *
     * <code>string resource_preset_id = 1;</code>
     */
    public java.lang.String getResourcePresetId() {
      java.lang.Object ref = resourcePresetId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        resourcePresetId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * ID of the preset for computational resources allocated to a host.
     * Available presets are listed in the [documentation](/docs/managed-greenplum/concepts/instance-types).
     * </pre>
     *
     * <code>string resource_preset_id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getResourcePresetIdBytes() {
      java.lang.Object ref = resourcePresetId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        resourcePresetId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DISK_SIZE_FIELD_NUMBER = 2;
    private long diskSize_;
    /**
     * <pre>
     * Volume of the storage used by the host, in bytes.
     * </pre>
     *
     * <code>int64 disk_size = 2;</code>
     */
    public long getDiskSize() {
      return diskSize_;
    }

    public static final int DISK_TYPE_ID_FIELD_NUMBER = 3;
    private volatile java.lang.Object diskTypeId_;
    /**
     * <pre>
     * Type of the storage used by the host: `network-hdd`, `network-ssd` or `local-ssd`.
     * </pre>
     *
     * <code>string disk_type_id = 3;</code>
     */
    public java.lang.String getDiskTypeId() {
      java.lang.Object ref = diskTypeId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        diskTypeId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Type of the storage used by the host: `network-hdd`, `network-ssd` or `local-ssd`.
     * </pre>
     *
     * <code>string disk_type_id = 3;</code>
     */
    public com.google.protobuf.ByteString
        getDiskTypeIdBytes() {
      java.lang.Object ref = diskTypeId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        diskTypeId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getResourcePresetIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, resourcePresetId_);
      }
      if (diskSize_ != 0L) {
        output.writeInt64(2, diskSize_);
      }
      if (!getDiskTypeIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, diskTypeId_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getResourcePresetIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, resourcePresetId_);
      }
      if (diskSize_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, diskSize_);
      }
      if (!getDiskTypeIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, diskTypeId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof yandex.cloud.api.mdb.greenplum.v1.Config.Resources)) {
        return super.equals(obj);
      }
      yandex.cloud.api.mdb.greenplum.v1.Config.Resources other = (yandex.cloud.api.mdb.greenplum.v1.Config.Resources) obj;

      boolean result = true;
      result = result && getResourcePresetId()
          .equals(other.getResourcePresetId());
      result = result && (getDiskSize()
          == other.getDiskSize());
      result = result && getDiskTypeId()
          .equals(other.getDiskTypeId());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + RESOURCE_PRESET_ID_FIELD_NUMBER;
      hash = (53 * hash) + getResourcePresetId().hashCode();
      hash = (37 * hash) + DISK_SIZE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getDiskSize());
      hash = (37 * hash) + DISK_TYPE_ID_FIELD_NUMBER;
      hash = (53 * hash) + getDiskTypeId().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static yandex.cloud.api.mdb.greenplum.v1.Config.Resources parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.Config.Resources parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.Config.Resources parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.Config.Resources parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.Config.Resources parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.Config.Resources parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.Config.Resources parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.Config.Resources parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.Config.Resources parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.Config.Resources parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.Config.Resources parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.Config.Resources parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(yandex.cloud.api.mdb.greenplum.v1.Config.Resources prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A list of computational resources allocated to a host.
     * </pre>
     *
     * Protobuf type {@code yandex.cloud.mdb.greenplum.v1.Resources}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:yandex.cloud.mdb.greenplum.v1.Resources)
        yandex.cloud.api.mdb.greenplum.v1.Config.ResourcesOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return yandex.cloud.api.mdb.greenplum.v1.Config.internal_static_yandex_cloud_mdb_greenplum_v1_Resources_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return yandex.cloud.api.mdb.greenplum.v1.Config.internal_static_yandex_cloud_mdb_greenplum_v1_Resources_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                yandex.cloud.api.mdb.greenplum.v1.Config.Resources.class, yandex.cloud.api.mdb.greenplum.v1.Config.Resources.Builder.class);
      }

      // Construct using yandex.cloud.api.mdb.greenplum.v1.Config.Resources.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        resourcePresetId_ = "";

        diskSize_ = 0L;

        diskTypeId_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return yandex.cloud.api.mdb.greenplum.v1.Config.internal_static_yandex_cloud_mdb_greenplum_v1_Resources_descriptor;
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.greenplum.v1.Config.Resources getDefaultInstanceForType() {
        return yandex.cloud.api.mdb.greenplum.v1.Config.Resources.getDefaultInstance();
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.greenplum.v1.Config.Resources build() {
        yandex.cloud.api.mdb.greenplum.v1.Config.Resources result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.greenplum.v1.Config.Resources buildPartial() {
        yandex.cloud.api.mdb.greenplum.v1.Config.Resources result = new yandex.cloud.api.mdb.greenplum.v1.Config.Resources(this);
        result.resourcePresetId_ = resourcePresetId_;
        result.diskSize_ = diskSize_;
        result.diskTypeId_ = diskTypeId_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof yandex.cloud.api.mdb.greenplum.v1.Config.Resources) {
          return mergeFrom((yandex.cloud.api.mdb.greenplum.v1.Config.Resources)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(yandex.cloud.api.mdb.greenplum.v1.Config.Resources other) {
        if (other == yandex.cloud.api.mdb.greenplum.v1.Config.Resources.getDefaultInstance()) return this;
        if (!other.getResourcePresetId().isEmpty()) {
          resourcePresetId_ = other.resourcePresetId_;
          onChanged();
        }
        if (other.getDiskSize() != 0L) {
          setDiskSize(other.getDiskSize());
        }
        if (!other.getDiskTypeId().isEmpty()) {
          diskTypeId_ = other.diskTypeId_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        yandex.cloud.api.mdb.greenplum.v1.Config.Resources parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (yandex.cloud.api.mdb.greenplum.v1.Config.Resources) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object resourcePresetId_ = "";
      /**
       * <pre>
       * ID of the preset for computational resources allocated to a host.
       * Available presets are listed in the [documentation](/docs/managed-greenplum/concepts/instance-types).
       * </pre>
       *
       * <code>string resource_preset_id = 1;</code>
       */
      public java.lang.String getResourcePresetId() {
        java.lang.Object ref = resourcePresetId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          resourcePresetId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * ID of the preset for computational resources allocated to a host.
       * Available presets are listed in the [documentation](/docs/managed-greenplum/concepts/instance-types).
       * </pre>
       *
       * <code>string resource_preset_id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getResourcePresetIdBytes() {
        java.lang.Object ref = resourcePresetId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          resourcePresetId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * ID of the preset for computational resources allocated to a host.
       * Available presets are listed in the [documentation](/docs/managed-greenplum/concepts/instance-types).
       * </pre>
       *
       * <code>string resource_preset_id = 1;</code>
       */
      public Builder setResourcePresetId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        resourcePresetId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ID of the preset for computational resources allocated to a host.
       * Available presets are listed in the [documentation](/docs/managed-greenplum/concepts/instance-types).
       * </pre>
       *
       * <code>string resource_preset_id = 1;</code>
       */
      public Builder clearResourcePresetId() {
        
        resourcePresetId_ = getDefaultInstance().getResourcePresetId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ID of the preset for computational resources allocated to a host.
       * Available presets are listed in the [documentation](/docs/managed-greenplum/concepts/instance-types).
       * </pre>
       *
       * <code>string resource_preset_id = 1;</code>
       */
      public Builder setResourcePresetIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        resourcePresetId_ = value;
        onChanged();
        return this;
      }

      private long diskSize_ ;
      /**
       * <pre>
       * Volume of the storage used by the host, in bytes.
       * </pre>
       *
       * <code>int64 disk_size = 2;</code>
       */
      public long getDiskSize() {
        return diskSize_;
      }
      /**
       * <pre>
       * Volume of the storage used by the host, in bytes.
       * </pre>
       *
       * <code>int64 disk_size = 2;</code>
       */
      public Builder setDiskSize(long value) {
        
        diskSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Volume of the storage used by the host, in bytes.
       * </pre>
       *
       * <code>int64 disk_size = 2;</code>
       */
      public Builder clearDiskSize() {
        
        diskSize_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object diskTypeId_ = "";
      /**
       * <pre>
       * Type of the storage used by the host: `network-hdd`, `network-ssd` or `local-ssd`.
       * </pre>
       *
       * <code>string disk_type_id = 3;</code>
       */
      public java.lang.String getDiskTypeId() {
        java.lang.Object ref = diskTypeId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          diskTypeId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Type of the storage used by the host: `network-hdd`, `network-ssd` or `local-ssd`.
       * </pre>
       *
       * <code>string disk_type_id = 3;</code>
       */
      public com.google.protobuf.ByteString
          getDiskTypeIdBytes() {
        java.lang.Object ref = diskTypeId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          diskTypeId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Type of the storage used by the host: `network-hdd`, `network-ssd` or `local-ssd`.
       * </pre>
       *
       * <code>string disk_type_id = 3;</code>
       */
      public Builder setDiskTypeId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        diskTypeId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Type of the storage used by the host: `network-hdd`, `network-ssd` or `local-ssd`.
       * </pre>
       *
       * <code>string disk_type_id = 3;</code>
       */
      public Builder clearDiskTypeId() {
        
        diskTypeId_ = getDefaultInstance().getDiskTypeId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Type of the storage used by the host: `network-hdd`, `network-ssd` or `local-ssd`.
       * </pre>
       *
       * <code>string disk_type_id = 3;</code>
       */
      public Builder setDiskTypeIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        diskTypeId_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:yandex.cloud.mdb.greenplum.v1.Resources)
    }

    // @@protoc_insertion_point(class_scope:yandex.cloud.mdb.greenplum.v1.Resources)
    private static final yandex.cloud.api.mdb.greenplum.v1.Config.Resources DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new yandex.cloud.api.mdb.greenplum.v1.Config.Resources();
    }

    public static yandex.cloud.api.mdb.greenplum.v1.Config.Resources getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Resources>
        PARSER = new com.google.protobuf.AbstractParser<Resources>() {
      @java.lang.Override
      public Resources parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Resources(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Resources> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Resources> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public yandex.cloud.api.mdb.greenplum.v1.Config.Resources getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ConnectionPoolerConfigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfig)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Route server pool mode.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfig.PoolMode mode = 1;</code>
     */
    int getModeValue();
    /**
     * <pre>
     * Route server pool mode.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfig.PoolMode mode = 1;</code>
     */
    yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig.PoolMode getMode();

    /**
     * <pre>
     * The number of servers in the server pool. Clients are placed in a wait queue when all servers are busy.
     * Set to zero to disable the limit.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value size = 2;</code>
     */
    boolean hasSize();
    /**
     * <pre>
     * The number of servers in the server pool. Clients are placed in a wait queue when all servers are busy.
     * Set to zero to disable the limit.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value size = 2;</code>
     */
    com.google.protobuf.Int64Value getSize();
    /**
     * <pre>
     * The number of servers in the server pool. Clients are placed in a wait queue when all servers are busy.
     * Set to zero to disable the limit.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value size = 2;</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getSizeOrBuilder();

    /**
     * <pre>
     * Server pool idle timeout, in seconds. A server connection closes after it has been idle for the specified duration.
     * Set to zero to disable the limit.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value client_idle_timeout = 3;</code>
     */
    boolean hasClientIdleTimeout();
    /**
     * <pre>
     * Server pool idle timeout, in seconds. A server connection closes after it has been idle for the specified duration.
     * Set to zero to disable the limit.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value client_idle_timeout = 3;</code>
     */
    com.google.protobuf.Int64Value getClientIdleTimeout();
    /**
     * <pre>
     * Server pool idle timeout, in seconds. A server connection closes after it has been idle for the specified duration.
     * Set to zero to disable the limit.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value client_idle_timeout = 3;</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getClientIdleTimeoutOrBuilder();
  }
  /**
   * <pre>
   * Route server configuration.
   * </pre>
   *
   * Protobuf type {@code yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfig}
   */
  public  static final class ConnectionPoolerConfig extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfig)
      ConnectionPoolerConfigOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ConnectionPoolerConfig.newBuilder() to construct.
    private ConnectionPoolerConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ConnectionPoolerConfig() {
      mode_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ConnectionPoolerConfig(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              mode_ = rawValue;
              break;
            }
            case 18: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (size_ != null) {
                subBuilder = size_.toBuilder();
              }
              size_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(size_);
                size_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (clientIdleTimeout_ != null) {
                subBuilder = clientIdleTimeout_.toBuilder();
              }
              clientIdleTimeout_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientIdleTimeout_);
                clientIdleTimeout_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return yandex.cloud.api.mdb.greenplum.v1.Config.internal_static_yandex_cloud_mdb_greenplum_v1_ConnectionPoolerConfig_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return yandex.cloud.api.mdb.greenplum.v1.Config.internal_static_yandex_cloud_mdb_greenplum_v1_ConnectionPoolerConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig.class, yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig.Builder.class);
    }

    /**
     * <pre>
     * Route server pool mode.
     * </pre>
     *
     * Protobuf enum {@code yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfig.PoolMode}
     */
    public enum PoolMode
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>POOL_MODE_UNSPECIFIED = 0;</code>
       */
      POOL_MODE_UNSPECIFIED(0),
      /**
       * <pre>
       * Assign server connection to a client until it disconnects. Default value.
       * </pre>
       *
       * <code>SESSION = 1;</code>
       */
      SESSION(1),
      /**
       * <pre>
       * Assign server connection to a client for a transaction processing.
       * </pre>
       *
       * <code>TRANSACTION = 2;</code>
       */
      TRANSACTION(2),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>POOL_MODE_UNSPECIFIED = 0;</code>
       */
      public static final int POOL_MODE_UNSPECIFIED_VALUE = 0;
      /**
       * <pre>
       * Assign server connection to a client until it disconnects. Default value.
       * </pre>
       *
       * <code>SESSION = 1;</code>
       */
      public static final int SESSION_VALUE = 1;
      /**
       * <pre>
       * Assign server connection to a client for a transaction processing.
       * </pre>
       *
       * <code>TRANSACTION = 2;</code>
       */
      public static final int TRANSACTION_VALUE = 2;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static PoolMode valueOf(int value) {
        return forNumber(value);
      }

      public static PoolMode forNumber(int value) {
        switch (value) {
          case 0: return POOL_MODE_UNSPECIFIED;
          case 1: return SESSION;
          case 2: return TRANSACTION;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<PoolMode>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          PoolMode> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<PoolMode>() {
              public PoolMode findValueByNumber(int number) {
                return PoolMode.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig.getDescriptor().getEnumTypes().get(0);
      }

      private static final PoolMode[] VALUES = values();

      public static PoolMode valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private PoolMode(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfig.PoolMode)
    }

    public static final int MODE_FIELD_NUMBER = 1;
    private int mode_;
    /**
     * <pre>
     * Route server pool mode.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfig.PoolMode mode = 1;</code>
     */
    public int getModeValue() {
      return mode_;
    }
    /**
     * <pre>
     * Route server pool mode.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfig.PoolMode mode = 1;</code>
     */
    public yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig.PoolMode getMode() {
      @SuppressWarnings("deprecation")
      yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig.PoolMode result = yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig.PoolMode.valueOf(mode_);
      return result == null ? yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig.PoolMode.UNRECOGNIZED : result;
    }

    public static final int SIZE_FIELD_NUMBER = 2;
    private com.google.protobuf.Int64Value size_;
    /**
     * <pre>
     * The number of servers in the server pool. Clients are placed in a wait queue when all servers are busy.
     * Set to zero to disable the limit.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value size = 2;</code>
     */
    public boolean hasSize() {
      return size_ != null;
    }
    /**
     * <pre>
     * The number of servers in the server pool. Clients are placed in a wait queue when all servers are busy.
     * Set to zero to disable the limit.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value size = 2;</code>
     */
    public com.google.protobuf.Int64Value getSize() {
      return size_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : size_;
    }
    /**
     * <pre>
     * The number of servers in the server pool. Clients are placed in a wait queue when all servers are busy.
     * Set to zero to disable the limit.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value size = 2;</code>
     */
    public com.google.protobuf.Int64ValueOrBuilder getSizeOrBuilder() {
      return getSize();
    }

    public static final int CLIENT_IDLE_TIMEOUT_FIELD_NUMBER = 3;
    private com.google.protobuf.Int64Value clientIdleTimeout_;
    /**
     * <pre>
     * Server pool idle timeout, in seconds. A server connection closes after it has been idle for the specified duration.
     * Set to zero to disable the limit.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value client_idle_timeout = 3;</code>
     */
    public boolean hasClientIdleTimeout() {
      return clientIdleTimeout_ != null;
    }
    /**
     * <pre>
     * Server pool idle timeout, in seconds. A server connection closes after it has been idle for the specified duration.
     * Set to zero to disable the limit.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value client_idle_timeout = 3;</code>
     */
    public com.google.protobuf.Int64Value getClientIdleTimeout() {
      return clientIdleTimeout_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : clientIdleTimeout_;
    }
    /**
     * <pre>
     * Server pool idle timeout, in seconds. A server connection closes after it has been idle for the specified duration.
     * Set to zero to disable the limit.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value client_idle_timeout = 3;</code>
     */
    public com.google.protobuf.Int64ValueOrBuilder getClientIdleTimeoutOrBuilder() {
      return getClientIdleTimeout();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (mode_ != yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig.PoolMode.POOL_MODE_UNSPECIFIED.getNumber()) {
        output.writeEnum(1, mode_);
      }
      if (size_ != null) {
        output.writeMessage(2, getSize());
      }
      if (clientIdleTimeout_ != null) {
        output.writeMessage(3, getClientIdleTimeout());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (mode_ != yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig.PoolMode.POOL_MODE_UNSPECIFIED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, mode_);
      }
      if (size_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getSize());
      }
      if (clientIdleTimeout_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getClientIdleTimeout());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig)) {
        return super.equals(obj);
      }
      yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig other = (yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig) obj;

      boolean result = true;
      result = result && mode_ == other.mode_;
      result = result && (hasSize() == other.hasSize());
      if (hasSize()) {
        result = result && getSize()
            .equals(other.getSize());
      }
      result = result && (hasClientIdleTimeout() == other.hasClientIdleTimeout());
      if (hasClientIdleTimeout()) {
        result = result && getClientIdleTimeout()
            .equals(other.getClientIdleTimeout());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + MODE_FIELD_NUMBER;
      hash = (53 * hash) + mode_;
      if (hasSize()) {
        hash = (37 * hash) + SIZE_FIELD_NUMBER;
        hash = (53 * hash) + getSize().hashCode();
      }
      if (hasClientIdleTimeout()) {
        hash = (37 * hash) + CLIENT_IDLE_TIMEOUT_FIELD_NUMBER;
        hash = (53 * hash) + getClientIdleTimeout().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Route server configuration.
     * </pre>
     *
     * Protobuf type {@code yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfig}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfig)
        yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return yandex.cloud.api.mdb.greenplum.v1.Config.internal_static_yandex_cloud_mdb_greenplum_v1_ConnectionPoolerConfig_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return yandex.cloud.api.mdb.greenplum.v1.Config.internal_static_yandex_cloud_mdb_greenplum_v1_ConnectionPoolerConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig.class, yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig.Builder.class);
      }

      // Construct using yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        mode_ = 0;

        if (sizeBuilder_ == null) {
          size_ = null;
        } else {
          size_ = null;
          sizeBuilder_ = null;
        }
        if (clientIdleTimeoutBuilder_ == null) {
          clientIdleTimeout_ = null;
        } else {
          clientIdleTimeout_ = null;
          clientIdleTimeoutBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return yandex.cloud.api.mdb.greenplum.v1.Config.internal_static_yandex_cloud_mdb_greenplum_v1_ConnectionPoolerConfig_descriptor;
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig getDefaultInstanceForType() {
        return yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig.getDefaultInstance();
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig build() {
        yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig buildPartial() {
        yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig result = new yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig(this);
        result.mode_ = mode_;
        if (sizeBuilder_ == null) {
          result.size_ = size_;
        } else {
          result.size_ = sizeBuilder_.build();
        }
        if (clientIdleTimeoutBuilder_ == null) {
          result.clientIdleTimeout_ = clientIdleTimeout_;
        } else {
          result.clientIdleTimeout_ = clientIdleTimeoutBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig) {
          return mergeFrom((yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig other) {
        if (other == yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig.getDefaultInstance()) return this;
        if (other.mode_ != 0) {
          setModeValue(other.getModeValue());
        }
        if (other.hasSize()) {
          mergeSize(other.getSize());
        }
        if (other.hasClientIdleTimeout()) {
          mergeClientIdleTimeout(other.getClientIdleTimeout());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int mode_ = 0;
      /**
       * <pre>
       * Route server pool mode.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfig.PoolMode mode = 1;</code>
       */
      public int getModeValue() {
        return mode_;
      }
      /**
       * <pre>
       * Route server pool mode.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfig.PoolMode mode = 1;</code>
       */
      public Builder setModeValue(int value) {
        mode_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Route server pool mode.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfig.PoolMode mode = 1;</code>
       */
      public yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig.PoolMode getMode() {
        @SuppressWarnings("deprecation")
        yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig.PoolMode result = yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig.PoolMode.valueOf(mode_);
        return result == null ? yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig.PoolMode.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Route server pool mode.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfig.PoolMode mode = 1;</code>
       */
      public Builder setMode(yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig.PoolMode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        mode_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Route server pool mode.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfig.PoolMode mode = 1;</code>
       */
      public Builder clearMode() {
        
        mode_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Int64Value size_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> sizeBuilder_;
      /**
       * <pre>
       * The number of servers in the server pool. Clients are placed in a wait queue when all servers are busy.
       * Set to zero to disable the limit.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value size = 2;</code>
       */
      public boolean hasSize() {
        return sizeBuilder_ != null || size_ != null;
      }
      /**
       * <pre>
       * The number of servers in the server pool. Clients are placed in a wait queue when all servers are busy.
       * Set to zero to disable the limit.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value size = 2;</code>
       */
      public com.google.protobuf.Int64Value getSize() {
        if (sizeBuilder_ == null) {
          return size_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : size_;
        } else {
          return sizeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The number of servers in the server pool. Clients are placed in a wait queue when all servers are busy.
       * Set to zero to disable the limit.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value size = 2;</code>
       */
      public Builder setSize(com.google.protobuf.Int64Value value) {
        if (sizeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          size_ = value;
          onChanged();
        } else {
          sizeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The number of servers in the server pool. Clients are placed in a wait queue when all servers are busy.
       * Set to zero to disable the limit.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value size = 2;</code>
       */
      public Builder setSize(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (sizeBuilder_ == null) {
          size_ = builderForValue.build();
          onChanged();
        } else {
          sizeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The number of servers in the server pool. Clients are placed in a wait queue when all servers are busy.
       * Set to zero to disable the limit.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value size = 2;</code>
       */
      public Builder mergeSize(com.google.protobuf.Int64Value value) {
        if (sizeBuilder_ == null) {
          if (size_ != null) {
            size_ =
              com.google.protobuf.Int64Value.newBuilder(size_).mergeFrom(value).buildPartial();
          } else {
            size_ = value;
          }
          onChanged();
        } else {
          sizeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The number of servers in the server pool. Clients are placed in a wait queue when all servers are busy.
       * Set to zero to disable the limit.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value size = 2;</code>
       */
      public Builder clearSize() {
        if (sizeBuilder_ == null) {
          size_ = null;
          onChanged();
        } else {
          size_ = null;
          sizeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The number of servers in the server pool. Clients are placed in a wait queue when all servers are busy.
       * Set to zero to disable the limit.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value size = 2;</code>
       */
      public com.google.protobuf.Int64Value.Builder getSizeBuilder() {
        
        onChanged();
        return getSizeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The number of servers in the server pool. Clients are placed in a wait queue when all servers are busy.
       * Set to zero to disable the limit.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value size = 2;</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getSizeOrBuilder() {
        if (sizeBuilder_ != null) {
          return sizeBuilder_.getMessageOrBuilder();
        } else {
          return size_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : size_;
        }
      }
      /**
       * <pre>
       * The number of servers in the server pool. Clients are placed in a wait queue when all servers are busy.
       * Set to zero to disable the limit.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value size = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getSizeFieldBuilder() {
        if (sizeBuilder_ == null) {
          sizeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getSize(),
                  getParentForChildren(),
                  isClean());
          size_ = null;
        }
        return sizeBuilder_;
      }

      private com.google.protobuf.Int64Value clientIdleTimeout_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> clientIdleTimeoutBuilder_;
      /**
       * <pre>
       * Server pool idle timeout, in seconds. A server connection closes after it has been idle for the specified duration.
       * Set to zero to disable the limit.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value client_idle_timeout = 3;</code>
       */
      public boolean hasClientIdleTimeout() {
        return clientIdleTimeoutBuilder_ != null || clientIdleTimeout_ != null;
      }
      /**
       * <pre>
       * Server pool idle timeout, in seconds. A server connection closes after it has been idle for the specified duration.
       * Set to zero to disable the limit.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value client_idle_timeout = 3;</code>
       */
      public com.google.protobuf.Int64Value getClientIdleTimeout() {
        if (clientIdleTimeoutBuilder_ == null) {
          return clientIdleTimeout_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : clientIdleTimeout_;
        } else {
          return clientIdleTimeoutBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Server pool idle timeout, in seconds. A server connection closes after it has been idle for the specified duration.
       * Set to zero to disable the limit.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value client_idle_timeout = 3;</code>
       */
      public Builder setClientIdleTimeout(com.google.protobuf.Int64Value value) {
        if (clientIdleTimeoutBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientIdleTimeout_ = value;
          onChanged();
        } else {
          clientIdleTimeoutBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Server pool idle timeout, in seconds. A server connection closes after it has been idle for the specified duration.
       * Set to zero to disable the limit.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value client_idle_timeout = 3;</code>
       */
      public Builder setClientIdleTimeout(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (clientIdleTimeoutBuilder_ == null) {
          clientIdleTimeout_ = builderForValue.build();
          onChanged();
        } else {
          clientIdleTimeoutBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Server pool idle timeout, in seconds. A server connection closes after it has been idle for the specified duration.
       * Set to zero to disable the limit.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value client_idle_timeout = 3;</code>
       */
      public Builder mergeClientIdleTimeout(com.google.protobuf.Int64Value value) {
        if (clientIdleTimeoutBuilder_ == null) {
          if (clientIdleTimeout_ != null) {
            clientIdleTimeout_ =
              com.google.protobuf.Int64Value.newBuilder(clientIdleTimeout_).mergeFrom(value).buildPartial();
          } else {
            clientIdleTimeout_ = value;
          }
          onChanged();
        } else {
          clientIdleTimeoutBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Server pool idle timeout, in seconds. A server connection closes after it has been idle for the specified duration.
       * Set to zero to disable the limit.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value client_idle_timeout = 3;</code>
       */
      public Builder clearClientIdleTimeout() {
        if (clientIdleTimeoutBuilder_ == null) {
          clientIdleTimeout_ = null;
          onChanged();
        } else {
          clientIdleTimeout_ = null;
          clientIdleTimeoutBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Server pool idle timeout, in seconds. A server connection closes after it has been idle for the specified duration.
       * Set to zero to disable the limit.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value client_idle_timeout = 3;</code>
       */
      public com.google.protobuf.Int64Value.Builder getClientIdleTimeoutBuilder() {
        
        onChanged();
        return getClientIdleTimeoutFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Server pool idle timeout, in seconds. A server connection closes after it has been idle for the specified duration.
       * Set to zero to disable the limit.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value client_idle_timeout = 3;</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getClientIdleTimeoutOrBuilder() {
        if (clientIdleTimeoutBuilder_ != null) {
          return clientIdleTimeoutBuilder_.getMessageOrBuilder();
        } else {
          return clientIdleTimeout_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : clientIdleTimeout_;
        }
      }
      /**
       * <pre>
       * Server pool idle timeout, in seconds. A server connection closes after it has been idle for the specified duration.
       * Set to zero to disable the limit.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value client_idle_timeout = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getClientIdleTimeoutFieldBuilder() {
        if (clientIdleTimeoutBuilder_ == null) {
          clientIdleTimeoutBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getClientIdleTimeout(),
                  getParentForChildren(),
                  isClean());
          clientIdleTimeout_ = null;
        }
        return clientIdleTimeoutBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfig)
    }

    // @@protoc_insertion_point(class_scope:yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfig)
    private static final yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig();
    }

    public static yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ConnectionPoolerConfig>
        PARSER = new com.google.protobuf.AbstractParser<ConnectionPoolerConfig>() {
      @java.lang.Override
      public ConnectionPoolerConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ConnectionPoolerConfig(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ConnectionPoolerConfig> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ConnectionPoolerConfig> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MasterSubclusterConfigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:yandex.cloud.mdb.greenplum.v1.MasterSubclusterConfig)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Computational resources allocated to Greenplum® master subcluster hosts.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.Resources resources = 1;</code>
     */
    boolean hasResources();
    /**
     * <pre>
     * Computational resources allocated to Greenplum® master subcluster hosts.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.Resources resources = 1;</code>
     */
    yandex.cloud.api.mdb.greenplum.v1.Config.Resources getResources();
    /**
     * <pre>
     * Computational resources allocated to Greenplum® master subcluster hosts.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.Resources resources = 1;</code>
     */
    yandex.cloud.api.mdb.greenplum.v1.Config.ResourcesOrBuilder getResourcesOrBuilder();
  }
  /**
   * <pre>
   * Configuration of the master subcluster.
   * </pre>
   *
   * Protobuf type {@code yandex.cloud.mdb.greenplum.v1.MasterSubclusterConfig}
   */
  public  static final class MasterSubclusterConfig extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:yandex.cloud.mdb.greenplum.v1.MasterSubclusterConfig)
      MasterSubclusterConfigOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MasterSubclusterConfig.newBuilder() to construct.
    private MasterSubclusterConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MasterSubclusterConfig() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MasterSubclusterConfig(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              yandex.cloud.api.mdb.greenplum.v1.Config.Resources.Builder subBuilder = null;
              if (resources_ != null) {
                subBuilder = resources_.toBuilder();
              }
              resources_ = input.readMessage(yandex.cloud.api.mdb.greenplum.v1.Config.Resources.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(resources_);
                resources_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return yandex.cloud.api.mdb.greenplum.v1.Config.internal_static_yandex_cloud_mdb_greenplum_v1_MasterSubclusterConfig_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return yandex.cloud.api.mdb.greenplum.v1.Config.internal_static_yandex_cloud_mdb_greenplum_v1_MasterSubclusterConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              yandex.cloud.api.mdb.greenplum.v1.Config.MasterSubclusterConfig.class, yandex.cloud.api.mdb.greenplum.v1.Config.MasterSubclusterConfig.Builder.class);
    }

    public static final int RESOURCES_FIELD_NUMBER = 1;
    private yandex.cloud.api.mdb.greenplum.v1.Config.Resources resources_;
    /**
     * <pre>
     * Computational resources allocated to Greenplum® master subcluster hosts.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.Resources resources = 1;</code>
     */
    public boolean hasResources() {
      return resources_ != null;
    }
    /**
     * <pre>
     * Computational resources allocated to Greenplum® master subcluster hosts.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.Resources resources = 1;</code>
     */
    public yandex.cloud.api.mdb.greenplum.v1.Config.Resources getResources() {
      return resources_ == null ? yandex.cloud.api.mdb.greenplum.v1.Config.Resources.getDefaultInstance() : resources_;
    }
    /**
     * <pre>
     * Computational resources allocated to Greenplum® master subcluster hosts.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.Resources resources = 1;</code>
     */
    public yandex.cloud.api.mdb.greenplum.v1.Config.ResourcesOrBuilder getResourcesOrBuilder() {
      return getResources();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (resources_ != null) {
        output.writeMessage(1, getResources());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (resources_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getResources());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof yandex.cloud.api.mdb.greenplum.v1.Config.MasterSubclusterConfig)) {
        return super.equals(obj);
      }
      yandex.cloud.api.mdb.greenplum.v1.Config.MasterSubclusterConfig other = (yandex.cloud.api.mdb.greenplum.v1.Config.MasterSubclusterConfig) obj;

      boolean result = true;
      result = result && (hasResources() == other.hasResources());
      if (hasResources()) {
        result = result && getResources()
            .equals(other.getResources());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasResources()) {
        hash = (37 * hash) + RESOURCES_FIELD_NUMBER;
        hash = (53 * hash) + getResources().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static yandex.cloud.api.mdb.greenplum.v1.Config.MasterSubclusterConfig parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.Config.MasterSubclusterConfig parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.Config.MasterSubclusterConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.Config.MasterSubclusterConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.Config.MasterSubclusterConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.Config.MasterSubclusterConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.Config.MasterSubclusterConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.Config.MasterSubclusterConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.Config.MasterSubclusterConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.Config.MasterSubclusterConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.Config.MasterSubclusterConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.Config.MasterSubclusterConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(yandex.cloud.api.mdb.greenplum.v1.Config.MasterSubclusterConfig prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Configuration of the master subcluster.
     * </pre>
     *
     * Protobuf type {@code yandex.cloud.mdb.greenplum.v1.MasterSubclusterConfig}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:yandex.cloud.mdb.greenplum.v1.MasterSubclusterConfig)
        yandex.cloud.api.mdb.greenplum.v1.Config.MasterSubclusterConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return yandex.cloud.api.mdb.greenplum.v1.Config.internal_static_yandex_cloud_mdb_greenplum_v1_MasterSubclusterConfig_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return yandex.cloud.api.mdb.greenplum.v1.Config.internal_static_yandex_cloud_mdb_greenplum_v1_MasterSubclusterConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                yandex.cloud.api.mdb.greenplum.v1.Config.MasterSubclusterConfig.class, yandex.cloud.api.mdb.greenplum.v1.Config.MasterSubclusterConfig.Builder.class);
      }

      // Construct using yandex.cloud.api.mdb.greenplum.v1.Config.MasterSubclusterConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (resourcesBuilder_ == null) {
          resources_ = null;
        } else {
          resources_ = null;
          resourcesBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return yandex.cloud.api.mdb.greenplum.v1.Config.internal_static_yandex_cloud_mdb_greenplum_v1_MasterSubclusterConfig_descriptor;
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.greenplum.v1.Config.MasterSubclusterConfig getDefaultInstanceForType() {
        return yandex.cloud.api.mdb.greenplum.v1.Config.MasterSubclusterConfig.getDefaultInstance();
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.greenplum.v1.Config.MasterSubclusterConfig build() {
        yandex.cloud.api.mdb.greenplum.v1.Config.MasterSubclusterConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.greenplum.v1.Config.MasterSubclusterConfig buildPartial() {
        yandex.cloud.api.mdb.greenplum.v1.Config.MasterSubclusterConfig result = new yandex.cloud.api.mdb.greenplum.v1.Config.MasterSubclusterConfig(this);
        if (resourcesBuilder_ == null) {
          result.resources_ = resources_;
        } else {
          result.resources_ = resourcesBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof yandex.cloud.api.mdb.greenplum.v1.Config.MasterSubclusterConfig) {
          return mergeFrom((yandex.cloud.api.mdb.greenplum.v1.Config.MasterSubclusterConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(yandex.cloud.api.mdb.greenplum.v1.Config.MasterSubclusterConfig other) {
        if (other == yandex.cloud.api.mdb.greenplum.v1.Config.MasterSubclusterConfig.getDefaultInstance()) return this;
        if (other.hasResources()) {
          mergeResources(other.getResources());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        yandex.cloud.api.mdb.greenplum.v1.Config.MasterSubclusterConfig parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (yandex.cloud.api.mdb.greenplum.v1.Config.MasterSubclusterConfig) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private yandex.cloud.api.mdb.greenplum.v1.Config.Resources resources_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.mdb.greenplum.v1.Config.Resources, yandex.cloud.api.mdb.greenplum.v1.Config.Resources.Builder, yandex.cloud.api.mdb.greenplum.v1.Config.ResourcesOrBuilder> resourcesBuilder_;
      /**
       * <pre>
       * Computational resources allocated to Greenplum® master subcluster hosts.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.Resources resources = 1;</code>
       */
      public boolean hasResources() {
        return resourcesBuilder_ != null || resources_ != null;
      }
      /**
       * <pre>
       * Computational resources allocated to Greenplum® master subcluster hosts.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.Resources resources = 1;</code>
       */
      public yandex.cloud.api.mdb.greenplum.v1.Config.Resources getResources() {
        if (resourcesBuilder_ == null) {
          return resources_ == null ? yandex.cloud.api.mdb.greenplum.v1.Config.Resources.getDefaultInstance() : resources_;
        } else {
          return resourcesBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Computational resources allocated to Greenplum® master subcluster hosts.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.Resources resources = 1;</code>
       */
      public Builder setResources(yandex.cloud.api.mdb.greenplum.v1.Config.Resources value) {
        if (resourcesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          resources_ = value;
          onChanged();
        } else {
          resourcesBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Computational resources allocated to Greenplum® master subcluster hosts.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.Resources resources = 1;</code>
       */
      public Builder setResources(
          yandex.cloud.api.mdb.greenplum.v1.Config.Resources.Builder builderForValue) {
        if (resourcesBuilder_ == null) {
          resources_ = builderForValue.build();
          onChanged();
        } else {
          resourcesBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Computational resources allocated to Greenplum® master subcluster hosts.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.Resources resources = 1;</code>
       */
      public Builder mergeResources(yandex.cloud.api.mdb.greenplum.v1.Config.Resources value) {
        if (resourcesBuilder_ == null) {
          if (resources_ != null) {
            resources_ =
              yandex.cloud.api.mdb.greenplum.v1.Config.Resources.newBuilder(resources_).mergeFrom(value).buildPartial();
          } else {
            resources_ = value;
          }
          onChanged();
        } else {
          resourcesBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Computational resources allocated to Greenplum® master subcluster hosts.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.Resources resources = 1;</code>
       */
      public Builder clearResources() {
        if (resourcesBuilder_ == null) {
          resources_ = null;
          onChanged();
        } else {
          resources_ = null;
          resourcesBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Computational resources allocated to Greenplum® master subcluster hosts.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.Resources resources = 1;</code>
       */
      public yandex.cloud.api.mdb.greenplum.v1.Config.Resources.Builder getResourcesBuilder() {
        
        onChanged();
        return getResourcesFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Computational resources allocated to Greenplum® master subcluster hosts.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.Resources resources = 1;</code>
       */
      public yandex.cloud.api.mdb.greenplum.v1.Config.ResourcesOrBuilder getResourcesOrBuilder() {
        if (resourcesBuilder_ != null) {
          return resourcesBuilder_.getMessageOrBuilder();
        } else {
          return resources_ == null ?
              yandex.cloud.api.mdb.greenplum.v1.Config.Resources.getDefaultInstance() : resources_;
        }
      }
      /**
       * <pre>
       * Computational resources allocated to Greenplum® master subcluster hosts.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.Resources resources = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.mdb.greenplum.v1.Config.Resources, yandex.cloud.api.mdb.greenplum.v1.Config.Resources.Builder, yandex.cloud.api.mdb.greenplum.v1.Config.ResourcesOrBuilder> 
          getResourcesFieldBuilder() {
        if (resourcesBuilder_ == null) {
          resourcesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              yandex.cloud.api.mdb.greenplum.v1.Config.Resources, yandex.cloud.api.mdb.greenplum.v1.Config.Resources.Builder, yandex.cloud.api.mdb.greenplum.v1.Config.ResourcesOrBuilder>(
                  getResources(),
                  getParentForChildren(),
                  isClean());
          resources_ = null;
        }
        return resourcesBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:yandex.cloud.mdb.greenplum.v1.MasterSubclusterConfig)
    }

    // @@protoc_insertion_point(class_scope:yandex.cloud.mdb.greenplum.v1.MasterSubclusterConfig)
    private static final yandex.cloud.api.mdb.greenplum.v1.Config.MasterSubclusterConfig DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new yandex.cloud.api.mdb.greenplum.v1.Config.MasterSubclusterConfig();
    }

    public static yandex.cloud.api.mdb.greenplum.v1.Config.MasterSubclusterConfig getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MasterSubclusterConfig>
        PARSER = new com.google.protobuf.AbstractParser<MasterSubclusterConfig>() {
      @java.lang.Override
      public MasterSubclusterConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MasterSubclusterConfig(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MasterSubclusterConfig> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MasterSubclusterConfig> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public yandex.cloud.api.mdb.greenplum.v1.Config.MasterSubclusterConfig getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SegmentSubclusterConfigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:yandex.cloud.mdb.greenplum.v1.SegmentSubclusterConfig)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Computational resources allocated to Greenplum® segment subcluster hosts.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.Resources resources = 1;</code>
     */
    boolean hasResources();
    /**
     * <pre>
     * Computational resources allocated to Greenplum® segment subcluster hosts.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.Resources resources = 1;</code>
     */
    yandex.cloud.api.mdb.greenplum.v1.Config.Resources getResources();
    /**
     * <pre>
     * Computational resources allocated to Greenplum® segment subcluster hosts.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.Resources resources = 1;</code>
     */
    yandex.cloud.api.mdb.greenplum.v1.Config.ResourcesOrBuilder getResourcesOrBuilder();
  }
  /**
   * <pre>
   * Configuration of the segment subcluster.
   * </pre>
   *
   * Protobuf type {@code yandex.cloud.mdb.greenplum.v1.SegmentSubclusterConfig}
   */
  public  static final class SegmentSubclusterConfig extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:yandex.cloud.mdb.greenplum.v1.SegmentSubclusterConfig)
      SegmentSubclusterConfigOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SegmentSubclusterConfig.newBuilder() to construct.
    private SegmentSubclusterConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SegmentSubclusterConfig() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SegmentSubclusterConfig(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              yandex.cloud.api.mdb.greenplum.v1.Config.Resources.Builder subBuilder = null;
              if (resources_ != null) {
                subBuilder = resources_.toBuilder();
              }
              resources_ = input.readMessage(yandex.cloud.api.mdb.greenplum.v1.Config.Resources.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(resources_);
                resources_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return yandex.cloud.api.mdb.greenplum.v1.Config.internal_static_yandex_cloud_mdb_greenplum_v1_SegmentSubclusterConfig_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return yandex.cloud.api.mdb.greenplum.v1.Config.internal_static_yandex_cloud_mdb_greenplum_v1_SegmentSubclusterConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              yandex.cloud.api.mdb.greenplum.v1.Config.SegmentSubclusterConfig.class, yandex.cloud.api.mdb.greenplum.v1.Config.SegmentSubclusterConfig.Builder.class);
    }

    public static final int RESOURCES_FIELD_NUMBER = 1;
    private yandex.cloud.api.mdb.greenplum.v1.Config.Resources resources_;
    /**
     * <pre>
     * Computational resources allocated to Greenplum® segment subcluster hosts.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.Resources resources = 1;</code>
     */
    public boolean hasResources() {
      return resources_ != null;
    }
    /**
     * <pre>
     * Computational resources allocated to Greenplum® segment subcluster hosts.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.Resources resources = 1;</code>
     */
    public yandex.cloud.api.mdb.greenplum.v1.Config.Resources getResources() {
      return resources_ == null ? yandex.cloud.api.mdb.greenplum.v1.Config.Resources.getDefaultInstance() : resources_;
    }
    /**
     * <pre>
     * Computational resources allocated to Greenplum® segment subcluster hosts.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.Resources resources = 1;</code>
     */
    public yandex.cloud.api.mdb.greenplum.v1.Config.ResourcesOrBuilder getResourcesOrBuilder() {
      return getResources();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (resources_ != null) {
        output.writeMessage(1, getResources());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (resources_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getResources());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof yandex.cloud.api.mdb.greenplum.v1.Config.SegmentSubclusterConfig)) {
        return super.equals(obj);
      }
      yandex.cloud.api.mdb.greenplum.v1.Config.SegmentSubclusterConfig other = (yandex.cloud.api.mdb.greenplum.v1.Config.SegmentSubclusterConfig) obj;

      boolean result = true;
      result = result && (hasResources() == other.hasResources());
      if (hasResources()) {
        result = result && getResources()
            .equals(other.getResources());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasResources()) {
        hash = (37 * hash) + RESOURCES_FIELD_NUMBER;
        hash = (53 * hash) + getResources().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static yandex.cloud.api.mdb.greenplum.v1.Config.SegmentSubclusterConfig parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.Config.SegmentSubclusterConfig parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.Config.SegmentSubclusterConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.Config.SegmentSubclusterConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.Config.SegmentSubclusterConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.Config.SegmentSubclusterConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.Config.SegmentSubclusterConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.Config.SegmentSubclusterConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.Config.SegmentSubclusterConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.Config.SegmentSubclusterConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.Config.SegmentSubclusterConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.Config.SegmentSubclusterConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(yandex.cloud.api.mdb.greenplum.v1.Config.SegmentSubclusterConfig prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Configuration of the segment subcluster.
     * </pre>
     *
     * Protobuf type {@code yandex.cloud.mdb.greenplum.v1.SegmentSubclusterConfig}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:yandex.cloud.mdb.greenplum.v1.SegmentSubclusterConfig)
        yandex.cloud.api.mdb.greenplum.v1.Config.SegmentSubclusterConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return yandex.cloud.api.mdb.greenplum.v1.Config.internal_static_yandex_cloud_mdb_greenplum_v1_SegmentSubclusterConfig_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return yandex.cloud.api.mdb.greenplum.v1.Config.internal_static_yandex_cloud_mdb_greenplum_v1_SegmentSubclusterConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                yandex.cloud.api.mdb.greenplum.v1.Config.SegmentSubclusterConfig.class, yandex.cloud.api.mdb.greenplum.v1.Config.SegmentSubclusterConfig.Builder.class);
      }

      // Construct using yandex.cloud.api.mdb.greenplum.v1.Config.SegmentSubclusterConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (resourcesBuilder_ == null) {
          resources_ = null;
        } else {
          resources_ = null;
          resourcesBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return yandex.cloud.api.mdb.greenplum.v1.Config.internal_static_yandex_cloud_mdb_greenplum_v1_SegmentSubclusterConfig_descriptor;
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.greenplum.v1.Config.SegmentSubclusterConfig getDefaultInstanceForType() {
        return yandex.cloud.api.mdb.greenplum.v1.Config.SegmentSubclusterConfig.getDefaultInstance();
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.greenplum.v1.Config.SegmentSubclusterConfig build() {
        yandex.cloud.api.mdb.greenplum.v1.Config.SegmentSubclusterConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.greenplum.v1.Config.SegmentSubclusterConfig buildPartial() {
        yandex.cloud.api.mdb.greenplum.v1.Config.SegmentSubclusterConfig result = new yandex.cloud.api.mdb.greenplum.v1.Config.SegmentSubclusterConfig(this);
        if (resourcesBuilder_ == null) {
          result.resources_ = resources_;
        } else {
          result.resources_ = resourcesBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof yandex.cloud.api.mdb.greenplum.v1.Config.SegmentSubclusterConfig) {
          return mergeFrom((yandex.cloud.api.mdb.greenplum.v1.Config.SegmentSubclusterConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(yandex.cloud.api.mdb.greenplum.v1.Config.SegmentSubclusterConfig other) {
        if (other == yandex.cloud.api.mdb.greenplum.v1.Config.SegmentSubclusterConfig.getDefaultInstance()) return this;
        if (other.hasResources()) {
          mergeResources(other.getResources());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        yandex.cloud.api.mdb.greenplum.v1.Config.SegmentSubclusterConfig parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (yandex.cloud.api.mdb.greenplum.v1.Config.SegmentSubclusterConfig) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private yandex.cloud.api.mdb.greenplum.v1.Config.Resources resources_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.mdb.greenplum.v1.Config.Resources, yandex.cloud.api.mdb.greenplum.v1.Config.Resources.Builder, yandex.cloud.api.mdb.greenplum.v1.Config.ResourcesOrBuilder> resourcesBuilder_;
      /**
       * <pre>
       * Computational resources allocated to Greenplum® segment subcluster hosts.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.Resources resources = 1;</code>
       */
      public boolean hasResources() {
        return resourcesBuilder_ != null || resources_ != null;
      }
      /**
       * <pre>
       * Computational resources allocated to Greenplum® segment subcluster hosts.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.Resources resources = 1;</code>
       */
      public yandex.cloud.api.mdb.greenplum.v1.Config.Resources getResources() {
        if (resourcesBuilder_ == null) {
          return resources_ == null ? yandex.cloud.api.mdb.greenplum.v1.Config.Resources.getDefaultInstance() : resources_;
        } else {
          return resourcesBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Computational resources allocated to Greenplum® segment subcluster hosts.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.Resources resources = 1;</code>
       */
      public Builder setResources(yandex.cloud.api.mdb.greenplum.v1.Config.Resources value) {
        if (resourcesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          resources_ = value;
          onChanged();
        } else {
          resourcesBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Computational resources allocated to Greenplum® segment subcluster hosts.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.Resources resources = 1;</code>
       */
      public Builder setResources(
          yandex.cloud.api.mdb.greenplum.v1.Config.Resources.Builder builderForValue) {
        if (resourcesBuilder_ == null) {
          resources_ = builderForValue.build();
          onChanged();
        } else {
          resourcesBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Computational resources allocated to Greenplum® segment subcluster hosts.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.Resources resources = 1;</code>
       */
      public Builder mergeResources(yandex.cloud.api.mdb.greenplum.v1.Config.Resources value) {
        if (resourcesBuilder_ == null) {
          if (resources_ != null) {
            resources_ =
              yandex.cloud.api.mdb.greenplum.v1.Config.Resources.newBuilder(resources_).mergeFrom(value).buildPartial();
          } else {
            resources_ = value;
          }
          onChanged();
        } else {
          resourcesBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Computational resources allocated to Greenplum® segment subcluster hosts.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.Resources resources = 1;</code>
       */
      public Builder clearResources() {
        if (resourcesBuilder_ == null) {
          resources_ = null;
          onChanged();
        } else {
          resources_ = null;
          resourcesBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Computational resources allocated to Greenplum® segment subcluster hosts.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.Resources resources = 1;</code>
       */
      public yandex.cloud.api.mdb.greenplum.v1.Config.Resources.Builder getResourcesBuilder() {
        
        onChanged();
        return getResourcesFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Computational resources allocated to Greenplum® segment subcluster hosts.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.Resources resources = 1;</code>
       */
      public yandex.cloud.api.mdb.greenplum.v1.Config.ResourcesOrBuilder getResourcesOrBuilder() {
        if (resourcesBuilder_ != null) {
          return resourcesBuilder_.getMessageOrBuilder();
        } else {
          return resources_ == null ?
              yandex.cloud.api.mdb.greenplum.v1.Config.Resources.getDefaultInstance() : resources_;
        }
      }
      /**
       * <pre>
       * Computational resources allocated to Greenplum® segment subcluster hosts.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.Resources resources = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.mdb.greenplum.v1.Config.Resources, yandex.cloud.api.mdb.greenplum.v1.Config.Resources.Builder, yandex.cloud.api.mdb.greenplum.v1.Config.ResourcesOrBuilder> 
          getResourcesFieldBuilder() {
        if (resourcesBuilder_ == null) {
          resourcesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              yandex.cloud.api.mdb.greenplum.v1.Config.Resources, yandex.cloud.api.mdb.greenplum.v1.Config.Resources.Builder, yandex.cloud.api.mdb.greenplum.v1.Config.ResourcesOrBuilder>(
                  getResources(),
                  getParentForChildren(),
                  isClean());
          resources_ = null;
        }
        return resourcesBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:yandex.cloud.mdb.greenplum.v1.SegmentSubclusterConfig)
    }

    // @@protoc_insertion_point(class_scope:yandex.cloud.mdb.greenplum.v1.SegmentSubclusterConfig)
    private static final yandex.cloud.api.mdb.greenplum.v1.Config.SegmentSubclusterConfig DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new yandex.cloud.api.mdb.greenplum.v1.Config.SegmentSubclusterConfig();
    }

    public static yandex.cloud.api.mdb.greenplum.v1.Config.SegmentSubclusterConfig getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SegmentSubclusterConfig>
        PARSER = new com.google.protobuf.AbstractParser<SegmentSubclusterConfig>() {
      @java.lang.Override
      public SegmentSubclusterConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SegmentSubclusterConfig(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SegmentSubclusterConfig> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SegmentSubclusterConfig> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public yandex.cloud.api.mdb.greenplum.v1.Config.SegmentSubclusterConfig getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GreenplumConfig6_17OrBuilder extends
      // @@protoc_insertion_point(interface_extends:yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_17)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Maximum number of inbound connections on master segment
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_connections = 1;</code>
     */
    boolean hasMaxConnections();
    /**
     * <pre>
     * Maximum number of inbound connections on master segment
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_connections = 1;</code>
     */
    com.google.protobuf.Int64Value getMaxConnections();
    /**
     * <pre>
     * Maximum number of inbound connections on master segment
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_connections = 1;</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getMaxConnectionsOrBuilder();

    /**
     * <pre>
     * Specify the maximum size of WAL files that replication slots are allowed to retain in the pg_wal directory at checkpoint time.
     * https://www.postgresql.org/docs/current/runtime-config-replication.html
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_slot_wal_keep_size = 2;</code>
     */
    boolean hasMaxSlotWalKeepSize();
    /**
     * <pre>
     * Specify the maximum size of WAL files that replication slots are allowed to retain in the pg_wal directory at checkpoint time.
     * https://www.postgresql.org/docs/current/runtime-config-replication.html
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_slot_wal_keep_size = 2;</code>
     */
    com.google.protobuf.Int64Value getMaxSlotWalKeepSize();
    /**
     * <pre>
     * Specify the maximum size of WAL files that replication slots are allowed to retain in the pg_wal directory at checkpoint time.
     * https://www.postgresql.org/docs/current/runtime-config-replication.html
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_slot_wal_keep_size = 2;</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getMaxSlotWalKeepSizeOrBuilder();

    /**
     * <pre>
     * Sets the maximum total disk size that all running queries are allowed to use for creating temporary spill files at each segment.
     * The default value is 0, which means a limit is not enforced.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_segment
     * </pre>
     *
     * <code>.google.protobuf.Int64Value gp_workfile_limit_per_segment = 3;</code>
     */
    boolean hasGpWorkfileLimitPerSegment();
    /**
     * <pre>
     * Sets the maximum total disk size that all running queries are allowed to use for creating temporary spill files at each segment.
     * The default value is 0, which means a limit is not enforced.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_segment
     * </pre>
     *
     * <code>.google.protobuf.Int64Value gp_workfile_limit_per_segment = 3;</code>
     */
    com.google.protobuf.Int64Value getGpWorkfileLimitPerSegment();
    /**
     * <pre>
     * Sets the maximum total disk size that all running queries are allowed to use for creating temporary spill files at each segment.
     * The default value is 0, which means a limit is not enforced.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_segment
     * </pre>
     *
     * <code>.google.protobuf.Int64Value gp_workfile_limit_per_segment = 3;</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getGpWorkfileLimitPerSegmentOrBuilder();

    /**
     * <pre>
     * Sets the maximum disk size an individual query is allowed to use for creating temporary spill files at each segment.
     * The default value is 0, which means a limit is not enforced.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_query
     * </pre>
     *
     * <code>.google.protobuf.Int64Value gp_workfile_limit_per_query = 4;</code>
     */
    boolean hasGpWorkfileLimitPerQuery();
    /**
     * <pre>
     * Sets the maximum disk size an individual query is allowed to use for creating temporary spill files at each segment.
     * The default value is 0, which means a limit is not enforced.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_query
     * </pre>
     *
     * <code>.google.protobuf.Int64Value gp_workfile_limit_per_query = 4;</code>
     */
    com.google.protobuf.Int64Value getGpWorkfileLimitPerQuery();
    /**
     * <pre>
     * Sets the maximum disk size an individual query is allowed to use for creating temporary spill files at each segment.
     * The default value is 0, which means a limit is not enforced.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_query
     * </pre>
     *
     * <code>.google.protobuf.Int64Value gp_workfile_limit_per_query = 4;</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getGpWorkfileLimitPerQueryOrBuilder();

    /**
     * <pre>
     * Sets the maximum number of temporary spill files (also known as workfiles) allowed per query per segment.
     * Spill files are created when executing a query that requires more memory than it is allocated.
     * The current query is terminated when the limit is exceeded.
     * Set the value to 0 (zero) to allow an unlimited number of spill files. master session reload
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_files_per_query
     * Default value is 10000
     * </pre>
     *
     * <code>.google.protobuf.Int64Value gp_workfile_limit_files_per_query = 5;</code>
     */
    boolean hasGpWorkfileLimitFilesPerQuery();
    /**
     * <pre>
     * Sets the maximum number of temporary spill files (also known as workfiles) allowed per query per segment.
     * Spill files are created when executing a query that requires more memory than it is allocated.
     * The current query is terminated when the limit is exceeded.
     * Set the value to 0 (zero) to allow an unlimited number of spill files. master session reload
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_files_per_query
     * Default value is 10000
     * </pre>
     *
     * <code>.google.protobuf.Int64Value gp_workfile_limit_files_per_query = 5;</code>
     */
    com.google.protobuf.Int64Value getGpWorkfileLimitFilesPerQuery();
    /**
     * <pre>
     * Sets the maximum number of temporary spill files (also known as workfiles) allowed per query per segment.
     * Spill files are created when executing a query that requires more memory than it is allocated.
     * The current query is terminated when the limit is exceeded.
     * Set the value to 0 (zero) to allow an unlimited number of spill files. master session reload
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_files_per_query
     * Default value is 10000
     * </pre>
     *
     * <code>.google.protobuf.Int64Value gp_workfile_limit_files_per_query = 5;</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getGpWorkfileLimitFilesPerQueryOrBuilder();

    /**
     * <pre>
     * Sets the maximum number of transactions that can be in the "prepared" state simultaneously
     * https://www.postgresql.org/docs/9.6/runtime-config-resource.html
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_prepared_transactions = 6;</code>
     */
    boolean hasMaxPreparedTransactions();
    /**
     * <pre>
     * Sets the maximum number of transactions that can be in the "prepared" state simultaneously
     * https://www.postgresql.org/docs/9.6/runtime-config-resource.html
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_prepared_transactions = 6;</code>
     */
    com.google.protobuf.Int64Value getMaxPreparedTransactions();
    /**
     * <pre>
     * Sets the maximum number of transactions that can be in the "prepared" state simultaneously
     * https://www.postgresql.org/docs/9.6/runtime-config-resource.html
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_prepared_transactions = 6;</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getMaxPreparedTransactionsOrBuilder();

    /**
     * <pre>
     * Specifies whether the temporary files created, when a hash aggregation or hash join operation spills to disk, are compressed.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_compression
     * </pre>
     *
     * <code>.google.protobuf.BoolValue gp_workfile_compression = 7;</code>
     */
    boolean hasGpWorkfileCompression();
    /**
     * <pre>
     * Specifies whether the temporary files created, when a hash aggregation or hash join operation spills to disk, are compressed.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_compression
     * </pre>
     *
     * <code>.google.protobuf.BoolValue gp_workfile_compression = 7;</code>
     */
    com.google.protobuf.BoolValue getGpWorkfileCompression();
    /**
     * <pre>
     * Specifies whether the temporary files created, when a hash aggregation or hash join operation spills to disk, are compressed.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_compression
     * </pre>
     *
     * <code>.google.protobuf.BoolValue gp_workfile_compression = 7;</code>
     */
    com.google.protobuf.BoolValueOrBuilder getGpWorkfileCompressionOrBuilder();
  }
  /**
   * Protobuf type {@code yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_17}
   */
  public  static final class GreenplumConfig6_17 extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_17)
      GreenplumConfig6_17OrBuilder {
  private static final long serialVersionUID = 0L;
    // Use GreenplumConfig6_17.newBuilder() to construct.
    private GreenplumConfig6_17(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GreenplumConfig6_17() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private GreenplumConfig6_17(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (maxConnections_ != null) {
                subBuilder = maxConnections_.toBuilder();
              }
              maxConnections_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(maxConnections_);
                maxConnections_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (maxSlotWalKeepSize_ != null) {
                subBuilder = maxSlotWalKeepSize_.toBuilder();
              }
              maxSlotWalKeepSize_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(maxSlotWalKeepSize_);
                maxSlotWalKeepSize_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (gpWorkfileLimitPerSegment_ != null) {
                subBuilder = gpWorkfileLimitPerSegment_.toBuilder();
              }
              gpWorkfileLimitPerSegment_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(gpWorkfileLimitPerSegment_);
                gpWorkfileLimitPerSegment_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (gpWorkfileLimitPerQuery_ != null) {
                subBuilder = gpWorkfileLimitPerQuery_.toBuilder();
              }
              gpWorkfileLimitPerQuery_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(gpWorkfileLimitPerQuery_);
                gpWorkfileLimitPerQuery_ = subBuilder.buildPartial();
              }

              break;
            }
            case 42: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (gpWorkfileLimitFilesPerQuery_ != null) {
                subBuilder = gpWorkfileLimitFilesPerQuery_.toBuilder();
              }
              gpWorkfileLimitFilesPerQuery_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(gpWorkfileLimitFilesPerQuery_);
                gpWorkfileLimitFilesPerQuery_ = subBuilder.buildPartial();
              }

              break;
            }
            case 50: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (maxPreparedTransactions_ != null) {
                subBuilder = maxPreparedTransactions_.toBuilder();
              }
              maxPreparedTransactions_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(maxPreparedTransactions_);
                maxPreparedTransactions_ = subBuilder.buildPartial();
              }

              break;
            }
            case 58: {
              com.google.protobuf.BoolValue.Builder subBuilder = null;
              if (gpWorkfileCompression_ != null) {
                subBuilder = gpWorkfileCompression_.toBuilder();
              }
              gpWorkfileCompression_ = input.readMessage(com.google.protobuf.BoolValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(gpWorkfileCompression_);
                gpWorkfileCompression_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return yandex.cloud.api.mdb.greenplum.v1.Config.internal_static_yandex_cloud_mdb_greenplum_v1_GreenplumConfig6_17_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return yandex.cloud.api.mdb.greenplum.v1.Config.internal_static_yandex_cloud_mdb_greenplum_v1_GreenplumConfig6_17_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17.class, yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17.Builder.class);
    }

    public static final int MAX_CONNECTIONS_FIELD_NUMBER = 1;
    private com.google.protobuf.Int64Value maxConnections_;
    /**
     * <pre>
     * Maximum number of inbound connections on master segment
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_connections = 1;</code>
     */
    public boolean hasMaxConnections() {
      return maxConnections_ != null;
    }
    /**
     * <pre>
     * Maximum number of inbound connections on master segment
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_connections = 1;</code>
     */
    public com.google.protobuf.Int64Value getMaxConnections() {
      return maxConnections_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : maxConnections_;
    }
    /**
     * <pre>
     * Maximum number of inbound connections on master segment
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_connections = 1;</code>
     */
    public com.google.protobuf.Int64ValueOrBuilder getMaxConnectionsOrBuilder() {
      return getMaxConnections();
    }

    public static final int MAX_SLOT_WAL_KEEP_SIZE_FIELD_NUMBER = 2;
    private com.google.protobuf.Int64Value maxSlotWalKeepSize_;
    /**
     * <pre>
     * Specify the maximum size of WAL files that replication slots are allowed to retain in the pg_wal directory at checkpoint time.
     * https://www.postgresql.org/docs/current/runtime-config-replication.html
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_slot_wal_keep_size = 2;</code>
     */
    public boolean hasMaxSlotWalKeepSize() {
      return maxSlotWalKeepSize_ != null;
    }
    /**
     * <pre>
     * Specify the maximum size of WAL files that replication slots are allowed to retain in the pg_wal directory at checkpoint time.
     * https://www.postgresql.org/docs/current/runtime-config-replication.html
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_slot_wal_keep_size = 2;</code>
     */
    public com.google.protobuf.Int64Value getMaxSlotWalKeepSize() {
      return maxSlotWalKeepSize_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : maxSlotWalKeepSize_;
    }
    /**
     * <pre>
     * Specify the maximum size of WAL files that replication slots are allowed to retain in the pg_wal directory at checkpoint time.
     * https://www.postgresql.org/docs/current/runtime-config-replication.html
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_slot_wal_keep_size = 2;</code>
     */
    public com.google.protobuf.Int64ValueOrBuilder getMaxSlotWalKeepSizeOrBuilder() {
      return getMaxSlotWalKeepSize();
    }

    public static final int GP_WORKFILE_LIMIT_PER_SEGMENT_FIELD_NUMBER = 3;
    private com.google.protobuf.Int64Value gpWorkfileLimitPerSegment_;
    /**
     * <pre>
     * Sets the maximum total disk size that all running queries are allowed to use for creating temporary spill files at each segment.
     * The default value is 0, which means a limit is not enforced.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_segment
     * </pre>
     *
     * <code>.google.protobuf.Int64Value gp_workfile_limit_per_segment = 3;</code>
     */
    public boolean hasGpWorkfileLimitPerSegment() {
      return gpWorkfileLimitPerSegment_ != null;
    }
    /**
     * <pre>
     * Sets the maximum total disk size that all running queries are allowed to use for creating temporary spill files at each segment.
     * The default value is 0, which means a limit is not enforced.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_segment
     * </pre>
     *
     * <code>.google.protobuf.Int64Value gp_workfile_limit_per_segment = 3;</code>
     */
    public com.google.protobuf.Int64Value getGpWorkfileLimitPerSegment() {
      return gpWorkfileLimitPerSegment_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : gpWorkfileLimitPerSegment_;
    }
    /**
     * <pre>
     * Sets the maximum total disk size that all running queries are allowed to use for creating temporary spill files at each segment.
     * The default value is 0, which means a limit is not enforced.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_segment
     * </pre>
     *
     * <code>.google.protobuf.Int64Value gp_workfile_limit_per_segment = 3;</code>
     */
    public com.google.protobuf.Int64ValueOrBuilder getGpWorkfileLimitPerSegmentOrBuilder() {
      return getGpWorkfileLimitPerSegment();
    }

    public static final int GP_WORKFILE_LIMIT_PER_QUERY_FIELD_NUMBER = 4;
    private com.google.protobuf.Int64Value gpWorkfileLimitPerQuery_;
    /**
     * <pre>
     * Sets the maximum disk size an individual query is allowed to use for creating temporary spill files at each segment.
     * The default value is 0, which means a limit is not enforced.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_query
     * </pre>
     *
     * <code>.google.protobuf.Int64Value gp_workfile_limit_per_query = 4;</code>
     */
    public boolean hasGpWorkfileLimitPerQuery() {
      return gpWorkfileLimitPerQuery_ != null;
    }
    /**
     * <pre>
     * Sets the maximum disk size an individual query is allowed to use for creating temporary spill files at each segment.
     * The default value is 0, which means a limit is not enforced.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_query
     * </pre>
     *
     * <code>.google.protobuf.Int64Value gp_workfile_limit_per_query = 4;</code>
     */
    public com.google.protobuf.Int64Value getGpWorkfileLimitPerQuery() {
      return gpWorkfileLimitPerQuery_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : gpWorkfileLimitPerQuery_;
    }
    /**
     * <pre>
     * Sets the maximum disk size an individual query is allowed to use for creating temporary spill files at each segment.
     * The default value is 0, which means a limit is not enforced.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_query
     * </pre>
     *
     * <code>.google.protobuf.Int64Value gp_workfile_limit_per_query = 4;</code>
     */
    public com.google.protobuf.Int64ValueOrBuilder getGpWorkfileLimitPerQueryOrBuilder() {
      return getGpWorkfileLimitPerQuery();
    }

    public static final int GP_WORKFILE_LIMIT_FILES_PER_QUERY_FIELD_NUMBER = 5;
    private com.google.protobuf.Int64Value gpWorkfileLimitFilesPerQuery_;
    /**
     * <pre>
     * Sets the maximum number of temporary spill files (also known as workfiles) allowed per query per segment.
     * Spill files are created when executing a query that requires more memory than it is allocated.
     * The current query is terminated when the limit is exceeded.
     * Set the value to 0 (zero) to allow an unlimited number of spill files. master session reload
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_files_per_query
     * Default value is 10000
     * </pre>
     *
     * <code>.google.protobuf.Int64Value gp_workfile_limit_files_per_query = 5;</code>
     */
    public boolean hasGpWorkfileLimitFilesPerQuery() {
      return gpWorkfileLimitFilesPerQuery_ != null;
    }
    /**
     * <pre>
     * Sets the maximum number of temporary spill files (also known as workfiles) allowed per query per segment.
     * Spill files are created when executing a query that requires more memory than it is allocated.
     * The current query is terminated when the limit is exceeded.
     * Set the value to 0 (zero) to allow an unlimited number of spill files. master session reload
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_files_per_query
     * Default value is 10000
     * </pre>
     *
     * <code>.google.protobuf.Int64Value gp_workfile_limit_files_per_query = 5;</code>
     */
    public com.google.protobuf.Int64Value getGpWorkfileLimitFilesPerQuery() {
      return gpWorkfileLimitFilesPerQuery_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : gpWorkfileLimitFilesPerQuery_;
    }
    /**
     * <pre>
     * Sets the maximum number of temporary spill files (also known as workfiles) allowed per query per segment.
     * Spill files are created when executing a query that requires more memory than it is allocated.
     * The current query is terminated when the limit is exceeded.
     * Set the value to 0 (zero) to allow an unlimited number of spill files. master session reload
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_files_per_query
     * Default value is 10000
     * </pre>
     *
     * <code>.google.protobuf.Int64Value gp_workfile_limit_files_per_query = 5;</code>
     */
    public com.google.protobuf.Int64ValueOrBuilder getGpWorkfileLimitFilesPerQueryOrBuilder() {
      return getGpWorkfileLimitFilesPerQuery();
    }

    public static final int MAX_PREPARED_TRANSACTIONS_FIELD_NUMBER = 6;
    private com.google.protobuf.Int64Value maxPreparedTransactions_;
    /**
     * <pre>
     * Sets the maximum number of transactions that can be in the "prepared" state simultaneously
     * https://www.postgresql.org/docs/9.6/runtime-config-resource.html
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_prepared_transactions = 6;</code>
     */
    public boolean hasMaxPreparedTransactions() {
      return maxPreparedTransactions_ != null;
    }
    /**
     * <pre>
     * Sets the maximum number of transactions that can be in the "prepared" state simultaneously
     * https://www.postgresql.org/docs/9.6/runtime-config-resource.html
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_prepared_transactions = 6;</code>
     */
    public com.google.protobuf.Int64Value getMaxPreparedTransactions() {
      return maxPreparedTransactions_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : maxPreparedTransactions_;
    }
    /**
     * <pre>
     * Sets the maximum number of transactions that can be in the "prepared" state simultaneously
     * https://www.postgresql.org/docs/9.6/runtime-config-resource.html
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_prepared_transactions = 6;</code>
     */
    public com.google.protobuf.Int64ValueOrBuilder getMaxPreparedTransactionsOrBuilder() {
      return getMaxPreparedTransactions();
    }

    public static final int GP_WORKFILE_COMPRESSION_FIELD_NUMBER = 7;
    private com.google.protobuf.BoolValue gpWorkfileCompression_;
    /**
     * <pre>
     * Specifies whether the temporary files created, when a hash aggregation or hash join operation spills to disk, are compressed.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_compression
     * </pre>
     *
     * <code>.google.protobuf.BoolValue gp_workfile_compression = 7;</code>
     */
    public boolean hasGpWorkfileCompression() {
      return gpWorkfileCompression_ != null;
    }
    /**
     * <pre>
     * Specifies whether the temporary files created, when a hash aggregation or hash join operation spills to disk, are compressed.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_compression
     * </pre>
     *
     * <code>.google.protobuf.BoolValue gp_workfile_compression = 7;</code>
     */
    public com.google.protobuf.BoolValue getGpWorkfileCompression() {
      return gpWorkfileCompression_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : gpWorkfileCompression_;
    }
    /**
     * <pre>
     * Specifies whether the temporary files created, when a hash aggregation or hash join operation spills to disk, are compressed.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_compression
     * </pre>
     *
     * <code>.google.protobuf.BoolValue gp_workfile_compression = 7;</code>
     */
    public com.google.protobuf.BoolValueOrBuilder getGpWorkfileCompressionOrBuilder() {
      return getGpWorkfileCompression();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (maxConnections_ != null) {
        output.writeMessage(1, getMaxConnections());
      }
      if (maxSlotWalKeepSize_ != null) {
        output.writeMessage(2, getMaxSlotWalKeepSize());
      }
      if (gpWorkfileLimitPerSegment_ != null) {
        output.writeMessage(3, getGpWorkfileLimitPerSegment());
      }
      if (gpWorkfileLimitPerQuery_ != null) {
        output.writeMessage(4, getGpWorkfileLimitPerQuery());
      }
      if (gpWorkfileLimitFilesPerQuery_ != null) {
        output.writeMessage(5, getGpWorkfileLimitFilesPerQuery());
      }
      if (maxPreparedTransactions_ != null) {
        output.writeMessage(6, getMaxPreparedTransactions());
      }
      if (gpWorkfileCompression_ != null) {
        output.writeMessage(7, getGpWorkfileCompression());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (maxConnections_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getMaxConnections());
      }
      if (maxSlotWalKeepSize_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getMaxSlotWalKeepSize());
      }
      if (gpWorkfileLimitPerSegment_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getGpWorkfileLimitPerSegment());
      }
      if (gpWorkfileLimitPerQuery_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getGpWorkfileLimitPerQuery());
      }
      if (gpWorkfileLimitFilesPerQuery_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getGpWorkfileLimitFilesPerQuery());
      }
      if (maxPreparedTransactions_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getMaxPreparedTransactions());
      }
      if (gpWorkfileCompression_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getGpWorkfileCompression());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17)) {
        return super.equals(obj);
      }
      yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17 other = (yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17) obj;

      boolean result = true;
      result = result && (hasMaxConnections() == other.hasMaxConnections());
      if (hasMaxConnections()) {
        result = result && getMaxConnections()
            .equals(other.getMaxConnections());
      }
      result = result && (hasMaxSlotWalKeepSize() == other.hasMaxSlotWalKeepSize());
      if (hasMaxSlotWalKeepSize()) {
        result = result && getMaxSlotWalKeepSize()
            .equals(other.getMaxSlotWalKeepSize());
      }
      result = result && (hasGpWorkfileLimitPerSegment() == other.hasGpWorkfileLimitPerSegment());
      if (hasGpWorkfileLimitPerSegment()) {
        result = result && getGpWorkfileLimitPerSegment()
            .equals(other.getGpWorkfileLimitPerSegment());
      }
      result = result && (hasGpWorkfileLimitPerQuery() == other.hasGpWorkfileLimitPerQuery());
      if (hasGpWorkfileLimitPerQuery()) {
        result = result && getGpWorkfileLimitPerQuery()
            .equals(other.getGpWorkfileLimitPerQuery());
      }
      result = result && (hasGpWorkfileLimitFilesPerQuery() == other.hasGpWorkfileLimitFilesPerQuery());
      if (hasGpWorkfileLimitFilesPerQuery()) {
        result = result && getGpWorkfileLimitFilesPerQuery()
            .equals(other.getGpWorkfileLimitFilesPerQuery());
      }
      result = result && (hasMaxPreparedTransactions() == other.hasMaxPreparedTransactions());
      if (hasMaxPreparedTransactions()) {
        result = result && getMaxPreparedTransactions()
            .equals(other.getMaxPreparedTransactions());
      }
      result = result && (hasGpWorkfileCompression() == other.hasGpWorkfileCompression());
      if (hasGpWorkfileCompression()) {
        result = result && getGpWorkfileCompression()
            .equals(other.getGpWorkfileCompression());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasMaxConnections()) {
        hash = (37 * hash) + MAX_CONNECTIONS_FIELD_NUMBER;
        hash = (53 * hash) + getMaxConnections().hashCode();
      }
      if (hasMaxSlotWalKeepSize()) {
        hash = (37 * hash) + MAX_SLOT_WAL_KEEP_SIZE_FIELD_NUMBER;
        hash = (53 * hash) + getMaxSlotWalKeepSize().hashCode();
      }
      if (hasGpWorkfileLimitPerSegment()) {
        hash = (37 * hash) + GP_WORKFILE_LIMIT_PER_SEGMENT_FIELD_NUMBER;
        hash = (53 * hash) + getGpWorkfileLimitPerSegment().hashCode();
      }
      if (hasGpWorkfileLimitPerQuery()) {
        hash = (37 * hash) + GP_WORKFILE_LIMIT_PER_QUERY_FIELD_NUMBER;
        hash = (53 * hash) + getGpWorkfileLimitPerQuery().hashCode();
      }
      if (hasGpWorkfileLimitFilesPerQuery()) {
        hash = (37 * hash) + GP_WORKFILE_LIMIT_FILES_PER_QUERY_FIELD_NUMBER;
        hash = (53 * hash) + getGpWorkfileLimitFilesPerQuery().hashCode();
      }
      if (hasMaxPreparedTransactions()) {
        hash = (37 * hash) + MAX_PREPARED_TRANSACTIONS_FIELD_NUMBER;
        hash = (53 * hash) + getMaxPreparedTransactions().hashCode();
      }
      if (hasGpWorkfileCompression()) {
        hash = (37 * hash) + GP_WORKFILE_COMPRESSION_FIELD_NUMBER;
        hash = (53 * hash) + getGpWorkfileCompression().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17 parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17 parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17 parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17 parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17 parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17 parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17 parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17 parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17 parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17 parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17 parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17 parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17 prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_17}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_17)
        yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17OrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return yandex.cloud.api.mdb.greenplum.v1.Config.internal_static_yandex_cloud_mdb_greenplum_v1_GreenplumConfig6_17_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return yandex.cloud.api.mdb.greenplum.v1.Config.internal_static_yandex_cloud_mdb_greenplum_v1_GreenplumConfig6_17_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17.class, yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17.Builder.class);
      }

      // Construct using yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (maxConnectionsBuilder_ == null) {
          maxConnections_ = null;
        } else {
          maxConnections_ = null;
          maxConnectionsBuilder_ = null;
        }
        if (maxSlotWalKeepSizeBuilder_ == null) {
          maxSlotWalKeepSize_ = null;
        } else {
          maxSlotWalKeepSize_ = null;
          maxSlotWalKeepSizeBuilder_ = null;
        }
        if (gpWorkfileLimitPerSegmentBuilder_ == null) {
          gpWorkfileLimitPerSegment_ = null;
        } else {
          gpWorkfileLimitPerSegment_ = null;
          gpWorkfileLimitPerSegmentBuilder_ = null;
        }
        if (gpWorkfileLimitPerQueryBuilder_ == null) {
          gpWorkfileLimitPerQuery_ = null;
        } else {
          gpWorkfileLimitPerQuery_ = null;
          gpWorkfileLimitPerQueryBuilder_ = null;
        }
        if (gpWorkfileLimitFilesPerQueryBuilder_ == null) {
          gpWorkfileLimitFilesPerQuery_ = null;
        } else {
          gpWorkfileLimitFilesPerQuery_ = null;
          gpWorkfileLimitFilesPerQueryBuilder_ = null;
        }
        if (maxPreparedTransactionsBuilder_ == null) {
          maxPreparedTransactions_ = null;
        } else {
          maxPreparedTransactions_ = null;
          maxPreparedTransactionsBuilder_ = null;
        }
        if (gpWorkfileCompressionBuilder_ == null) {
          gpWorkfileCompression_ = null;
        } else {
          gpWorkfileCompression_ = null;
          gpWorkfileCompressionBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return yandex.cloud.api.mdb.greenplum.v1.Config.internal_static_yandex_cloud_mdb_greenplum_v1_GreenplumConfig6_17_descriptor;
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17 getDefaultInstanceForType() {
        return yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17.getDefaultInstance();
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17 build() {
        yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17 result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17 buildPartial() {
        yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17 result = new yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17(this);
        if (maxConnectionsBuilder_ == null) {
          result.maxConnections_ = maxConnections_;
        } else {
          result.maxConnections_ = maxConnectionsBuilder_.build();
        }
        if (maxSlotWalKeepSizeBuilder_ == null) {
          result.maxSlotWalKeepSize_ = maxSlotWalKeepSize_;
        } else {
          result.maxSlotWalKeepSize_ = maxSlotWalKeepSizeBuilder_.build();
        }
        if (gpWorkfileLimitPerSegmentBuilder_ == null) {
          result.gpWorkfileLimitPerSegment_ = gpWorkfileLimitPerSegment_;
        } else {
          result.gpWorkfileLimitPerSegment_ = gpWorkfileLimitPerSegmentBuilder_.build();
        }
        if (gpWorkfileLimitPerQueryBuilder_ == null) {
          result.gpWorkfileLimitPerQuery_ = gpWorkfileLimitPerQuery_;
        } else {
          result.gpWorkfileLimitPerQuery_ = gpWorkfileLimitPerQueryBuilder_.build();
        }
        if (gpWorkfileLimitFilesPerQueryBuilder_ == null) {
          result.gpWorkfileLimitFilesPerQuery_ = gpWorkfileLimitFilesPerQuery_;
        } else {
          result.gpWorkfileLimitFilesPerQuery_ = gpWorkfileLimitFilesPerQueryBuilder_.build();
        }
        if (maxPreparedTransactionsBuilder_ == null) {
          result.maxPreparedTransactions_ = maxPreparedTransactions_;
        } else {
          result.maxPreparedTransactions_ = maxPreparedTransactionsBuilder_.build();
        }
        if (gpWorkfileCompressionBuilder_ == null) {
          result.gpWorkfileCompression_ = gpWorkfileCompression_;
        } else {
          result.gpWorkfileCompression_ = gpWorkfileCompressionBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17) {
          return mergeFrom((yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17 other) {
        if (other == yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17.getDefaultInstance()) return this;
        if (other.hasMaxConnections()) {
          mergeMaxConnections(other.getMaxConnections());
        }
        if (other.hasMaxSlotWalKeepSize()) {
          mergeMaxSlotWalKeepSize(other.getMaxSlotWalKeepSize());
        }
        if (other.hasGpWorkfileLimitPerSegment()) {
          mergeGpWorkfileLimitPerSegment(other.getGpWorkfileLimitPerSegment());
        }
        if (other.hasGpWorkfileLimitPerQuery()) {
          mergeGpWorkfileLimitPerQuery(other.getGpWorkfileLimitPerQuery());
        }
        if (other.hasGpWorkfileLimitFilesPerQuery()) {
          mergeGpWorkfileLimitFilesPerQuery(other.getGpWorkfileLimitFilesPerQuery());
        }
        if (other.hasMaxPreparedTransactions()) {
          mergeMaxPreparedTransactions(other.getMaxPreparedTransactions());
        }
        if (other.hasGpWorkfileCompression()) {
          mergeGpWorkfileCompression(other.getGpWorkfileCompression());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17 parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.google.protobuf.Int64Value maxConnections_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> maxConnectionsBuilder_;
      /**
       * <pre>
       * Maximum number of inbound connections on master segment
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_connections = 1;</code>
       */
      public boolean hasMaxConnections() {
        return maxConnectionsBuilder_ != null || maxConnections_ != null;
      }
      /**
       * <pre>
       * Maximum number of inbound connections on master segment
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_connections = 1;</code>
       */
      public com.google.protobuf.Int64Value getMaxConnections() {
        if (maxConnectionsBuilder_ == null) {
          return maxConnections_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : maxConnections_;
        } else {
          return maxConnectionsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Maximum number of inbound connections on master segment
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_connections = 1;</code>
       */
      public Builder setMaxConnections(com.google.protobuf.Int64Value value) {
        if (maxConnectionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          maxConnections_ = value;
          onChanged();
        } else {
          maxConnectionsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Maximum number of inbound connections on master segment
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_connections = 1;</code>
       */
      public Builder setMaxConnections(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (maxConnectionsBuilder_ == null) {
          maxConnections_ = builderForValue.build();
          onChanged();
        } else {
          maxConnectionsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Maximum number of inbound connections on master segment
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_connections = 1;</code>
       */
      public Builder mergeMaxConnections(com.google.protobuf.Int64Value value) {
        if (maxConnectionsBuilder_ == null) {
          if (maxConnections_ != null) {
            maxConnections_ =
              com.google.protobuf.Int64Value.newBuilder(maxConnections_).mergeFrom(value).buildPartial();
          } else {
            maxConnections_ = value;
          }
          onChanged();
        } else {
          maxConnectionsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Maximum number of inbound connections on master segment
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_connections = 1;</code>
       */
      public Builder clearMaxConnections() {
        if (maxConnectionsBuilder_ == null) {
          maxConnections_ = null;
          onChanged();
        } else {
          maxConnections_ = null;
          maxConnectionsBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Maximum number of inbound connections on master segment
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_connections = 1;</code>
       */
      public com.google.protobuf.Int64Value.Builder getMaxConnectionsBuilder() {
        
        onChanged();
        return getMaxConnectionsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Maximum number of inbound connections on master segment
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_connections = 1;</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getMaxConnectionsOrBuilder() {
        if (maxConnectionsBuilder_ != null) {
          return maxConnectionsBuilder_.getMessageOrBuilder();
        } else {
          return maxConnections_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : maxConnections_;
        }
      }
      /**
       * <pre>
       * Maximum number of inbound connections on master segment
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_connections = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getMaxConnectionsFieldBuilder() {
        if (maxConnectionsBuilder_ == null) {
          maxConnectionsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getMaxConnections(),
                  getParentForChildren(),
                  isClean());
          maxConnections_ = null;
        }
        return maxConnectionsBuilder_;
      }

      private com.google.protobuf.Int64Value maxSlotWalKeepSize_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> maxSlotWalKeepSizeBuilder_;
      /**
       * <pre>
       * Specify the maximum size of WAL files that replication slots are allowed to retain in the pg_wal directory at checkpoint time.
       * https://www.postgresql.org/docs/current/runtime-config-replication.html
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_slot_wal_keep_size = 2;</code>
       */
      public boolean hasMaxSlotWalKeepSize() {
        return maxSlotWalKeepSizeBuilder_ != null || maxSlotWalKeepSize_ != null;
      }
      /**
       * <pre>
       * Specify the maximum size of WAL files that replication slots are allowed to retain in the pg_wal directory at checkpoint time.
       * https://www.postgresql.org/docs/current/runtime-config-replication.html
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_slot_wal_keep_size = 2;</code>
       */
      public com.google.protobuf.Int64Value getMaxSlotWalKeepSize() {
        if (maxSlotWalKeepSizeBuilder_ == null) {
          return maxSlotWalKeepSize_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : maxSlotWalKeepSize_;
        } else {
          return maxSlotWalKeepSizeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Specify the maximum size of WAL files that replication slots are allowed to retain in the pg_wal directory at checkpoint time.
       * https://www.postgresql.org/docs/current/runtime-config-replication.html
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_slot_wal_keep_size = 2;</code>
       */
      public Builder setMaxSlotWalKeepSize(com.google.protobuf.Int64Value value) {
        if (maxSlotWalKeepSizeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          maxSlotWalKeepSize_ = value;
          onChanged();
        } else {
          maxSlotWalKeepSizeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Specify the maximum size of WAL files that replication slots are allowed to retain in the pg_wal directory at checkpoint time.
       * https://www.postgresql.org/docs/current/runtime-config-replication.html
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_slot_wal_keep_size = 2;</code>
       */
      public Builder setMaxSlotWalKeepSize(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (maxSlotWalKeepSizeBuilder_ == null) {
          maxSlotWalKeepSize_ = builderForValue.build();
          onChanged();
        } else {
          maxSlotWalKeepSizeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Specify the maximum size of WAL files that replication slots are allowed to retain in the pg_wal directory at checkpoint time.
       * https://www.postgresql.org/docs/current/runtime-config-replication.html
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_slot_wal_keep_size = 2;</code>
       */
      public Builder mergeMaxSlotWalKeepSize(com.google.protobuf.Int64Value value) {
        if (maxSlotWalKeepSizeBuilder_ == null) {
          if (maxSlotWalKeepSize_ != null) {
            maxSlotWalKeepSize_ =
              com.google.protobuf.Int64Value.newBuilder(maxSlotWalKeepSize_).mergeFrom(value).buildPartial();
          } else {
            maxSlotWalKeepSize_ = value;
          }
          onChanged();
        } else {
          maxSlotWalKeepSizeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Specify the maximum size of WAL files that replication slots are allowed to retain in the pg_wal directory at checkpoint time.
       * https://www.postgresql.org/docs/current/runtime-config-replication.html
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_slot_wal_keep_size = 2;</code>
       */
      public Builder clearMaxSlotWalKeepSize() {
        if (maxSlotWalKeepSizeBuilder_ == null) {
          maxSlotWalKeepSize_ = null;
          onChanged();
        } else {
          maxSlotWalKeepSize_ = null;
          maxSlotWalKeepSizeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Specify the maximum size of WAL files that replication slots are allowed to retain in the pg_wal directory at checkpoint time.
       * https://www.postgresql.org/docs/current/runtime-config-replication.html
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_slot_wal_keep_size = 2;</code>
       */
      public com.google.protobuf.Int64Value.Builder getMaxSlotWalKeepSizeBuilder() {
        
        onChanged();
        return getMaxSlotWalKeepSizeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Specify the maximum size of WAL files that replication slots are allowed to retain in the pg_wal directory at checkpoint time.
       * https://www.postgresql.org/docs/current/runtime-config-replication.html
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_slot_wal_keep_size = 2;</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getMaxSlotWalKeepSizeOrBuilder() {
        if (maxSlotWalKeepSizeBuilder_ != null) {
          return maxSlotWalKeepSizeBuilder_.getMessageOrBuilder();
        } else {
          return maxSlotWalKeepSize_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : maxSlotWalKeepSize_;
        }
      }
      /**
       * <pre>
       * Specify the maximum size of WAL files that replication slots are allowed to retain in the pg_wal directory at checkpoint time.
       * https://www.postgresql.org/docs/current/runtime-config-replication.html
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_slot_wal_keep_size = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getMaxSlotWalKeepSizeFieldBuilder() {
        if (maxSlotWalKeepSizeBuilder_ == null) {
          maxSlotWalKeepSizeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getMaxSlotWalKeepSize(),
                  getParentForChildren(),
                  isClean());
          maxSlotWalKeepSize_ = null;
        }
        return maxSlotWalKeepSizeBuilder_;
      }

      private com.google.protobuf.Int64Value gpWorkfileLimitPerSegment_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> gpWorkfileLimitPerSegmentBuilder_;
      /**
       * <pre>
       * Sets the maximum total disk size that all running queries are allowed to use for creating temporary spill files at each segment.
       * The default value is 0, which means a limit is not enforced.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_segment
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_workfile_limit_per_segment = 3;</code>
       */
      public boolean hasGpWorkfileLimitPerSegment() {
        return gpWorkfileLimitPerSegmentBuilder_ != null || gpWorkfileLimitPerSegment_ != null;
      }
      /**
       * <pre>
       * Sets the maximum total disk size that all running queries are allowed to use for creating temporary spill files at each segment.
       * The default value is 0, which means a limit is not enforced.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_segment
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_workfile_limit_per_segment = 3;</code>
       */
      public com.google.protobuf.Int64Value getGpWorkfileLimitPerSegment() {
        if (gpWorkfileLimitPerSegmentBuilder_ == null) {
          return gpWorkfileLimitPerSegment_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : gpWorkfileLimitPerSegment_;
        } else {
          return gpWorkfileLimitPerSegmentBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Sets the maximum total disk size that all running queries are allowed to use for creating temporary spill files at each segment.
       * The default value is 0, which means a limit is not enforced.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_segment
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_workfile_limit_per_segment = 3;</code>
       */
      public Builder setGpWorkfileLimitPerSegment(com.google.protobuf.Int64Value value) {
        if (gpWorkfileLimitPerSegmentBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          gpWorkfileLimitPerSegment_ = value;
          onChanged();
        } else {
          gpWorkfileLimitPerSegmentBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Sets the maximum total disk size that all running queries are allowed to use for creating temporary spill files at each segment.
       * The default value is 0, which means a limit is not enforced.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_segment
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_workfile_limit_per_segment = 3;</code>
       */
      public Builder setGpWorkfileLimitPerSegment(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (gpWorkfileLimitPerSegmentBuilder_ == null) {
          gpWorkfileLimitPerSegment_ = builderForValue.build();
          onChanged();
        } else {
          gpWorkfileLimitPerSegmentBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Sets the maximum total disk size that all running queries are allowed to use for creating temporary spill files at each segment.
       * The default value is 0, which means a limit is not enforced.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_segment
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_workfile_limit_per_segment = 3;</code>
       */
      public Builder mergeGpWorkfileLimitPerSegment(com.google.protobuf.Int64Value value) {
        if (gpWorkfileLimitPerSegmentBuilder_ == null) {
          if (gpWorkfileLimitPerSegment_ != null) {
            gpWorkfileLimitPerSegment_ =
              com.google.protobuf.Int64Value.newBuilder(gpWorkfileLimitPerSegment_).mergeFrom(value).buildPartial();
          } else {
            gpWorkfileLimitPerSegment_ = value;
          }
          onChanged();
        } else {
          gpWorkfileLimitPerSegmentBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Sets the maximum total disk size that all running queries are allowed to use for creating temporary spill files at each segment.
       * The default value is 0, which means a limit is not enforced.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_segment
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_workfile_limit_per_segment = 3;</code>
       */
      public Builder clearGpWorkfileLimitPerSegment() {
        if (gpWorkfileLimitPerSegmentBuilder_ == null) {
          gpWorkfileLimitPerSegment_ = null;
          onChanged();
        } else {
          gpWorkfileLimitPerSegment_ = null;
          gpWorkfileLimitPerSegmentBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Sets the maximum total disk size that all running queries are allowed to use for creating temporary spill files at each segment.
       * The default value is 0, which means a limit is not enforced.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_segment
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_workfile_limit_per_segment = 3;</code>
       */
      public com.google.protobuf.Int64Value.Builder getGpWorkfileLimitPerSegmentBuilder() {
        
        onChanged();
        return getGpWorkfileLimitPerSegmentFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Sets the maximum total disk size that all running queries are allowed to use for creating temporary spill files at each segment.
       * The default value is 0, which means a limit is not enforced.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_segment
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_workfile_limit_per_segment = 3;</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getGpWorkfileLimitPerSegmentOrBuilder() {
        if (gpWorkfileLimitPerSegmentBuilder_ != null) {
          return gpWorkfileLimitPerSegmentBuilder_.getMessageOrBuilder();
        } else {
          return gpWorkfileLimitPerSegment_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : gpWorkfileLimitPerSegment_;
        }
      }
      /**
       * <pre>
       * Sets the maximum total disk size that all running queries are allowed to use for creating temporary spill files at each segment.
       * The default value is 0, which means a limit is not enforced.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_segment
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_workfile_limit_per_segment = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getGpWorkfileLimitPerSegmentFieldBuilder() {
        if (gpWorkfileLimitPerSegmentBuilder_ == null) {
          gpWorkfileLimitPerSegmentBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getGpWorkfileLimitPerSegment(),
                  getParentForChildren(),
                  isClean());
          gpWorkfileLimitPerSegment_ = null;
        }
        return gpWorkfileLimitPerSegmentBuilder_;
      }

      private com.google.protobuf.Int64Value gpWorkfileLimitPerQuery_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> gpWorkfileLimitPerQueryBuilder_;
      /**
       * <pre>
       * Sets the maximum disk size an individual query is allowed to use for creating temporary spill files at each segment.
       * The default value is 0, which means a limit is not enforced.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_query
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_workfile_limit_per_query = 4;</code>
       */
      public boolean hasGpWorkfileLimitPerQuery() {
        return gpWorkfileLimitPerQueryBuilder_ != null || gpWorkfileLimitPerQuery_ != null;
      }
      /**
       * <pre>
       * Sets the maximum disk size an individual query is allowed to use for creating temporary spill files at each segment.
       * The default value is 0, which means a limit is not enforced.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_query
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_workfile_limit_per_query = 4;</code>
       */
      public com.google.protobuf.Int64Value getGpWorkfileLimitPerQuery() {
        if (gpWorkfileLimitPerQueryBuilder_ == null) {
          return gpWorkfileLimitPerQuery_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : gpWorkfileLimitPerQuery_;
        } else {
          return gpWorkfileLimitPerQueryBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Sets the maximum disk size an individual query is allowed to use for creating temporary spill files at each segment.
       * The default value is 0, which means a limit is not enforced.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_query
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_workfile_limit_per_query = 4;</code>
       */
      public Builder setGpWorkfileLimitPerQuery(com.google.protobuf.Int64Value value) {
        if (gpWorkfileLimitPerQueryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          gpWorkfileLimitPerQuery_ = value;
          onChanged();
        } else {
          gpWorkfileLimitPerQueryBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Sets the maximum disk size an individual query is allowed to use for creating temporary spill files at each segment.
       * The default value is 0, which means a limit is not enforced.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_query
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_workfile_limit_per_query = 4;</code>
       */
      public Builder setGpWorkfileLimitPerQuery(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (gpWorkfileLimitPerQueryBuilder_ == null) {
          gpWorkfileLimitPerQuery_ = builderForValue.build();
          onChanged();
        } else {
          gpWorkfileLimitPerQueryBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Sets the maximum disk size an individual query is allowed to use for creating temporary spill files at each segment.
       * The default value is 0, which means a limit is not enforced.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_query
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_workfile_limit_per_query = 4;</code>
       */
      public Builder mergeGpWorkfileLimitPerQuery(com.google.protobuf.Int64Value value) {
        if (gpWorkfileLimitPerQueryBuilder_ == null) {
          if (gpWorkfileLimitPerQuery_ != null) {
            gpWorkfileLimitPerQuery_ =
              com.google.protobuf.Int64Value.newBuilder(gpWorkfileLimitPerQuery_).mergeFrom(value).buildPartial();
          } else {
            gpWorkfileLimitPerQuery_ = value;
          }
          onChanged();
        } else {
          gpWorkfileLimitPerQueryBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Sets the maximum disk size an individual query is allowed to use for creating temporary spill files at each segment.
       * The default value is 0, which means a limit is not enforced.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_query
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_workfile_limit_per_query = 4;</code>
       */
      public Builder clearGpWorkfileLimitPerQuery() {
        if (gpWorkfileLimitPerQueryBuilder_ == null) {
          gpWorkfileLimitPerQuery_ = null;
          onChanged();
        } else {
          gpWorkfileLimitPerQuery_ = null;
          gpWorkfileLimitPerQueryBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Sets the maximum disk size an individual query is allowed to use for creating temporary spill files at each segment.
       * The default value is 0, which means a limit is not enforced.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_query
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_workfile_limit_per_query = 4;</code>
       */
      public com.google.protobuf.Int64Value.Builder getGpWorkfileLimitPerQueryBuilder() {
        
        onChanged();
        return getGpWorkfileLimitPerQueryFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Sets the maximum disk size an individual query is allowed to use for creating temporary spill files at each segment.
       * The default value is 0, which means a limit is not enforced.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_query
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_workfile_limit_per_query = 4;</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getGpWorkfileLimitPerQueryOrBuilder() {
        if (gpWorkfileLimitPerQueryBuilder_ != null) {
          return gpWorkfileLimitPerQueryBuilder_.getMessageOrBuilder();
        } else {
          return gpWorkfileLimitPerQuery_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : gpWorkfileLimitPerQuery_;
        }
      }
      /**
       * <pre>
       * Sets the maximum disk size an individual query is allowed to use for creating temporary spill files at each segment.
       * The default value is 0, which means a limit is not enforced.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_query
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_workfile_limit_per_query = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getGpWorkfileLimitPerQueryFieldBuilder() {
        if (gpWorkfileLimitPerQueryBuilder_ == null) {
          gpWorkfileLimitPerQueryBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getGpWorkfileLimitPerQuery(),
                  getParentForChildren(),
                  isClean());
          gpWorkfileLimitPerQuery_ = null;
        }
        return gpWorkfileLimitPerQueryBuilder_;
      }

      private com.google.protobuf.Int64Value gpWorkfileLimitFilesPerQuery_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> gpWorkfileLimitFilesPerQueryBuilder_;
      /**
       * <pre>
       * Sets the maximum number of temporary spill files (also known as workfiles) allowed per query per segment.
       * Spill files are created when executing a query that requires more memory than it is allocated.
       * The current query is terminated when the limit is exceeded.
       * Set the value to 0 (zero) to allow an unlimited number of spill files. master session reload
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_files_per_query
       * Default value is 10000
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_workfile_limit_files_per_query = 5;</code>
       */
      public boolean hasGpWorkfileLimitFilesPerQuery() {
        return gpWorkfileLimitFilesPerQueryBuilder_ != null || gpWorkfileLimitFilesPerQuery_ != null;
      }
      /**
       * <pre>
       * Sets the maximum number of temporary spill files (also known as workfiles) allowed per query per segment.
       * Spill files are created when executing a query that requires more memory than it is allocated.
       * The current query is terminated when the limit is exceeded.
       * Set the value to 0 (zero) to allow an unlimited number of spill files. master session reload
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_files_per_query
       * Default value is 10000
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_workfile_limit_files_per_query = 5;</code>
       */
      public com.google.protobuf.Int64Value getGpWorkfileLimitFilesPerQuery() {
        if (gpWorkfileLimitFilesPerQueryBuilder_ == null) {
          return gpWorkfileLimitFilesPerQuery_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : gpWorkfileLimitFilesPerQuery_;
        } else {
          return gpWorkfileLimitFilesPerQueryBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Sets the maximum number of temporary spill files (also known as workfiles) allowed per query per segment.
       * Spill files are created when executing a query that requires more memory than it is allocated.
       * The current query is terminated when the limit is exceeded.
       * Set the value to 0 (zero) to allow an unlimited number of spill files. master session reload
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_files_per_query
       * Default value is 10000
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_workfile_limit_files_per_query = 5;</code>
       */
      public Builder setGpWorkfileLimitFilesPerQuery(com.google.protobuf.Int64Value value) {
        if (gpWorkfileLimitFilesPerQueryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          gpWorkfileLimitFilesPerQuery_ = value;
          onChanged();
        } else {
          gpWorkfileLimitFilesPerQueryBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Sets the maximum number of temporary spill files (also known as workfiles) allowed per query per segment.
       * Spill files are created when executing a query that requires more memory than it is allocated.
       * The current query is terminated when the limit is exceeded.
       * Set the value to 0 (zero) to allow an unlimited number of spill files. master session reload
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_files_per_query
       * Default value is 10000
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_workfile_limit_files_per_query = 5;</code>
       */
      public Builder setGpWorkfileLimitFilesPerQuery(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (gpWorkfileLimitFilesPerQueryBuilder_ == null) {
          gpWorkfileLimitFilesPerQuery_ = builderForValue.build();
          onChanged();
        } else {
          gpWorkfileLimitFilesPerQueryBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Sets the maximum number of temporary spill files (also known as workfiles) allowed per query per segment.
       * Spill files are created when executing a query that requires more memory than it is allocated.
       * The current query is terminated when the limit is exceeded.
       * Set the value to 0 (zero) to allow an unlimited number of spill files. master session reload
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_files_per_query
       * Default value is 10000
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_workfile_limit_files_per_query = 5;</code>
       */
      public Builder mergeGpWorkfileLimitFilesPerQuery(com.google.protobuf.Int64Value value) {
        if (gpWorkfileLimitFilesPerQueryBuilder_ == null) {
          if (gpWorkfileLimitFilesPerQuery_ != null) {
            gpWorkfileLimitFilesPerQuery_ =
              com.google.protobuf.Int64Value.newBuilder(gpWorkfileLimitFilesPerQuery_).mergeFrom(value).buildPartial();
          } else {
            gpWorkfileLimitFilesPerQuery_ = value;
          }
          onChanged();
        } else {
          gpWorkfileLimitFilesPerQueryBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Sets the maximum number of temporary spill files (also known as workfiles) allowed per query per segment.
       * Spill files are created when executing a query that requires more memory than it is allocated.
       * The current query is terminated when the limit is exceeded.
       * Set the value to 0 (zero) to allow an unlimited number of spill files. master session reload
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_files_per_query
       * Default value is 10000
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_workfile_limit_files_per_query = 5;</code>
       */
      public Builder clearGpWorkfileLimitFilesPerQuery() {
        if (gpWorkfileLimitFilesPerQueryBuilder_ == null) {
          gpWorkfileLimitFilesPerQuery_ = null;
          onChanged();
        } else {
          gpWorkfileLimitFilesPerQuery_ = null;
          gpWorkfileLimitFilesPerQueryBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Sets the maximum number of temporary spill files (also known as workfiles) allowed per query per segment.
       * Spill files are created when executing a query that requires more memory than it is allocated.
       * The current query is terminated when the limit is exceeded.
       * Set the value to 0 (zero) to allow an unlimited number of spill files. master session reload
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_files_per_query
       * Default value is 10000
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_workfile_limit_files_per_query = 5;</code>
       */
      public com.google.protobuf.Int64Value.Builder getGpWorkfileLimitFilesPerQueryBuilder() {
        
        onChanged();
        return getGpWorkfileLimitFilesPerQueryFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Sets the maximum number of temporary spill files (also known as workfiles) allowed per query per segment.
       * Spill files are created when executing a query that requires more memory than it is allocated.
       * The current query is terminated when the limit is exceeded.
       * Set the value to 0 (zero) to allow an unlimited number of spill files. master session reload
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_files_per_query
       * Default value is 10000
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_workfile_limit_files_per_query = 5;</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getGpWorkfileLimitFilesPerQueryOrBuilder() {
        if (gpWorkfileLimitFilesPerQueryBuilder_ != null) {
          return gpWorkfileLimitFilesPerQueryBuilder_.getMessageOrBuilder();
        } else {
          return gpWorkfileLimitFilesPerQuery_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : gpWorkfileLimitFilesPerQuery_;
        }
      }
      /**
       * <pre>
       * Sets the maximum number of temporary spill files (also known as workfiles) allowed per query per segment.
       * Spill files are created when executing a query that requires more memory than it is allocated.
       * The current query is terminated when the limit is exceeded.
       * Set the value to 0 (zero) to allow an unlimited number of spill files. master session reload
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_files_per_query
       * Default value is 10000
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_workfile_limit_files_per_query = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getGpWorkfileLimitFilesPerQueryFieldBuilder() {
        if (gpWorkfileLimitFilesPerQueryBuilder_ == null) {
          gpWorkfileLimitFilesPerQueryBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getGpWorkfileLimitFilesPerQuery(),
                  getParentForChildren(),
                  isClean());
          gpWorkfileLimitFilesPerQuery_ = null;
        }
        return gpWorkfileLimitFilesPerQueryBuilder_;
      }

      private com.google.protobuf.Int64Value maxPreparedTransactions_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> maxPreparedTransactionsBuilder_;
      /**
       * <pre>
       * Sets the maximum number of transactions that can be in the "prepared" state simultaneously
       * https://www.postgresql.org/docs/9.6/runtime-config-resource.html
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_prepared_transactions = 6;</code>
       */
      public boolean hasMaxPreparedTransactions() {
        return maxPreparedTransactionsBuilder_ != null || maxPreparedTransactions_ != null;
      }
      /**
       * <pre>
       * Sets the maximum number of transactions that can be in the "prepared" state simultaneously
       * https://www.postgresql.org/docs/9.6/runtime-config-resource.html
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_prepared_transactions = 6;</code>
       */
      public com.google.protobuf.Int64Value getMaxPreparedTransactions() {
        if (maxPreparedTransactionsBuilder_ == null) {
          return maxPreparedTransactions_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : maxPreparedTransactions_;
        } else {
          return maxPreparedTransactionsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Sets the maximum number of transactions that can be in the "prepared" state simultaneously
       * https://www.postgresql.org/docs/9.6/runtime-config-resource.html
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_prepared_transactions = 6;</code>
       */
      public Builder setMaxPreparedTransactions(com.google.protobuf.Int64Value value) {
        if (maxPreparedTransactionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          maxPreparedTransactions_ = value;
          onChanged();
        } else {
          maxPreparedTransactionsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Sets the maximum number of transactions that can be in the "prepared" state simultaneously
       * https://www.postgresql.org/docs/9.6/runtime-config-resource.html
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_prepared_transactions = 6;</code>
       */
      public Builder setMaxPreparedTransactions(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (maxPreparedTransactionsBuilder_ == null) {
          maxPreparedTransactions_ = builderForValue.build();
          onChanged();
        } else {
          maxPreparedTransactionsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Sets the maximum number of transactions that can be in the "prepared" state simultaneously
       * https://www.postgresql.org/docs/9.6/runtime-config-resource.html
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_prepared_transactions = 6;</code>
       */
      public Builder mergeMaxPreparedTransactions(com.google.protobuf.Int64Value value) {
        if (maxPreparedTransactionsBuilder_ == null) {
          if (maxPreparedTransactions_ != null) {
            maxPreparedTransactions_ =
              com.google.protobuf.Int64Value.newBuilder(maxPreparedTransactions_).mergeFrom(value).buildPartial();
          } else {
            maxPreparedTransactions_ = value;
          }
          onChanged();
        } else {
          maxPreparedTransactionsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Sets the maximum number of transactions that can be in the "prepared" state simultaneously
       * https://www.postgresql.org/docs/9.6/runtime-config-resource.html
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_prepared_transactions = 6;</code>
       */
      public Builder clearMaxPreparedTransactions() {
        if (maxPreparedTransactionsBuilder_ == null) {
          maxPreparedTransactions_ = null;
          onChanged();
        } else {
          maxPreparedTransactions_ = null;
          maxPreparedTransactionsBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Sets the maximum number of transactions that can be in the "prepared" state simultaneously
       * https://www.postgresql.org/docs/9.6/runtime-config-resource.html
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_prepared_transactions = 6;</code>
       */
      public com.google.protobuf.Int64Value.Builder getMaxPreparedTransactionsBuilder() {
        
        onChanged();
        return getMaxPreparedTransactionsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Sets the maximum number of transactions that can be in the "prepared" state simultaneously
       * https://www.postgresql.org/docs/9.6/runtime-config-resource.html
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_prepared_transactions = 6;</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getMaxPreparedTransactionsOrBuilder() {
        if (maxPreparedTransactionsBuilder_ != null) {
          return maxPreparedTransactionsBuilder_.getMessageOrBuilder();
        } else {
          return maxPreparedTransactions_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : maxPreparedTransactions_;
        }
      }
      /**
       * <pre>
       * Sets the maximum number of transactions that can be in the "prepared" state simultaneously
       * https://www.postgresql.org/docs/9.6/runtime-config-resource.html
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_prepared_transactions = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getMaxPreparedTransactionsFieldBuilder() {
        if (maxPreparedTransactionsBuilder_ == null) {
          maxPreparedTransactionsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getMaxPreparedTransactions(),
                  getParentForChildren(),
                  isClean());
          maxPreparedTransactions_ = null;
        }
        return maxPreparedTransactionsBuilder_;
      }

      private com.google.protobuf.BoolValue gpWorkfileCompression_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> gpWorkfileCompressionBuilder_;
      /**
       * <pre>
       * Specifies whether the temporary files created, when a hash aggregation or hash join operation spills to disk, are compressed.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_compression
       * </pre>
       *
       * <code>.google.protobuf.BoolValue gp_workfile_compression = 7;</code>
       */
      public boolean hasGpWorkfileCompression() {
        return gpWorkfileCompressionBuilder_ != null || gpWorkfileCompression_ != null;
      }
      /**
       * <pre>
       * Specifies whether the temporary files created, when a hash aggregation or hash join operation spills to disk, are compressed.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_compression
       * </pre>
       *
       * <code>.google.protobuf.BoolValue gp_workfile_compression = 7;</code>
       */
      public com.google.protobuf.BoolValue getGpWorkfileCompression() {
        if (gpWorkfileCompressionBuilder_ == null) {
          return gpWorkfileCompression_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : gpWorkfileCompression_;
        } else {
          return gpWorkfileCompressionBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Specifies whether the temporary files created, when a hash aggregation or hash join operation spills to disk, are compressed.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_compression
       * </pre>
       *
       * <code>.google.protobuf.BoolValue gp_workfile_compression = 7;</code>
       */
      public Builder setGpWorkfileCompression(com.google.protobuf.BoolValue value) {
        if (gpWorkfileCompressionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          gpWorkfileCompression_ = value;
          onChanged();
        } else {
          gpWorkfileCompressionBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Specifies whether the temporary files created, when a hash aggregation or hash join operation spills to disk, are compressed.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_compression
       * </pre>
       *
       * <code>.google.protobuf.BoolValue gp_workfile_compression = 7;</code>
       */
      public Builder setGpWorkfileCompression(
          com.google.protobuf.BoolValue.Builder builderForValue) {
        if (gpWorkfileCompressionBuilder_ == null) {
          gpWorkfileCompression_ = builderForValue.build();
          onChanged();
        } else {
          gpWorkfileCompressionBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Specifies whether the temporary files created, when a hash aggregation or hash join operation spills to disk, are compressed.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_compression
       * </pre>
       *
       * <code>.google.protobuf.BoolValue gp_workfile_compression = 7;</code>
       */
      public Builder mergeGpWorkfileCompression(com.google.protobuf.BoolValue value) {
        if (gpWorkfileCompressionBuilder_ == null) {
          if (gpWorkfileCompression_ != null) {
            gpWorkfileCompression_ =
              com.google.protobuf.BoolValue.newBuilder(gpWorkfileCompression_).mergeFrom(value).buildPartial();
          } else {
            gpWorkfileCompression_ = value;
          }
          onChanged();
        } else {
          gpWorkfileCompressionBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Specifies whether the temporary files created, when a hash aggregation or hash join operation spills to disk, are compressed.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_compression
       * </pre>
       *
       * <code>.google.protobuf.BoolValue gp_workfile_compression = 7;</code>
       */
      public Builder clearGpWorkfileCompression() {
        if (gpWorkfileCompressionBuilder_ == null) {
          gpWorkfileCompression_ = null;
          onChanged();
        } else {
          gpWorkfileCompression_ = null;
          gpWorkfileCompressionBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Specifies whether the temporary files created, when a hash aggregation or hash join operation spills to disk, are compressed.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_compression
       * </pre>
       *
       * <code>.google.protobuf.BoolValue gp_workfile_compression = 7;</code>
       */
      public com.google.protobuf.BoolValue.Builder getGpWorkfileCompressionBuilder() {
        
        onChanged();
        return getGpWorkfileCompressionFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Specifies whether the temporary files created, when a hash aggregation or hash join operation spills to disk, are compressed.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_compression
       * </pre>
       *
       * <code>.google.protobuf.BoolValue gp_workfile_compression = 7;</code>
       */
      public com.google.protobuf.BoolValueOrBuilder getGpWorkfileCompressionOrBuilder() {
        if (gpWorkfileCompressionBuilder_ != null) {
          return gpWorkfileCompressionBuilder_.getMessageOrBuilder();
        } else {
          return gpWorkfileCompression_ == null ?
              com.google.protobuf.BoolValue.getDefaultInstance() : gpWorkfileCompression_;
        }
      }
      /**
       * <pre>
       * Specifies whether the temporary files created, when a hash aggregation or hash join operation spills to disk, are compressed.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_compression
       * </pre>
       *
       * <code>.google.protobuf.BoolValue gp_workfile_compression = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> 
          getGpWorkfileCompressionFieldBuilder() {
        if (gpWorkfileCompressionBuilder_ == null) {
          gpWorkfileCompressionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder>(
                  getGpWorkfileCompression(),
                  getParentForChildren(),
                  isClean());
          gpWorkfileCompression_ = null;
        }
        return gpWorkfileCompressionBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_17)
    }

    // @@protoc_insertion_point(class_scope:yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_17)
    private static final yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17 DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17();
    }

    public static yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17 getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GreenplumConfig6_17>
        PARSER = new com.google.protobuf.AbstractParser<GreenplumConfig6_17>() {
      @java.lang.Override
      public GreenplumConfig6_17 parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GreenplumConfig6_17(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<GreenplumConfig6_17> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GreenplumConfig6_17> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17 getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GreenplumConfig6_19OrBuilder extends
      // @@protoc_insertion_point(interface_extends:yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_19)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Maximum number of inbound connections on master segment
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_connections = 1;</code>
     */
    boolean hasMaxConnections();
    /**
     * <pre>
     * Maximum number of inbound connections on master segment
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_connections = 1;</code>
     */
    com.google.protobuf.Int64Value getMaxConnections();
    /**
     * <pre>
     * Maximum number of inbound connections on master segment
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_connections = 1;</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getMaxConnectionsOrBuilder();

    /**
     * <pre>
     * Specify the maximum size of WAL files that replication slots are allowed to retain in the pg_wal directory at checkpoint time.
     * https://www.postgresql.org/docs/current/runtime-config-replication.html
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_slot_wal_keep_size = 2;</code>
     */
    boolean hasMaxSlotWalKeepSize();
    /**
     * <pre>
     * Specify the maximum size of WAL files that replication slots are allowed to retain in the pg_wal directory at checkpoint time.
     * https://www.postgresql.org/docs/current/runtime-config-replication.html
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_slot_wal_keep_size = 2;</code>
     */
    com.google.protobuf.Int64Value getMaxSlotWalKeepSize();
    /**
     * <pre>
     * Specify the maximum size of WAL files that replication slots are allowed to retain in the pg_wal directory at checkpoint time.
     * https://www.postgresql.org/docs/current/runtime-config-replication.html
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_slot_wal_keep_size = 2;</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getMaxSlotWalKeepSizeOrBuilder();

    /**
     * <pre>
     * Sets the maximum total disk size that all running queries are allowed to use for creating temporary spill files at each segment.
     * The default value is 0, which means a limit is not enforced.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_segment
     * </pre>
     *
     * <code>.google.protobuf.Int64Value gp_workfile_limit_per_segment = 3;</code>
     */
    boolean hasGpWorkfileLimitPerSegment();
    /**
     * <pre>
     * Sets the maximum total disk size that all running queries are allowed to use for creating temporary spill files at each segment.
     * The default value is 0, which means a limit is not enforced.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_segment
     * </pre>
     *
     * <code>.google.protobuf.Int64Value gp_workfile_limit_per_segment = 3;</code>
     */
    com.google.protobuf.Int64Value getGpWorkfileLimitPerSegment();
    /**
     * <pre>
     * Sets the maximum total disk size that all running queries are allowed to use for creating temporary spill files at each segment.
     * The default value is 0, which means a limit is not enforced.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_segment
     * </pre>
     *
     * <code>.google.protobuf.Int64Value gp_workfile_limit_per_segment = 3;</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getGpWorkfileLimitPerSegmentOrBuilder();

    /**
     * <pre>
     * Sets the maximum disk size an individual query is allowed to use for creating temporary spill files at each segment.
     * The default value is 0, which means a limit is not enforced.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_query
     * </pre>
     *
     * <code>.google.protobuf.Int64Value gp_workfile_limit_per_query = 4;</code>
     */
    boolean hasGpWorkfileLimitPerQuery();
    /**
     * <pre>
     * Sets the maximum disk size an individual query is allowed to use for creating temporary spill files at each segment.
     * The default value is 0, which means a limit is not enforced.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_query
     * </pre>
     *
     * <code>.google.protobuf.Int64Value gp_workfile_limit_per_query = 4;</code>
     */
    com.google.protobuf.Int64Value getGpWorkfileLimitPerQuery();
    /**
     * <pre>
     * Sets the maximum disk size an individual query is allowed to use for creating temporary spill files at each segment.
     * The default value is 0, which means a limit is not enforced.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_query
     * </pre>
     *
     * <code>.google.protobuf.Int64Value gp_workfile_limit_per_query = 4;</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getGpWorkfileLimitPerQueryOrBuilder();

    /**
     * <pre>
     * Sets the maximum number of temporary spill files (also known as workfiles) allowed per query per segment.
     * Spill files are created when executing a query that requires more memory than it is allocated.
     * The current query is terminated when the limit is exceeded.
     * Set the value to 0 (zero) to allow an unlimited number of spill files. master session reload
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_files_per_query
     * Default value is 10000
     * </pre>
     *
     * <code>.google.protobuf.Int64Value gp_workfile_limit_files_per_query = 5;</code>
     */
    boolean hasGpWorkfileLimitFilesPerQuery();
    /**
     * <pre>
     * Sets the maximum number of temporary spill files (also known as workfiles) allowed per query per segment.
     * Spill files are created when executing a query that requires more memory than it is allocated.
     * The current query is terminated when the limit is exceeded.
     * Set the value to 0 (zero) to allow an unlimited number of spill files. master session reload
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_files_per_query
     * Default value is 10000
     * </pre>
     *
     * <code>.google.protobuf.Int64Value gp_workfile_limit_files_per_query = 5;</code>
     */
    com.google.protobuf.Int64Value getGpWorkfileLimitFilesPerQuery();
    /**
     * <pre>
     * Sets the maximum number of temporary spill files (also known as workfiles) allowed per query per segment.
     * Spill files are created when executing a query that requires more memory than it is allocated.
     * The current query is terminated when the limit is exceeded.
     * Set the value to 0 (zero) to allow an unlimited number of spill files. master session reload
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_files_per_query
     * Default value is 10000
     * </pre>
     *
     * <code>.google.protobuf.Int64Value gp_workfile_limit_files_per_query = 5;</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getGpWorkfileLimitFilesPerQueryOrBuilder();

    /**
     * <pre>
     * Sets the maximum number of transactions that can be in the "prepared" state simultaneously
     * https://www.postgresql.org/docs/9.6/runtime-config-resource.html
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_prepared_transactions = 6;</code>
     */
    boolean hasMaxPreparedTransactions();
    /**
     * <pre>
     * Sets the maximum number of transactions that can be in the "prepared" state simultaneously
     * https://www.postgresql.org/docs/9.6/runtime-config-resource.html
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_prepared_transactions = 6;</code>
     */
    com.google.protobuf.Int64Value getMaxPreparedTransactions();
    /**
     * <pre>
     * Sets the maximum number of transactions that can be in the "prepared" state simultaneously
     * https://www.postgresql.org/docs/9.6/runtime-config-resource.html
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_prepared_transactions = 6;</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getMaxPreparedTransactionsOrBuilder();

    /**
     * <pre>
     * Specifies whether the temporary files created, when a hash aggregation or hash join operation spills to disk, are compressed.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_compression
     * </pre>
     *
     * <code>.google.protobuf.BoolValue gp_workfile_compression = 7;</code>
     */
    boolean hasGpWorkfileCompression();
    /**
     * <pre>
     * Specifies whether the temporary files created, when a hash aggregation or hash join operation spills to disk, are compressed.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_compression
     * </pre>
     *
     * <code>.google.protobuf.BoolValue gp_workfile_compression = 7;</code>
     */
    com.google.protobuf.BoolValue getGpWorkfileCompression();
    /**
     * <pre>
     * Specifies whether the temporary files created, when a hash aggregation or hash join operation spills to disk, are compressed.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_compression
     * </pre>
     *
     * <code>.google.protobuf.BoolValue gp_workfile_compression = 7;</code>
     */
    com.google.protobuf.BoolValueOrBuilder getGpWorkfileCompressionOrBuilder();
  }
  /**
   * Protobuf type {@code yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_19}
   */
  public  static final class GreenplumConfig6_19 extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_19)
      GreenplumConfig6_19OrBuilder {
  private static final long serialVersionUID = 0L;
    // Use GreenplumConfig6_19.newBuilder() to construct.
    private GreenplumConfig6_19(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GreenplumConfig6_19() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private GreenplumConfig6_19(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (maxConnections_ != null) {
                subBuilder = maxConnections_.toBuilder();
              }
              maxConnections_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(maxConnections_);
                maxConnections_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (maxSlotWalKeepSize_ != null) {
                subBuilder = maxSlotWalKeepSize_.toBuilder();
              }
              maxSlotWalKeepSize_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(maxSlotWalKeepSize_);
                maxSlotWalKeepSize_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (gpWorkfileLimitPerSegment_ != null) {
                subBuilder = gpWorkfileLimitPerSegment_.toBuilder();
              }
              gpWorkfileLimitPerSegment_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(gpWorkfileLimitPerSegment_);
                gpWorkfileLimitPerSegment_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (gpWorkfileLimitPerQuery_ != null) {
                subBuilder = gpWorkfileLimitPerQuery_.toBuilder();
              }
              gpWorkfileLimitPerQuery_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(gpWorkfileLimitPerQuery_);
                gpWorkfileLimitPerQuery_ = subBuilder.buildPartial();
              }

              break;
            }
            case 42: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (gpWorkfileLimitFilesPerQuery_ != null) {
                subBuilder = gpWorkfileLimitFilesPerQuery_.toBuilder();
              }
              gpWorkfileLimitFilesPerQuery_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(gpWorkfileLimitFilesPerQuery_);
                gpWorkfileLimitFilesPerQuery_ = subBuilder.buildPartial();
              }

              break;
            }
            case 50: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (maxPreparedTransactions_ != null) {
                subBuilder = maxPreparedTransactions_.toBuilder();
              }
              maxPreparedTransactions_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(maxPreparedTransactions_);
                maxPreparedTransactions_ = subBuilder.buildPartial();
              }

              break;
            }
            case 58: {
              com.google.protobuf.BoolValue.Builder subBuilder = null;
              if (gpWorkfileCompression_ != null) {
                subBuilder = gpWorkfileCompression_.toBuilder();
              }
              gpWorkfileCompression_ = input.readMessage(com.google.protobuf.BoolValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(gpWorkfileCompression_);
                gpWorkfileCompression_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return yandex.cloud.api.mdb.greenplum.v1.Config.internal_static_yandex_cloud_mdb_greenplum_v1_GreenplumConfig6_19_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return yandex.cloud.api.mdb.greenplum.v1.Config.internal_static_yandex_cloud_mdb_greenplum_v1_GreenplumConfig6_19_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19.class, yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19.Builder.class);
    }

    public static final int MAX_CONNECTIONS_FIELD_NUMBER = 1;
    private com.google.protobuf.Int64Value maxConnections_;
    /**
     * <pre>
     * Maximum number of inbound connections on master segment
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_connections = 1;</code>
     */
    public boolean hasMaxConnections() {
      return maxConnections_ != null;
    }
    /**
     * <pre>
     * Maximum number of inbound connections on master segment
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_connections = 1;</code>
     */
    public com.google.protobuf.Int64Value getMaxConnections() {
      return maxConnections_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : maxConnections_;
    }
    /**
     * <pre>
     * Maximum number of inbound connections on master segment
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_connections = 1;</code>
     */
    public com.google.protobuf.Int64ValueOrBuilder getMaxConnectionsOrBuilder() {
      return getMaxConnections();
    }

    public static final int MAX_SLOT_WAL_KEEP_SIZE_FIELD_NUMBER = 2;
    private com.google.protobuf.Int64Value maxSlotWalKeepSize_;
    /**
     * <pre>
     * Specify the maximum size of WAL files that replication slots are allowed to retain in the pg_wal directory at checkpoint time.
     * https://www.postgresql.org/docs/current/runtime-config-replication.html
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_slot_wal_keep_size = 2;</code>
     */
    public boolean hasMaxSlotWalKeepSize() {
      return maxSlotWalKeepSize_ != null;
    }
    /**
     * <pre>
     * Specify the maximum size of WAL files that replication slots are allowed to retain in the pg_wal directory at checkpoint time.
     * https://www.postgresql.org/docs/current/runtime-config-replication.html
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_slot_wal_keep_size = 2;</code>
     */
    public com.google.protobuf.Int64Value getMaxSlotWalKeepSize() {
      return maxSlotWalKeepSize_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : maxSlotWalKeepSize_;
    }
    /**
     * <pre>
     * Specify the maximum size of WAL files that replication slots are allowed to retain in the pg_wal directory at checkpoint time.
     * https://www.postgresql.org/docs/current/runtime-config-replication.html
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_slot_wal_keep_size = 2;</code>
     */
    public com.google.protobuf.Int64ValueOrBuilder getMaxSlotWalKeepSizeOrBuilder() {
      return getMaxSlotWalKeepSize();
    }

    public static final int GP_WORKFILE_LIMIT_PER_SEGMENT_FIELD_NUMBER = 3;
    private com.google.protobuf.Int64Value gpWorkfileLimitPerSegment_;
    /**
     * <pre>
     * Sets the maximum total disk size that all running queries are allowed to use for creating temporary spill files at each segment.
     * The default value is 0, which means a limit is not enforced.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_segment
     * </pre>
     *
     * <code>.google.protobuf.Int64Value gp_workfile_limit_per_segment = 3;</code>
     */
    public boolean hasGpWorkfileLimitPerSegment() {
      return gpWorkfileLimitPerSegment_ != null;
    }
    /**
     * <pre>
     * Sets the maximum total disk size that all running queries are allowed to use for creating temporary spill files at each segment.
     * The default value is 0, which means a limit is not enforced.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_segment
     * </pre>
     *
     * <code>.google.protobuf.Int64Value gp_workfile_limit_per_segment = 3;</code>
     */
    public com.google.protobuf.Int64Value getGpWorkfileLimitPerSegment() {
      return gpWorkfileLimitPerSegment_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : gpWorkfileLimitPerSegment_;
    }
    /**
     * <pre>
     * Sets the maximum total disk size that all running queries are allowed to use for creating temporary spill files at each segment.
     * The default value is 0, which means a limit is not enforced.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_segment
     * </pre>
     *
     * <code>.google.protobuf.Int64Value gp_workfile_limit_per_segment = 3;</code>
     */
    public com.google.protobuf.Int64ValueOrBuilder getGpWorkfileLimitPerSegmentOrBuilder() {
      return getGpWorkfileLimitPerSegment();
    }

    public static final int GP_WORKFILE_LIMIT_PER_QUERY_FIELD_NUMBER = 4;
    private com.google.protobuf.Int64Value gpWorkfileLimitPerQuery_;
    /**
     * <pre>
     * Sets the maximum disk size an individual query is allowed to use for creating temporary spill files at each segment.
     * The default value is 0, which means a limit is not enforced.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_query
     * </pre>
     *
     * <code>.google.protobuf.Int64Value gp_workfile_limit_per_query = 4;</code>
     */
    public boolean hasGpWorkfileLimitPerQuery() {
      return gpWorkfileLimitPerQuery_ != null;
    }
    /**
     * <pre>
     * Sets the maximum disk size an individual query is allowed to use for creating temporary spill files at each segment.
     * The default value is 0, which means a limit is not enforced.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_query
     * </pre>
     *
     * <code>.google.protobuf.Int64Value gp_workfile_limit_per_query = 4;</code>
     */
    public com.google.protobuf.Int64Value getGpWorkfileLimitPerQuery() {
      return gpWorkfileLimitPerQuery_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : gpWorkfileLimitPerQuery_;
    }
    /**
     * <pre>
     * Sets the maximum disk size an individual query is allowed to use for creating temporary spill files at each segment.
     * The default value is 0, which means a limit is not enforced.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_query
     * </pre>
     *
     * <code>.google.protobuf.Int64Value gp_workfile_limit_per_query = 4;</code>
     */
    public com.google.protobuf.Int64ValueOrBuilder getGpWorkfileLimitPerQueryOrBuilder() {
      return getGpWorkfileLimitPerQuery();
    }

    public static final int GP_WORKFILE_LIMIT_FILES_PER_QUERY_FIELD_NUMBER = 5;
    private com.google.protobuf.Int64Value gpWorkfileLimitFilesPerQuery_;
    /**
     * <pre>
     * Sets the maximum number of temporary spill files (also known as workfiles) allowed per query per segment.
     * Spill files are created when executing a query that requires more memory than it is allocated.
     * The current query is terminated when the limit is exceeded.
     * Set the value to 0 (zero) to allow an unlimited number of spill files. master session reload
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_files_per_query
     * Default value is 10000
     * </pre>
     *
     * <code>.google.protobuf.Int64Value gp_workfile_limit_files_per_query = 5;</code>
     */
    public boolean hasGpWorkfileLimitFilesPerQuery() {
      return gpWorkfileLimitFilesPerQuery_ != null;
    }
    /**
     * <pre>
     * Sets the maximum number of temporary spill files (also known as workfiles) allowed per query per segment.
     * Spill files are created when executing a query that requires more memory than it is allocated.
     * The current query is terminated when the limit is exceeded.
     * Set the value to 0 (zero) to allow an unlimited number of spill files. master session reload
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_files_per_query
     * Default value is 10000
     * </pre>
     *
     * <code>.google.protobuf.Int64Value gp_workfile_limit_files_per_query = 5;</code>
     */
    public com.google.protobuf.Int64Value getGpWorkfileLimitFilesPerQuery() {
      return gpWorkfileLimitFilesPerQuery_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : gpWorkfileLimitFilesPerQuery_;
    }
    /**
     * <pre>
     * Sets the maximum number of temporary spill files (also known as workfiles) allowed per query per segment.
     * Spill files are created when executing a query that requires more memory than it is allocated.
     * The current query is terminated when the limit is exceeded.
     * Set the value to 0 (zero) to allow an unlimited number of spill files. master session reload
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_files_per_query
     * Default value is 10000
     * </pre>
     *
     * <code>.google.protobuf.Int64Value gp_workfile_limit_files_per_query = 5;</code>
     */
    public com.google.protobuf.Int64ValueOrBuilder getGpWorkfileLimitFilesPerQueryOrBuilder() {
      return getGpWorkfileLimitFilesPerQuery();
    }

    public static final int MAX_PREPARED_TRANSACTIONS_FIELD_NUMBER = 6;
    private com.google.protobuf.Int64Value maxPreparedTransactions_;
    /**
     * <pre>
     * Sets the maximum number of transactions that can be in the "prepared" state simultaneously
     * https://www.postgresql.org/docs/9.6/runtime-config-resource.html
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_prepared_transactions = 6;</code>
     */
    public boolean hasMaxPreparedTransactions() {
      return maxPreparedTransactions_ != null;
    }
    /**
     * <pre>
     * Sets the maximum number of transactions that can be in the "prepared" state simultaneously
     * https://www.postgresql.org/docs/9.6/runtime-config-resource.html
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_prepared_transactions = 6;</code>
     */
    public com.google.protobuf.Int64Value getMaxPreparedTransactions() {
      return maxPreparedTransactions_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : maxPreparedTransactions_;
    }
    /**
     * <pre>
     * Sets the maximum number of transactions that can be in the "prepared" state simultaneously
     * https://www.postgresql.org/docs/9.6/runtime-config-resource.html
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_prepared_transactions = 6;</code>
     */
    public com.google.protobuf.Int64ValueOrBuilder getMaxPreparedTransactionsOrBuilder() {
      return getMaxPreparedTransactions();
    }

    public static final int GP_WORKFILE_COMPRESSION_FIELD_NUMBER = 7;
    private com.google.protobuf.BoolValue gpWorkfileCompression_;
    /**
     * <pre>
     * Specifies whether the temporary files created, when a hash aggregation or hash join operation spills to disk, are compressed.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_compression
     * </pre>
     *
     * <code>.google.protobuf.BoolValue gp_workfile_compression = 7;</code>
     */
    public boolean hasGpWorkfileCompression() {
      return gpWorkfileCompression_ != null;
    }
    /**
     * <pre>
     * Specifies whether the temporary files created, when a hash aggregation or hash join operation spills to disk, are compressed.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_compression
     * </pre>
     *
     * <code>.google.protobuf.BoolValue gp_workfile_compression = 7;</code>
     */
    public com.google.protobuf.BoolValue getGpWorkfileCompression() {
      return gpWorkfileCompression_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : gpWorkfileCompression_;
    }
    /**
     * <pre>
     * Specifies whether the temporary files created, when a hash aggregation or hash join operation spills to disk, are compressed.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_compression
     * </pre>
     *
     * <code>.google.protobuf.BoolValue gp_workfile_compression = 7;</code>
     */
    public com.google.protobuf.BoolValueOrBuilder getGpWorkfileCompressionOrBuilder() {
      return getGpWorkfileCompression();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (maxConnections_ != null) {
        output.writeMessage(1, getMaxConnections());
      }
      if (maxSlotWalKeepSize_ != null) {
        output.writeMessage(2, getMaxSlotWalKeepSize());
      }
      if (gpWorkfileLimitPerSegment_ != null) {
        output.writeMessage(3, getGpWorkfileLimitPerSegment());
      }
      if (gpWorkfileLimitPerQuery_ != null) {
        output.writeMessage(4, getGpWorkfileLimitPerQuery());
      }
      if (gpWorkfileLimitFilesPerQuery_ != null) {
        output.writeMessage(5, getGpWorkfileLimitFilesPerQuery());
      }
      if (maxPreparedTransactions_ != null) {
        output.writeMessage(6, getMaxPreparedTransactions());
      }
      if (gpWorkfileCompression_ != null) {
        output.writeMessage(7, getGpWorkfileCompression());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (maxConnections_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getMaxConnections());
      }
      if (maxSlotWalKeepSize_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getMaxSlotWalKeepSize());
      }
      if (gpWorkfileLimitPerSegment_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getGpWorkfileLimitPerSegment());
      }
      if (gpWorkfileLimitPerQuery_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getGpWorkfileLimitPerQuery());
      }
      if (gpWorkfileLimitFilesPerQuery_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getGpWorkfileLimitFilesPerQuery());
      }
      if (maxPreparedTransactions_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getMaxPreparedTransactions());
      }
      if (gpWorkfileCompression_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getGpWorkfileCompression());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19)) {
        return super.equals(obj);
      }
      yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19 other = (yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19) obj;

      boolean result = true;
      result = result && (hasMaxConnections() == other.hasMaxConnections());
      if (hasMaxConnections()) {
        result = result && getMaxConnections()
            .equals(other.getMaxConnections());
      }
      result = result && (hasMaxSlotWalKeepSize() == other.hasMaxSlotWalKeepSize());
      if (hasMaxSlotWalKeepSize()) {
        result = result && getMaxSlotWalKeepSize()
            .equals(other.getMaxSlotWalKeepSize());
      }
      result = result && (hasGpWorkfileLimitPerSegment() == other.hasGpWorkfileLimitPerSegment());
      if (hasGpWorkfileLimitPerSegment()) {
        result = result && getGpWorkfileLimitPerSegment()
            .equals(other.getGpWorkfileLimitPerSegment());
      }
      result = result && (hasGpWorkfileLimitPerQuery() == other.hasGpWorkfileLimitPerQuery());
      if (hasGpWorkfileLimitPerQuery()) {
        result = result && getGpWorkfileLimitPerQuery()
            .equals(other.getGpWorkfileLimitPerQuery());
      }
      result = result && (hasGpWorkfileLimitFilesPerQuery() == other.hasGpWorkfileLimitFilesPerQuery());
      if (hasGpWorkfileLimitFilesPerQuery()) {
        result = result && getGpWorkfileLimitFilesPerQuery()
            .equals(other.getGpWorkfileLimitFilesPerQuery());
      }
      result = result && (hasMaxPreparedTransactions() == other.hasMaxPreparedTransactions());
      if (hasMaxPreparedTransactions()) {
        result = result && getMaxPreparedTransactions()
            .equals(other.getMaxPreparedTransactions());
      }
      result = result && (hasGpWorkfileCompression() == other.hasGpWorkfileCompression());
      if (hasGpWorkfileCompression()) {
        result = result && getGpWorkfileCompression()
            .equals(other.getGpWorkfileCompression());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasMaxConnections()) {
        hash = (37 * hash) + MAX_CONNECTIONS_FIELD_NUMBER;
        hash = (53 * hash) + getMaxConnections().hashCode();
      }
      if (hasMaxSlotWalKeepSize()) {
        hash = (37 * hash) + MAX_SLOT_WAL_KEEP_SIZE_FIELD_NUMBER;
        hash = (53 * hash) + getMaxSlotWalKeepSize().hashCode();
      }
      if (hasGpWorkfileLimitPerSegment()) {
        hash = (37 * hash) + GP_WORKFILE_LIMIT_PER_SEGMENT_FIELD_NUMBER;
        hash = (53 * hash) + getGpWorkfileLimitPerSegment().hashCode();
      }
      if (hasGpWorkfileLimitPerQuery()) {
        hash = (37 * hash) + GP_WORKFILE_LIMIT_PER_QUERY_FIELD_NUMBER;
        hash = (53 * hash) + getGpWorkfileLimitPerQuery().hashCode();
      }
      if (hasGpWorkfileLimitFilesPerQuery()) {
        hash = (37 * hash) + GP_WORKFILE_LIMIT_FILES_PER_QUERY_FIELD_NUMBER;
        hash = (53 * hash) + getGpWorkfileLimitFilesPerQuery().hashCode();
      }
      if (hasMaxPreparedTransactions()) {
        hash = (37 * hash) + MAX_PREPARED_TRANSACTIONS_FIELD_NUMBER;
        hash = (53 * hash) + getMaxPreparedTransactions().hashCode();
      }
      if (hasGpWorkfileCompression()) {
        hash = (37 * hash) + GP_WORKFILE_COMPRESSION_FIELD_NUMBER;
        hash = (53 * hash) + getGpWorkfileCompression().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19 parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19 parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19 parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19 parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19 parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19 parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19 parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19 parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19 parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19 parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19 parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19 parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19 prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_19}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_19)
        yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19OrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return yandex.cloud.api.mdb.greenplum.v1.Config.internal_static_yandex_cloud_mdb_greenplum_v1_GreenplumConfig6_19_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return yandex.cloud.api.mdb.greenplum.v1.Config.internal_static_yandex_cloud_mdb_greenplum_v1_GreenplumConfig6_19_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19.class, yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19.Builder.class);
      }

      // Construct using yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (maxConnectionsBuilder_ == null) {
          maxConnections_ = null;
        } else {
          maxConnections_ = null;
          maxConnectionsBuilder_ = null;
        }
        if (maxSlotWalKeepSizeBuilder_ == null) {
          maxSlotWalKeepSize_ = null;
        } else {
          maxSlotWalKeepSize_ = null;
          maxSlotWalKeepSizeBuilder_ = null;
        }
        if (gpWorkfileLimitPerSegmentBuilder_ == null) {
          gpWorkfileLimitPerSegment_ = null;
        } else {
          gpWorkfileLimitPerSegment_ = null;
          gpWorkfileLimitPerSegmentBuilder_ = null;
        }
        if (gpWorkfileLimitPerQueryBuilder_ == null) {
          gpWorkfileLimitPerQuery_ = null;
        } else {
          gpWorkfileLimitPerQuery_ = null;
          gpWorkfileLimitPerQueryBuilder_ = null;
        }
        if (gpWorkfileLimitFilesPerQueryBuilder_ == null) {
          gpWorkfileLimitFilesPerQuery_ = null;
        } else {
          gpWorkfileLimitFilesPerQuery_ = null;
          gpWorkfileLimitFilesPerQueryBuilder_ = null;
        }
        if (maxPreparedTransactionsBuilder_ == null) {
          maxPreparedTransactions_ = null;
        } else {
          maxPreparedTransactions_ = null;
          maxPreparedTransactionsBuilder_ = null;
        }
        if (gpWorkfileCompressionBuilder_ == null) {
          gpWorkfileCompression_ = null;
        } else {
          gpWorkfileCompression_ = null;
          gpWorkfileCompressionBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return yandex.cloud.api.mdb.greenplum.v1.Config.internal_static_yandex_cloud_mdb_greenplum_v1_GreenplumConfig6_19_descriptor;
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19 getDefaultInstanceForType() {
        return yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19.getDefaultInstance();
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19 build() {
        yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19 result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19 buildPartial() {
        yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19 result = new yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19(this);
        if (maxConnectionsBuilder_ == null) {
          result.maxConnections_ = maxConnections_;
        } else {
          result.maxConnections_ = maxConnectionsBuilder_.build();
        }
        if (maxSlotWalKeepSizeBuilder_ == null) {
          result.maxSlotWalKeepSize_ = maxSlotWalKeepSize_;
        } else {
          result.maxSlotWalKeepSize_ = maxSlotWalKeepSizeBuilder_.build();
        }
        if (gpWorkfileLimitPerSegmentBuilder_ == null) {
          result.gpWorkfileLimitPerSegment_ = gpWorkfileLimitPerSegment_;
        } else {
          result.gpWorkfileLimitPerSegment_ = gpWorkfileLimitPerSegmentBuilder_.build();
        }
        if (gpWorkfileLimitPerQueryBuilder_ == null) {
          result.gpWorkfileLimitPerQuery_ = gpWorkfileLimitPerQuery_;
        } else {
          result.gpWorkfileLimitPerQuery_ = gpWorkfileLimitPerQueryBuilder_.build();
        }
        if (gpWorkfileLimitFilesPerQueryBuilder_ == null) {
          result.gpWorkfileLimitFilesPerQuery_ = gpWorkfileLimitFilesPerQuery_;
        } else {
          result.gpWorkfileLimitFilesPerQuery_ = gpWorkfileLimitFilesPerQueryBuilder_.build();
        }
        if (maxPreparedTransactionsBuilder_ == null) {
          result.maxPreparedTransactions_ = maxPreparedTransactions_;
        } else {
          result.maxPreparedTransactions_ = maxPreparedTransactionsBuilder_.build();
        }
        if (gpWorkfileCompressionBuilder_ == null) {
          result.gpWorkfileCompression_ = gpWorkfileCompression_;
        } else {
          result.gpWorkfileCompression_ = gpWorkfileCompressionBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19) {
          return mergeFrom((yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19 other) {
        if (other == yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19.getDefaultInstance()) return this;
        if (other.hasMaxConnections()) {
          mergeMaxConnections(other.getMaxConnections());
        }
        if (other.hasMaxSlotWalKeepSize()) {
          mergeMaxSlotWalKeepSize(other.getMaxSlotWalKeepSize());
        }
        if (other.hasGpWorkfileLimitPerSegment()) {
          mergeGpWorkfileLimitPerSegment(other.getGpWorkfileLimitPerSegment());
        }
        if (other.hasGpWorkfileLimitPerQuery()) {
          mergeGpWorkfileLimitPerQuery(other.getGpWorkfileLimitPerQuery());
        }
        if (other.hasGpWorkfileLimitFilesPerQuery()) {
          mergeGpWorkfileLimitFilesPerQuery(other.getGpWorkfileLimitFilesPerQuery());
        }
        if (other.hasMaxPreparedTransactions()) {
          mergeMaxPreparedTransactions(other.getMaxPreparedTransactions());
        }
        if (other.hasGpWorkfileCompression()) {
          mergeGpWorkfileCompression(other.getGpWorkfileCompression());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19 parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.google.protobuf.Int64Value maxConnections_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> maxConnectionsBuilder_;
      /**
       * <pre>
       * Maximum number of inbound connections on master segment
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_connections = 1;</code>
       */
      public boolean hasMaxConnections() {
        return maxConnectionsBuilder_ != null || maxConnections_ != null;
      }
      /**
       * <pre>
       * Maximum number of inbound connections on master segment
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_connections = 1;</code>
       */
      public com.google.protobuf.Int64Value getMaxConnections() {
        if (maxConnectionsBuilder_ == null) {
          return maxConnections_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : maxConnections_;
        } else {
          return maxConnectionsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Maximum number of inbound connections on master segment
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_connections = 1;</code>
       */
      public Builder setMaxConnections(com.google.protobuf.Int64Value value) {
        if (maxConnectionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          maxConnections_ = value;
          onChanged();
        } else {
          maxConnectionsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Maximum number of inbound connections on master segment
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_connections = 1;</code>
       */
      public Builder setMaxConnections(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (maxConnectionsBuilder_ == null) {
          maxConnections_ = builderForValue.build();
          onChanged();
        } else {
          maxConnectionsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Maximum number of inbound connections on master segment
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_connections = 1;</code>
       */
      public Builder mergeMaxConnections(com.google.protobuf.Int64Value value) {
        if (maxConnectionsBuilder_ == null) {
          if (maxConnections_ != null) {
            maxConnections_ =
              com.google.protobuf.Int64Value.newBuilder(maxConnections_).mergeFrom(value).buildPartial();
          } else {
            maxConnections_ = value;
          }
          onChanged();
        } else {
          maxConnectionsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Maximum number of inbound connections on master segment
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_connections = 1;</code>
       */
      public Builder clearMaxConnections() {
        if (maxConnectionsBuilder_ == null) {
          maxConnections_ = null;
          onChanged();
        } else {
          maxConnections_ = null;
          maxConnectionsBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Maximum number of inbound connections on master segment
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_connections = 1;</code>
       */
      public com.google.protobuf.Int64Value.Builder getMaxConnectionsBuilder() {
        
        onChanged();
        return getMaxConnectionsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Maximum number of inbound connections on master segment
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_connections = 1;</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getMaxConnectionsOrBuilder() {
        if (maxConnectionsBuilder_ != null) {
          return maxConnectionsBuilder_.getMessageOrBuilder();
        } else {
          return maxConnections_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : maxConnections_;
        }
      }
      /**
       * <pre>
       * Maximum number of inbound connections on master segment
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_connections = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getMaxConnectionsFieldBuilder() {
        if (maxConnectionsBuilder_ == null) {
          maxConnectionsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getMaxConnections(),
                  getParentForChildren(),
                  isClean());
          maxConnections_ = null;
        }
        return maxConnectionsBuilder_;
      }

      private com.google.protobuf.Int64Value maxSlotWalKeepSize_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> maxSlotWalKeepSizeBuilder_;
      /**
       * <pre>
       * Specify the maximum size of WAL files that replication slots are allowed to retain in the pg_wal directory at checkpoint time.
       * https://www.postgresql.org/docs/current/runtime-config-replication.html
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_slot_wal_keep_size = 2;</code>
       */
      public boolean hasMaxSlotWalKeepSize() {
        return maxSlotWalKeepSizeBuilder_ != null || maxSlotWalKeepSize_ != null;
      }
      /**
       * <pre>
       * Specify the maximum size of WAL files that replication slots are allowed to retain in the pg_wal directory at checkpoint time.
       * https://www.postgresql.org/docs/current/runtime-config-replication.html
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_slot_wal_keep_size = 2;</code>
       */
      public com.google.protobuf.Int64Value getMaxSlotWalKeepSize() {
        if (maxSlotWalKeepSizeBuilder_ == null) {
          return maxSlotWalKeepSize_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : maxSlotWalKeepSize_;
        } else {
          return maxSlotWalKeepSizeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Specify the maximum size of WAL files that replication slots are allowed to retain in the pg_wal directory at checkpoint time.
       * https://www.postgresql.org/docs/current/runtime-config-replication.html
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_slot_wal_keep_size = 2;</code>
       */
      public Builder setMaxSlotWalKeepSize(com.google.protobuf.Int64Value value) {
        if (maxSlotWalKeepSizeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          maxSlotWalKeepSize_ = value;
          onChanged();
        } else {
          maxSlotWalKeepSizeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Specify the maximum size of WAL files that replication slots are allowed to retain in the pg_wal directory at checkpoint time.
       * https://www.postgresql.org/docs/current/runtime-config-replication.html
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_slot_wal_keep_size = 2;</code>
       */
      public Builder setMaxSlotWalKeepSize(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (maxSlotWalKeepSizeBuilder_ == null) {
          maxSlotWalKeepSize_ = builderForValue.build();
          onChanged();
        } else {
          maxSlotWalKeepSizeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Specify the maximum size of WAL files that replication slots are allowed to retain in the pg_wal directory at checkpoint time.
       * https://www.postgresql.org/docs/current/runtime-config-replication.html
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_slot_wal_keep_size = 2;</code>
       */
      public Builder mergeMaxSlotWalKeepSize(com.google.protobuf.Int64Value value) {
        if (maxSlotWalKeepSizeBuilder_ == null) {
          if (maxSlotWalKeepSize_ != null) {
            maxSlotWalKeepSize_ =
              com.google.protobuf.Int64Value.newBuilder(maxSlotWalKeepSize_).mergeFrom(value).buildPartial();
          } else {
            maxSlotWalKeepSize_ = value;
          }
          onChanged();
        } else {
          maxSlotWalKeepSizeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Specify the maximum size of WAL files that replication slots are allowed to retain in the pg_wal directory at checkpoint time.
       * https://www.postgresql.org/docs/current/runtime-config-replication.html
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_slot_wal_keep_size = 2;</code>
       */
      public Builder clearMaxSlotWalKeepSize() {
        if (maxSlotWalKeepSizeBuilder_ == null) {
          maxSlotWalKeepSize_ = null;
          onChanged();
        } else {
          maxSlotWalKeepSize_ = null;
          maxSlotWalKeepSizeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Specify the maximum size of WAL files that replication slots are allowed to retain in the pg_wal directory at checkpoint time.
       * https://www.postgresql.org/docs/current/runtime-config-replication.html
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_slot_wal_keep_size = 2;</code>
       */
      public com.google.protobuf.Int64Value.Builder getMaxSlotWalKeepSizeBuilder() {
        
        onChanged();
        return getMaxSlotWalKeepSizeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Specify the maximum size of WAL files that replication slots are allowed to retain in the pg_wal directory at checkpoint time.
       * https://www.postgresql.org/docs/current/runtime-config-replication.html
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_slot_wal_keep_size = 2;</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getMaxSlotWalKeepSizeOrBuilder() {
        if (maxSlotWalKeepSizeBuilder_ != null) {
          return maxSlotWalKeepSizeBuilder_.getMessageOrBuilder();
        } else {
          return maxSlotWalKeepSize_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : maxSlotWalKeepSize_;
        }
      }
      /**
       * <pre>
       * Specify the maximum size of WAL files that replication slots are allowed to retain in the pg_wal directory at checkpoint time.
       * https://www.postgresql.org/docs/current/runtime-config-replication.html
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_slot_wal_keep_size = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getMaxSlotWalKeepSizeFieldBuilder() {
        if (maxSlotWalKeepSizeBuilder_ == null) {
          maxSlotWalKeepSizeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getMaxSlotWalKeepSize(),
                  getParentForChildren(),
                  isClean());
          maxSlotWalKeepSize_ = null;
        }
        return maxSlotWalKeepSizeBuilder_;
      }

      private com.google.protobuf.Int64Value gpWorkfileLimitPerSegment_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> gpWorkfileLimitPerSegmentBuilder_;
      /**
       * <pre>
       * Sets the maximum total disk size that all running queries are allowed to use for creating temporary spill files at each segment.
       * The default value is 0, which means a limit is not enforced.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_segment
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_workfile_limit_per_segment = 3;</code>
       */
      public boolean hasGpWorkfileLimitPerSegment() {
        return gpWorkfileLimitPerSegmentBuilder_ != null || gpWorkfileLimitPerSegment_ != null;
      }
      /**
       * <pre>
       * Sets the maximum total disk size that all running queries are allowed to use for creating temporary spill files at each segment.
       * The default value is 0, which means a limit is not enforced.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_segment
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_workfile_limit_per_segment = 3;</code>
       */
      public com.google.protobuf.Int64Value getGpWorkfileLimitPerSegment() {
        if (gpWorkfileLimitPerSegmentBuilder_ == null) {
          return gpWorkfileLimitPerSegment_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : gpWorkfileLimitPerSegment_;
        } else {
          return gpWorkfileLimitPerSegmentBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Sets the maximum total disk size that all running queries are allowed to use for creating temporary spill files at each segment.
       * The default value is 0, which means a limit is not enforced.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_segment
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_workfile_limit_per_segment = 3;</code>
       */
      public Builder setGpWorkfileLimitPerSegment(com.google.protobuf.Int64Value value) {
        if (gpWorkfileLimitPerSegmentBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          gpWorkfileLimitPerSegment_ = value;
          onChanged();
        } else {
          gpWorkfileLimitPerSegmentBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Sets the maximum total disk size that all running queries are allowed to use for creating temporary spill files at each segment.
       * The default value is 0, which means a limit is not enforced.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_segment
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_workfile_limit_per_segment = 3;</code>
       */
      public Builder setGpWorkfileLimitPerSegment(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (gpWorkfileLimitPerSegmentBuilder_ == null) {
          gpWorkfileLimitPerSegment_ = builderForValue.build();
          onChanged();
        } else {
          gpWorkfileLimitPerSegmentBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Sets the maximum total disk size that all running queries are allowed to use for creating temporary spill files at each segment.
       * The default value is 0, which means a limit is not enforced.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_segment
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_workfile_limit_per_segment = 3;</code>
       */
      public Builder mergeGpWorkfileLimitPerSegment(com.google.protobuf.Int64Value value) {
        if (gpWorkfileLimitPerSegmentBuilder_ == null) {
          if (gpWorkfileLimitPerSegment_ != null) {
            gpWorkfileLimitPerSegment_ =
              com.google.protobuf.Int64Value.newBuilder(gpWorkfileLimitPerSegment_).mergeFrom(value).buildPartial();
          } else {
            gpWorkfileLimitPerSegment_ = value;
          }
          onChanged();
        } else {
          gpWorkfileLimitPerSegmentBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Sets the maximum total disk size that all running queries are allowed to use for creating temporary spill files at each segment.
       * The default value is 0, which means a limit is not enforced.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_segment
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_workfile_limit_per_segment = 3;</code>
       */
      public Builder clearGpWorkfileLimitPerSegment() {
        if (gpWorkfileLimitPerSegmentBuilder_ == null) {
          gpWorkfileLimitPerSegment_ = null;
          onChanged();
        } else {
          gpWorkfileLimitPerSegment_ = null;
          gpWorkfileLimitPerSegmentBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Sets the maximum total disk size that all running queries are allowed to use for creating temporary spill files at each segment.
       * The default value is 0, which means a limit is not enforced.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_segment
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_workfile_limit_per_segment = 3;</code>
       */
      public com.google.protobuf.Int64Value.Builder getGpWorkfileLimitPerSegmentBuilder() {
        
        onChanged();
        return getGpWorkfileLimitPerSegmentFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Sets the maximum total disk size that all running queries are allowed to use for creating temporary spill files at each segment.
       * The default value is 0, which means a limit is not enforced.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_segment
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_workfile_limit_per_segment = 3;</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getGpWorkfileLimitPerSegmentOrBuilder() {
        if (gpWorkfileLimitPerSegmentBuilder_ != null) {
          return gpWorkfileLimitPerSegmentBuilder_.getMessageOrBuilder();
        } else {
          return gpWorkfileLimitPerSegment_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : gpWorkfileLimitPerSegment_;
        }
      }
      /**
       * <pre>
       * Sets the maximum total disk size that all running queries are allowed to use for creating temporary spill files at each segment.
       * The default value is 0, which means a limit is not enforced.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_segment
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_workfile_limit_per_segment = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getGpWorkfileLimitPerSegmentFieldBuilder() {
        if (gpWorkfileLimitPerSegmentBuilder_ == null) {
          gpWorkfileLimitPerSegmentBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getGpWorkfileLimitPerSegment(),
                  getParentForChildren(),
                  isClean());
          gpWorkfileLimitPerSegment_ = null;
        }
        return gpWorkfileLimitPerSegmentBuilder_;
      }

      private com.google.protobuf.Int64Value gpWorkfileLimitPerQuery_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> gpWorkfileLimitPerQueryBuilder_;
      /**
       * <pre>
       * Sets the maximum disk size an individual query is allowed to use for creating temporary spill files at each segment.
       * The default value is 0, which means a limit is not enforced.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_query
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_workfile_limit_per_query = 4;</code>
       */
      public boolean hasGpWorkfileLimitPerQuery() {
        return gpWorkfileLimitPerQueryBuilder_ != null || gpWorkfileLimitPerQuery_ != null;
      }
      /**
       * <pre>
       * Sets the maximum disk size an individual query is allowed to use for creating temporary spill files at each segment.
       * The default value is 0, which means a limit is not enforced.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_query
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_workfile_limit_per_query = 4;</code>
       */
      public com.google.protobuf.Int64Value getGpWorkfileLimitPerQuery() {
        if (gpWorkfileLimitPerQueryBuilder_ == null) {
          return gpWorkfileLimitPerQuery_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : gpWorkfileLimitPerQuery_;
        } else {
          return gpWorkfileLimitPerQueryBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Sets the maximum disk size an individual query is allowed to use for creating temporary spill files at each segment.
       * The default value is 0, which means a limit is not enforced.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_query
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_workfile_limit_per_query = 4;</code>
       */
      public Builder setGpWorkfileLimitPerQuery(com.google.protobuf.Int64Value value) {
        if (gpWorkfileLimitPerQueryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          gpWorkfileLimitPerQuery_ = value;
          onChanged();
        } else {
          gpWorkfileLimitPerQueryBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Sets the maximum disk size an individual query is allowed to use for creating temporary spill files at each segment.
       * The default value is 0, which means a limit is not enforced.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_query
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_workfile_limit_per_query = 4;</code>
       */
      public Builder setGpWorkfileLimitPerQuery(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (gpWorkfileLimitPerQueryBuilder_ == null) {
          gpWorkfileLimitPerQuery_ = builderForValue.build();
          onChanged();
        } else {
          gpWorkfileLimitPerQueryBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Sets the maximum disk size an individual query is allowed to use for creating temporary spill files at each segment.
       * The default value is 0, which means a limit is not enforced.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_query
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_workfile_limit_per_query = 4;</code>
       */
      public Builder mergeGpWorkfileLimitPerQuery(com.google.protobuf.Int64Value value) {
        if (gpWorkfileLimitPerQueryBuilder_ == null) {
          if (gpWorkfileLimitPerQuery_ != null) {
            gpWorkfileLimitPerQuery_ =
              com.google.protobuf.Int64Value.newBuilder(gpWorkfileLimitPerQuery_).mergeFrom(value).buildPartial();
          } else {
            gpWorkfileLimitPerQuery_ = value;
          }
          onChanged();
        } else {
          gpWorkfileLimitPerQueryBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Sets the maximum disk size an individual query is allowed to use for creating temporary spill files at each segment.
       * The default value is 0, which means a limit is not enforced.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_query
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_workfile_limit_per_query = 4;</code>
       */
      public Builder clearGpWorkfileLimitPerQuery() {
        if (gpWorkfileLimitPerQueryBuilder_ == null) {
          gpWorkfileLimitPerQuery_ = null;
          onChanged();
        } else {
          gpWorkfileLimitPerQuery_ = null;
          gpWorkfileLimitPerQueryBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Sets the maximum disk size an individual query is allowed to use for creating temporary spill files at each segment.
       * The default value is 0, which means a limit is not enforced.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_query
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_workfile_limit_per_query = 4;</code>
       */
      public com.google.protobuf.Int64Value.Builder getGpWorkfileLimitPerQueryBuilder() {
        
        onChanged();
        return getGpWorkfileLimitPerQueryFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Sets the maximum disk size an individual query is allowed to use for creating temporary spill files at each segment.
       * The default value is 0, which means a limit is not enforced.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_query
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_workfile_limit_per_query = 4;</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getGpWorkfileLimitPerQueryOrBuilder() {
        if (gpWorkfileLimitPerQueryBuilder_ != null) {
          return gpWorkfileLimitPerQueryBuilder_.getMessageOrBuilder();
        } else {
          return gpWorkfileLimitPerQuery_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : gpWorkfileLimitPerQuery_;
        }
      }
      /**
       * <pre>
       * Sets the maximum disk size an individual query is allowed to use for creating temporary spill files at each segment.
       * The default value is 0, which means a limit is not enforced.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_query
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_workfile_limit_per_query = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getGpWorkfileLimitPerQueryFieldBuilder() {
        if (gpWorkfileLimitPerQueryBuilder_ == null) {
          gpWorkfileLimitPerQueryBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getGpWorkfileLimitPerQuery(),
                  getParentForChildren(),
                  isClean());
          gpWorkfileLimitPerQuery_ = null;
        }
        return gpWorkfileLimitPerQueryBuilder_;
      }

      private com.google.protobuf.Int64Value gpWorkfileLimitFilesPerQuery_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> gpWorkfileLimitFilesPerQueryBuilder_;
      /**
       * <pre>
       * Sets the maximum number of temporary spill files (also known as workfiles) allowed per query per segment.
       * Spill files are created when executing a query that requires more memory than it is allocated.
       * The current query is terminated when the limit is exceeded.
       * Set the value to 0 (zero) to allow an unlimited number of spill files. master session reload
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_files_per_query
       * Default value is 10000
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_workfile_limit_files_per_query = 5;</code>
       */
      public boolean hasGpWorkfileLimitFilesPerQuery() {
        return gpWorkfileLimitFilesPerQueryBuilder_ != null || gpWorkfileLimitFilesPerQuery_ != null;
      }
      /**
       * <pre>
       * Sets the maximum number of temporary spill files (also known as workfiles) allowed per query per segment.
       * Spill files are created when executing a query that requires more memory than it is allocated.
       * The current query is terminated when the limit is exceeded.
       * Set the value to 0 (zero) to allow an unlimited number of spill files. master session reload
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_files_per_query
       * Default value is 10000
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_workfile_limit_files_per_query = 5;</code>
       */
      public com.google.protobuf.Int64Value getGpWorkfileLimitFilesPerQuery() {
        if (gpWorkfileLimitFilesPerQueryBuilder_ == null) {
          return gpWorkfileLimitFilesPerQuery_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : gpWorkfileLimitFilesPerQuery_;
        } else {
          return gpWorkfileLimitFilesPerQueryBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Sets the maximum number of temporary spill files (also known as workfiles) allowed per query per segment.
       * Spill files are created when executing a query that requires more memory than it is allocated.
       * The current query is terminated when the limit is exceeded.
       * Set the value to 0 (zero) to allow an unlimited number of spill files. master session reload
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_files_per_query
       * Default value is 10000
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_workfile_limit_files_per_query = 5;</code>
       */
      public Builder setGpWorkfileLimitFilesPerQuery(com.google.protobuf.Int64Value value) {
        if (gpWorkfileLimitFilesPerQueryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          gpWorkfileLimitFilesPerQuery_ = value;
          onChanged();
        } else {
          gpWorkfileLimitFilesPerQueryBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Sets the maximum number of temporary spill files (also known as workfiles) allowed per query per segment.
       * Spill files are created when executing a query that requires more memory than it is allocated.
       * The current query is terminated when the limit is exceeded.
       * Set the value to 0 (zero) to allow an unlimited number of spill files. master session reload
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_files_per_query
       * Default value is 10000
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_workfile_limit_files_per_query = 5;</code>
       */
      public Builder setGpWorkfileLimitFilesPerQuery(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (gpWorkfileLimitFilesPerQueryBuilder_ == null) {
          gpWorkfileLimitFilesPerQuery_ = builderForValue.build();
          onChanged();
        } else {
          gpWorkfileLimitFilesPerQueryBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Sets the maximum number of temporary spill files (also known as workfiles) allowed per query per segment.
       * Spill files are created when executing a query that requires more memory than it is allocated.
       * The current query is terminated when the limit is exceeded.
       * Set the value to 0 (zero) to allow an unlimited number of spill files. master session reload
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_files_per_query
       * Default value is 10000
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_workfile_limit_files_per_query = 5;</code>
       */
      public Builder mergeGpWorkfileLimitFilesPerQuery(com.google.protobuf.Int64Value value) {
        if (gpWorkfileLimitFilesPerQueryBuilder_ == null) {
          if (gpWorkfileLimitFilesPerQuery_ != null) {
            gpWorkfileLimitFilesPerQuery_ =
              com.google.protobuf.Int64Value.newBuilder(gpWorkfileLimitFilesPerQuery_).mergeFrom(value).buildPartial();
          } else {
            gpWorkfileLimitFilesPerQuery_ = value;
          }
          onChanged();
        } else {
          gpWorkfileLimitFilesPerQueryBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Sets the maximum number of temporary spill files (also known as workfiles) allowed per query per segment.
       * Spill files are created when executing a query that requires more memory than it is allocated.
       * The current query is terminated when the limit is exceeded.
       * Set the value to 0 (zero) to allow an unlimited number of spill files. master session reload
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_files_per_query
       * Default value is 10000
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_workfile_limit_files_per_query = 5;</code>
       */
      public Builder clearGpWorkfileLimitFilesPerQuery() {
        if (gpWorkfileLimitFilesPerQueryBuilder_ == null) {
          gpWorkfileLimitFilesPerQuery_ = null;
          onChanged();
        } else {
          gpWorkfileLimitFilesPerQuery_ = null;
          gpWorkfileLimitFilesPerQueryBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Sets the maximum number of temporary spill files (also known as workfiles) allowed per query per segment.
       * Spill files are created when executing a query that requires more memory than it is allocated.
       * The current query is terminated when the limit is exceeded.
       * Set the value to 0 (zero) to allow an unlimited number of spill files. master session reload
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_files_per_query
       * Default value is 10000
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_workfile_limit_files_per_query = 5;</code>
       */
      public com.google.protobuf.Int64Value.Builder getGpWorkfileLimitFilesPerQueryBuilder() {
        
        onChanged();
        return getGpWorkfileLimitFilesPerQueryFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Sets the maximum number of temporary spill files (also known as workfiles) allowed per query per segment.
       * Spill files are created when executing a query that requires more memory than it is allocated.
       * The current query is terminated when the limit is exceeded.
       * Set the value to 0 (zero) to allow an unlimited number of spill files. master session reload
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_files_per_query
       * Default value is 10000
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_workfile_limit_files_per_query = 5;</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getGpWorkfileLimitFilesPerQueryOrBuilder() {
        if (gpWorkfileLimitFilesPerQueryBuilder_ != null) {
          return gpWorkfileLimitFilesPerQueryBuilder_.getMessageOrBuilder();
        } else {
          return gpWorkfileLimitFilesPerQuery_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : gpWorkfileLimitFilesPerQuery_;
        }
      }
      /**
       * <pre>
       * Sets the maximum number of temporary spill files (also known as workfiles) allowed per query per segment.
       * Spill files are created when executing a query that requires more memory than it is allocated.
       * The current query is terminated when the limit is exceeded.
       * Set the value to 0 (zero) to allow an unlimited number of spill files. master session reload
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_files_per_query
       * Default value is 10000
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_workfile_limit_files_per_query = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getGpWorkfileLimitFilesPerQueryFieldBuilder() {
        if (gpWorkfileLimitFilesPerQueryBuilder_ == null) {
          gpWorkfileLimitFilesPerQueryBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getGpWorkfileLimitFilesPerQuery(),
                  getParentForChildren(),
                  isClean());
          gpWorkfileLimitFilesPerQuery_ = null;
        }
        return gpWorkfileLimitFilesPerQueryBuilder_;
      }

      private com.google.protobuf.Int64Value maxPreparedTransactions_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> maxPreparedTransactionsBuilder_;
      /**
       * <pre>
       * Sets the maximum number of transactions that can be in the "prepared" state simultaneously
       * https://www.postgresql.org/docs/9.6/runtime-config-resource.html
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_prepared_transactions = 6;</code>
       */
      public boolean hasMaxPreparedTransactions() {
        return maxPreparedTransactionsBuilder_ != null || maxPreparedTransactions_ != null;
      }
      /**
       * <pre>
       * Sets the maximum number of transactions that can be in the "prepared" state simultaneously
       * https://www.postgresql.org/docs/9.6/runtime-config-resource.html
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_prepared_transactions = 6;</code>
       */
      public com.google.protobuf.Int64Value getMaxPreparedTransactions() {
        if (maxPreparedTransactionsBuilder_ == null) {
          return maxPreparedTransactions_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : maxPreparedTransactions_;
        } else {
          return maxPreparedTransactionsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Sets the maximum number of transactions that can be in the "prepared" state simultaneously
       * https://www.postgresql.org/docs/9.6/runtime-config-resource.html
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_prepared_transactions = 6;</code>
       */
      public Builder setMaxPreparedTransactions(com.google.protobuf.Int64Value value) {
        if (maxPreparedTransactionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          maxPreparedTransactions_ = value;
          onChanged();
        } else {
          maxPreparedTransactionsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Sets the maximum number of transactions that can be in the "prepared" state simultaneously
       * https://www.postgresql.org/docs/9.6/runtime-config-resource.html
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_prepared_transactions = 6;</code>
       */
      public Builder setMaxPreparedTransactions(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (maxPreparedTransactionsBuilder_ == null) {
          maxPreparedTransactions_ = builderForValue.build();
          onChanged();
        } else {
          maxPreparedTransactionsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Sets the maximum number of transactions that can be in the "prepared" state simultaneously
       * https://www.postgresql.org/docs/9.6/runtime-config-resource.html
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_prepared_transactions = 6;</code>
       */
      public Builder mergeMaxPreparedTransactions(com.google.protobuf.Int64Value value) {
        if (maxPreparedTransactionsBuilder_ == null) {
          if (maxPreparedTransactions_ != null) {
            maxPreparedTransactions_ =
              com.google.protobuf.Int64Value.newBuilder(maxPreparedTransactions_).mergeFrom(value).buildPartial();
          } else {
            maxPreparedTransactions_ = value;
          }
          onChanged();
        } else {
          maxPreparedTransactionsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Sets the maximum number of transactions that can be in the "prepared" state simultaneously
       * https://www.postgresql.org/docs/9.6/runtime-config-resource.html
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_prepared_transactions = 6;</code>
       */
      public Builder clearMaxPreparedTransactions() {
        if (maxPreparedTransactionsBuilder_ == null) {
          maxPreparedTransactions_ = null;
          onChanged();
        } else {
          maxPreparedTransactions_ = null;
          maxPreparedTransactionsBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Sets the maximum number of transactions that can be in the "prepared" state simultaneously
       * https://www.postgresql.org/docs/9.6/runtime-config-resource.html
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_prepared_transactions = 6;</code>
       */
      public com.google.protobuf.Int64Value.Builder getMaxPreparedTransactionsBuilder() {
        
        onChanged();
        return getMaxPreparedTransactionsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Sets the maximum number of transactions that can be in the "prepared" state simultaneously
       * https://www.postgresql.org/docs/9.6/runtime-config-resource.html
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_prepared_transactions = 6;</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getMaxPreparedTransactionsOrBuilder() {
        if (maxPreparedTransactionsBuilder_ != null) {
          return maxPreparedTransactionsBuilder_.getMessageOrBuilder();
        } else {
          return maxPreparedTransactions_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : maxPreparedTransactions_;
        }
      }
      /**
       * <pre>
       * Sets the maximum number of transactions that can be in the "prepared" state simultaneously
       * https://www.postgresql.org/docs/9.6/runtime-config-resource.html
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_prepared_transactions = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getMaxPreparedTransactionsFieldBuilder() {
        if (maxPreparedTransactionsBuilder_ == null) {
          maxPreparedTransactionsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getMaxPreparedTransactions(),
                  getParentForChildren(),
                  isClean());
          maxPreparedTransactions_ = null;
        }
        return maxPreparedTransactionsBuilder_;
      }

      private com.google.protobuf.BoolValue gpWorkfileCompression_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> gpWorkfileCompressionBuilder_;
      /**
       * <pre>
       * Specifies whether the temporary files created, when a hash aggregation or hash join operation spills to disk, are compressed.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_compression
       * </pre>
       *
       * <code>.google.protobuf.BoolValue gp_workfile_compression = 7;</code>
       */
      public boolean hasGpWorkfileCompression() {
        return gpWorkfileCompressionBuilder_ != null || gpWorkfileCompression_ != null;
      }
      /**
       * <pre>
       * Specifies whether the temporary files created, when a hash aggregation or hash join operation spills to disk, are compressed.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_compression
       * </pre>
       *
       * <code>.google.protobuf.BoolValue gp_workfile_compression = 7;</code>
       */
      public com.google.protobuf.BoolValue getGpWorkfileCompression() {
        if (gpWorkfileCompressionBuilder_ == null) {
          return gpWorkfileCompression_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : gpWorkfileCompression_;
        } else {
          return gpWorkfileCompressionBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Specifies whether the temporary files created, when a hash aggregation or hash join operation spills to disk, are compressed.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_compression
       * </pre>
       *
       * <code>.google.protobuf.BoolValue gp_workfile_compression = 7;</code>
       */
      public Builder setGpWorkfileCompression(com.google.protobuf.BoolValue value) {
        if (gpWorkfileCompressionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          gpWorkfileCompression_ = value;
          onChanged();
        } else {
          gpWorkfileCompressionBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Specifies whether the temporary files created, when a hash aggregation or hash join operation spills to disk, are compressed.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_compression
       * </pre>
       *
       * <code>.google.protobuf.BoolValue gp_workfile_compression = 7;</code>
       */
      public Builder setGpWorkfileCompression(
          com.google.protobuf.BoolValue.Builder builderForValue) {
        if (gpWorkfileCompressionBuilder_ == null) {
          gpWorkfileCompression_ = builderForValue.build();
          onChanged();
        } else {
          gpWorkfileCompressionBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Specifies whether the temporary files created, when a hash aggregation or hash join operation spills to disk, are compressed.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_compression
       * </pre>
       *
       * <code>.google.protobuf.BoolValue gp_workfile_compression = 7;</code>
       */
      public Builder mergeGpWorkfileCompression(com.google.protobuf.BoolValue value) {
        if (gpWorkfileCompressionBuilder_ == null) {
          if (gpWorkfileCompression_ != null) {
            gpWorkfileCompression_ =
              com.google.protobuf.BoolValue.newBuilder(gpWorkfileCompression_).mergeFrom(value).buildPartial();
          } else {
            gpWorkfileCompression_ = value;
          }
          onChanged();
        } else {
          gpWorkfileCompressionBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Specifies whether the temporary files created, when a hash aggregation or hash join operation spills to disk, are compressed.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_compression
       * </pre>
       *
       * <code>.google.protobuf.BoolValue gp_workfile_compression = 7;</code>
       */
      public Builder clearGpWorkfileCompression() {
        if (gpWorkfileCompressionBuilder_ == null) {
          gpWorkfileCompression_ = null;
          onChanged();
        } else {
          gpWorkfileCompression_ = null;
          gpWorkfileCompressionBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Specifies whether the temporary files created, when a hash aggregation or hash join operation spills to disk, are compressed.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_compression
       * </pre>
       *
       * <code>.google.protobuf.BoolValue gp_workfile_compression = 7;</code>
       */
      public com.google.protobuf.BoolValue.Builder getGpWorkfileCompressionBuilder() {
        
        onChanged();
        return getGpWorkfileCompressionFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Specifies whether the temporary files created, when a hash aggregation or hash join operation spills to disk, are compressed.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_compression
       * </pre>
       *
       * <code>.google.protobuf.BoolValue gp_workfile_compression = 7;</code>
       */
      public com.google.protobuf.BoolValueOrBuilder getGpWorkfileCompressionOrBuilder() {
        if (gpWorkfileCompressionBuilder_ != null) {
          return gpWorkfileCompressionBuilder_.getMessageOrBuilder();
        } else {
          return gpWorkfileCompression_ == null ?
              com.google.protobuf.BoolValue.getDefaultInstance() : gpWorkfileCompression_;
        }
      }
      /**
       * <pre>
       * Specifies whether the temporary files created, when a hash aggregation or hash join operation spills to disk, are compressed.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_compression
       * </pre>
       *
       * <code>.google.protobuf.BoolValue gp_workfile_compression = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> 
          getGpWorkfileCompressionFieldBuilder() {
        if (gpWorkfileCompressionBuilder_ == null) {
          gpWorkfileCompressionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder>(
                  getGpWorkfileCompression(),
                  getParentForChildren(),
                  isClean());
          gpWorkfileCompression_ = null;
        }
        return gpWorkfileCompressionBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_19)
    }

    // @@protoc_insertion_point(class_scope:yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_19)
    private static final yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19 DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19();
    }

    public static yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19 getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GreenplumConfig6_19>
        PARSER = new com.google.protobuf.AbstractParser<GreenplumConfig6_19>() {
      @java.lang.Override
      public GreenplumConfig6_19 parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GreenplumConfig6_19(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<GreenplumConfig6_19> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GreenplumConfig6_19> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19 getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GreenplumConfigSet6_17OrBuilder extends
      // @@protoc_insertion_point(interface_extends:yandex.cloud.mdb.greenplum.v1.GreenplumConfigSet6_17)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Effective settings for a Greenplum (a combination of settings defined
     * in [user_config] and [default_config]).
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_17 effective_config = 1 [(.yandex.cloud.required) = true];</code>
     */
    boolean hasEffectiveConfig();
    /**
     * <pre>
     * Effective settings for a Greenplum (a combination of settings defined
     * in [user_config] and [default_config]).
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_17 effective_config = 1 [(.yandex.cloud.required) = true];</code>
     */
    yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17 getEffectiveConfig();
    /**
     * <pre>
     * Effective settings for a Greenplum (a combination of settings defined
     * in [user_config] and [default_config]).
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_17 effective_config = 1 [(.yandex.cloud.required) = true];</code>
     */
    yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17OrBuilder getEffectiveConfigOrBuilder();

    /**
     * <pre>
     * User-defined settings for a Greenplum.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_17 user_config = 2;</code>
     */
    boolean hasUserConfig();
    /**
     * <pre>
     * User-defined settings for a Greenplum.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_17 user_config = 2;</code>
     */
    yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17 getUserConfig();
    /**
     * <pre>
     * User-defined settings for a Greenplum.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_17 user_config = 2;</code>
     */
    yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17OrBuilder getUserConfigOrBuilder();

    /**
     * <pre>
     * Default configuration for a Greenplum.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_17 default_config = 3;</code>
     */
    boolean hasDefaultConfig();
    /**
     * <pre>
     * Default configuration for a Greenplum.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_17 default_config = 3;</code>
     */
    yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17 getDefaultConfig();
    /**
     * <pre>
     * Default configuration for a Greenplum.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_17 default_config = 3;</code>
     */
    yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17OrBuilder getDefaultConfigOrBuilder();
  }
  /**
   * Protobuf type {@code yandex.cloud.mdb.greenplum.v1.GreenplumConfigSet6_17}
   */
  public  static final class GreenplumConfigSet6_17 extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:yandex.cloud.mdb.greenplum.v1.GreenplumConfigSet6_17)
      GreenplumConfigSet6_17OrBuilder {
  private static final long serialVersionUID = 0L;
    // Use GreenplumConfigSet6_17.newBuilder() to construct.
    private GreenplumConfigSet6_17(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GreenplumConfigSet6_17() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private GreenplumConfigSet6_17(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17.Builder subBuilder = null;
              if (effectiveConfig_ != null) {
                subBuilder = effectiveConfig_.toBuilder();
              }
              effectiveConfig_ = input.readMessage(yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(effectiveConfig_);
                effectiveConfig_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17.Builder subBuilder = null;
              if (userConfig_ != null) {
                subBuilder = userConfig_.toBuilder();
              }
              userConfig_ = input.readMessage(yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(userConfig_);
                userConfig_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17.Builder subBuilder = null;
              if (defaultConfig_ != null) {
                subBuilder = defaultConfig_.toBuilder();
              }
              defaultConfig_ = input.readMessage(yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(defaultConfig_);
                defaultConfig_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return yandex.cloud.api.mdb.greenplum.v1.Config.internal_static_yandex_cloud_mdb_greenplum_v1_GreenplumConfigSet6_17_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return yandex.cloud.api.mdb.greenplum.v1.Config.internal_static_yandex_cloud_mdb_greenplum_v1_GreenplumConfigSet6_17_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfigSet6_17.class, yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfigSet6_17.Builder.class);
    }

    public static final int EFFECTIVE_CONFIG_FIELD_NUMBER = 1;
    private yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17 effectiveConfig_;
    /**
     * <pre>
     * Effective settings for a Greenplum (a combination of settings defined
     * in [user_config] and [default_config]).
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_17 effective_config = 1 [(.yandex.cloud.required) = true];</code>
     */
    public boolean hasEffectiveConfig() {
      return effectiveConfig_ != null;
    }
    /**
     * <pre>
     * Effective settings for a Greenplum (a combination of settings defined
     * in [user_config] and [default_config]).
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_17 effective_config = 1 [(.yandex.cloud.required) = true];</code>
     */
    public yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17 getEffectiveConfig() {
      return effectiveConfig_ == null ? yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17.getDefaultInstance() : effectiveConfig_;
    }
    /**
     * <pre>
     * Effective settings for a Greenplum (a combination of settings defined
     * in [user_config] and [default_config]).
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_17 effective_config = 1 [(.yandex.cloud.required) = true];</code>
     */
    public yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17OrBuilder getEffectiveConfigOrBuilder() {
      return getEffectiveConfig();
    }

    public static final int USER_CONFIG_FIELD_NUMBER = 2;
    private yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17 userConfig_;
    /**
     * <pre>
     * User-defined settings for a Greenplum.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_17 user_config = 2;</code>
     */
    public boolean hasUserConfig() {
      return userConfig_ != null;
    }
    /**
     * <pre>
     * User-defined settings for a Greenplum.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_17 user_config = 2;</code>
     */
    public yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17 getUserConfig() {
      return userConfig_ == null ? yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17.getDefaultInstance() : userConfig_;
    }
    /**
     * <pre>
     * User-defined settings for a Greenplum.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_17 user_config = 2;</code>
     */
    public yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17OrBuilder getUserConfigOrBuilder() {
      return getUserConfig();
    }

    public static final int DEFAULT_CONFIG_FIELD_NUMBER = 3;
    private yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17 defaultConfig_;
    /**
     * <pre>
     * Default configuration for a Greenplum.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_17 default_config = 3;</code>
     */
    public boolean hasDefaultConfig() {
      return defaultConfig_ != null;
    }
    /**
     * <pre>
     * Default configuration for a Greenplum.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_17 default_config = 3;</code>
     */
    public yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17 getDefaultConfig() {
      return defaultConfig_ == null ? yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17.getDefaultInstance() : defaultConfig_;
    }
    /**
     * <pre>
     * Default configuration for a Greenplum.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_17 default_config = 3;</code>
     */
    public yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17OrBuilder getDefaultConfigOrBuilder() {
      return getDefaultConfig();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (effectiveConfig_ != null) {
        output.writeMessage(1, getEffectiveConfig());
      }
      if (userConfig_ != null) {
        output.writeMessage(2, getUserConfig());
      }
      if (defaultConfig_ != null) {
        output.writeMessage(3, getDefaultConfig());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (effectiveConfig_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getEffectiveConfig());
      }
      if (userConfig_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getUserConfig());
      }
      if (defaultConfig_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getDefaultConfig());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfigSet6_17)) {
        return super.equals(obj);
      }
      yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfigSet6_17 other = (yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfigSet6_17) obj;

      boolean result = true;
      result = result && (hasEffectiveConfig() == other.hasEffectiveConfig());
      if (hasEffectiveConfig()) {
        result = result && getEffectiveConfig()
            .equals(other.getEffectiveConfig());
      }
      result = result && (hasUserConfig() == other.hasUserConfig());
      if (hasUserConfig()) {
        result = result && getUserConfig()
            .equals(other.getUserConfig());
      }
      result = result && (hasDefaultConfig() == other.hasDefaultConfig());
      if (hasDefaultConfig()) {
        result = result && getDefaultConfig()
            .equals(other.getDefaultConfig());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasEffectiveConfig()) {
        hash = (37 * hash) + EFFECTIVE_CONFIG_FIELD_NUMBER;
        hash = (53 * hash) + getEffectiveConfig().hashCode();
      }
      if (hasUserConfig()) {
        hash = (37 * hash) + USER_CONFIG_FIELD_NUMBER;
        hash = (53 * hash) + getUserConfig().hashCode();
      }
      if (hasDefaultConfig()) {
        hash = (37 * hash) + DEFAULT_CONFIG_FIELD_NUMBER;
        hash = (53 * hash) + getDefaultConfig().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfigSet6_17 parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfigSet6_17 parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfigSet6_17 parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfigSet6_17 parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfigSet6_17 parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfigSet6_17 parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfigSet6_17 parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfigSet6_17 parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfigSet6_17 parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfigSet6_17 parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfigSet6_17 parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfigSet6_17 parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfigSet6_17 prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code yandex.cloud.mdb.greenplum.v1.GreenplumConfigSet6_17}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:yandex.cloud.mdb.greenplum.v1.GreenplumConfigSet6_17)
        yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfigSet6_17OrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return yandex.cloud.api.mdb.greenplum.v1.Config.internal_static_yandex_cloud_mdb_greenplum_v1_GreenplumConfigSet6_17_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return yandex.cloud.api.mdb.greenplum.v1.Config.internal_static_yandex_cloud_mdb_greenplum_v1_GreenplumConfigSet6_17_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfigSet6_17.class, yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfigSet6_17.Builder.class);
      }

      // Construct using yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfigSet6_17.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (effectiveConfigBuilder_ == null) {
          effectiveConfig_ = null;
        } else {
          effectiveConfig_ = null;
          effectiveConfigBuilder_ = null;
        }
        if (userConfigBuilder_ == null) {
          userConfig_ = null;
        } else {
          userConfig_ = null;
          userConfigBuilder_ = null;
        }
        if (defaultConfigBuilder_ == null) {
          defaultConfig_ = null;
        } else {
          defaultConfig_ = null;
          defaultConfigBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return yandex.cloud.api.mdb.greenplum.v1.Config.internal_static_yandex_cloud_mdb_greenplum_v1_GreenplumConfigSet6_17_descriptor;
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfigSet6_17 getDefaultInstanceForType() {
        return yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfigSet6_17.getDefaultInstance();
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfigSet6_17 build() {
        yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfigSet6_17 result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfigSet6_17 buildPartial() {
        yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfigSet6_17 result = new yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfigSet6_17(this);
        if (effectiveConfigBuilder_ == null) {
          result.effectiveConfig_ = effectiveConfig_;
        } else {
          result.effectiveConfig_ = effectiveConfigBuilder_.build();
        }
        if (userConfigBuilder_ == null) {
          result.userConfig_ = userConfig_;
        } else {
          result.userConfig_ = userConfigBuilder_.build();
        }
        if (defaultConfigBuilder_ == null) {
          result.defaultConfig_ = defaultConfig_;
        } else {
          result.defaultConfig_ = defaultConfigBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfigSet6_17) {
          return mergeFrom((yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfigSet6_17)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfigSet6_17 other) {
        if (other == yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfigSet6_17.getDefaultInstance()) return this;
        if (other.hasEffectiveConfig()) {
          mergeEffectiveConfig(other.getEffectiveConfig());
        }
        if (other.hasUserConfig()) {
          mergeUserConfig(other.getUserConfig());
        }
        if (other.hasDefaultConfig()) {
          mergeDefaultConfig(other.getDefaultConfig());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfigSet6_17 parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfigSet6_17) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17 effectiveConfig_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17, yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17.Builder, yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17OrBuilder> effectiveConfigBuilder_;
      /**
       * <pre>
       * Effective settings for a Greenplum (a combination of settings defined
       * in [user_config] and [default_config]).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_17 effective_config = 1 [(.yandex.cloud.required) = true];</code>
       */
      public boolean hasEffectiveConfig() {
        return effectiveConfigBuilder_ != null || effectiveConfig_ != null;
      }
      /**
       * <pre>
       * Effective settings for a Greenplum (a combination of settings defined
       * in [user_config] and [default_config]).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_17 effective_config = 1 [(.yandex.cloud.required) = true];</code>
       */
      public yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17 getEffectiveConfig() {
        if (effectiveConfigBuilder_ == null) {
          return effectiveConfig_ == null ? yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17.getDefaultInstance() : effectiveConfig_;
        } else {
          return effectiveConfigBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Effective settings for a Greenplum (a combination of settings defined
       * in [user_config] and [default_config]).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_17 effective_config = 1 [(.yandex.cloud.required) = true];</code>
       */
      public Builder setEffectiveConfig(yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17 value) {
        if (effectiveConfigBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          effectiveConfig_ = value;
          onChanged();
        } else {
          effectiveConfigBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Effective settings for a Greenplum (a combination of settings defined
       * in [user_config] and [default_config]).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_17 effective_config = 1 [(.yandex.cloud.required) = true];</code>
       */
      public Builder setEffectiveConfig(
          yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17.Builder builderForValue) {
        if (effectiveConfigBuilder_ == null) {
          effectiveConfig_ = builderForValue.build();
          onChanged();
        } else {
          effectiveConfigBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Effective settings for a Greenplum (a combination of settings defined
       * in [user_config] and [default_config]).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_17 effective_config = 1 [(.yandex.cloud.required) = true];</code>
       */
      public Builder mergeEffectiveConfig(yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17 value) {
        if (effectiveConfigBuilder_ == null) {
          if (effectiveConfig_ != null) {
            effectiveConfig_ =
              yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17.newBuilder(effectiveConfig_).mergeFrom(value).buildPartial();
          } else {
            effectiveConfig_ = value;
          }
          onChanged();
        } else {
          effectiveConfigBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Effective settings for a Greenplum (a combination of settings defined
       * in [user_config] and [default_config]).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_17 effective_config = 1 [(.yandex.cloud.required) = true];</code>
       */
      public Builder clearEffectiveConfig() {
        if (effectiveConfigBuilder_ == null) {
          effectiveConfig_ = null;
          onChanged();
        } else {
          effectiveConfig_ = null;
          effectiveConfigBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Effective settings for a Greenplum (a combination of settings defined
       * in [user_config] and [default_config]).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_17 effective_config = 1 [(.yandex.cloud.required) = true];</code>
       */
      public yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17.Builder getEffectiveConfigBuilder() {
        
        onChanged();
        return getEffectiveConfigFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Effective settings for a Greenplum (a combination of settings defined
       * in [user_config] and [default_config]).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_17 effective_config = 1 [(.yandex.cloud.required) = true];</code>
       */
      public yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17OrBuilder getEffectiveConfigOrBuilder() {
        if (effectiveConfigBuilder_ != null) {
          return effectiveConfigBuilder_.getMessageOrBuilder();
        } else {
          return effectiveConfig_ == null ?
              yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17.getDefaultInstance() : effectiveConfig_;
        }
      }
      /**
       * <pre>
       * Effective settings for a Greenplum (a combination of settings defined
       * in [user_config] and [default_config]).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_17 effective_config = 1 [(.yandex.cloud.required) = true];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17, yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17.Builder, yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17OrBuilder> 
          getEffectiveConfigFieldBuilder() {
        if (effectiveConfigBuilder_ == null) {
          effectiveConfigBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17, yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17.Builder, yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17OrBuilder>(
                  getEffectiveConfig(),
                  getParentForChildren(),
                  isClean());
          effectiveConfig_ = null;
        }
        return effectiveConfigBuilder_;
      }

      private yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17 userConfig_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17, yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17.Builder, yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17OrBuilder> userConfigBuilder_;
      /**
       * <pre>
       * User-defined settings for a Greenplum.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_17 user_config = 2;</code>
       */
      public boolean hasUserConfig() {
        return userConfigBuilder_ != null || userConfig_ != null;
      }
      /**
       * <pre>
       * User-defined settings for a Greenplum.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_17 user_config = 2;</code>
       */
      public yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17 getUserConfig() {
        if (userConfigBuilder_ == null) {
          return userConfig_ == null ? yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17.getDefaultInstance() : userConfig_;
        } else {
          return userConfigBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * User-defined settings for a Greenplum.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_17 user_config = 2;</code>
       */
      public Builder setUserConfig(yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17 value) {
        if (userConfigBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          userConfig_ = value;
          onChanged();
        } else {
          userConfigBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * User-defined settings for a Greenplum.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_17 user_config = 2;</code>
       */
      public Builder setUserConfig(
          yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17.Builder builderForValue) {
        if (userConfigBuilder_ == null) {
          userConfig_ = builderForValue.build();
          onChanged();
        } else {
          userConfigBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * User-defined settings for a Greenplum.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_17 user_config = 2;</code>
       */
      public Builder mergeUserConfig(yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17 value) {
        if (userConfigBuilder_ == null) {
          if (userConfig_ != null) {
            userConfig_ =
              yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17.newBuilder(userConfig_).mergeFrom(value).buildPartial();
          } else {
            userConfig_ = value;
          }
          onChanged();
        } else {
          userConfigBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * User-defined settings for a Greenplum.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_17 user_config = 2;</code>
       */
      public Builder clearUserConfig() {
        if (userConfigBuilder_ == null) {
          userConfig_ = null;
          onChanged();
        } else {
          userConfig_ = null;
          userConfigBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * User-defined settings for a Greenplum.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_17 user_config = 2;</code>
       */
      public yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17.Builder getUserConfigBuilder() {
        
        onChanged();
        return getUserConfigFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * User-defined settings for a Greenplum.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_17 user_config = 2;</code>
       */
      public yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17OrBuilder getUserConfigOrBuilder() {
        if (userConfigBuilder_ != null) {
          return userConfigBuilder_.getMessageOrBuilder();
        } else {
          return userConfig_ == null ?
              yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17.getDefaultInstance() : userConfig_;
        }
      }
      /**
       * <pre>
       * User-defined settings for a Greenplum.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_17 user_config = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17, yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17.Builder, yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17OrBuilder> 
          getUserConfigFieldBuilder() {
        if (userConfigBuilder_ == null) {
          userConfigBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17, yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17.Builder, yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17OrBuilder>(
                  getUserConfig(),
                  getParentForChildren(),
                  isClean());
          userConfig_ = null;
        }
        return userConfigBuilder_;
      }

      private yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17 defaultConfig_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17, yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17.Builder, yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17OrBuilder> defaultConfigBuilder_;
      /**
       * <pre>
       * Default configuration for a Greenplum.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_17 default_config = 3;</code>
       */
      public boolean hasDefaultConfig() {
        return defaultConfigBuilder_ != null || defaultConfig_ != null;
      }
      /**
       * <pre>
       * Default configuration for a Greenplum.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_17 default_config = 3;</code>
       */
      public yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17 getDefaultConfig() {
        if (defaultConfigBuilder_ == null) {
          return defaultConfig_ == null ? yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17.getDefaultInstance() : defaultConfig_;
        } else {
          return defaultConfigBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Default configuration for a Greenplum.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_17 default_config = 3;</code>
       */
      public Builder setDefaultConfig(yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17 value) {
        if (defaultConfigBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          defaultConfig_ = value;
          onChanged();
        } else {
          defaultConfigBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Default configuration for a Greenplum.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_17 default_config = 3;</code>
       */
      public Builder setDefaultConfig(
          yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17.Builder builderForValue) {
        if (defaultConfigBuilder_ == null) {
          defaultConfig_ = builderForValue.build();
          onChanged();
        } else {
          defaultConfigBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Default configuration for a Greenplum.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_17 default_config = 3;</code>
       */
      public Builder mergeDefaultConfig(yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17 value) {
        if (defaultConfigBuilder_ == null) {
          if (defaultConfig_ != null) {
            defaultConfig_ =
              yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17.newBuilder(defaultConfig_).mergeFrom(value).buildPartial();
          } else {
            defaultConfig_ = value;
          }
          onChanged();
        } else {
          defaultConfigBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Default configuration for a Greenplum.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_17 default_config = 3;</code>
       */
      public Builder clearDefaultConfig() {
        if (defaultConfigBuilder_ == null) {
          defaultConfig_ = null;
          onChanged();
        } else {
          defaultConfig_ = null;
          defaultConfigBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Default configuration for a Greenplum.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_17 default_config = 3;</code>
       */
      public yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17.Builder getDefaultConfigBuilder() {
        
        onChanged();
        return getDefaultConfigFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Default configuration for a Greenplum.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_17 default_config = 3;</code>
       */
      public yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17OrBuilder getDefaultConfigOrBuilder() {
        if (defaultConfigBuilder_ != null) {
          return defaultConfigBuilder_.getMessageOrBuilder();
        } else {
          return defaultConfig_ == null ?
              yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17.getDefaultInstance() : defaultConfig_;
        }
      }
      /**
       * <pre>
       * Default configuration for a Greenplum.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_17 default_config = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17, yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17.Builder, yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17OrBuilder> 
          getDefaultConfigFieldBuilder() {
        if (defaultConfigBuilder_ == null) {
          defaultConfigBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17, yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17.Builder, yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_17OrBuilder>(
                  getDefaultConfig(),
                  getParentForChildren(),
                  isClean());
          defaultConfig_ = null;
        }
        return defaultConfigBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:yandex.cloud.mdb.greenplum.v1.GreenplumConfigSet6_17)
    }

    // @@protoc_insertion_point(class_scope:yandex.cloud.mdb.greenplum.v1.GreenplumConfigSet6_17)
    private static final yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfigSet6_17 DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfigSet6_17();
    }

    public static yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfigSet6_17 getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GreenplumConfigSet6_17>
        PARSER = new com.google.protobuf.AbstractParser<GreenplumConfigSet6_17>() {
      @java.lang.Override
      public GreenplumConfigSet6_17 parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GreenplumConfigSet6_17(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<GreenplumConfigSet6_17> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GreenplumConfigSet6_17> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfigSet6_17 getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GreenplumConfigSet6_19OrBuilder extends
      // @@protoc_insertion_point(interface_extends:yandex.cloud.mdb.greenplum.v1.GreenplumConfigSet6_19)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Effective settings for a Greenplum (a combination of settings defined
     * in [user_config] and [default_config]).
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_19 effective_config = 1 [(.yandex.cloud.required) = true];</code>
     */
    boolean hasEffectiveConfig();
    /**
     * <pre>
     * Effective settings for a Greenplum (a combination of settings defined
     * in [user_config] and [default_config]).
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_19 effective_config = 1 [(.yandex.cloud.required) = true];</code>
     */
    yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19 getEffectiveConfig();
    /**
     * <pre>
     * Effective settings for a Greenplum (a combination of settings defined
     * in [user_config] and [default_config]).
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_19 effective_config = 1 [(.yandex.cloud.required) = true];</code>
     */
    yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19OrBuilder getEffectiveConfigOrBuilder();

    /**
     * <pre>
     * User-defined settings for a Greenplum.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_19 user_config = 2;</code>
     */
    boolean hasUserConfig();
    /**
     * <pre>
     * User-defined settings for a Greenplum.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_19 user_config = 2;</code>
     */
    yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19 getUserConfig();
    /**
     * <pre>
     * User-defined settings for a Greenplum.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_19 user_config = 2;</code>
     */
    yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19OrBuilder getUserConfigOrBuilder();

    /**
     * <pre>
     * Default configuration for a Greenplum.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_19 default_config = 3;</code>
     */
    boolean hasDefaultConfig();
    /**
     * <pre>
     * Default configuration for a Greenplum.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_19 default_config = 3;</code>
     */
    yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19 getDefaultConfig();
    /**
     * <pre>
     * Default configuration for a Greenplum.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_19 default_config = 3;</code>
     */
    yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19OrBuilder getDefaultConfigOrBuilder();
  }
  /**
   * Protobuf type {@code yandex.cloud.mdb.greenplum.v1.GreenplumConfigSet6_19}
   */
  public  static final class GreenplumConfigSet6_19 extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:yandex.cloud.mdb.greenplum.v1.GreenplumConfigSet6_19)
      GreenplumConfigSet6_19OrBuilder {
  private static final long serialVersionUID = 0L;
    // Use GreenplumConfigSet6_19.newBuilder() to construct.
    private GreenplumConfigSet6_19(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GreenplumConfigSet6_19() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private GreenplumConfigSet6_19(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19.Builder subBuilder = null;
              if (effectiveConfig_ != null) {
                subBuilder = effectiveConfig_.toBuilder();
              }
              effectiveConfig_ = input.readMessage(yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(effectiveConfig_);
                effectiveConfig_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19.Builder subBuilder = null;
              if (userConfig_ != null) {
                subBuilder = userConfig_.toBuilder();
              }
              userConfig_ = input.readMessage(yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(userConfig_);
                userConfig_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19.Builder subBuilder = null;
              if (defaultConfig_ != null) {
                subBuilder = defaultConfig_.toBuilder();
              }
              defaultConfig_ = input.readMessage(yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(defaultConfig_);
                defaultConfig_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return yandex.cloud.api.mdb.greenplum.v1.Config.internal_static_yandex_cloud_mdb_greenplum_v1_GreenplumConfigSet6_19_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return yandex.cloud.api.mdb.greenplum.v1.Config.internal_static_yandex_cloud_mdb_greenplum_v1_GreenplumConfigSet6_19_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfigSet6_19.class, yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfigSet6_19.Builder.class);
    }

    public static final int EFFECTIVE_CONFIG_FIELD_NUMBER = 1;
    private yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19 effectiveConfig_;
    /**
     * <pre>
     * Effective settings for a Greenplum (a combination of settings defined
     * in [user_config] and [default_config]).
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_19 effective_config = 1 [(.yandex.cloud.required) = true];</code>
     */
    public boolean hasEffectiveConfig() {
      return effectiveConfig_ != null;
    }
    /**
     * <pre>
     * Effective settings for a Greenplum (a combination of settings defined
     * in [user_config] and [default_config]).
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_19 effective_config = 1 [(.yandex.cloud.required) = true];</code>
     */
    public yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19 getEffectiveConfig() {
      return effectiveConfig_ == null ? yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19.getDefaultInstance() : effectiveConfig_;
    }
    /**
     * <pre>
     * Effective settings for a Greenplum (a combination of settings defined
     * in [user_config] and [default_config]).
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_19 effective_config = 1 [(.yandex.cloud.required) = true];</code>
     */
    public yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19OrBuilder getEffectiveConfigOrBuilder() {
      return getEffectiveConfig();
    }

    public static final int USER_CONFIG_FIELD_NUMBER = 2;
    private yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19 userConfig_;
    /**
     * <pre>
     * User-defined settings for a Greenplum.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_19 user_config = 2;</code>
     */
    public boolean hasUserConfig() {
      return userConfig_ != null;
    }
    /**
     * <pre>
     * User-defined settings for a Greenplum.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_19 user_config = 2;</code>
     */
    public yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19 getUserConfig() {
      return userConfig_ == null ? yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19.getDefaultInstance() : userConfig_;
    }
    /**
     * <pre>
     * User-defined settings for a Greenplum.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_19 user_config = 2;</code>
     */
    public yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19OrBuilder getUserConfigOrBuilder() {
      return getUserConfig();
    }

    public static final int DEFAULT_CONFIG_FIELD_NUMBER = 3;
    private yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19 defaultConfig_;
    /**
     * <pre>
     * Default configuration for a Greenplum.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_19 default_config = 3;</code>
     */
    public boolean hasDefaultConfig() {
      return defaultConfig_ != null;
    }
    /**
     * <pre>
     * Default configuration for a Greenplum.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_19 default_config = 3;</code>
     */
    public yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19 getDefaultConfig() {
      return defaultConfig_ == null ? yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19.getDefaultInstance() : defaultConfig_;
    }
    /**
     * <pre>
     * Default configuration for a Greenplum.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_19 default_config = 3;</code>
     */
    public yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19OrBuilder getDefaultConfigOrBuilder() {
      return getDefaultConfig();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (effectiveConfig_ != null) {
        output.writeMessage(1, getEffectiveConfig());
      }
      if (userConfig_ != null) {
        output.writeMessage(2, getUserConfig());
      }
      if (defaultConfig_ != null) {
        output.writeMessage(3, getDefaultConfig());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (effectiveConfig_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getEffectiveConfig());
      }
      if (userConfig_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getUserConfig());
      }
      if (defaultConfig_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getDefaultConfig());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfigSet6_19)) {
        return super.equals(obj);
      }
      yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfigSet6_19 other = (yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfigSet6_19) obj;

      boolean result = true;
      result = result && (hasEffectiveConfig() == other.hasEffectiveConfig());
      if (hasEffectiveConfig()) {
        result = result && getEffectiveConfig()
            .equals(other.getEffectiveConfig());
      }
      result = result && (hasUserConfig() == other.hasUserConfig());
      if (hasUserConfig()) {
        result = result && getUserConfig()
            .equals(other.getUserConfig());
      }
      result = result && (hasDefaultConfig() == other.hasDefaultConfig());
      if (hasDefaultConfig()) {
        result = result && getDefaultConfig()
            .equals(other.getDefaultConfig());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasEffectiveConfig()) {
        hash = (37 * hash) + EFFECTIVE_CONFIG_FIELD_NUMBER;
        hash = (53 * hash) + getEffectiveConfig().hashCode();
      }
      if (hasUserConfig()) {
        hash = (37 * hash) + USER_CONFIG_FIELD_NUMBER;
        hash = (53 * hash) + getUserConfig().hashCode();
      }
      if (hasDefaultConfig()) {
        hash = (37 * hash) + DEFAULT_CONFIG_FIELD_NUMBER;
        hash = (53 * hash) + getDefaultConfig().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfigSet6_19 parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfigSet6_19 parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfigSet6_19 parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfigSet6_19 parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfigSet6_19 parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfigSet6_19 parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfigSet6_19 parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfigSet6_19 parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfigSet6_19 parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfigSet6_19 parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfigSet6_19 parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfigSet6_19 parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfigSet6_19 prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code yandex.cloud.mdb.greenplum.v1.GreenplumConfigSet6_19}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:yandex.cloud.mdb.greenplum.v1.GreenplumConfigSet6_19)
        yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfigSet6_19OrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return yandex.cloud.api.mdb.greenplum.v1.Config.internal_static_yandex_cloud_mdb_greenplum_v1_GreenplumConfigSet6_19_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return yandex.cloud.api.mdb.greenplum.v1.Config.internal_static_yandex_cloud_mdb_greenplum_v1_GreenplumConfigSet6_19_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfigSet6_19.class, yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfigSet6_19.Builder.class);
      }

      // Construct using yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfigSet6_19.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (effectiveConfigBuilder_ == null) {
          effectiveConfig_ = null;
        } else {
          effectiveConfig_ = null;
          effectiveConfigBuilder_ = null;
        }
        if (userConfigBuilder_ == null) {
          userConfig_ = null;
        } else {
          userConfig_ = null;
          userConfigBuilder_ = null;
        }
        if (defaultConfigBuilder_ == null) {
          defaultConfig_ = null;
        } else {
          defaultConfig_ = null;
          defaultConfigBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return yandex.cloud.api.mdb.greenplum.v1.Config.internal_static_yandex_cloud_mdb_greenplum_v1_GreenplumConfigSet6_19_descriptor;
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfigSet6_19 getDefaultInstanceForType() {
        return yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfigSet6_19.getDefaultInstance();
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfigSet6_19 build() {
        yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfigSet6_19 result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfigSet6_19 buildPartial() {
        yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfigSet6_19 result = new yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfigSet6_19(this);
        if (effectiveConfigBuilder_ == null) {
          result.effectiveConfig_ = effectiveConfig_;
        } else {
          result.effectiveConfig_ = effectiveConfigBuilder_.build();
        }
        if (userConfigBuilder_ == null) {
          result.userConfig_ = userConfig_;
        } else {
          result.userConfig_ = userConfigBuilder_.build();
        }
        if (defaultConfigBuilder_ == null) {
          result.defaultConfig_ = defaultConfig_;
        } else {
          result.defaultConfig_ = defaultConfigBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfigSet6_19) {
          return mergeFrom((yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfigSet6_19)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfigSet6_19 other) {
        if (other == yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfigSet6_19.getDefaultInstance()) return this;
        if (other.hasEffectiveConfig()) {
          mergeEffectiveConfig(other.getEffectiveConfig());
        }
        if (other.hasUserConfig()) {
          mergeUserConfig(other.getUserConfig());
        }
        if (other.hasDefaultConfig()) {
          mergeDefaultConfig(other.getDefaultConfig());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfigSet6_19 parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfigSet6_19) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19 effectiveConfig_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19, yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19.Builder, yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19OrBuilder> effectiveConfigBuilder_;
      /**
       * <pre>
       * Effective settings for a Greenplum (a combination of settings defined
       * in [user_config] and [default_config]).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_19 effective_config = 1 [(.yandex.cloud.required) = true];</code>
       */
      public boolean hasEffectiveConfig() {
        return effectiveConfigBuilder_ != null || effectiveConfig_ != null;
      }
      /**
       * <pre>
       * Effective settings for a Greenplum (a combination of settings defined
       * in [user_config] and [default_config]).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_19 effective_config = 1 [(.yandex.cloud.required) = true];</code>
       */
      public yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19 getEffectiveConfig() {
        if (effectiveConfigBuilder_ == null) {
          return effectiveConfig_ == null ? yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19.getDefaultInstance() : effectiveConfig_;
        } else {
          return effectiveConfigBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Effective settings for a Greenplum (a combination of settings defined
       * in [user_config] and [default_config]).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_19 effective_config = 1 [(.yandex.cloud.required) = true];</code>
       */
      public Builder setEffectiveConfig(yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19 value) {
        if (effectiveConfigBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          effectiveConfig_ = value;
          onChanged();
        } else {
          effectiveConfigBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Effective settings for a Greenplum (a combination of settings defined
       * in [user_config] and [default_config]).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_19 effective_config = 1 [(.yandex.cloud.required) = true];</code>
       */
      public Builder setEffectiveConfig(
          yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19.Builder builderForValue) {
        if (effectiveConfigBuilder_ == null) {
          effectiveConfig_ = builderForValue.build();
          onChanged();
        } else {
          effectiveConfigBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Effective settings for a Greenplum (a combination of settings defined
       * in [user_config] and [default_config]).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_19 effective_config = 1 [(.yandex.cloud.required) = true];</code>
       */
      public Builder mergeEffectiveConfig(yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19 value) {
        if (effectiveConfigBuilder_ == null) {
          if (effectiveConfig_ != null) {
            effectiveConfig_ =
              yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19.newBuilder(effectiveConfig_).mergeFrom(value).buildPartial();
          } else {
            effectiveConfig_ = value;
          }
          onChanged();
        } else {
          effectiveConfigBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Effective settings for a Greenplum (a combination of settings defined
       * in [user_config] and [default_config]).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_19 effective_config = 1 [(.yandex.cloud.required) = true];</code>
       */
      public Builder clearEffectiveConfig() {
        if (effectiveConfigBuilder_ == null) {
          effectiveConfig_ = null;
          onChanged();
        } else {
          effectiveConfig_ = null;
          effectiveConfigBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Effective settings for a Greenplum (a combination of settings defined
       * in [user_config] and [default_config]).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_19 effective_config = 1 [(.yandex.cloud.required) = true];</code>
       */
      public yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19.Builder getEffectiveConfigBuilder() {
        
        onChanged();
        return getEffectiveConfigFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Effective settings for a Greenplum (a combination of settings defined
       * in [user_config] and [default_config]).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_19 effective_config = 1 [(.yandex.cloud.required) = true];</code>
       */
      public yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19OrBuilder getEffectiveConfigOrBuilder() {
        if (effectiveConfigBuilder_ != null) {
          return effectiveConfigBuilder_.getMessageOrBuilder();
        } else {
          return effectiveConfig_ == null ?
              yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19.getDefaultInstance() : effectiveConfig_;
        }
      }
      /**
       * <pre>
       * Effective settings for a Greenplum (a combination of settings defined
       * in [user_config] and [default_config]).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_19 effective_config = 1 [(.yandex.cloud.required) = true];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19, yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19.Builder, yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19OrBuilder> 
          getEffectiveConfigFieldBuilder() {
        if (effectiveConfigBuilder_ == null) {
          effectiveConfigBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19, yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19.Builder, yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19OrBuilder>(
                  getEffectiveConfig(),
                  getParentForChildren(),
                  isClean());
          effectiveConfig_ = null;
        }
        return effectiveConfigBuilder_;
      }

      private yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19 userConfig_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19, yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19.Builder, yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19OrBuilder> userConfigBuilder_;
      /**
       * <pre>
       * User-defined settings for a Greenplum.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_19 user_config = 2;</code>
       */
      public boolean hasUserConfig() {
        return userConfigBuilder_ != null || userConfig_ != null;
      }
      /**
       * <pre>
       * User-defined settings for a Greenplum.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_19 user_config = 2;</code>
       */
      public yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19 getUserConfig() {
        if (userConfigBuilder_ == null) {
          return userConfig_ == null ? yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19.getDefaultInstance() : userConfig_;
        } else {
          return userConfigBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * User-defined settings for a Greenplum.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_19 user_config = 2;</code>
       */
      public Builder setUserConfig(yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19 value) {
        if (userConfigBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          userConfig_ = value;
          onChanged();
        } else {
          userConfigBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * User-defined settings for a Greenplum.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_19 user_config = 2;</code>
       */
      public Builder setUserConfig(
          yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19.Builder builderForValue) {
        if (userConfigBuilder_ == null) {
          userConfig_ = builderForValue.build();
          onChanged();
        } else {
          userConfigBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * User-defined settings for a Greenplum.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_19 user_config = 2;</code>
       */
      public Builder mergeUserConfig(yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19 value) {
        if (userConfigBuilder_ == null) {
          if (userConfig_ != null) {
            userConfig_ =
              yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19.newBuilder(userConfig_).mergeFrom(value).buildPartial();
          } else {
            userConfig_ = value;
          }
          onChanged();
        } else {
          userConfigBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * User-defined settings for a Greenplum.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_19 user_config = 2;</code>
       */
      public Builder clearUserConfig() {
        if (userConfigBuilder_ == null) {
          userConfig_ = null;
          onChanged();
        } else {
          userConfig_ = null;
          userConfigBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * User-defined settings for a Greenplum.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_19 user_config = 2;</code>
       */
      public yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19.Builder getUserConfigBuilder() {
        
        onChanged();
        return getUserConfigFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * User-defined settings for a Greenplum.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_19 user_config = 2;</code>
       */
      public yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19OrBuilder getUserConfigOrBuilder() {
        if (userConfigBuilder_ != null) {
          return userConfigBuilder_.getMessageOrBuilder();
        } else {
          return userConfig_ == null ?
              yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19.getDefaultInstance() : userConfig_;
        }
      }
      /**
       * <pre>
       * User-defined settings for a Greenplum.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_19 user_config = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19, yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19.Builder, yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19OrBuilder> 
          getUserConfigFieldBuilder() {
        if (userConfigBuilder_ == null) {
          userConfigBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19, yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19.Builder, yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19OrBuilder>(
                  getUserConfig(),
                  getParentForChildren(),
                  isClean());
          userConfig_ = null;
        }
        return userConfigBuilder_;
      }

      private yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19 defaultConfig_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19, yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19.Builder, yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19OrBuilder> defaultConfigBuilder_;
      /**
       * <pre>
       * Default configuration for a Greenplum.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_19 default_config = 3;</code>
       */
      public boolean hasDefaultConfig() {
        return defaultConfigBuilder_ != null || defaultConfig_ != null;
      }
      /**
       * <pre>
       * Default configuration for a Greenplum.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_19 default_config = 3;</code>
       */
      public yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19 getDefaultConfig() {
        if (defaultConfigBuilder_ == null) {
          return defaultConfig_ == null ? yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19.getDefaultInstance() : defaultConfig_;
        } else {
          return defaultConfigBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Default configuration for a Greenplum.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_19 default_config = 3;</code>
       */
      public Builder setDefaultConfig(yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19 value) {
        if (defaultConfigBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          defaultConfig_ = value;
          onChanged();
        } else {
          defaultConfigBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Default configuration for a Greenplum.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_19 default_config = 3;</code>
       */
      public Builder setDefaultConfig(
          yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19.Builder builderForValue) {
        if (defaultConfigBuilder_ == null) {
          defaultConfig_ = builderForValue.build();
          onChanged();
        } else {
          defaultConfigBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Default configuration for a Greenplum.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_19 default_config = 3;</code>
       */
      public Builder mergeDefaultConfig(yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19 value) {
        if (defaultConfigBuilder_ == null) {
          if (defaultConfig_ != null) {
            defaultConfig_ =
              yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19.newBuilder(defaultConfig_).mergeFrom(value).buildPartial();
          } else {
            defaultConfig_ = value;
          }
          onChanged();
        } else {
          defaultConfigBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Default configuration for a Greenplum.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_19 default_config = 3;</code>
       */
      public Builder clearDefaultConfig() {
        if (defaultConfigBuilder_ == null) {
          defaultConfig_ = null;
          onChanged();
        } else {
          defaultConfig_ = null;
          defaultConfigBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Default configuration for a Greenplum.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_19 default_config = 3;</code>
       */
      public yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19.Builder getDefaultConfigBuilder() {
        
        onChanged();
        return getDefaultConfigFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Default configuration for a Greenplum.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_19 default_config = 3;</code>
       */
      public yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19OrBuilder getDefaultConfigOrBuilder() {
        if (defaultConfigBuilder_ != null) {
          return defaultConfigBuilder_.getMessageOrBuilder();
        } else {
          return defaultConfig_ == null ?
              yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19.getDefaultInstance() : defaultConfig_;
        }
      }
      /**
       * <pre>
       * Default configuration for a Greenplum.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumConfig6_19 default_config = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19, yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19.Builder, yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19OrBuilder> 
          getDefaultConfigFieldBuilder() {
        if (defaultConfigBuilder_ == null) {
          defaultConfigBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19, yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19.Builder, yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfig6_19OrBuilder>(
                  getDefaultConfig(),
                  getParentForChildren(),
                  isClean());
          defaultConfig_ = null;
        }
        return defaultConfigBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:yandex.cloud.mdb.greenplum.v1.GreenplumConfigSet6_19)
    }

    // @@protoc_insertion_point(class_scope:yandex.cloud.mdb.greenplum.v1.GreenplumConfigSet6_19)
    private static final yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfigSet6_19 DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfigSet6_19();
    }

    public static yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfigSet6_19 getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GreenplumConfigSet6_19>
        PARSER = new com.google.protobuf.AbstractParser<GreenplumConfigSet6_19>() {
      @java.lang.Override
      public GreenplumConfigSet6_19 parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GreenplumConfigSet6_19(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<GreenplumConfigSet6_19> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GreenplumConfigSet6_19> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public yandex.cloud.api.mdb.greenplum.v1.Config.GreenplumConfigSet6_19 getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ConnectionPoolerConfigSetOrBuilder extends
      // @@protoc_insertion_point(interface_extends:yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfigSet)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Effective settings for a odyssey (a combination of settings defined
     * in [user_config] and [default_config]).
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfig effective_config = 1 [(.yandex.cloud.required) = true];</code>
     */
    boolean hasEffectiveConfig();
    /**
     * <pre>
     * Effective settings for a odyssey (a combination of settings defined
     * in [user_config] and [default_config]).
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfig effective_config = 1 [(.yandex.cloud.required) = true];</code>
     */
    yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig getEffectiveConfig();
    /**
     * <pre>
     * Effective settings for a odyssey (a combination of settings defined
     * in [user_config] and [default_config]).
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfig effective_config = 1 [(.yandex.cloud.required) = true];</code>
     */
    yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfigOrBuilder getEffectiveConfigOrBuilder();

    /**
     * <pre>
     * User-defined settings for a odyssey.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfig user_config = 2;</code>
     */
    boolean hasUserConfig();
    /**
     * <pre>
     * User-defined settings for a odyssey.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfig user_config = 2;</code>
     */
    yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig getUserConfig();
    /**
     * <pre>
     * User-defined settings for a odyssey.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfig user_config = 2;</code>
     */
    yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfigOrBuilder getUserConfigOrBuilder();

    /**
     * <pre>
     * Default configuration for a odyssey.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfig default_config = 3;</code>
     */
    boolean hasDefaultConfig();
    /**
     * <pre>
     * Default configuration for a odyssey.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfig default_config = 3;</code>
     */
    yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig getDefaultConfig();
    /**
     * <pre>
     * Default configuration for a odyssey.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfig default_config = 3;</code>
     */
    yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfigOrBuilder getDefaultConfigOrBuilder();
  }
  /**
   * Protobuf type {@code yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfigSet}
   */
  public  static final class ConnectionPoolerConfigSet extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfigSet)
      ConnectionPoolerConfigSetOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ConnectionPoolerConfigSet.newBuilder() to construct.
    private ConnectionPoolerConfigSet(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ConnectionPoolerConfigSet() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ConnectionPoolerConfigSet(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig.Builder subBuilder = null;
              if (effectiveConfig_ != null) {
                subBuilder = effectiveConfig_.toBuilder();
              }
              effectiveConfig_ = input.readMessage(yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(effectiveConfig_);
                effectiveConfig_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig.Builder subBuilder = null;
              if (userConfig_ != null) {
                subBuilder = userConfig_.toBuilder();
              }
              userConfig_ = input.readMessage(yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(userConfig_);
                userConfig_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig.Builder subBuilder = null;
              if (defaultConfig_ != null) {
                subBuilder = defaultConfig_.toBuilder();
              }
              defaultConfig_ = input.readMessage(yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(defaultConfig_);
                defaultConfig_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return yandex.cloud.api.mdb.greenplum.v1.Config.internal_static_yandex_cloud_mdb_greenplum_v1_ConnectionPoolerConfigSet_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return yandex.cloud.api.mdb.greenplum.v1.Config.internal_static_yandex_cloud_mdb_greenplum_v1_ConnectionPoolerConfigSet_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfigSet.class, yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfigSet.Builder.class);
    }

    public static final int EFFECTIVE_CONFIG_FIELD_NUMBER = 1;
    private yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig effectiveConfig_;
    /**
     * <pre>
     * Effective settings for a odyssey (a combination of settings defined
     * in [user_config] and [default_config]).
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfig effective_config = 1 [(.yandex.cloud.required) = true];</code>
     */
    public boolean hasEffectiveConfig() {
      return effectiveConfig_ != null;
    }
    /**
     * <pre>
     * Effective settings for a odyssey (a combination of settings defined
     * in [user_config] and [default_config]).
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfig effective_config = 1 [(.yandex.cloud.required) = true];</code>
     */
    public yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig getEffectiveConfig() {
      return effectiveConfig_ == null ? yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig.getDefaultInstance() : effectiveConfig_;
    }
    /**
     * <pre>
     * Effective settings for a odyssey (a combination of settings defined
     * in [user_config] and [default_config]).
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfig effective_config = 1 [(.yandex.cloud.required) = true];</code>
     */
    public yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfigOrBuilder getEffectiveConfigOrBuilder() {
      return getEffectiveConfig();
    }

    public static final int USER_CONFIG_FIELD_NUMBER = 2;
    private yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig userConfig_;
    /**
     * <pre>
     * User-defined settings for a odyssey.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfig user_config = 2;</code>
     */
    public boolean hasUserConfig() {
      return userConfig_ != null;
    }
    /**
     * <pre>
     * User-defined settings for a odyssey.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfig user_config = 2;</code>
     */
    public yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig getUserConfig() {
      return userConfig_ == null ? yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig.getDefaultInstance() : userConfig_;
    }
    /**
     * <pre>
     * User-defined settings for a odyssey.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfig user_config = 2;</code>
     */
    public yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfigOrBuilder getUserConfigOrBuilder() {
      return getUserConfig();
    }

    public static final int DEFAULT_CONFIG_FIELD_NUMBER = 3;
    private yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig defaultConfig_;
    /**
     * <pre>
     * Default configuration for a odyssey.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfig default_config = 3;</code>
     */
    public boolean hasDefaultConfig() {
      return defaultConfig_ != null;
    }
    /**
     * <pre>
     * Default configuration for a odyssey.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfig default_config = 3;</code>
     */
    public yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig getDefaultConfig() {
      return defaultConfig_ == null ? yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig.getDefaultInstance() : defaultConfig_;
    }
    /**
     * <pre>
     * Default configuration for a odyssey.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfig default_config = 3;</code>
     */
    public yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfigOrBuilder getDefaultConfigOrBuilder() {
      return getDefaultConfig();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (effectiveConfig_ != null) {
        output.writeMessage(1, getEffectiveConfig());
      }
      if (userConfig_ != null) {
        output.writeMessage(2, getUserConfig());
      }
      if (defaultConfig_ != null) {
        output.writeMessage(3, getDefaultConfig());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (effectiveConfig_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getEffectiveConfig());
      }
      if (userConfig_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getUserConfig());
      }
      if (defaultConfig_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getDefaultConfig());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfigSet)) {
        return super.equals(obj);
      }
      yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfigSet other = (yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfigSet) obj;

      boolean result = true;
      result = result && (hasEffectiveConfig() == other.hasEffectiveConfig());
      if (hasEffectiveConfig()) {
        result = result && getEffectiveConfig()
            .equals(other.getEffectiveConfig());
      }
      result = result && (hasUserConfig() == other.hasUserConfig());
      if (hasUserConfig()) {
        result = result && getUserConfig()
            .equals(other.getUserConfig());
      }
      result = result && (hasDefaultConfig() == other.hasDefaultConfig());
      if (hasDefaultConfig()) {
        result = result && getDefaultConfig()
            .equals(other.getDefaultConfig());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasEffectiveConfig()) {
        hash = (37 * hash) + EFFECTIVE_CONFIG_FIELD_NUMBER;
        hash = (53 * hash) + getEffectiveConfig().hashCode();
      }
      if (hasUserConfig()) {
        hash = (37 * hash) + USER_CONFIG_FIELD_NUMBER;
        hash = (53 * hash) + getUserConfig().hashCode();
      }
      if (hasDefaultConfig()) {
        hash = (37 * hash) + DEFAULT_CONFIG_FIELD_NUMBER;
        hash = (53 * hash) + getDefaultConfig().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfigSet parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfigSet parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfigSet parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfigSet parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfigSet parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfigSet parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfigSet parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfigSet parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfigSet parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfigSet parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfigSet parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfigSet parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfigSet prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfigSet}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfigSet)
        yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfigSetOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return yandex.cloud.api.mdb.greenplum.v1.Config.internal_static_yandex_cloud_mdb_greenplum_v1_ConnectionPoolerConfigSet_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return yandex.cloud.api.mdb.greenplum.v1.Config.internal_static_yandex_cloud_mdb_greenplum_v1_ConnectionPoolerConfigSet_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfigSet.class, yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfigSet.Builder.class);
      }

      // Construct using yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfigSet.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (effectiveConfigBuilder_ == null) {
          effectiveConfig_ = null;
        } else {
          effectiveConfig_ = null;
          effectiveConfigBuilder_ = null;
        }
        if (userConfigBuilder_ == null) {
          userConfig_ = null;
        } else {
          userConfig_ = null;
          userConfigBuilder_ = null;
        }
        if (defaultConfigBuilder_ == null) {
          defaultConfig_ = null;
        } else {
          defaultConfig_ = null;
          defaultConfigBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return yandex.cloud.api.mdb.greenplum.v1.Config.internal_static_yandex_cloud_mdb_greenplum_v1_ConnectionPoolerConfigSet_descriptor;
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfigSet getDefaultInstanceForType() {
        return yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfigSet.getDefaultInstance();
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfigSet build() {
        yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfigSet result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfigSet buildPartial() {
        yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfigSet result = new yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfigSet(this);
        if (effectiveConfigBuilder_ == null) {
          result.effectiveConfig_ = effectiveConfig_;
        } else {
          result.effectiveConfig_ = effectiveConfigBuilder_.build();
        }
        if (userConfigBuilder_ == null) {
          result.userConfig_ = userConfig_;
        } else {
          result.userConfig_ = userConfigBuilder_.build();
        }
        if (defaultConfigBuilder_ == null) {
          result.defaultConfig_ = defaultConfig_;
        } else {
          result.defaultConfig_ = defaultConfigBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfigSet) {
          return mergeFrom((yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfigSet)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfigSet other) {
        if (other == yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfigSet.getDefaultInstance()) return this;
        if (other.hasEffectiveConfig()) {
          mergeEffectiveConfig(other.getEffectiveConfig());
        }
        if (other.hasUserConfig()) {
          mergeUserConfig(other.getUserConfig());
        }
        if (other.hasDefaultConfig()) {
          mergeDefaultConfig(other.getDefaultConfig());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfigSet parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfigSet) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig effectiveConfig_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig, yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig.Builder, yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfigOrBuilder> effectiveConfigBuilder_;
      /**
       * <pre>
       * Effective settings for a odyssey (a combination of settings defined
       * in [user_config] and [default_config]).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfig effective_config = 1 [(.yandex.cloud.required) = true];</code>
       */
      public boolean hasEffectiveConfig() {
        return effectiveConfigBuilder_ != null || effectiveConfig_ != null;
      }
      /**
       * <pre>
       * Effective settings for a odyssey (a combination of settings defined
       * in [user_config] and [default_config]).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfig effective_config = 1 [(.yandex.cloud.required) = true];</code>
       */
      public yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig getEffectiveConfig() {
        if (effectiveConfigBuilder_ == null) {
          return effectiveConfig_ == null ? yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig.getDefaultInstance() : effectiveConfig_;
        } else {
          return effectiveConfigBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Effective settings for a odyssey (a combination of settings defined
       * in [user_config] and [default_config]).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfig effective_config = 1 [(.yandex.cloud.required) = true];</code>
       */
      public Builder setEffectiveConfig(yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig value) {
        if (effectiveConfigBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          effectiveConfig_ = value;
          onChanged();
        } else {
          effectiveConfigBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Effective settings for a odyssey (a combination of settings defined
       * in [user_config] and [default_config]).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfig effective_config = 1 [(.yandex.cloud.required) = true];</code>
       */
      public Builder setEffectiveConfig(
          yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig.Builder builderForValue) {
        if (effectiveConfigBuilder_ == null) {
          effectiveConfig_ = builderForValue.build();
          onChanged();
        } else {
          effectiveConfigBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Effective settings for a odyssey (a combination of settings defined
       * in [user_config] and [default_config]).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfig effective_config = 1 [(.yandex.cloud.required) = true];</code>
       */
      public Builder mergeEffectiveConfig(yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig value) {
        if (effectiveConfigBuilder_ == null) {
          if (effectiveConfig_ != null) {
            effectiveConfig_ =
              yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig.newBuilder(effectiveConfig_).mergeFrom(value).buildPartial();
          } else {
            effectiveConfig_ = value;
          }
          onChanged();
        } else {
          effectiveConfigBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Effective settings for a odyssey (a combination of settings defined
       * in [user_config] and [default_config]).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfig effective_config = 1 [(.yandex.cloud.required) = true];</code>
       */
      public Builder clearEffectiveConfig() {
        if (effectiveConfigBuilder_ == null) {
          effectiveConfig_ = null;
          onChanged();
        } else {
          effectiveConfig_ = null;
          effectiveConfigBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Effective settings for a odyssey (a combination of settings defined
       * in [user_config] and [default_config]).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfig effective_config = 1 [(.yandex.cloud.required) = true];</code>
       */
      public yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig.Builder getEffectiveConfigBuilder() {
        
        onChanged();
        return getEffectiveConfigFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Effective settings for a odyssey (a combination of settings defined
       * in [user_config] and [default_config]).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfig effective_config = 1 [(.yandex.cloud.required) = true];</code>
       */
      public yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfigOrBuilder getEffectiveConfigOrBuilder() {
        if (effectiveConfigBuilder_ != null) {
          return effectiveConfigBuilder_.getMessageOrBuilder();
        } else {
          return effectiveConfig_ == null ?
              yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig.getDefaultInstance() : effectiveConfig_;
        }
      }
      /**
       * <pre>
       * Effective settings for a odyssey (a combination of settings defined
       * in [user_config] and [default_config]).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfig effective_config = 1 [(.yandex.cloud.required) = true];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig, yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig.Builder, yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfigOrBuilder> 
          getEffectiveConfigFieldBuilder() {
        if (effectiveConfigBuilder_ == null) {
          effectiveConfigBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig, yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig.Builder, yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfigOrBuilder>(
                  getEffectiveConfig(),
                  getParentForChildren(),
                  isClean());
          effectiveConfig_ = null;
        }
        return effectiveConfigBuilder_;
      }

      private yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig userConfig_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig, yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig.Builder, yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfigOrBuilder> userConfigBuilder_;
      /**
       * <pre>
       * User-defined settings for a odyssey.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfig user_config = 2;</code>
       */
      public boolean hasUserConfig() {
        return userConfigBuilder_ != null || userConfig_ != null;
      }
      /**
       * <pre>
       * User-defined settings for a odyssey.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfig user_config = 2;</code>
       */
      public yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig getUserConfig() {
        if (userConfigBuilder_ == null) {
          return userConfig_ == null ? yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig.getDefaultInstance() : userConfig_;
        } else {
          return userConfigBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * User-defined settings for a odyssey.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfig user_config = 2;</code>
       */
      public Builder setUserConfig(yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig value) {
        if (userConfigBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          userConfig_ = value;
          onChanged();
        } else {
          userConfigBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * User-defined settings for a odyssey.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfig user_config = 2;</code>
       */
      public Builder setUserConfig(
          yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig.Builder builderForValue) {
        if (userConfigBuilder_ == null) {
          userConfig_ = builderForValue.build();
          onChanged();
        } else {
          userConfigBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * User-defined settings for a odyssey.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfig user_config = 2;</code>
       */
      public Builder mergeUserConfig(yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig value) {
        if (userConfigBuilder_ == null) {
          if (userConfig_ != null) {
            userConfig_ =
              yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig.newBuilder(userConfig_).mergeFrom(value).buildPartial();
          } else {
            userConfig_ = value;
          }
          onChanged();
        } else {
          userConfigBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * User-defined settings for a odyssey.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfig user_config = 2;</code>
       */
      public Builder clearUserConfig() {
        if (userConfigBuilder_ == null) {
          userConfig_ = null;
          onChanged();
        } else {
          userConfig_ = null;
          userConfigBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * User-defined settings for a odyssey.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfig user_config = 2;</code>
       */
      public yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig.Builder getUserConfigBuilder() {
        
        onChanged();
        return getUserConfigFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * User-defined settings for a odyssey.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfig user_config = 2;</code>
       */
      public yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfigOrBuilder getUserConfigOrBuilder() {
        if (userConfigBuilder_ != null) {
          return userConfigBuilder_.getMessageOrBuilder();
        } else {
          return userConfig_ == null ?
              yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig.getDefaultInstance() : userConfig_;
        }
      }
      /**
       * <pre>
       * User-defined settings for a odyssey.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfig user_config = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig, yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig.Builder, yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfigOrBuilder> 
          getUserConfigFieldBuilder() {
        if (userConfigBuilder_ == null) {
          userConfigBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig, yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig.Builder, yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfigOrBuilder>(
                  getUserConfig(),
                  getParentForChildren(),
                  isClean());
          userConfig_ = null;
        }
        return userConfigBuilder_;
      }

      private yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig defaultConfig_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig, yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig.Builder, yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfigOrBuilder> defaultConfigBuilder_;
      /**
       * <pre>
       * Default configuration for a odyssey.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfig default_config = 3;</code>
       */
      public boolean hasDefaultConfig() {
        return defaultConfigBuilder_ != null || defaultConfig_ != null;
      }
      /**
       * <pre>
       * Default configuration for a odyssey.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfig default_config = 3;</code>
       */
      public yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig getDefaultConfig() {
        if (defaultConfigBuilder_ == null) {
          return defaultConfig_ == null ? yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig.getDefaultInstance() : defaultConfig_;
        } else {
          return defaultConfigBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Default configuration for a odyssey.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfig default_config = 3;</code>
       */
      public Builder setDefaultConfig(yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig value) {
        if (defaultConfigBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          defaultConfig_ = value;
          onChanged();
        } else {
          defaultConfigBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Default configuration for a odyssey.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfig default_config = 3;</code>
       */
      public Builder setDefaultConfig(
          yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig.Builder builderForValue) {
        if (defaultConfigBuilder_ == null) {
          defaultConfig_ = builderForValue.build();
          onChanged();
        } else {
          defaultConfigBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Default configuration for a odyssey.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfig default_config = 3;</code>
       */
      public Builder mergeDefaultConfig(yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig value) {
        if (defaultConfigBuilder_ == null) {
          if (defaultConfig_ != null) {
            defaultConfig_ =
              yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig.newBuilder(defaultConfig_).mergeFrom(value).buildPartial();
          } else {
            defaultConfig_ = value;
          }
          onChanged();
        } else {
          defaultConfigBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Default configuration for a odyssey.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfig default_config = 3;</code>
       */
      public Builder clearDefaultConfig() {
        if (defaultConfigBuilder_ == null) {
          defaultConfig_ = null;
          onChanged();
        } else {
          defaultConfig_ = null;
          defaultConfigBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Default configuration for a odyssey.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfig default_config = 3;</code>
       */
      public yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig.Builder getDefaultConfigBuilder() {
        
        onChanged();
        return getDefaultConfigFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Default configuration for a odyssey.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfig default_config = 3;</code>
       */
      public yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfigOrBuilder getDefaultConfigOrBuilder() {
        if (defaultConfigBuilder_ != null) {
          return defaultConfigBuilder_.getMessageOrBuilder();
        } else {
          return defaultConfig_ == null ?
              yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig.getDefaultInstance() : defaultConfig_;
        }
      }
      /**
       * <pre>
       * Default configuration for a odyssey.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfig default_config = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig, yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig.Builder, yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfigOrBuilder> 
          getDefaultConfigFieldBuilder() {
        if (defaultConfigBuilder_ == null) {
          defaultConfigBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig, yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfig.Builder, yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfigOrBuilder>(
                  getDefaultConfig(),
                  getParentForChildren(),
                  isClean());
          defaultConfig_ = null;
        }
        return defaultConfigBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfigSet)
    }

    // @@protoc_insertion_point(class_scope:yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfigSet)
    private static final yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfigSet DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfigSet();
    }

    public static yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfigSet getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ConnectionPoolerConfigSet>
        PARSER = new com.google.protobuf.AbstractParser<ConnectionPoolerConfigSet>() {
      @java.lang.Override
      public ConnectionPoolerConfigSet parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ConnectionPoolerConfigSet(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ConnectionPoolerConfigSet> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ConnectionPoolerConfigSet> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public yandex.cloud.api.mdb.greenplum.v1.Config.ConnectionPoolerConfigSet getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_yandex_cloud_mdb_greenplum_v1_Resources_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_yandex_cloud_mdb_greenplum_v1_Resources_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_yandex_cloud_mdb_greenplum_v1_ConnectionPoolerConfig_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_yandex_cloud_mdb_greenplum_v1_ConnectionPoolerConfig_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_yandex_cloud_mdb_greenplum_v1_MasterSubclusterConfig_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_yandex_cloud_mdb_greenplum_v1_MasterSubclusterConfig_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_yandex_cloud_mdb_greenplum_v1_SegmentSubclusterConfig_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_yandex_cloud_mdb_greenplum_v1_SegmentSubclusterConfig_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_yandex_cloud_mdb_greenplum_v1_GreenplumConfig6_17_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_yandex_cloud_mdb_greenplum_v1_GreenplumConfig6_17_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_yandex_cloud_mdb_greenplum_v1_GreenplumConfig6_19_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_yandex_cloud_mdb_greenplum_v1_GreenplumConfig6_19_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_yandex_cloud_mdb_greenplum_v1_GreenplumConfigSet6_17_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_yandex_cloud_mdb_greenplum_v1_GreenplumConfigSet6_17_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_yandex_cloud_mdb_greenplum_v1_GreenplumConfigSet6_19_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_yandex_cloud_mdb_greenplum_v1_GreenplumConfigSet6_19_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_yandex_cloud_mdb_greenplum_v1_ConnectionPoolerConfigSet_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_yandex_cloud_mdb_greenplum_v1_ConnectionPoolerConfigSet_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n*yandex/cloud/mdb/greenplum/v1/config.p" +
      "roto\022\035yandex.cloud.mdb.greenplum.v1\032\036goo" +
      "gle/protobuf/wrappers.proto\032\035yandex/clou" +
      "d/validation.proto\"P\n\tResources\022\032\n\022resou" +
      "rce_preset_id\030\001 \001(\t\022\021\n\tdisk_size\030\002 \001(\003\022\024" +
      "\n\014disk_type_id\030\003 \001(\t\"\220\002\n\026ConnectionPoole" +
      "rConfig\022L\n\004mode\030\001 \001(\0162>.yandex.cloud.mdb" +
      ".greenplum.v1.ConnectionPoolerConfig.Poo" +
      "lMode\022)\n\004size\030\002 \001(\0132\033.google.protobuf.In" +
      "t64Value\0228\n\023client_idle_timeout\030\003 \001(\0132\033." +
      "google.protobuf.Int64Value\"C\n\010PoolMode\022\031" +
      "\n\025POOL_MODE_UNSPECIFIED\020\000\022\013\n\007SESSION\020\001\022\017" +
      "\n\013TRANSACTION\020\002\"U\n\026MasterSubclusterConfi" +
      "g\022;\n\tresources\030\001 \001(\0132(.yandex.cloud.mdb." +
      "greenplum.v1.Resources\"V\n\027SegmentSubclus" +
      "terConfig\022;\n\tresources\030\001 \001(\0132(.yandex.cl" +
      "oud.mdb.greenplum.v1.Resources\"\323\003\n\023Green" +
      "plumConfig6_17\0224\n\017max_connections\030\001 \001(\0132" +
      "\033.google.protobuf.Int64Value\022;\n\026max_slot" +
      "_wal_keep_size\030\002 \001(\0132\033.google.protobuf.I" +
      "nt64Value\022B\n\035gp_workfile_limit_per_segme" +
      "nt\030\003 \001(\0132\033.google.protobuf.Int64Value\022@\n" +
      "\033gp_workfile_limit_per_query\030\004 \001(\0132\033.goo" +
      "gle.protobuf.Int64Value\022F\n!gp_workfile_l" +
      "imit_files_per_query\030\005 \001(\0132\033.google.prot" +
      "obuf.Int64Value\022>\n\031max_prepared_transact" +
      "ions\030\006 \001(\0132\033.google.protobuf.Int64Value\022" +
      ";\n\027gp_workfile_compression\030\007 \001(\0132\032.googl" +
      "e.protobuf.BoolValue\"\323\003\n\023GreenplumConfig" +
      "6_19\0224\n\017max_connections\030\001 \001(\0132\033.google.p" +
      "rotobuf.Int64Value\022;\n\026max_slot_wal_keep_" +
      "size\030\002 \001(\0132\033.google.protobuf.Int64Value\022" +
      "B\n\035gp_workfile_limit_per_segment\030\003 \001(\0132\033" +
      ".google.protobuf.Int64Value\022@\n\033gp_workfi" +
      "le_limit_per_query\030\004 \001(\0132\033.google.protob" +
      "uf.Int64Value\022F\n!gp_workfile_limit_files" +
      "_per_query\030\005 \001(\0132\033.google.protobuf.Int64" +
      "Value\022>\n\031max_prepared_transactions\030\006 \001(\013" +
      "2\033.google.protobuf.Int64Value\022;\n\027gp_work" +
      "file_compression\030\007 \001(\0132\032.google.protobuf" +
      ".BoolValue\"\201\002\n\026GreenplumConfigSet6_17\022R\n" +
      "\020effective_config\030\001 \001(\01322.yandex.cloud.m" +
      "db.greenplum.v1.GreenplumConfig6_17B\004\350\3071" +
      "\001\022G\n\013user_config\030\002 \001(\01322.yandex.cloud.md" +
      "b.greenplum.v1.GreenplumConfig6_17\022J\n\016de" +
      "fault_config\030\003 \001(\01322.yandex.cloud.mdb.gr" +
      "eenplum.v1.GreenplumConfig6_17\"\201\002\n\026Green" +
      "plumConfigSet6_19\022R\n\020effective_config\030\001 " +
      "\001(\01322.yandex.cloud.mdb.greenplum.v1.Gree" +
      "nplumConfig6_19B\004\350\3071\001\022G\n\013user_config\030\002 \001" +
      "(\01322.yandex.cloud.mdb.greenplum.v1.Green" +
      "plumConfig6_19\022J\n\016default_config\030\003 \001(\01322" +
      ".yandex.cloud.mdb.greenplum.v1.Greenplum" +
      "Config6_19\"\215\002\n\031ConnectionPoolerConfigSet" +
      "\022U\n\020effective_config\030\001 \001(\01325.yandex.clou" +
      "d.mdb.greenplum.v1.ConnectionPoolerConfi" +
      "gB\004\350\3071\001\022J\n\013user_config\030\002 \001(\01325.yandex.cl" +
      "oud.mdb.greenplum.v1.ConnectionPoolerCon" +
      "fig\022M\n\016default_config\030\003 \001(\01325.yandex.clo" +
      "ud.mdb.greenplum.v1.ConnectionPoolerConf" +
      "igBp\n!yandex.cloud.api.mdb.greenplum.v1Z" +
      "Kgithub.com/yandex-cloud/go-genproto/yan" +
      "dex/cloud/mdb/greenplum/v1;greenplumb\006pr" +
      "oto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.protobuf.WrappersProto.getDescriptor(),
          yandex.cloud.api.Validation.getDescriptor(),
        }, assigner);
    internal_static_yandex_cloud_mdb_greenplum_v1_Resources_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_yandex_cloud_mdb_greenplum_v1_Resources_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_yandex_cloud_mdb_greenplum_v1_Resources_descriptor,
        new java.lang.String[] { "ResourcePresetId", "DiskSize", "DiskTypeId", });
    internal_static_yandex_cloud_mdb_greenplum_v1_ConnectionPoolerConfig_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_yandex_cloud_mdb_greenplum_v1_ConnectionPoolerConfig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_yandex_cloud_mdb_greenplum_v1_ConnectionPoolerConfig_descriptor,
        new java.lang.String[] { "Mode", "Size", "ClientIdleTimeout", });
    internal_static_yandex_cloud_mdb_greenplum_v1_MasterSubclusterConfig_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_yandex_cloud_mdb_greenplum_v1_MasterSubclusterConfig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_yandex_cloud_mdb_greenplum_v1_MasterSubclusterConfig_descriptor,
        new java.lang.String[] { "Resources", });
    internal_static_yandex_cloud_mdb_greenplum_v1_SegmentSubclusterConfig_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_yandex_cloud_mdb_greenplum_v1_SegmentSubclusterConfig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_yandex_cloud_mdb_greenplum_v1_SegmentSubclusterConfig_descriptor,
        new java.lang.String[] { "Resources", });
    internal_static_yandex_cloud_mdb_greenplum_v1_GreenplumConfig6_17_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_yandex_cloud_mdb_greenplum_v1_GreenplumConfig6_17_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_yandex_cloud_mdb_greenplum_v1_GreenplumConfig6_17_descriptor,
        new java.lang.String[] { "MaxConnections", "MaxSlotWalKeepSize", "GpWorkfileLimitPerSegment", "GpWorkfileLimitPerQuery", "GpWorkfileLimitFilesPerQuery", "MaxPreparedTransactions", "GpWorkfileCompression", });
    internal_static_yandex_cloud_mdb_greenplum_v1_GreenplumConfig6_19_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_yandex_cloud_mdb_greenplum_v1_GreenplumConfig6_19_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_yandex_cloud_mdb_greenplum_v1_GreenplumConfig6_19_descriptor,
        new java.lang.String[] { "MaxConnections", "MaxSlotWalKeepSize", "GpWorkfileLimitPerSegment", "GpWorkfileLimitPerQuery", "GpWorkfileLimitFilesPerQuery", "MaxPreparedTransactions", "GpWorkfileCompression", });
    internal_static_yandex_cloud_mdb_greenplum_v1_GreenplumConfigSet6_17_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_yandex_cloud_mdb_greenplum_v1_GreenplumConfigSet6_17_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_yandex_cloud_mdb_greenplum_v1_GreenplumConfigSet6_17_descriptor,
        new java.lang.String[] { "EffectiveConfig", "UserConfig", "DefaultConfig", });
    internal_static_yandex_cloud_mdb_greenplum_v1_GreenplumConfigSet6_19_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_yandex_cloud_mdb_greenplum_v1_GreenplumConfigSet6_19_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_yandex_cloud_mdb_greenplum_v1_GreenplumConfigSet6_19_descriptor,
        new java.lang.String[] { "EffectiveConfig", "UserConfig", "DefaultConfig", });
    internal_static_yandex_cloud_mdb_greenplum_v1_ConnectionPoolerConfigSet_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_yandex_cloud_mdb_greenplum_v1_ConnectionPoolerConfigSet_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_yandex_cloud_mdb_greenplum_v1_ConnectionPoolerConfigSet_descriptor,
        new java.lang.String[] { "EffectiveConfig", "UserConfig", "DefaultConfig", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(yandex.cloud.api.Validation.required);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.google.protobuf.WrappersProto.getDescriptor();
    yandex.cloud.api.Validation.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}

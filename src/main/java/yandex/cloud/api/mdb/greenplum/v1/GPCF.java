// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: yandex/cloud/mdb/greenplum/v1/config.proto

package yandex.cloud.api.mdb.greenplum.v1;

public final class GPCF {
  private GPCF() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ResourcesOrBuilder extends
      // @@protoc_insertion_point(interface_extends:yandex.cloud.mdb.greenplum.v1.Resources)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * ID of the preset for computational resources available to a host (CPU, memory etc.).
     * All available presets are listed in the [documentation](/docs/managed-greenplum/concepts/instance-types).
     * </pre>
     *
     * <code>string resource_preset_id = 1;</code>
     */
    java.lang.String getResourcePresetId();
    /**
     * <pre>
     * ID of the preset for computational resources available to a host (CPU, memory etc.).
     * All available presets are listed in the [documentation](/docs/managed-greenplum/concepts/instance-types).
     * </pre>
     *
     * <code>string resource_preset_id = 1;</code>
     */
    com.google.protobuf.ByteString
        getResourcePresetIdBytes();

    /**
     * <pre>
     * Volume of the storage available to a host.
     * </pre>
     *
     * <code>int64 disk_size = 2;</code>
     */
    long getDiskSize();

    /**
     * <pre>
     * Type of the storage environment for the host.
     * Possible values:
     * * network-hdd - network HDD drive,
     * * network-ssd - network SSD drive,
     * * local-ssd - local SSD storage.
     * </pre>
     *
     * <code>string disk_type_id = 3;</code>
     */
    java.lang.String getDiskTypeId();
    /**
     * <pre>
     * Type of the storage environment for the host.
     * Possible values:
     * * network-hdd - network HDD drive,
     * * network-ssd - network SSD drive,
     * * local-ssd - local SSD storage.
     * </pre>
     *
     * <code>string disk_type_id = 3;</code>
     */
    com.google.protobuf.ByteString
        getDiskTypeIdBytes();
  }
  /**
   * Protobuf type {@code yandex.cloud.mdb.greenplum.v1.Resources}
   */
  public  static final class Resources extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:yandex.cloud.mdb.greenplum.v1.Resources)
      ResourcesOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Resources.newBuilder() to construct.
    private Resources(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Resources() {
      resourcePresetId_ = "";
      diskSize_ = 0L;
      diskTypeId_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Resources(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              resourcePresetId_ = s;
              break;
            }
            case 16: {

              diskSize_ = input.readInt64();
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              diskTypeId_ = s;
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return yandex.cloud.api.mdb.greenplum.v1.GPCF.internal_static_yandex_cloud_mdb_greenplum_v1_Resources_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return yandex.cloud.api.mdb.greenplum.v1.GPCF.internal_static_yandex_cloud_mdb_greenplum_v1_Resources_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              yandex.cloud.api.mdb.greenplum.v1.GPCF.Resources.class, yandex.cloud.api.mdb.greenplum.v1.GPCF.Resources.Builder.class);
    }

    public static final int RESOURCE_PRESET_ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object resourcePresetId_;
    /**
     * <pre>
     * ID of the preset for computational resources available to a host (CPU, memory etc.).
     * All available presets are listed in the [documentation](/docs/managed-greenplum/concepts/instance-types).
     * </pre>
     *
     * <code>string resource_preset_id = 1;</code>
     */
    public java.lang.String getResourcePresetId() {
      java.lang.Object ref = resourcePresetId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        resourcePresetId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * ID of the preset for computational resources available to a host (CPU, memory etc.).
     * All available presets are listed in the [documentation](/docs/managed-greenplum/concepts/instance-types).
     * </pre>
     *
     * <code>string resource_preset_id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getResourcePresetIdBytes() {
      java.lang.Object ref = resourcePresetId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        resourcePresetId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DISK_SIZE_FIELD_NUMBER = 2;
    private long diskSize_;
    /**
     * <pre>
     * Volume of the storage available to a host.
     * </pre>
     *
     * <code>int64 disk_size = 2;</code>
     */
    public long getDiskSize() {
      return diskSize_;
    }

    public static final int DISK_TYPE_ID_FIELD_NUMBER = 3;
    private volatile java.lang.Object diskTypeId_;
    /**
     * <pre>
     * Type of the storage environment for the host.
     * Possible values:
     * * network-hdd - network HDD drive,
     * * network-ssd - network SSD drive,
     * * local-ssd - local SSD storage.
     * </pre>
     *
     * <code>string disk_type_id = 3;</code>
     */
    public java.lang.String getDiskTypeId() {
      java.lang.Object ref = diskTypeId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        diskTypeId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Type of the storage environment for the host.
     * Possible values:
     * * network-hdd - network HDD drive,
     * * network-ssd - network SSD drive,
     * * local-ssd - local SSD storage.
     * </pre>
     *
     * <code>string disk_type_id = 3;</code>
     */
    public com.google.protobuf.ByteString
        getDiskTypeIdBytes() {
      java.lang.Object ref = diskTypeId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        diskTypeId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getResourcePresetIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, resourcePresetId_);
      }
      if (diskSize_ != 0L) {
        output.writeInt64(2, diskSize_);
      }
      if (!getDiskTypeIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, diskTypeId_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getResourcePresetIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, resourcePresetId_);
      }
      if (diskSize_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, diskSize_);
      }
      if (!getDiskTypeIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, diskTypeId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof yandex.cloud.api.mdb.greenplum.v1.GPCF.Resources)) {
        return super.equals(obj);
      }
      yandex.cloud.api.mdb.greenplum.v1.GPCF.Resources other = (yandex.cloud.api.mdb.greenplum.v1.GPCF.Resources) obj;

      boolean result = true;
      result = result && getResourcePresetId()
          .equals(other.getResourcePresetId());
      result = result && (getDiskSize()
          == other.getDiskSize());
      result = result && getDiskTypeId()
          .equals(other.getDiskTypeId());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + RESOURCE_PRESET_ID_FIELD_NUMBER;
      hash = (53 * hash) + getResourcePresetId().hashCode();
      hash = (37 * hash) + DISK_SIZE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getDiskSize());
      hash = (37 * hash) + DISK_TYPE_ID_FIELD_NUMBER;
      hash = (53 * hash) + getDiskTypeId().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.Resources parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.Resources parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.Resources parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.Resources parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.Resources parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.Resources parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.Resources parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.Resources parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.Resources parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.Resources parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.Resources parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.Resources parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(yandex.cloud.api.mdb.greenplum.v1.GPCF.Resources prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code yandex.cloud.mdb.greenplum.v1.Resources}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:yandex.cloud.mdb.greenplum.v1.Resources)
        yandex.cloud.api.mdb.greenplum.v1.GPCF.ResourcesOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return yandex.cloud.api.mdb.greenplum.v1.GPCF.internal_static_yandex_cloud_mdb_greenplum_v1_Resources_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return yandex.cloud.api.mdb.greenplum.v1.GPCF.internal_static_yandex_cloud_mdb_greenplum_v1_Resources_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                yandex.cloud.api.mdb.greenplum.v1.GPCF.Resources.class, yandex.cloud.api.mdb.greenplum.v1.GPCF.Resources.Builder.class);
      }

      // Construct using yandex.cloud.api.mdb.greenplum.v1.GPCF.Resources.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        resourcePresetId_ = "";

        diskSize_ = 0L;

        diskTypeId_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return yandex.cloud.api.mdb.greenplum.v1.GPCF.internal_static_yandex_cloud_mdb_greenplum_v1_Resources_descriptor;
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.greenplum.v1.GPCF.Resources getDefaultInstanceForType() {
        return yandex.cloud.api.mdb.greenplum.v1.GPCF.Resources.getDefaultInstance();
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.greenplum.v1.GPCF.Resources build() {
        yandex.cloud.api.mdb.greenplum.v1.GPCF.Resources result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.greenplum.v1.GPCF.Resources buildPartial() {
        yandex.cloud.api.mdb.greenplum.v1.GPCF.Resources result = new yandex.cloud.api.mdb.greenplum.v1.GPCF.Resources(this);
        result.resourcePresetId_ = resourcePresetId_;
        result.diskSize_ = diskSize_;
        result.diskTypeId_ = diskTypeId_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof yandex.cloud.api.mdb.greenplum.v1.GPCF.Resources) {
          return mergeFrom((yandex.cloud.api.mdb.greenplum.v1.GPCF.Resources)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(yandex.cloud.api.mdb.greenplum.v1.GPCF.Resources other) {
        if (other == yandex.cloud.api.mdb.greenplum.v1.GPCF.Resources.getDefaultInstance()) return this;
        if (!other.getResourcePresetId().isEmpty()) {
          resourcePresetId_ = other.resourcePresetId_;
          onChanged();
        }
        if (other.getDiskSize() != 0L) {
          setDiskSize(other.getDiskSize());
        }
        if (!other.getDiskTypeId().isEmpty()) {
          diskTypeId_ = other.diskTypeId_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        yandex.cloud.api.mdb.greenplum.v1.GPCF.Resources parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (yandex.cloud.api.mdb.greenplum.v1.GPCF.Resources) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object resourcePresetId_ = "";
      /**
       * <pre>
       * ID of the preset for computational resources available to a host (CPU, memory etc.).
       * All available presets are listed in the [documentation](/docs/managed-greenplum/concepts/instance-types).
       * </pre>
       *
       * <code>string resource_preset_id = 1;</code>
       */
      public java.lang.String getResourcePresetId() {
        java.lang.Object ref = resourcePresetId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          resourcePresetId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * ID of the preset for computational resources available to a host (CPU, memory etc.).
       * All available presets are listed in the [documentation](/docs/managed-greenplum/concepts/instance-types).
       * </pre>
       *
       * <code>string resource_preset_id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getResourcePresetIdBytes() {
        java.lang.Object ref = resourcePresetId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          resourcePresetId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * ID of the preset for computational resources available to a host (CPU, memory etc.).
       * All available presets are listed in the [documentation](/docs/managed-greenplum/concepts/instance-types).
       * </pre>
       *
       * <code>string resource_preset_id = 1;</code>
       */
      public Builder setResourcePresetId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        resourcePresetId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ID of the preset for computational resources available to a host (CPU, memory etc.).
       * All available presets are listed in the [documentation](/docs/managed-greenplum/concepts/instance-types).
       * </pre>
       *
       * <code>string resource_preset_id = 1;</code>
       */
      public Builder clearResourcePresetId() {
        
        resourcePresetId_ = getDefaultInstance().getResourcePresetId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ID of the preset for computational resources available to a host (CPU, memory etc.).
       * All available presets are listed in the [documentation](/docs/managed-greenplum/concepts/instance-types).
       * </pre>
       *
       * <code>string resource_preset_id = 1;</code>
       */
      public Builder setResourcePresetIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        resourcePresetId_ = value;
        onChanged();
        return this;
      }

      private long diskSize_ ;
      /**
       * <pre>
       * Volume of the storage available to a host.
       * </pre>
       *
       * <code>int64 disk_size = 2;</code>
       */
      public long getDiskSize() {
        return diskSize_;
      }
      /**
       * <pre>
       * Volume of the storage available to a host.
       * </pre>
       *
       * <code>int64 disk_size = 2;</code>
       */
      public Builder setDiskSize(long value) {
        
        diskSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Volume of the storage available to a host.
       * </pre>
       *
       * <code>int64 disk_size = 2;</code>
       */
      public Builder clearDiskSize() {
        
        diskSize_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object diskTypeId_ = "";
      /**
       * <pre>
       * Type of the storage environment for the host.
       * Possible values:
       * * network-hdd - network HDD drive,
       * * network-ssd - network SSD drive,
       * * local-ssd - local SSD storage.
       * </pre>
       *
       * <code>string disk_type_id = 3;</code>
       */
      public java.lang.String getDiskTypeId() {
        java.lang.Object ref = diskTypeId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          diskTypeId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Type of the storage environment for the host.
       * Possible values:
       * * network-hdd - network HDD drive,
       * * network-ssd - network SSD drive,
       * * local-ssd - local SSD storage.
       * </pre>
       *
       * <code>string disk_type_id = 3;</code>
       */
      public com.google.protobuf.ByteString
          getDiskTypeIdBytes() {
        java.lang.Object ref = diskTypeId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          diskTypeId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Type of the storage environment for the host.
       * Possible values:
       * * network-hdd - network HDD drive,
       * * network-ssd - network SSD drive,
       * * local-ssd - local SSD storage.
       * </pre>
       *
       * <code>string disk_type_id = 3;</code>
       */
      public Builder setDiskTypeId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        diskTypeId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Type of the storage environment for the host.
       * Possible values:
       * * network-hdd - network HDD drive,
       * * network-ssd - network SSD drive,
       * * local-ssd - local SSD storage.
       * </pre>
       *
       * <code>string disk_type_id = 3;</code>
       */
      public Builder clearDiskTypeId() {
        
        diskTypeId_ = getDefaultInstance().getDiskTypeId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Type of the storage environment for the host.
       * Possible values:
       * * network-hdd - network HDD drive,
       * * network-ssd - network SSD drive,
       * * local-ssd - local SSD storage.
       * </pre>
       *
       * <code>string disk_type_id = 3;</code>
       */
      public Builder setDiskTypeIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        diskTypeId_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:yandex.cloud.mdb.greenplum.v1.Resources)
    }

    // @@protoc_insertion_point(class_scope:yandex.cloud.mdb.greenplum.v1.Resources)
    private static final yandex.cloud.api.mdb.greenplum.v1.GPCF.Resources DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new yandex.cloud.api.mdb.greenplum.v1.GPCF.Resources();
    }

    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.Resources getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Resources>
        PARSER = new com.google.protobuf.AbstractParser<Resources>() {
      @java.lang.Override
      public Resources parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Resources(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Resources> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Resources> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public yandex.cloud.api.mdb.greenplum.v1.GPCF.Resources getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ConnectionPoolerConfigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfig)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Odyssey route server pool mode. Default is session mode.
     * https://github.com/yandex/odyssey/blob/master/documentation/configuration.md#pool-string
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfig.PoolMode mode = 1;</code>
     */
    int getModeValue();
    /**
     * <pre>
     * Odyssey route server pool mode. Default is session mode.
     * https://github.com/yandex/odyssey/blob/master/documentation/configuration.md#pool-string
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfig.PoolMode mode = 1;</code>
     */
    yandex.cloud.api.mdb.greenplum.v1.GPCF.ConnectionPoolerConfig.PoolMode getMode();

    /**
     * <pre>
     * Odyssey Server pool size.
     * Keep the number of servers in the pool as much as 'pool_size'. Clients are put in a wait queue, when all servers are busy.
     * Set to zero to disable the limit.
     * https://github.com/yandex/odyssey/blob/master/documentation/configuration.md#pool_size-integer
     * </pre>
     *
     * <code>.google.protobuf.Int64Value size = 2;</code>
     */
    boolean hasSize();
    /**
     * <pre>
     * Odyssey Server pool size.
     * Keep the number of servers in the pool as much as 'pool_size'. Clients are put in a wait queue, when all servers are busy.
     * Set to zero to disable the limit.
     * https://github.com/yandex/odyssey/blob/master/documentation/configuration.md#pool_size-integer
     * </pre>
     *
     * <code>.google.protobuf.Int64Value size = 2;</code>
     */
    com.google.protobuf.Int64Value getSize();
    /**
     * <pre>
     * Odyssey Server pool size.
     * Keep the number of servers in the pool as much as 'pool_size'. Clients are put in a wait queue, when all servers are busy.
     * Set to zero to disable the limit.
     * https://github.com/yandex/odyssey/blob/master/documentation/configuration.md#pool_size-integer
     * </pre>
     *
     * <code>.google.protobuf.Int64Value size = 2;</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getSizeOrBuilder();

    /**
     * <pre>
     * Server pool idle timeout.
     * Close an server connection when it becomes idle for 'pool_ttl' seconds.
     * Set to zero to disable.
     * https://github.com/yandex/odyssey/blob/master/documentation/configuration.md#pool_ttl-integer
     * </pre>
     *
     * <code>.google.protobuf.Int64Value client_idle_timeout = 3;</code>
     */
    boolean hasClientIdleTimeout();
    /**
     * <pre>
     * Server pool idle timeout.
     * Close an server connection when it becomes idle for 'pool_ttl' seconds.
     * Set to zero to disable.
     * https://github.com/yandex/odyssey/blob/master/documentation/configuration.md#pool_ttl-integer
     * </pre>
     *
     * <code>.google.protobuf.Int64Value client_idle_timeout = 3;</code>
     */
    com.google.protobuf.Int64Value getClientIdleTimeout();
    /**
     * <pre>
     * Server pool idle timeout.
     * Close an server connection when it becomes idle for 'pool_ttl' seconds.
     * Set to zero to disable.
     * https://github.com/yandex/odyssey/blob/master/documentation/configuration.md#pool_ttl-integer
     * </pre>
     *
     * <code>.google.protobuf.Int64Value client_idle_timeout = 3;</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getClientIdleTimeoutOrBuilder();
  }
  /**
   * Protobuf type {@code yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfig}
   */
  public  static final class ConnectionPoolerConfig extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfig)
      ConnectionPoolerConfigOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ConnectionPoolerConfig.newBuilder() to construct.
    private ConnectionPoolerConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ConnectionPoolerConfig() {
      mode_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ConnectionPoolerConfig(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              mode_ = rawValue;
              break;
            }
            case 18: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (size_ != null) {
                subBuilder = size_.toBuilder();
              }
              size_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(size_);
                size_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (clientIdleTimeout_ != null) {
                subBuilder = clientIdleTimeout_.toBuilder();
              }
              clientIdleTimeout_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientIdleTimeout_);
                clientIdleTimeout_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return yandex.cloud.api.mdb.greenplum.v1.GPCF.internal_static_yandex_cloud_mdb_greenplum_v1_ConnectionPoolerConfig_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return yandex.cloud.api.mdb.greenplum.v1.GPCF.internal_static_yandex_cloud_mdb_greenplum_v1_ConnectionPoolerConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              yandex.cloud.api.mdb.greenplum.v1.GPCF.ConnectionPoolerConfig.class, yandex.cloud.api.mdb.greenplum.v1.GPCF.ConnectionPoolerConfig.Builder.class);
    }

    /**
     * Protobuf enum {@code yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfig.PoolMode}
     */
    public enum PoolMode
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>POOL_MODE_UNSPECIFIED = 0;</code>
       */
      POOL_MODE_UNSPECIFIED(0),
      /**
       * <code>SESSION = 1;</code>
       */
      SESSION(1),
      /**
       * <code>TRANSACTION = 2;</code>
       */
      TRANSACTION(2),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>POOL_MODE_UNSPECIFIED = 0;</code>
       */
      public static final int POOL_MODE_UNSPECIFIED_VALUE = 0;
      /**
       * <code>SESSION = 1;</code>
       */
      public static final int SESSION_VALUE = 1;
      /**
       * <code>TRANSACTION = 2;</code>
       */
      public static final int TRANSACTION_VALUE = 2;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static PoolMode valueOf(int value) {
        return forNumber(value);
      }

      public static PoolMode forNumber(int value) {
        switch (value) {
          case 0: return POOL_MODE_UNSPECIFIED;
          case 1: return SESSION;
          case 2: return TRANSACTION;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<PoolMode>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          PoolMode> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<PoolMode>() {
              public PoolMode findValueByNumber(int number) {
                return PoolMode.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return yandex.cloud.api.mdb.greenplum.v1.GPCF.ConnectionPoolerConfig.getDescriptor().getEnumTypes().get(0);
      }

      private static final PoolMode[] VALUES = values();

      public static PoolMode valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private PoolMode(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfig.PoolMode)
    }

    public static final int MODE_FIELD_NUMBER = 1;
    private int mode_;
    /**
     * <pre>
     * Odyssey route server pool mode. Default is session mode.
     * https://github.com/yandex/odyssey/blob/master/documentation/configuration.md#pool-string
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfig.PoolMode mode = 1;</code>
     */
    public int getModeValue() {
      return mode_;
    }
    /**
     * <pre>
     * Odyssey route server pool mode. Default is session mode.
     * https://github.com/yandex/odyssey/blob/master/documentation/configuration.md#pool-string
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfig.PoolMode mode = 1;</code>
     */
    public yandex.cloud.api.mdb.greenplum.v1.GPCF.ConnectionPoolerConfig.PoolMode getMode() {
      @SuppressWarnings("deprecation")
      yandex.cloud.api.mdb.greenplum.v1.GPCF.ConnectionPoolerConfig.PoolMode result = yandex.cloud.api.mdb.greenplum.v1.GPCF.ConnectionPoolerConfig.PoolMode.valueOf(mode_);
      return result == null ? yandex.cloud.api.mdb.greenplum.v1.GPCF.ConnectionPoolerConfig.PoolMode.UNRECOGNIZED : result;
    }

    public static final int SIZE_FIELD_NUMBER = 2;
    private com.google.protobuf.Int64Value size_;
    /**
     * <pre>
     * Odyssey Server pool size.
     * Keep the number of servers in the pool as much as 'pool_size'. Clients are put in a wait queue, when all servers are busy.
     * Set to zero to disable the limit.
     * https://github.com/yandex/odyssey/blob/master/documentation/configuration.md#pool_size-integer
     * </pre>
     *
     * <code>.google.protobuf.Int64Value size = 2;</code>
     */
    public boolean hasSize() {
      return size_ != null;
    }
    /**
     * <pre>
     * Odyssey Server pool size.
     * Keep the number of servers in the pool as much as 'pool_size'. Clients are put in a wait queue, when all servers are busy.
     * Set to zero to disable the limit.
     * https://github.com/yandex/odyssey/blob/master/documentation/configuration.md#pool_size-integer
     * </pre>
     *
     * <code>.google.protobuf.Int64Value size = 2;</code>
     */
    public com.google.protobuf.Int64Value getSize() {
      return size_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : size_;
    }
    /**
     * <pre>
     * Odyssey Server pool size.
     * Keep the number of servers in the pool as much as 'pool_size'. Clients are put in a wait queue, when all servers are busy.
     * Set to zero to disable the limit.
     * https://github.com/yandex/odyssey/blob/master/documentation/configuration.md#pool_size-integer
     * </pre>
     *
     * <code>.google.protobuf.Int64Value size = 2;</code>
     */
    public com.google.protobuf.Int64ValueOrBuilder getSizeOrBuilder() {
      return getSize();
    }

    public static final int CLIENT_IDLE_TIMEOUT_FIELD_NUMBER = 3;
    private com.google.protobuf.Int64Value clientIdleTimeout_;
    /**
     * <pre>
     * Server pool idle timeout.
     * Close an server connection when it becomes idle for 'pool_ttl' seconds.
     * Set to zero to disable.
     * https://github.com/yandex/odyssey/blob/master/documentation/configuration.md#pool_ttl-integer
     * </pre>
     *
     * <code>.google.protobuf.Int64Value client_idle_timeout = 3;</code>
     */
    public boolean hasClientIdleTimeout() {
      return clientIdleTimeout_ != null;
    }
    /**
     * <pre>
     * Server pool idle timeout.
     * Close an server connection when it becomes idle for 'pool_ttl' seconds.
     * Set to zero to disable.
     * https://github.com/yandex/odyssey/blob/master/documentation/configuration.md#pool_ttl-integer
     * </pre>
     *
     * <code>.google.protobuf.Int64Value client_idle_timeout = 3;</code>
     */
    public com.google.protobuf.Int64Value getClientIdleTimeout() {
      return clientIdleTimeout_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : clientIdleTimeout_;
    }
    /**
     * <pre>
     * Server pool idle timeout.
     * Close an server connection when it becomes idle for 'pool_ttl' seconds.
     * Set to zero to disable.
     * https://github.com/yandex/odyssey/blob/master/documentation/configuration.md#pool_ttl-integer
     * </pre>
     *
     * <code>.google.protobuf.Int64Value client_idle_timeout = 3;</code>
     */
    public com.google.protobuf.Int64ValueOrBuilder getClientIdleTimeoutOrBuilder() {
      return getClientIdleTimeout();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (mode_ != yandex.cloud.api.mdb.greenplum.v1.GPCF.ConnectionPoolerConfig.PoolMode.POOL_MODE_UNSPECIFIED.getNumber()) {
        output.writeEnum(1, mode_);
      }
      if (size_ != null) {
        output.writeMessage(2, getSize());
      }
      if (clientIdleTimeout_ != null) {
        output.writeMessage(3, getClientIdleTimeout());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (mode_ != yandex.cloud.api.mdb.greenplum.v1.GPCF.ConnectionPoolerConfig.PoolMode.POOL_MODE_UNSPECIFIED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, mode_);
      }
      if (size_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getSize());
      }
      if (clientIdleTimeout_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getClientIdleTimeout());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof yandex.cloud.api.mdb.greenplum.v1.GPCF.ConnectionPoolerConfig)) {
        return super.equals(obj);
      }
      yandex.cloud.api.mdb.greenplum.v1.GPCF.ConnectionPoolerConfig other = (yandex.cloud.api.mdb.greenplum.v1.GPCF.ConnectionPoolerConfig) obj;

      boolean result = true;
      result = result && mode_ == other.mode_;
      result = result && (hasSize() == other.hasSize());
      if (hasSize()) {
        result = result && getSize()
            .equals(other.getSize());
      }
      result = result && (hasClientIdleTimeout() == other.hasClientIdleTimeout());
      if (hasClientIdleTimeout()) {
        result = result && getClientIdleTimeout()
            .equals(other.getClientIdleTimeout());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + MODE_FIELD_NUMBER;
      hash = (53 * hash) + mode_;
      if (hasSize()) {
        hash = (37 * hash) + SIZE_FIELD_NUMBER;
        hash = (53 * hash) + getSize().hashCode();
      }
      if (hasClientIdleTimeout()) {
        hash = (37 * hash) + CLIENT_IDLE_TIMEOUT_FIELD_NUMBER;
        hash = (53 * hash) + getClientIdleTimeout().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.ConnectionPoolerConfig parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.ConnectionPoolerConfig parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.ConnectionPoolerConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.ConnectionPoolerConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.ConnectionPoolerConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.ConnectionPoolerConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.ConnectionPoolerConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.ConnectionPoolerConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.ConnectionPoolerConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.ConnectionPoolerConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.ConnectionPoolerConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.ConnectionPoolerConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(yandex.cloud.api.mdb.greenplum.v1.GPCF.ConnectionPoolerConfig prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfig}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfig)
        yandex.cloud.api.mdb.greenplum.v1.GPCF.ConnectionPoolerConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return yandex.cloud.api.mdb.greenplum.v1.GPCF.internal_static_yandex_cloud_mdb_greenplum_v1_ConnectionPoolerConfig_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return yandex.cloud.api.mdb.greenplum.v1.GPCF.internal_static_yandex_cloud_mdb_greenplum_v1_ConnectionPoolerConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                yandex.cloud.api.mdb.greenplum.v1.GPCF.ConnectionPoolerConfig.class, yandex.cloud.api.mdb.greenplum.v1.GPCF.ConnectionPoolerConfig.Builder.class);
      }

      // Construct using yandex.cloud.api.mdb.greenplum.v1.GPCF.ConnectionPoolerConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        mode_ = 0;

        if (sizeBuilder_ == null) {
          size_ = null;
        } else {
          size_ = null;
          sizeBuilder_ = null;
        }
        if (clientIdleTimeoutBuilder_ == null) {
          clientIdleTimeout_ = null;
        } else {
          clientIdleTimeout_ = null;
          clientIdleTimeoutBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return yandex.cloud.api.mdb.greenplum.v1.GPCF.internal_static_yandex_cloud_mdb_greenplum_v1_ConnectionPoolerConfig_descriptor;
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.greenplum.v1.GPCF.ConnectionPoolerConfig getDefaultInstanceForType() {
        return yandex.cloud.api.mdb.greenplum.v1.GPCF.ConnectionPoolerConfig.getDefaultInstance();
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.greenplum.v1.GPCF.ConnectionPoolerConfig build() {
        yandex.cloud.api.mdb.greenplum.v1.GPCF.ConnectionPoolerConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.greenplum.v1.GPCF.ConnectionPoolerConfig buildPartial() {
        yandex.cloud.api.mdb.greenplum.v1.GPCF.ConnectionPoolerConfig result = new yandex.cloud.api.mdb.greenplum.v1.GPCF.ConnectionPoolerConfig(this);
        result.mode_ = mode_;
        if (sizeBuilder_ == null) {
          result.size_ = size_;
        } else {
          result.size_ = sizeBuilder_.build();
        }
        if (clientIdleTimeoutBuilder_ == null) {
          result.clientIdleTimeout_ = clientIdleTimeout_;
        } else {
          result.clientIdleTimeout_ = clientIdleTimeoutBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof yandex.cloud.api.mdb.greenplum.v1.GPCF.ConnectionPoolerConfig) {
          return mergeFrom((yandex.cloud.api.mdb.greenplum.v1.GPCF.ConnectionPoolerConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(yandex.cloud.api.mdb.greenplum.v1.GPCF.ConnectionPoolerConfig other) {
        if (other == yandex.cloud.api.mdb.greenplum.v1.GPCF.ConnectionPoolerConfig.getDefaultInstance()) return this;
        if (other.mode_ != 0) {
          setModeValue(other.getModeValue());
        }
        if (other.hasSize()) {
          mergeSize(other.getSize());
        }
        if (other.hasClientIdleTimeout()) {
          mergeClientIdleTimeout(other.getClientIdleTimeout());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        yandex.cloud.api.mdb.greenplum.v1.GPCF.ConnectionPoolerConfig parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (yandex.cloud.api.mdb.greenplum.v1.GPCF.ConnectionPoolerConfig) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int mode_ = 0;
      /**
       * <pre>
       * Odyssey route server pool mode. Default is session mode.
       * https://github.com/yandex/odyssey/blob/master/documentation/configuration.md#pool-string
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfig.PoolMode mode = 1;</code>
       */
      public int getModeValue() {
        return mode_;
      }
      /**
       * <pre>
       * Odyssey route server pool mode. Default is session mode.
       * https://github.com/yandex/odyssey/blob/master/documentation/configuration.md#pool-string
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfig.PoolMode mode = 1;</code>
       */
      public Builder setModeValue(int value) {
        mode_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Odyssey route server pool mode. Default is session mode.
       * https://github.com/yandex/odyssey/blob/master/documentation/configuration.md#pool-string
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfig.PoolMode mode = 1;</code>
       */
      public yandex.cloud.api.mdb.greenplum.v1.GPCF.ConnectionPoolerConfig.PoolMode getMode() {
        @SuppressWarnings("deprecation")
        yandex.cloud.api.mdb.greenplum.v1.GPCF.ConnectionPoolerConfig.PoolMode result = yandex.cloud.api.mdb.greenplum.v1.GPCF.ConnectionPoolerConfig.PoolMode.valueOf(mode_);
        return result == null ? yandex.cloud.api.mdb.greenplum.v1.GPCF.ConnectionPoolerConfig.PoolMode.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Odyssey route server pool mode. Default is session mode.
       * https://github.com/yandex/odyssey/blob/master/documentation/configuration.md#pool-string
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfig.PoolMode mode = 1;</code>
       */
      public Builder setMode(yandex.cloud.api.mdb.greenplum.v1.GPCF.ConnectionPoolerConfig.PoolMode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        mode_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Odyssey route server pool mode. Default is session mode.
       * https://github.com/yandex/odyssey/blob/master/documentation/configuration.md#pool-string
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfig.PoolMode mode = 1;</code>
       */
      public Builder clearMode() {
        
        mode_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Int64Value size_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> sizeBuilder_;
      /**
       * <pre>
       * Odyssey Server pool size.
       * Keep the number of servers in the pool as much as 'pool_size'. Clients are put in a wait queue, when all servers are busy.
       * Set to zero to disable the limit.
       * https://github.com/yandex/odyssey/blob/master/documentation/configuration.md#pool_size-integer
       * </pre>
       *
       * <code>.google.protobuf.Int64Value size = 2;</code>
       */
      public boolean hasSize() {
        return sizeBuilder_ != null || size_ != null;
      }
      /**
       * <pre>
       * Odyssey Server pool size.
       * Keep the number of servers in the pool as much as 'pool_size'. Clients are put in a wait queue, when all servers are busy.
       * Set to zero to disable the limit.
       * https://github.com/yandex/odyssey/blob/master/documentation/configuration.md#pool_size-integer
       * </pre>
       *
       * <code>.google.protobuf.Int64Value size = 2;</code>
       */
      public com.google.protobuf.Int64Value getSize() {
        if (sizeBuilder_ == null) {
          return size_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : size_;
        } else {
          return sizeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Odyssey Server pool size.
       * Keep the number of servers in the pool as much as 'pool_size'. Clients are put in a wait queue, when all servers are busy.
       * Set to zero to disable the limit.
       * https://github.com/yandex/odyssey/blob/master/documentation/configuration.md#pool_size-integer
       * </pre>
       *
       * <code>.google.protobuf.Int64Value size = 2;</code>
       */
      public Builder setSize(com.google.protobuf.Int64Value value) {
        if (sizeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          size_ = value;
          onChanged();
        } else {
          sizeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Odyssey Server pool size.
       * Keep the number of servers in the pool as much as 'pool_size'. Clients are put in a wait queue, when all servers are busy.
       * Set to zero to disable the limit.
       * https://github.com/yandex/odyssey/blob/master/documentation/configuration.md#pool_size-integer
       * </pre>
       *
       * <code>.google.protobuf.Int64Value size = 2;</code>
       */
      public Builder setSize(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (sizeBuilder_ == null) {
          size_ = builderForValue.build();
          onChanged();
        } else {
          sizeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Odyssey Server pool size.
       * Keep the number of servers in the pool as much as 'pool_size'. Clients are put in a wait queue, when all servers are busy.
       * Set to zero to disable the limit.
       * https://github.com/yandex/odyssey/blob/master/documentation/configuration.md#pool_size-integer
       * </pre>
       *
       * <code>.google.protobuf.Int64Value size = 2;</code>
       */
      public Builder mergeSize(com.google.protobuf.Int64Value value) {
        if (sizeBuilder_ == null) {
          if (size_ != null) {
            size_ =
              com.google.protobuf.Int64Value.newBuilder(size_).mergeFrom(value).buildPartial();
          } else {
            size_ = value;
          }
          onChanged();
        } else {
          sizeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Odyssey Server pool size.
       * Keep the number of servers in the pool as much as 'pool_size'. Clients are put in a wait queue, when all servers are busy.
       * Set to zero to disable the limit.
       * https://github.com/yandex/odyssey/blob/master/documentation/configuration.md#pool_size-integer
       * </pre>
       *
       * <code>.google.protobuf.Int64Value size = 2;</code>
       */
      public Builder clearSize() {
        if (sizeBuilder_ == null) {
          size_ = null;
          onChanged();
        } else {
          size_ = null;
          sizeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Odyssey Server pool size.
       * Keep the number of servers in the pool as much as 'pool_size'. Clients are put in a wait queue, when all servers are busy.
       * Set to zero to disable the limit.
       * https://github.com/yandex/odyssey/blob/master/documentation/configuration.md#pool_size-integer
       * </pre>
       *
       * <code>.google.protobuf.Int64Value size = 2;</code>
       */
      public com.google.protobuf.Int64Value.Builder getSizeBuilder() {
        
        onChanged();
        return getSizeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Odyssey Server pool size.
       * Keep the number of servers in the pool as much as 'pool_size'. Clients are put in a wait queue, when all servers are busy.
       * Set to zero to disable the limit.
       * https://github.com/yandex/odyssey/blob/master/documentation/configuration.md#pool_size-integer
       * </pre>
       *
       * <code>.google.protobuf.Int64Value size = 2;</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getSizeOrBuilder() {
        if (sizeBuilder_ != null) {
          return sizeBuilder_.getMessageOrBuilder();
        } else {
          return size_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : size_;
        }
      }
      /**
       * <pre>
       * Odyssey Server pool size.
       * Keep the number of servers in the pool as much as 'pool_size'. Clients are put in a wait queue, when all servers are busy.
       * Set to zero to disable the limit.
       * https://github.com/yandex/odyssey/blob/master/documentation/configuration.md#pool_size-integer
       * </pre>
       *
       * <code>.google.protobuf.Int64Value size = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getSizeFieldBuilder() {
        if (sizeBuilder_ == null) {
          sizeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getSize(),
                  getParentForChildren(),
                  isClean());
          size_ = null;
        }
        return sizeBuilder_;
      }

      private com.google.protobuf.Int64Value clientIdleTimeout_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> clientIdleTimeoutBuilder_;
      /**
       * <pre>
       * Server pool idle timeout.
       * Close an server connection when it becomes idle for 'pool_ttl' seconds.
       * Set to zero to disable.
       * https://github.com/yandex/odyssey/blob/master/documentation/configuration.md#pool_ttl-integer
       * </pre>
       *
       * <code>.google.protobuf.Int64Value client_idle_timeout = 3;</code>
       */
      public boolean hasClientIdleTimeout() {
        return clientIdleTimeoutBuilder_ != null || clientIdleTimeout_ != null;
      }
      /**
       * <pre>
       * Server pool idle timeout.
       * Close an server connection when it becomes idle for 'pool_ttl' seconds.
       * Set to zero to disable.
       * https://github.com/yandex/odyssey/blob/master/documentation/configuration.md#pool_ttl-integer
       * </pre>
       *
       * <code>.google.protobuf.Int64Value client_idle_timeout = 3;</code>
       */
      public com.google.protobuf.Int64Value getClientIdleTimeout() {
        if (clientIdleTimeoutBuilder_ == null) {
          return clientIdleTimeout_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : clientIdleTimeout_;
        } else {
          return clientIdleTimeoutBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Server pool idle timeout.
       * Close an server connection when it becomes idle for 'pool_ttl' seconds.
       * Set to zero to disable.
       * https://github.com/yandex/odyssey/blob/master/documentation/configuration.md#pool_ttl-integer
       * </pre>
       *
       * <code>.google.protobuf.Int64Value client_idle_timeout = 3;</code>
       */
      public Builder setClientIdleTimeout(com.google.protobuf.Int64Value value) {
        if (clientIdleTimeoutBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientIdleTimeout_ = value;
          onChanged();
        } else {
          clientIdleTimeoutBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Server pool idle timeout.
       * Close an server connection when it becomes idle for 'pool_ttl' seconds.
       * Set to zero to disable.
       * https://github.com/yandex/odyssey/blob/master/documentation/configuration.md#pool_ttl-integer
       * </pre>
       *
       * <code>.google.protobuf.Int64Value client_idle_timeout = 3;</code>
       */
      public Builder setClientIdleTimeout(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (clientIdleTimeoutBuilder_ == null) {
          clientIdleTimeout_ = builderForValue.build();
          onChanged();
        } else {
          clientIdleTimeoutBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Server pool idle timeout.
       * Close an server connection when it becomes idle for 'pool_ttl' seconds.
       * Set to zero to disable.
       * https://github.com/yandex/odyssey/blob/master/documentation/configuration.md#pool_ttl-integer
       * </pre>
       *
       * <code>.google.protobuf.Int64Value client_idle_timeout = 3;</code>
       */
      public Builder mergeClientIdleTimeout(com.google.protobuf.Int64Value value) {
        if (clientIdleTimeoutBuilder_ == null) {
          if (clientIdleTimeout_ != null) {
            clientIdleTimeout_ =
              com.google.protobuf.Int64Value.newBuilder(clientIdleTimeout_).mergeFrom(value).buildPartial();
          } else {
            clientIdleTimeout_ = value;
          }
          onChanged();
        } else {
          clientIdleTimeoutBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Server pool idle timeout.
       * Close an server connection when it becomes idle for 'pool_ttl' seconds.
       * Set to zero to disable.
       * https://github.com/yandex/odyssey/blob/master/documentation/configuration.md#pool_ttl-integer
       * </pre>
       *
       * <code>.google.protobuf.Int64Value client_idle_timeout = 3;</code>
       */
      public Builder clearClientIdleTimeout() {
        if (clientIdleTimeoutBuilder_ == null) {
          clientIdleTimeout_ = null;
          onChanged();
        } else {
          clientIdleTimeout_ = null;
          clientIdleTimeoutBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Server pool idle timeout.
       * Close an server connection when it becomes idle for 'pool_ttl' seconds.
       * Set to zero to disable.
       * https://github.com/yandex/odyssey/blob/master/documentation/configuration.md#pool_ttl-integer
       * </pre>
       *
       * <code>.google.protobuf.Int64Value client_idle_timeout = 3;</code>
       */
      public com.google.protobuf.Int64Value.Builder getClientIdleTimeoutBuilder() {
        
        onChanged();
        return getClientIdleTimeoutFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Server pool idle timeout.
       * Close an server connection when it becomes idle for 'pool_ttl' seconds.
       * Set to zero to disable.
       * https://github.com/yandex/odyssey/blob/master/documentation/configuration.md#pool_ttl-integer
       * </pre>
       *
       * <code>.google.protobuf.Int64Value client_idle_timeout = 3;</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getClientIdleTimeoutOrBuilder() {
        if (clientIdleTimeoutBuilder_ != null) {
          return clientIdleTimeoutBuilder_.getMessageOrBuilder();
        } else {
          return clientIdleTimeout_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : clientIdleTimeout_;
        }
      }
      /**
       * <pre>
       * Server pool idle timeout.
       * Close an server connection when it becomes idle for 'pool_ttl' seconds.
       * Set to zero to disable.
       * https://github.com/yandex/odyssey/blob/master/documentation/configuration.md#pool_ttl-integer
       * </pre>
       *
       * <code>.google.protobuf.Int64Value client_idle_timeout = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getClientIdleTimeoutFieldBuilder() {
        if (clientIdleTimeoutBuilder_ == null) {
          clientIdleTimeoutBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getClientIdleTimeout(),
                  getParentForChildren(),
                  isClean());
          clientIdleTimeout_ = null;
        }
        return clientIdleTimeoutBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfig)
    }

    // @@protoc_insertion_point(class_scope:yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfig)
    private static final yandex.cloud.api.mdb.greenplum.v1.GPCF.ConnectionPoolerConfig DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new yandex.cloud.api.mdb.greenplum.v1.GPCF.ConnectionPoolerConfig();
    }

    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.ConnectionPoolerConfig getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ConnectionPoolerConfig>
        PARSER = new com.google.protobuf.AbstractParser<ConnectionPoolerConfig>() {
      @java.lang.Override
      public ConnectionPoolerConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ConnectionPoolerConfig(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ConnectionPoolerConfig> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ConnectionPoolerConfig> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public yandex.cloud.api.mdb.greenplum.v1.GPCF.ConnectionPoolerConfig getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MasterSubclusterConfigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:yandex.cloud.mdb.greenplum.v1.MasterSubclusterConfig)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Resources allocated to Greenplum master subcluster hosts.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.Resources resources = 1;</code>
     */
    boolean hasResources();
    /**
     * <pre>
     * Resources allocated to Greenplum master subcluster hosts.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.Resources resources = 1;</code>
     */
    yandex.cloud.api.mdb.greenplum.v1.GPCF.Resources getResources();
    /**
     * <pre>
     * Resources allocated to Greenplum master subcluster hosts.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.Resources resources = 1;</code>
     */
    yandex.cloud.api.mdb.greenplum.v1.GPCF.ResourcesOrBuilder getResourcesOrBuilder();

    /**
     * <pre>
     * Configuration settings of a Greenplum master server.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfigSet config = 2;</code>
     */
    boolean hasConfig();
    /**
     * <pre>
     * Configuration settings of a Greenplum master server.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfigSet config = 2;</code>
     */
    yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfigSet getConfig();
    /**
     * <pre>
     * Configuration settings of a Greenplum master server.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfigSet config = 2;</code>
     */
    yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfigSetOrBuilder getConfigOrBuilder();
  }
  /**
   * <pre>
   * Configuration of master subcluster
   * </pre>
   *
   * Protobuf type {@code yandex.cloud.mdb.greenplum.v1.MasterSubclusterConfig}
   */
  public  static final class MasterSubclusterConfig extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:yandex.cloud.mdb.greenplum.v1.MasterSubclusterConfig)
      MasterSubclusterConfigOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MasterSubclusterConfig.newBuilder() to construct.
    private MasterSubclusterConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MasterSubclusterConfig() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MasterSubclusterConfig(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              yandex.cloud.api.mdb.greenplum.v1.GPCF.Resources.Builder subBuilder = null;
              if (resources_ != null) {
                subBuilder = resources_.toBuilder();
              }
              resources_ = input.readMessage(yandex.cloud.api.mdb.greenplum.v1.GPCF.Resources.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(resources_);
                resources_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfigSet.Builder subBuilder = null;
              if (config_ != null) {
                subBuilder = config_.toBuilder();
              }
              config_ = input.readMessage(yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfigSet.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(config_);
                config_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return yandex.cloud.api.mdb.greenplum.v1.GPCF.internal_static_yandex_cloud_mdb_greenplum_v1_MasterSubclusterConfig_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return yandex.cloud.api.mdb.greenplum.v1.GPCF.internal_static_yandex_cloud_mdb_greenplum_v1_MasterSubclusterConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              yandex.cloud.api.mdb.greenplum.v1.GPCF.MasterSubclusterConfig.class, yandex.cloud.api.mdb.greenplum.v1.GPCF.MasterSubclusterConfig.Builder.class);
    }

    public static final int RESOURCES_FIELD_NUMBER = 1;
    private yandex.cloud.api.mdb.greenplum.v1.GPCF.Resources resources_;
    /**
     * <pre>
     * Resources allocated to Greenplum master subcluster hosts.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.Resources resources = 1;</code>
     */
    public boolean hasResources() {
      return resources_ != null;
    }
    /**
     * <pre>
     * Resources allocated to Greenplum master subcluster hosts.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.Resources resources = 1;</code>
     */
    public yandex.cloud.api.mdb.greenplum.v1.GPCF.Resources getResources() {
      return resources_ == null ? yandex.cloud.api.mdb.greenplum.v1.GPCF.Resources.getDefaultInstance() : resources_;
    }
    /**
     * <pre>
     * Resources allocated to Greenplum master subcluster hosts.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.Resources resources = 1;</code>
     */
    public yandex.cloud.api.mdb.greenplum.v1.GPCF.ResourcesOrBuilder getResourcesOrBuilder() {
      return getResources();
    }

    public static final int CONFIG_FIELD_NUMBER = 2;
    private yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfigSet config_;
    /**
     * <pre>
     * Configuration settings of a Greenplum master server.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfigSet config = 2;</code>
     */
    public boolean hasConfig() {
      return config_ != null;
    }
    /**
     * <pre>
     * Configuration settings of a Greenplum master server.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfigSet config = 2;</code>
     */
    public yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfigSet getConfig() {
      return config_ == null ? yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfigSet.getDefaultInstance() : config_;
    }
    /**
     * <pre>
     * Configuration settings of a Greenplum master server.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfigSet config = 2;</code>
     */
    public yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfigSetOrBuilder getConfigOrBuilder() {
      return getConfig();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (resources_ != null) {
        output.writeMessage(1, getResources());
      }
      if (config_ != null) {
        output.writeMessage(2, getConfig());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (resources_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getResources());
      }
      if (config_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getConfig());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof yandex.cloud.api.mdb.greenplum.v1.GPCF.MasterSubclusterConfig)) {
        return super.equals(obj);
      }
      yandex.cloud.api.mdb.greenplum.v1.GPCF.MasterSubclusterConfig other = (yandex.cloud.api.mdb.greenplum.v1.GPCF.MasterSubclusterConfig) obj;

      boolean result = true;
      result = result && (hasResources() == other.hasResources());
      if (hasResources()) {
        result = result && getResources()
            .equals(other.getResources());
      }
      result = result && (hasConfig() == other.hasConfig());
      if (hasConfig()) {
        result = result && getConfig()
            .equals(other.getConfig());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasResources()) {
        hash = (37 * hash) + RESOURCES_FIELD_NUMBER;
        hash = (53 * hash) + getResources().hashCode();
      }
      if (hasConfig()) {
        hash = (37 * hash) + CONFIG_FIELD_NUMBER;
        hash = (53 * hash) + getConfig().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.MasterSubclusterConfig parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.MasterSubclusterConfig parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.MasterSubclusterConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.MasterSubclusterConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.MasterSubclusterConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.MasterSubclusterConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.MasterSubclusterConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.MasterSubclusterConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.MasterSubclusterConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.MasterSubclusterConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.MasterSubclusterConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.MasterSubclusterConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(yandex.cloud.api.mdb.greenplum.v1.GPCF.MasterSubclusterConfig prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Configuration of master subcluster
     * </pre>
     *
     * Protobuf type {@code yandex.cloud.mdb.greenplum.v1.MasterSubclusterConfig}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:yandex.cloud.mdb.greenplum.v1.MasterSubclusterConfig)
        yandex.cloud.api.mdb.greenplum.v1.GPCF.MasterSubclusterConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return yandex.cloud.api.mdb.greenplum.v1.GPCF.internal_static_yandex_cloud_mdb_greenplum_v1_MasterSubclusterConfig_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return yandex.cloud.api.mdb.greenplum.v1.GPCF.internal_static_yandex_cloud_mdb_greenplum_v1_MasterSubclusterConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                yandex.cloud.api.mdb.greenplum.v1.GPCF.MasterSubclusterConfig.class, yandex.cloud.api.mdb.greenplum.v1.GPCF.MasterSubclusterConfig.Builder.class);
      }

      // Construct using yandex.cloud.api.mdb.greenplum.v1.GPCF.MasterSubclusterConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (resourcesBuilder_ == null) {
          resources_ = null;
        } else {
          resources_ = null;
          resourcesBuilder_ = null;
        }
        if (configBuilder_ == null) {
          config_ = null;
        } else {
          config_ = null;
          configBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return yandex.cloud.api.mdb.greenplum.v1.GPCF.internal_static_yandex_cloud_mdb_greenplum_v1_MasterSubclusterConfig_descriptor;
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.greenplum.v1.GPCF.MasterSubclusterConfig getDefaultInstanceForType() {
        return yandex.cloud.api.mdb.greenplum.v1.GPCF.MasterSubclusterConfig.getDefaultInstance();
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.greenplum.v1.GPCF.MasterSubclusterConfig build() {
        yandex.cloud.api.mdb.greenplum.v1.GPCF.MasterSubclusterConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.greenplum.v1.GPCF.MasterSubclusterConfig buildPartial() {
        yandex.cloud.api.mdb.greenplum.v1.GPCF.MasterSubclusterConfig result = new yandex.cloud.api.mdb.greenplum.v1.GPCF.MasterSubclusterConfig(this);
        if (resourcesBuilder_ == null) {
          result.resources_ = resources_;
        } else {
          result.resources_ = resourcesBuilder_.build();
        }
        if (configBuilder_ == null) {
          result.config_ = config_;
        } else {
          result.config_ = configBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof yandex.cloud.api.mdb.greenplum.v1.GPCF.MasterSubclusterConfig) {
          return mergeFrom((yandex.cloud.api.mdb.greenplum.v1.GPCF.MasterSubclusterConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(yandex.cloud.api.mdb.greenplum.v1.GPCF.MasterSubclusterConfig other) {
        if (other == yandex.cloud.api.mdb.greenplum.v1.GPCF.MasterSubclusterConfig.getDefaultInstance()) return this;
        if (other.hasResources()) {
          mergeResources(other.getResources());
        }
        if (other.hasConfig()) {
          mergeConfig(other.getConfig());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        yandex.cloud.api.mdb.greenplum.v1.GPCF.MasterSubclusterConfig parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (yandex.cloud.api.mdb.greenplum.v1.GPCF.MasterSubclusterConfig) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private yandex.cloud.api.mdb.greenplum.v1.GPCF.Resources resources_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.mdb.greenplum.v1.GPCF.Resources, yandex.cloud.api.mdb.greenplum.v1.GPCF.Resources.Builder, yandex.cloud.api.mdb.greenplum.v1.GPCF.ResourcesOrBuilder> resourcesBuilder_;
      /**
       * <pre>
       * Resources allocated to Greenplum master subcluster hosts.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.Resources resources = 1;</code>
       */
      public boolean hasResources() {
        return resourcesBuilder_ != null || resources_ != null;
      }
      /**
       * <pre>
       * Resources allocated to Greenplum master subcluster hosts.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.Resources resources = 1;</code>
       */
      public yandex.cloud.api.mdb.greenplum.v1.GPCF.Resources getResources() {
        if (resourcesBuilder_ == null) {
          return resources_ == null ? yandex.cloud.api.mdb.greenplum.v1.GPCF.Resources.getDefaultInstance() : resources_;
        } else {
          return resourcesBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Resources allocated to Greenplum master subcluster hosts.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.Resources resources = 1;</code>
       */
      public Builder setResources(yandex.cloud.api.mdb.greenplum.v1.GPCF.Resources value) {
        if (resourcesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          resources_ = value;
          onChanged();
        } else {
          resourcesBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Resources allocated to Greenplum master subcluster hosts.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.Resources resources = 1;</code>
       */
      public Builder setResources(
          yandex.cloud.api.mdb.greenplum.v1.GPCF.Resources.Builder builderForValue) {
        if (resourcesBuilder_ == null) {
          resources_ = builderForValue.build();
          onChanged();
        } else {
          resourcesBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Resources allocated to Greenplum master subcluster hosts.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.Resources resources = 1;</code>
       */
      public Builder mergeResources(yandex.cloud.api.mdb.greenplum.v1.GPCF.Resources value) {
        if (resourcesBuilder_ == null) {
          if (resources_ != null) {
            resources_ =
              yandex.cloud.api.mdb.greenplum.v1.GPCF.Resources.newBuilder(resources_).mergeFrom(value).buildPartial();
          } else {
            resources_ = value;
          }
          onChanged();
        } else {
          resourcesBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Resources allocated to Greenplum master subcluster hosts.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.Resources resources = 1;</code>
       */
      public Builder clearResources() {
        if (resourcesBuilder_ == null) {
          resources_ = null;
          onChanged();
        } else {
          resources_ = null;
          resourcesBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Resources allocated to Greenplum master subcluster hosts.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.Resources resources = 1;</code>
       */
      public yandex.cloud.api.mdb.greenplum.v1.GPCF.Resources.Builder getResourcesBuilder() {
        
        onChanged();
        return getResourcesFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Resources allocated to Greenplum master subcluster hosts.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.Resources resources = 1;</code>
       */
      public yandex.cloud.api.mdb.greenplum.v1.GPCF.ResourcesOrBuilder getResourcesOrBuilder() {
        if (resourcesBuilder_ != null) {
          return resourcesBuilder_.getMessageOrBuilder();
        } else {
          return resources_ == null ?
              yandex.cloud.api.mdb.greenplum.v1.GPCF.Resources.getDefaultInstance() : resources_;
        }
      }
      /**
       * <pre>
       * Resources allocated to Greenplum master subcluster hosts.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.Resources resources = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.mdb.greenplum.v1.GPCF.Resources, yandex.cloud.api.mdb.greenplum.v1.GPCF.Resources.Builder, yandex.cloud.api.mdb.greenplum.v1.GPCF.ResourcesOrBuilder> 
          getResourcesFieldBuilder() {
        if (resourcesBuilder_ == null) {
          resourcesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              yandex.cloud.api.mdb.greenplum.v1.GPCF.Resources, yandex.cloud.api.mdb.greenplum.v1.GPCF.Resources.Builder, yandex.cloud.api.mdb.greenplum.v1.GPCF.ResourcesOrBuilder>(
                  getResources(),
                  getParentForChildren(),
                  isClean());
          resources_ = null;
        }
        return resourcesBuilder_;
      }

      private yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfigSet config_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfigSet, yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfigSet.Builder, yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfigSetOrBuilder> configBuilder_;
      /**
       * <pre>
       * Configuration settings of a Greenplum master server.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfigSet config = 2;</code>
       */
      public boolean hasConfig() {
        return configBuilder_ != null || config_ != null;
      }
      /**
       * <pre>
       * Configuration settings of a Greenplum master server.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfigSet config = 2;</code>
       */
      public yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfigSet getConfig() {
        if (configBuilder_ == null) {
          return config_ == null ? yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfigSet.getDefaultInstance() : config_;
        } else {
          return configBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Configuration settings of a Greenplum master server.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfigSet config = 2;</code>
       */
      public Builder setConfig(yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfigSet value) {
        if (configBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          config_ = value;
          onChanged();
        } else {
          configBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Configuration settings of a Greenplum master server.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfigSet config = 2;</code>
       */
      public Builder setConfig(
          yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfigSet.Builder builderForValue) {
        if (configBuilder_ == null) {
          config_ = builderForValue.build();
          onChanged();
        } else {
          configBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Configuration settings of a Greenplum master server.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfigSet config = 2;</code>
       */
      public Builder mergeConfig(yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfigSet value) {
        if (configBuilder_ == null) {
          if (config_ != null) {
            config_ =
              yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfigSet.newBuilder(config_).mergeFrom(value).buildPartial();
          } else {
            config_ = value;
          }
          onChanged();
        } else {
          configBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Configuration settings of a Greenplum master server.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfigSet config = 2;</code>
       */
      public Builder clearConfig() {
        if (configBuilder_ == null) {
          config_ = null;
          onChanged();
        } else {
          config_ = null;
          configBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Configuration settings of a Greenplum master server.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfigSet config = 2;</code>
       */
      public yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfigSet.Builder getConfigBuilder() {
        
        onChanged();
        return getConfigFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Configuration settings of a Greenplum master server.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfigSet config = 2;</code>
       */
      public yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfigSetOrBuilder getConfigOrBuilder() {
        if (configBuilder_ != null) {
          return configBuilder_.getMessageOrBuilder();
        } else {
          return config_ == null ?
              yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfigSet.getDefaultInstance() : config_;
        }
      }
      /**
       * <pre>
       * Configuration settings of a Greenplum master server.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfigSet config = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfigSet, yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfigSet.Builder, yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfigSetOrBuilder> 
          getConfigFieldBuilder() {
        if (configBuilder_ == null) {
          configBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfigSet, yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfigSet.Builder, yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfigSetOrBuilder>(
                  getConfig(),
                  getParentForChildren(),
                  isClean());
          config_ = null;
        }
        return configBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:yandex.cloud.mdb.greenplum.v1.MasterSubclusterConfig)
    }

    // @@protoc_insertion_point(class_scope:yandex.cloud.mdb.greenplum.v1.MasterSubclusterConfig)
    private static final yandex.cloud.api.mdb.greenplum.v1.GPCF.MasterSubclusterConfig DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new yandex.cloud.api.mdb.greenplum.v1.GPCF.MasterSubclusterConfig();
    }

    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.MasterSubclusterConfig getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MasterSubclusterConfig>
        PARSER = new com.google.protobuf.AbstractParser<MasterSubclusterConfig>() {
      @java.lang.Override
      public MasterSubclusterConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MasterSubclusterConfig(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MasterSubclusterConfig> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MasterSubclusterConfig> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public yandex.cloud.api.mdb.greenplum.v1.GPCF.MasterSubclusterConfig getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SegmentSubclusterConfigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:yandex.cloud.mdb.greenplum.v1.SegmentSubclusterConfig)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Resources allocated to Greenplum segment subcluster hosts.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.Resources resources = 1;</code>
     */
    boolean hasResources();
    /**
     * <pre>
     * Resources allocated to Greenplum segment subcluster hosts.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.Resources resources = 1;</code>
     */
    yandex.cloud.api.mdb.greenplum.v1.GPCF.Resources getResources();
    /**
     * <pre>
     * Resources allocated to Greenplum segment subcluster hosts.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.Resources resources = 1;</code>
     */
    yandex.cloud.api.mdb.greenplum.v1.GPCF.ResourcesOrBuilder getResourcesOrBuilder();

    /**
     * <pre>
     * Configuration settings of a Greenplum segment server.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumSegmentConfigSet config = 2;</code>
     */
    boolean hasConfig();
    /**
     * <pre>
     * Configuration settings of a Greenplum segment server.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumSegmentConfigSet config = 2;</code>
     */
    yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfigSet getConfig();
    /**
     * <pre>
     * Configuration settings of a Greenplum segment server.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumSegmentConfigSet config = 2;</code>
     */
    yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfigSetOrBuilder getConfigOrBuilder();
  }
  /**
   * <pre>
   * Configuration of segmet subcluster
   * </pre>
   *
   * Protobuf type {@code yandex.cloud.mdb.greenplum.v1.SegmentSubclusterConfig}
   */
  public  static final class SegmentSubclusterConfig extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:yandex.cloud.mdb.greenplum.v1.SegmentSubclusterConfig)
      SegmentSubclusterConfigOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SegmentSubclusterConfig.newBuilder() to construct.
    private SegmentSubclusterConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SegmentSubclusterConfig() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SegmentSubclusterConfig(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              yandex.cloud.api.mdb.greenplum.v1.GPCF.Resources.Builder subBuilder = null;
              if (resources_ != null) {
                subBuilder = resources_.toBuilder();
              }
              resources_ = input.readMessage(yandex.cloud.api.mdb.greenplum.v1.GPCF.Resources.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(resources_);
                resources_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfigSet.Builder subBuilder = null;
              if (config_ != null) {
                subBuilder = config_.toBuilder();
              }
              config_ = input.readMessage(yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfigSet.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(config_);
                config_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return yandex.cloud.api.mdb.greenplum.v1.GPCF.internal_static_yandex_cloud_mdb_greenplum_v1_SegmentSubclusterConfig_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return yandex.cloud.api.mdb.greenplum.v1.GPCF.internal_static_yandex_cloud_mdb_greenplum_v1_SegmentSubclusterConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              yandex.cloud.api.mdb.greenplum.v1.GPCF.SegmentSubclusterConfig.class, yandex.cloud.api.mdb.greenplum.v1.GPCF.SegmentSubclusterConfig.Builder.class);
    }

    public static final int RESOURCES_FIELD_NUMBER = 1;
    private yandex.cloud.api.mdb.greenplum.v1.GPCF.Resources resources_;
    /**
     * <pre>
     * Resources allocated to Greenplum segment subcluster hosts.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.Resources resources = 1;</code>
     */
    public boolean hasResources() {
      return resources_ != null;
    }
    /**
     * <pre>
     * Resources allocated to Greenplum segment subcluster hosts.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.Resources resources = 1;</code>
     */
    public yandex.cloud.api.mdb.greenplum.v1.GPCF.Resources getResources() {
      return resources_ == null ? yandex.cloud.api.mdb.greenplum.v1.GPCF.Resources.getDefaultInstance() : resources_;
    }
    /**
     * <pre>
     * Resources allocated to Greenplum segment subcluster hosts.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.Resources resources = 1;</code>
     */
    public yandex.cloud.api.mdb.greenplum.v1.GPCF.ResourcesOrBuilder getResourcesOrBuilder() {
      return getResources();
    }

    public static final int CONFIG_FIELD_NUMBER = 2;
    private yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfigSet config_;
    /**
     * <pre>
     * Configuration settings of a Greenplum segment server.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumSegmentConfigSet config = 2;</code>
     */
    public boolean hasConfig() {
      return config_ != null;
    }
    /**
     * <pre>
     * Configuration settings of a Greenplum segment server.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumSegmentConfigSet config = 2;</code>
     */
    public yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfigSet getConfig() {
      return config_ == null ? yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfigSet.getDefaultInstance() : config_;
    }
    /**
     * <pre>
     * Configuration settings of a Greenplum segment server.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumSegmentConfigSet config = 2;</code>
     */
    public yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfigSetOrBuilder getConfigOrBuilder() {
      return getConfig();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (resources_ != null) {
        output.writeMessage(1, getResources());
      }
      if (config_ != null) {
        output.writeMessage(2, getConfig());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (resources_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getResources());
      }
      if (config_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getConfig());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof yandex.cloud.api.mdb.greenplum.v1.GPCF.SegmentSubclusterConfig)) {
        return super.equals(obj);
      }
      yandex.cloud.api.mdb.greenplum.v1.GPCF.SegmentSubclusterConfig other = (yandex.cloud.api.mdb.greenplum.v1.GPCF.SegmentSubclusterConfig) obj;

      boolean result = true;
      result = result && (hasResources() == other.hasResources());
      if (hasResources()) {
        result = result && getResources()
            .equals(other.getResources());
      }
      result = result && (hasConfig() == other.hasConfig());
      if (hasConfig()) {
        result = result && getConfig()
            .equals(other.getConfig());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasResources()) {
        hash = (37 * hash) + RESOURCES_FIELD_NUMBER;
        hash = (53 * hash) + getResources().hashCode();
      }
      if (hasConfig()) {
        hash = (37 * hash) + CONFIG_FIELD_NUMBER;
        hash = (53 * hash) + getConfig().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.SegmentSubclusterConfig parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.SegmentSubclusterConfig parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.SegmentSubclusterConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.SegmentSubclusterConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.SegmentSubclusterConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.SegmentSubclusterConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.SegmentSubclusterConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.SegmentSubclusterConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.SegmentSubclusterConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.SegmentSubclusterConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.SegmentSubclusterConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.SegmentSubclusterConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(yandex.cloud.api.mdb.greenplum.v1.GPCF.SegmentSubclusterConfig prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Configuration of segmet subcluster
     * </pre>
     *
     * Protobuf type {@code yandex.cloud.mdb.greenplum.v1.SegmentSubclusterConfig}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:yandex.cloud.mdb.greenplum.v1.SegmentSubclusterConfig)
        yandex.cloud.api.mdb.greenplum.v1.GPCF.SegmentSubclusterConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return yandex.cloud.api.mdb.greenplum.v1.GPCF.internal_static_yandex_cloud_mdb_greenplum_v1_SegmentSubclusterConfig_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return yandex.cloud.api.mdb.greenplum.v1.GPCF.internal_static_yandex_cloud_mdb_greenplum_v1_SegmentSubclusterConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                yandex.cloud.api.mdb.greenplum.v1.GPCF.SegmentSubclusterConfig.class, yandex.cloud.api.mdb.greenplum.v1.GPCF.SegmentSubclusterConfig.Builder.class);
      }

      // Construct using yandex.cloud.api.mdb.greenplum.v1.GPCF.SegmentSubclusterConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (resourcesBuilder_ == null) {
          resources_ = null;
        } else {
          resources_ = null;
          resourcesBuilder_ = null;
        }
        if (configBuilder_ == null) {
          config_ = null;
        } else {
          config_ = null;
          configBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return yandex.cloud.api.mdb.greenplum.v1.GPCF.internal_static_yandex_cloud_mdb_greenplum_v1_SegmentSubclusterConfig_descriptor;
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.greenplum.v1.GPCF.SegmentSubclusterConfig getDefaultInstanceForType() {
        return yandex.cloud.api.mdb.greenplum.v1.GPCF.SegmentSubclusterConfig.getDefaultInstance();
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.greenplum.v1.GPCF.SegmentSubclusterConfig build() {
        yandex.cloud.api.mdb.greenplum.v1.GPCF.SegmentSubclusterConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.greenplum.v1.GPCF.SegmentSubclusterConfig buildPartial() {
        yandex.cloud.api.mdb.greenplum.v1.GPCF.SegmentSubclusterConfig result = new yandex.cloud.api.mdb.greenplum.v1.GPCF.SegmentSubclusterConfig(this);
        if (resourcesBuilder_ == null) {
          result.resources_ = resources_;
        } else {
          result.resources_ = resourcesBuilder_.build();
        }
        if (configBuilder_ == null) {
          result.config_ = config_;
        } else {
          result.config_ = configBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof yandex.cloud.api.mdb.greenplum.v1.GPCF.SegmentSubclusterConfig) {
          return mergeFrom((yandex.cloud.api.mdb.greenplum.v1.GPCF.SegmentSubclusterConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(yandex.cloud.api.mdb.greenplum.v1.GPCF.SegmentSubclusterConfig other) {
        if (other == yandex.cloud.api.mdb.greenplum.v1.GPCF.SegmentSubclusterConfig.getDefaultInstance()) return this;
        if (other.hasResources()) {
          mergeResources(other.getResources());
        }
        if (other.hasConfig()) {
          mergeConfig(other.getConfig());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        yandex.cloud.api.mdb.greenplum.v1.GPCF.SegmentSubclusterConfig parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (yandex.cloud.api.mdb.greenplum.v1.GPCF.SegmentSubclusterConfig) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private yandex.cloud.api.mdb.greenplum.v1.GPCF.Resources resources_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.mdb.greenplum.v1.GPCF.Resources, yandex.cloud.api.mdb.greenplum.v1.GPCF.Resources.Builder, yandex.cloud.api.mdb.greenplum.v1.GPCF.ResourcesOrBuilder> resourcesBuilder_;
      /**
       * <pre>
       * Resources allocated to Greenplum segment subcluster hosts.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.Resources resources = 1;</code>
       */
      public boolean hasResources() {
        return resourcesBuilder_ != null || resources_ != null;
      }
      /**
       * <pre>
       * Resources allocated to Greenplum segment subcluster hosts.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.Resources resources = 1;</code>
       */
      public yandex.cloud.api.mdb.greenplum.v1.GPCF.Resources getResources() {
        if (resourcesBuilder_ == null) {
          return resources_ == null ? yandex.cloud.api.mdb.greenplum.v1.GPCF.Resources.getDefaultInstance() : resources_;
        } else {
          return resourcesBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Resources allocated to Greenplum segment subcluster hosts.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.Resources resources = 1;</code>
       */
      public Builder setResources(yandex.cloud.api.mdb.greenplum.v1.GPCF.Resources value) {
        if (resourcesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          resources_ = value;
          onChanged();
        } else {
          resourcesBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Resources allocated to Greenplum segment subcluster hosts.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.Resources resources = 1;</code>
       */
      public Builder setResources(
          yandex.cloud.api.mdb.greenplum.v1.GPCF.Resources.Builder builderForValue) {
        if (resourcesBuilder_ == null) {
          resources_ = builderForValue.build();
          onChanged();
        } else {
          resourcesBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Resources allocated to Greenplum segment subcluster hosts.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.Resources resources = 1;</code>
       */
      public Builder mergeResources(yandex.cloud.api.mdb.greenplum.v1.GPCF.Resources value) {
        if (resourcesBuilder_ == null) {
          if (resources_ != null) {
            resources_ =
              yandex.cloud.api.mdb.greenplum.v1.GPCF.Resources.newBuilder(resources_).mergeFrom(value).buildPartial();
          } else {
            resources_ = value;
          }
          onChanged();
        } else {
          resourcesBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Resources allocated to Greenplum segment subcluster hosts.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.Resources resources = 1;</code>
       */
      public Builder clearResources() {
        if (resourcesBuilder_ == null) {
          resources_ = null;
          onChanged();
        } else {
          resources_ = null;
          resourcesBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Resources allocated to Greenplum segment subcluster hosts.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.Resources resources = 1;</code>
       */
      public yandex.cloud.api.mdb.greenplum.v1.GPCF.Resources.Builder getResourcesBuilder() {
        
        onChanged();
        return getResourcesFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Resources allocated to Greenplum segment subcluster hosts.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.Resources resources = 1;</code>
       */
      public yandex.cloud.api.mdb.greenplum.v1.GPCF.ResourcesOrBuilder getResourcesOrBuilder() {
        if (resourcesBuilder_ != null) {
          return resourcesBuilder_.getMessageOrBuilder();
        } else {
          return resources_ == null ?
              yandex.cloud.api.mdb.greenplum.v1.GPCF.Resources.getDefaultInstance() : resources_;
        }
      }
      /**
       * <pre>
       * Resources allocated to Greenplum segment subcluster hosts.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.Resources resources = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.mdb.greenplum.v1.GPCF.Resources, yandex.cloud.api.mdb.greenplum.v1.GPCF.Resources.Builder, yandex.cloud.api.mdb.greenplum.v1.GPCF.ResourcesOrBuilder> 
          getResourcesFieldBuilder() {
        if (resourcesBuilder_ == null) {
          resourcesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              yandex.cloud.api.mdb.greenplum.v1.GPCF.Resources, yandex.cloud.api.mdb.greenplum.v1.GPCF.Resources.Builder, yandex.cloud.api.mdb.greenplum.v1.GPCF.ResourcesOrBuilder>(
                  getResources(),
                  getParentForChildren(),
                  isClean());
          resources_ = null;
        }
        return resourcesBuilder_;
      }

      private yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfigSet config_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfigSet, yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfigSet.Builder, yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfigSetOrBuilder> configBuilder_;
      /**
       * <pre>
       * Configuration settings of a Greenplum segment server.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumSegmentConfigSet config = 2;</code>
       */
      public boolean hasConfig() {
        return configBuilder_ != null || config_ != null;
      }
      /**
       * <pre>
       * Configuration settings of a Greenplum segment server.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumSegmentConfigSet config = 2;</code>
       */
      public yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfigSet getConfig() {
        if (configBuilder_ == null) {
          return config_ == null ? yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfigSet.getDefaultInstance() : config_;
        } else {
          return configBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Configuration settings of a Greenplum segment server.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumSegmentConfigSet config = 2;</code>
       */
      public Builder setConfig(yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfigSet value) {
        if (configBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          config_ = value;
          onChanged();
        } else {
          configBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Configuration settings of a Greenplum segment server.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumSegmentConfigSet config = 2;</code>
       */
      public Builder setConfig(
          yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfigSet.Builder builderForValue) {
        if (configBuilder_ == null) {
          config_ = builderForValue.build();
          onChanged();
        } else {
          configBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Configuration settings of a Greenplum segment server.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumSegmentConfigSet config = 2;</code>
       */
      public Builder mergeConfig(yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfigSet value) {
        if (configBuilder_ == null) {
          if (config_ != null) {
            config_ =
              yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfigSet.newBuilder(config_).mergeFrom(value).buildPartial();
          } else {
            config_ = value;
          }
          onChanged();
        } else {
          configBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Configuration settings of a Greenplum segment server.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumSegmentConfigSet config = 2;</code>
       */
      public Builder clearConfig() {
        if (configBuilder_ == null) {
          config_ = null;
          onChanged();
        } else {
          config_ = null;
          configBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Configuration settings of a Greenplum segment server.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumSegmentConfigSet config = 2;</code>
       */
      public yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfigSet.Builder getConfigBuilder() {
        
        onChanged();
        return getConfigFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Configuration settings of a Greenplum segment server.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumSegmentConfigSet config = 2;</code>
       */
      public yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfigSetOrBuilder getConfigOrBuilder() {
        if (configBuilder_ != null) {
          return configBuilder_.getMessageOrBuilder();
        } else {
          return config_ == null ?
              yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfigSet.getDefaultInstance() : config_;
        }
      }
      /**
       * <pre>
       * Configuration settings of a Greenplum segment server.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumSegmentConfigSet config = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfigSet, yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfigSet.Builder, yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfigSetOrBuilder> 
          getConfigFieldBuilder() {
        if (configBuilder_ == null) {
          configBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfigSet, yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfigSet.Builder, yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfigSetOrBuilder>(
                  getConfig(),
                  getParentForChildren(),
                  isClean());
          config_ = null;
        }
        return configBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:yandex.cloud.mdb.greenplum.v1.SegmentSubclusterConfig)
    }

    // @@protoc_insertion_point(class_scope:yandex.cloud.mdb.greenplum.v1.SegmentSubclusterConfig)
    private static final yandex.cloud.api.mdb.greenplum.v1.GPCF.SegmentSubclusterConfig DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new yandex.cloud.api.mdb.greenplum.v1.GPCF.SegmentSubclusterConfig();
    }

    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.SegmentSubclusterConfig getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SegmentSubclusterConfig>
        PARSER = new com.google.protobuf.AbstractParser<SegmentSubclusterConfig>() {
      @java.lang.Override
      public SegmentSubclusterConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SegmentSubclusterConfig(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SegmentSubclusterConfig> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SegmentSubclusterConfig> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public yandex.cloud.api.mdb.greenplum.v1.GPCF.SegmentSubclusterConfig getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GreenplumMasterConfigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfig)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Logging level for the Greenplum master subcluster. Possible values: TRACE, DEBUG, INFORMATION, WARNING, ERROR.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfig.LogLevel log_level = 1;</code>
     */
    int getLogLevelValue();
    /**
     * <pre>
     * Logging level for the Greenplum master subcluster. Possible values: TRACE, DEBUG, INFORMATION, WARNING, ERROR.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfig.LogLevel log_level = 1;</code>
     */
    yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig.LogLevel getLogLevel();

    /**
     * <pre>
     * Maximum number of inbound connections.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_connections = 2;</code>
     */
    boolean hasMaxConnections();
    /**
     * <pre>
     * Maximum number of inbound connections.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_connections = 2;</code>
     */
    com.google.protobuf.Int64Value getMaxConnections();
    /**
     * <pre>
     * Maximum number of inbound connections.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_connections = 2;</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getMaxConnectionsOrBuilder();

    /**
     * <pre>
     * The server's time zone to be used in DateTime fields conversions. Specified as an IANA identifier.
     * </pre>
     *
     * <code>.google.protobuf.StringValue timezone = 3;</code>
     */
    boolean hasTimezone();
    /**
     * <pre>
     * The server's time zone to be used in DateTime fields conversions. Specified as an IANA identifier.
     * </pre>
     *
     * <code>.google.protobuf.StringValue timezone = 3;</code>
     */
    com.google.protobuf.StringValue getTimezone();
    /**
     * <pre>
     * The server's time zone to be used in DateTime fields conversions. Specified as an IANA identifier.
     * </pre>
     *
     * <code>.google.protobuf.StringValue timezone = 3;</code>
     */
    com.google.protobuf.StringValueOrBuilder getTimezoneOrBuilder();

    /**
     * <pre>
     * Odyssey pool settings
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfig pool = 4;</code>
     */
    boolean hasPool();
    /**
     * <pre>
     * Odyssey pool settings
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfig pool = 4;</code>
     */
    yandex.cloud.api.mdb.greenplum.v1.GPCF.ConnectionPoolerConfig getPool();
    /**
     * <pre>
     * Odyssey pool settings
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfig pool = 4;</code>
     */
    yandex.cloud.api.mdb.greenplum.v1.GPCF.ConnectionPoolerConfigOrBuilder getPoolOrBuilder();

    /**
     * <pre>
     * Sets the maximum number of transactions that can be in the "prepared" state simultaneously
     * https://www.postgresql.org/docs/9.6/runtime-config-resource.html
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_prepared_transactions = 13;</code>
     */
    boolean hasMaxPreparedTransactions();
    /**
     * <pre>
     * Sets the maximum number of transactions that can be in the "prepared" state simultaneously
     * https://www.postgresql.org/docs/9.6/runtime-config-resource.html
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_prepared_transactions = 13;</code>
     */
    com.google.protobuf.Int64Value getMaxPreparedTransactions();
    /**
     * <pre>
     * Sets the maximum number of transactions that can be in the "prepared" state simultaneously
     * https://www.postgresql.org/docs/9.6/runtime-config-resource.html
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_prepared_transactions = 13;</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getMaxPreparedTransactionsOrBuilder();

    /**
     * <pre>
     * For queries that are managed by resource queues or resource groups,
     * this parameter determines when Greenplum Database terminates running queries based on the amount of memory the queries are using.
     * A value of 100 disables the automatic termination of queries based on the percentage of memory that is utilized.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#runaway_detector_activation_percent
     * </pre>
     *
     * <code>.google.protobuf.Int64Value runaway_detector_activation_percent = 14;</code>
     */
    boolean hasRunawayDetectorActivationPercent();
    /**
     * <pre>
     * For queries that are managed by resource queues or resource groups,
     * this parameter determines when Greenplum Database terminates running queries based on the amount of memory the queries are using.
     * A value of 100 disables the automatic termination of queries based on the percentage of memory that is utilized.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#runaway_detector_activation_percent
     * </pre>
     *
     * <code>.google.protobuf.Int64Value runaway_detector_activation_percent = 14;</code>
     */
    com.google.protobuf.Int64Value getRunawayDetectorActivationPercent();
    /**
     * <pre>
     * For queries that are managed by resource queues or resource groups,
     * this parameter determines when Greenplum Database terminates running queries based on the amount of memory the queries are using.
     * A value of 100 disables the automatic termination of queries based on the percentage of memory that is utilized.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#runaway_detector_activation_percent
     * </pre>
     *
     * <code>.google.protobuf.Int64Value runaway_detector_activation_percent = 14;</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getRunawayDetectorActivationPercentOrBuilder();

    /**
     * <pre>
     * How many keepalives may be lost before the connection is considered dead. A value of 0 uses the system default.
     * If TCP_KEEPCNT is not supported, this parameter must be 0.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#tcp_keepalives_count
     * </pre>
     *
     * <code>.google.protobuf.Int64Value tcp_keepalives_count = 15;</code>
     */
    boolean hasTcpKeepalivesCount();
    /**
     * <pre>
     * How many keepalives may be lost before the connection is considered dead. A value of 0 uses the system default.
     * If TCP_KEEPCNT is not supported, this parameter must be 0.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#tcp_keepalives_count
     * </pre>
     *
     * <code>.google.protobuf.Int64Value tcp_keepalives_count = 15;</code>
     */
    com.google.protobuf.Int64Value getTcpKeepalivesCount();
    /**
     * <pre>
     * How many keepalives may be lost before the connection is considered dead. A value of 0 uses the system default.
     * If TCP_KEEPCNT is not supported, this parameter must be 0.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#tcp_keepalives_count
     * </pre>
     *
     * <code>.google.protobuf.Int64Value tcp_keepalives_count = 15;</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getTcpKeepalivesCountOrBuilder();

    /**
     * <pre>
     * How many seconds to wait for a response to a keepalive before retransmitting. A value of 0 uses the system default.
     * If TCP_KEEPINTVL is not supported, this parameter must be 0.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#tcp_keepalives_interval
     * </pre>
     *
     * <code>.google.protobuf.Int64Value tcp_keepalives_interval = 16;</code>
     */
    boolean hasTcpKeepalivesInterval();
    /**
     * <pre>
     * How many seconds to wait for a response to a keepalive before retransmitting. A value of 0 uses the system default.
     * If TCP_KEEPINTVL is not supported, this parameter must be 0.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#tcp_keepalives_interval
     * </pre>
     *
     * <code>.google.protobuf.Int64Value tcp_keepalives_interval = 16;</code>
     */
    com.google.protobuf.Int64Value getTcpKeepalivesInterval();
    /**
     * <pre>
     * How many seconds to wait for a response to a keepalive before retransmitting. A value of 0 uses the system default.
     * If TCP_KEEPINTVL is not supported, this parameter must be 0.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#tcp_keepalives_interval
     * </pre>
     *
     * <code>.google.protobuf.Int64Value tcp_keepalives_interval = 16;</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getTcpKeepalivesIntervalOrBuilder();

    /**
     * <pre>
     * When an SQL query reads from an external table, the parameter value specifies the amount of time in seconds that
     * Greenplum Database waits before cancelling the query when data stops being returned from the external table.
     * The default value of 0, specifies no time out. Greenplum Database does not cancel the query.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#readable_external_table_timeout
     * </pre>
     *
     * <code>.google.protobuf.Int64Value readable_external_table_timeout = 19;</code>
     */
    boolean hasReadableExternalTableTimeout();
    /**
     * <pre>
     * When an SQL query reads from an external table, the parameter value specifies the amount of time in seconds that
     * Greenplum Database waits before cancelling the query when data stops being returned from the external table.
     * The default value of 0, specifies no time out. Greenplum Database does not cancel the query.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#readable_external_table_timeout
     * </pre>
     *
     * <code>.google.protobuf.Int64Value readable_external_table_timeout = 19;</code>
     */
    com.google.protobuf.Int64Value getReadableExternalTableTimeout();
    /**
     * <pre>
     * When an SQL query reads from an external table, the parameter value specifies the amount of time in seconds that
     * Greenplum Database waits before cancelling the query when data stops being returned from the external table.
     * The default value of 0, specifies no time out. Greenplum Database does not cancel the query.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#readable_external_table_timeout
     * </pre>
     *
     * <code>.google.protobuf.Int64Value readable_external_table_timeout = 19;</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getReadableExternalTableTimeoutOrBuilder();

    /**
     * <pre>
     * Sets the amount of data per-peer to be queued by the default UDPIFC interconnect on senders.
     * Increasing the depth from its default value will cause the system to use more memory, but may increase performance.
     * Reasonable values for this parameter are between 1 and 4. Increasing the value might radically increase the amount of memory used by the system.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_interconnect_snd_queue_depth
     * </pre>
     *
     * <code>.google.protobuf.Int64Value gp_interconnect_snd_queue_depth = 20;</code>
     */
    boolean hasGpInterconnectSndQueueDepth();
    /**
     * <pre>
     * Sets the amount of data per-peer to be queued by the default UDPIFC interconnect on senders.
     * Increasing the depth from its default value will cause the system to use more memory, but may increase performance.
     * Reasonable values for this parameter are between 1 and 4. Increasing the value might radically increase the amount of memory used by the system.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_interconnect_snd_queue_depth
     * </pre>
     *
     * <code>.google.protobuf.Int64Value gp_interconnect_snd_queue_depth = 20;</code>
     */
    com.google.protobuf.Int64Value getGpInterconnectSndQueueDepth();
    /**
     * <pre>
     * Sets the amount of data per-peer to be queued by the default UDPIFC interconnect on senders.
     * Increasing the depth from its default value will cause the system to use more memory, but may increase performance.
     * Reasonable values for this parameter are between 1 and 4. Increasing the value might radically increase the amount of memory used by the system.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_interconnect_snd_queue_depth
     * </pre>
     *
     * <code>.google.protobuf.Int64Value gp_interconnect_snd_queue_depth = 20;</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getGpInterconnectSndQueueDepthOrBuilder();

    /**
     * <pre>
     * Sets the amount of data per-peer to be queued by the Greenplum Database interconnect on receivers
     * (when data is received but no space is available to receive it the data will be dropped, and the transmitter will need to resend it)
     * for the default UDPIFC interconnect.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_interconnect_queue_depth
     * </pre>
     *
     * <code>.google.protobuf.Int64Value gp_interconnect_queue_depth = 21;</code>
     */
    boolean hasGpInterconnectQueueDepth();
    /**
     * <pre>
     * Sets the amount of data per-peer to be queued by the Greenplum Database interconnect on receivers
     * (when data is received but no space is available to receive it the data will be dropped, and the transmitter will need to resend it)
     * for the default UDPIFC interconnect.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_interconnect_queue_depth
     * </pre>
     *
     * <code>.google.protobuf.Int64Value gp_interconnect_queue_depth = 21;</code>
     */
    com.google.protobuf.Int64Value getGpInterconnectQueueDepth();
    /**
     * <pre>
     * Sets the amount of data per-peer to be queued by the Greenplum Database interconnect on receivers
     * (when data is received but no space is available to receive it the data will be dropped, and the transmitter will need to resend it)
     * for the default UDPIFC interconnect.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_interconnect_queue_depth
     * </pre>
     *
     * <code>.google.protobuf.Int64Value gp_interconnect_queue_depth = 21;</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getGpInterconnectQueueDepthOrBuilder();

    /**
     * <pre>
     * Controls which SQL statements are logged. DDL logs all data definition commands like CREATE, ALTER, and DROP commands.
     * MOD logs all DDL statements, plus INSERT, UPDATE, DELETE, TRUNCATE, and COPY FROM.
     * PREPARE and EXPLAIN ANALYZE statements are also logged if their contained command is of an appropriate type.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#log_statement
     * Default value is ddl
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfig.LogStatement log_statement = 22;</code>
     */
    int getLogStatementValue();
    /**
     * <pre>
     * Controls which SQL statements are logged. DDL logs all data definition commands like CREATE, ALTER, and DROP commands.
     * MOD logs all DDL statements, plus INSERT, UPDATE, DELETE, TRUNCATE, and COPY FROM.
     * PREPARE and EXPLAIN ANALYZE statements are also logged if their contained command is of an appropriate type.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#log_statement
     * Default value is ddl
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfig.LogStatement log_statement = 22;</code>
     */
    yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig.LogStatement getLogStatement();

    /**
     * <pre>
     * Causes the duration of every completed statement which satisfies log_statement to be logged.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#log_duration
     * </pre>
     *
     * <code>.google.protobuf.BoolValue log_duration = 23;</code>
     */
    boolean hasLogDuration();
    /**
     * <pre>
     * Causes the duration of every completed statement which satisfies log_statement to be logged.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#log_duration
     * </pre>
     *
     * <code>.google.protobuf.BoolValue log_duration = 23;</code>
     */
    com.google.protobuf.BoolValue getLogDuration();
    /**
     * <pre>
     * Causes the duration of every completed statement which satisfies log_statement to be logged.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#log_duration
     * </pre>
     *
     * <code>.google.protobuf.BoolValue log_duration = 23;</code>
     */
    com.google.protobuf.BoolValueOrBuilder getLogDurationOrBuilder();

    /**
     * <pre>
     * For a partitioned table, controls whether the ROOTPARTITION keyword is required to collect root partition statistics
     * when the ANALYZE command is run on the table. GPORCA uses the root partition statistics when generating a query plan.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#optimizer_analyze_root_partition
     * </pre>
     *
     * <code>.google.protobuf.BoolValue optimizer_analyze_root_partition = 24;</code>
     */
    boolean hasOptimizerAnalyzeRootPartition();
    /**
     * <pre>
     * For a partitioned table, controls whether the ROOTPARTITION keyword is required to collect root partition statistics
     * when the ANALYZE command is run on the table. GPORCA uses the root partition statistics when generating a query plan.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#optimizer_analyze_root_partition
     * </pre>
     *
     * <code>.google.protobuf.BoolValue optimizer_analyze_root_partition = 24;</code>
     */
    com.google.protobuf.BoolValue getOptimizerAnalyzeRootPartition();
    /**
     * <pre>
     * For a partitioned table, controls whether the ROOTPARTITION keyword is required to collect root partition statistics
     * when the ANALYZE command is run on the table. GPORCA uses the root partition statistics when generating a query plan.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#optimizer_analyze_root_partition
     * </pre>
     *
     * <code>.google.protobuf.BoolValue optimizer_analyze_root_partition = 24;</code>
     */
    com.google.protobuf.BoolValueOrBuilder getOptimizerAnalyzeRootPartitionOrBuilder();

    /**
     * <pre>
     * Sets the number of segments that will scan external table data during an external table operation,
     * the purpose being not to overload the system with scanning data and take away resources from other concurrent operations.
     * This only applies to external tables that use the gpfdist:// protocol to access external table data.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_external_max_segs
     * </pre>
     *
     * <code>.google.protobuf.Int64Value gp_external_max_segs = 25;</code>
     */
    boolean hasGpExternalMaxSegs();
    /**
     * <pre>
     * Sets the number of segments that will scan external table data during an external table operation,
     * the purpose being not to overload the system with scanning data and take away resources from other concurrent operations.
     * This only applies to external tables that use the gpfdist:// protocol to access external table data.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_external_max_segs
     * </pre>
     *
     * <code>.google.protobuf.Int64Value gp_external_max_segs = 25;</code>
     */
    com.google.protobuf.Int64Value getGpExternalMaxSegs();
    /**
     * <pre>
     * Sets the number of segments that will scan external table data during an external table operation,
     * the purpose being not to overload the system with scanning data and take away resources from other concurrent operations.
     * This only applies to external tables that use the gpfdist:// protocol to access external table data.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_external_max_segs
     * </pre>
     *
     * <code>.google.protobuf.Int64Value gp_external_max_segs = 25;</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getGpExternalMaxSegsOrBuilder();

    /**
     * <pre>
     * Specifies the allowed timeout for the fault detection process (ftsprobe) to establish a connection to a segment before declaring it down.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_fts_probe_timeout
     * </pre>
     *
     * <code>.google.protobuf.Int64Value gp_fts_probe_timeout = 26;</code>
     */
    boolean hasGpFtsProbeTimeout();
    /**
     * <pre>
     * Specifies the allowed timeout for the fault detection process (ftsprobe) to establish a connection to a segment before declaring it down.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_fts_probe_timeout
     * </pre>
     *
     * <code>.google.protobuf.Int64Value gp_fts_probe_timeout = 26;</code>
     */
    com.google.protobuf.Int64Value getGpFtsProbeTimeout();
    /**
     * <pre>
     * Specifies the allowed timeout for the fault detection process (ftsprobe) to establish a connection to a segment before declaring it down.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_fts_probe_timeout
     * </pre>
     *
     * <code>.google.protobuf.Int64Value gp_fts_probe_timeout = 26;</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getGpFtsProbeTimeoutOrBuilder();

    /**
     * <pre>
     * Specifies whether the temporary files created, when a hash aggregation or hash join operation spills to disk, are compressed.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_compression
     * </pre>
     *
     * <code>.google.protobuf.BoolValue gp_workfile_compression = 27;</code>
     */
    boolean hasGpWorkfileCompression();
    /**
     * <pre>
     * Specifies whether the temporary files created, when a hash aggregation or hash join operation spills to disk, are compressed.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_compression
     * </pre>
     *
     * <code>.google.protobuf.BoolValue gp_workfile_compression = 27;</code>
     */
    com.google.protobuf.BoolValue getGpWorkfileCompression();
    /**
     * <pre>
     * Specifies whether the temporary files created, when a hash aggregation or hash join operation spills to disk, are compressed.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_compression
     * </pre>
     *
     * <code>.google.protobuf.BoolValue gp_workfile_compression = 27;</code>
     */
    com.google.protobuf.BoolValueOrBuilder getGpWorkfileCompressionOrBuilder();

    /**
     * <pre>
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_autostats_mode_in_functions
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfig.AutostatsModeInFunctions gp_autostats_mode_in_functions = 28;</code>
     */
    int getGpAutostatsModeInFunctionsValue();
    /**
     * <pre>
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_autostats_mode_in_functions
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfig.AutostatsModeInFunctions gp_autostats_mode_in_functions = 28;</code>
     */
    yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig.AutostatsModeInFunctions getGpAutostatsModeInFunctions();
  }
  /**
   * <pre>
   * Greenplum master subcluster configuration options. Detailed description for each set of options
   * Any options not listed here are not supported.
   * </pre>
   *
   * Protobuf type {@code yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfig}
   */
  public  static final class GreenplumMasterConfig extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfig)
      GreenplumMasterConfigOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use GreenplumMasterConfig.newBuilder() to construct.
    private GreenplumMasterConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GreenplumMasterConfig() {
      logLevel_ = 0;
      logStatement_ = 0;
      gpAutostatsModeInFunctions_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private GreenplumMasterConfig(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              logLevel_ = rawValue;
              break;
            }
            case 18: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (maxConnections_ != null) {
                subBuilder = maxConnections_.toBuilder();
              }
              maxConnections_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(maxConnections_);
                maxConnections_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              com.google.protobuf.StringValue.Builder subBuilder = null;
              if (timezone_ != null) {
                subBuilder = timezone_.toBuilder();
              }
              timezone_ = input.readMessage(com.google.protobuf.StringValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(timezone_);
                timezone_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              yandex.cloud.api.mdb.greenplum.v1.GPCF.ConnectionPoolerConfig.Builder subBuilder = null;
              if (pool_ != null) {
                subBuilder = pool_.toBuilder();
              }
              pool_ = input.readMessage(yandex.cloud.api.mdb.greenplum.v1.GPCF.ConnectionPoolerConfig.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(pool_);
                pool_ = subBuilder.buildPartial();
              }

              break;
            }
            case 106: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (maxPreparedTransactions_ != null) {
                subBuilder = maxPreparedTransactions_.toBuilder();
              }
              maxPreparedTransactions_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(maxPreparedTransactions_);
                maxPreparedTransactions_ = subBuilder.buildPartial();
              }

              break;
            }
            case 114: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (runawayDetectorActivationPercent_ != null) {
                subBuilder = runawayDetectorActivationPercent_.toBuilder();
              }
              runawayDetectorActivationPercent_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(runawayDetectorActivationPercent_);
                runawayDetectorActivationPercent_ = subBuilder.buildPartial();
              }

              break;
            }
            case 122: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (tcpKeepalivesCount_ != null) {
                subBuilder = tcpKeepalivesCount_.toBuilder();
              }
              tcpKeepalivesCount_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tcpKeepalivesCount_);
                tcpKeepalivesCount_ = subBuilder.buildPartial();
              }

              break;
            }
            case 130: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (tcpKeepalivesInterval_ != null) {
                subBuilder = tcpKeepalivesInterval_.toBuilder();
              }
              tcpKeepalivesInterval_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tcpKeepalivesInterval_);
                tcpKeepalivesInterval_ = subBuilder.buildPartial();
              }

              break;
            }
            case 154: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (readableExternalTableTimeout_ != null) {
                subBuilder = readableExternalTableTimeout_.toBuilder();
              }
              readableExternalTableTimeout_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(readableExternalTableTimeout_);
                readableExternalTableTimeout_ = subBuilder.buildPartial();
              }

              break;
            }
            case 162: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (gpInterconnectSndQueueDepth_ != null) {
                subBuilder = gpInterconnectSndQueueDepth_.toBuilder();
              }
              gpInterconnectSndQueueDepth_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(gpInterconnectSndQueueDepth_);
                gpInterconnectSndQueueDepth_ = subBuilder.buildPartial();
              }

              break;
            }
            case 170: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (gpInterconnectQueueDepth_ != null) {
                subBuilder = gpInterconnectQueueDepth_.toBuilder();
              }
              gpInterconnectQueueDepth_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(gpInterconnectQueueDepth_);
                gpInterconnectQueueDepth_ = subBuilder.buildPartial();
              }

              break;
            }
            case 176: {
              int rawValue = input.readEnum();

              logStatement_ = rawValue;
              break;
            }
            case 186: {
              com.google.protobuf.BoolValue.Builder subBuilder = null;
              if (logDuration_ != null) {
                subBuilder = logDuration_.toBuilder();
              }
              logDuration_ = input.readMessage(com.google.protobuf.BoolValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(logDuration_);
                logDuration_ = subBuilder.buildPartial();
              }

              break;
            }
            case 194: {
              com.google.protobuf.BoolValue.Builder subBuilder = null;
              if (optimizerAnalyzeRootPartition_ != null) {
                subBuilder = optimizerAnalyzeRootPartition_.toBuilder();
              }
              optimizerAnalyzeRootPartition_ = input.readMessage(com.google.protobuf.BoolValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(optimizerAnalyzeRootPartition_);
                optimizerAnalyzeRootPartition_ = subBuilder.buildPartial();
              }

              break;
            }
            case 202: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (gpExternalMaxSegs_ != null) {
                subBuilder = gpExternalMaxSegs_.toBuilder();
              }
              gpExternalMaxSegs_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(gpExternalMaxSegs_);
                gpExternalMaxSegs_ = subBuilder.buildPartial();
              }

              break;
            }
            case 210: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (gpFtsProbeTimeout_ != null) {
                subBuilder = gpFtsProbeTimeout_.toBuilder();
              }
              gpFtsProbeTimeout_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(gpFtsProbeTimeout_);
                gpFtsProbeTimeout_ = subBuilder.buildPartial();
              }

              break;
            }
            case 218: {
              com.google.protobuf.BoolValue.Builder subBuilder = null;
              if (gpWorkfileCompression_ != null) {
                subBuilder = gpWorkfileCompression_.toBuilder();
              }
              gpWorkfileCompression_ = input.readMessage(com.google.protobuf.BoolValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(gpWorkfileCompression_);
                gpWorkfileCompression_ = subBuilder.buildPartial();
              }

              break;
            }
            case 224: {
              int rawValue = input.readEnum();

              gpAutostatsModeInFunctions_ = rawValue;
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return yandex.cloud.api.mdb.greenplum.v1.GPCF.internal_static_yandex_cloud_mdb_greenplum_v1_GreenplumMasterConfig_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return yandex.cloud.api.mdb.greenplum.v1.GPCF.internal_static_yandex_cloud_mdb_greenplum_v1_GreenplumMasterConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig.class, yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig.Builder.class);
    }

    /**
     * Protobuf enum {@code yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfig.LogLevel}
     */
    public enum LogLevel
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>LOG_LEVEL_UNSPECIFIED = 0;</code>
       */
      LOG_LEVEL_UNSPECIFIED(0),
      /**
       * <code>TRACE = 1;</code>
       */
      TRACE(1),
      /**
       * <code>DEBUG = 2;</code>
       */
      DEBUG(2),
      /**
       * <code>INFORMATION = 3;</code>
       */
      INFORMATION(3),
      /**
       * <code>WARNING = 4;</code>
       */
      WARNING(4),
      /**
       * <code>ERROR = 5;</code>
       */
      ERROR(5),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>LOG_LEVEL_UNSPECIFIED = 0;</code>
       */
      public static final int LOG_LEVEL_UNSPECIFIED_VALUE = 0;
      /**
       * <code>TRACE = 1;</code>
       */
      public static final int TRACE_VALUE = 1;
      /**
       * <code>DEBUG = 2;</code>
       */
      public static final int DEBUG_VALUE = 2;
      /**
       * <code>INFORMATION = 3;</code>
       */
      public static final int INFORMATION_VALUE = 3;
      /**
       * <code>WARNING = 4;</code>
       */
      public static final int WARNING_VALUE = 4;
      /**
       * <code>ERROR = 5;</code>
       */
      public static final int ERROR_VALUE = 5;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static LogLevel valueOf(int value) {
        return forNumber(value);
      }

      public static LogLevel forNumber(int value) {
        switch (value) {
          case 0: return LOG_LEVEL_UNSPECIFIED;
          case 1: return TRACE;
          case 2: return DEBUG;
          case 3: return INFORMATION;
          case 4: return WARNING;
          case 5: return ERROR;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<LogLevel>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          LogLevel> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<LogLevel>() {
              public LogLevel findValueByNumber(int number) {
                return LogLevel.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig.getDescriptor().getEnumTypes().get(0);
      }

      private static final LogLevel[] VALUES = values();

      public static LogLevel valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private LogLevel(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfig.LogLevel)
    }

    /**
     * Protobuf enum {@code yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfig.LogStatement}
     */
    public enum LogStatement
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>LOG_STATEMENT_UNSPECIFIED = 0;</code>
       */
      LOG_STATEMENT_UNSPECIFIED(0),
      /**
       * <code>NONE = 1;</code>
       */
      NONE(1),
      /**
       * <code>DDL = 2;</code>
       */
      DDL(2),
      /**
       * <code>MOD = 3;</code>
       */
      MOD(3),
      /**
       * <code>ALL = 4;</code>
       */
      ALL(4),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>LOG_STATEMENT_UNSPECIFIED = 0;</code>
       */
      public static final int LOG_STATEMENT_UNSPECIFIED_VALUE = 0;
      /**
       * <code>NONE = 1;</code>
       */
      public static final int NONE_VALUE = 1;
      /**
       * <code>DDL = 2;</code>
       */
      public static final int DDL_VALUE = 2;
      /**
       * <code>MOD = 3;</code>
       */
      public static final int MOD_VALUE = 3;
      /**
       * <code>ALL = 4;</code>
       */
      public static final int ALL_VALUE = 4;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static LogStatement valueOf(int value) {
        return forNumber(value);
      }

      public static LogStatement forNumber(int value) {
        switch (value) {
          case 0: return LOG_STATEMENT_UNSPECIFIED;
          case 1: return NONE;
          case 2: return DDL;
          case 3: return MOD;
          case 4: return ALL;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<LogStatement>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          LogStatement> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<LogStatement>() {
              public LogStatement findValueByNumber(int number) {
                return LogStatement.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig.getDescriptor().getEnumTypes().get(1);
      }

      private static final LogStatement[] VALUES = values();

      public static LogStatement valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private LogStatement(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfig.LogStatement)
    }

    /**
     * Protobuf enum {@code yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfig.AutostatsModeInFunctions}
     */
    public enum AutostatsModeInFunctions
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>AUTOSTATS_MODE_IN_FUNCTIONS_UNSPECIFIED = 0;</code>
       */
      AUTOSTATS_MODE_IN_FUNCTIONS_UNSPECIFIED(0),
      /**
       * <code>MODE_NONE = 1;</code>
       */
      MODE_NONE(1),
      /**
       * <code>ON_CHANGE = 2;</code>
       */
      ON_CHANGE(2),
      /**
       * <code>ON_NO_STATS = 3;</code>
       */
      ON_NO_STATS(3),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>AUTOSTATS_MODE_IN_FUNCTIONS_UNSPECIFIED = 0;</code>
       */
      public static final int AUTOSTATS_MODE_IN_FUNCTIONS_UNSPECIFIED_VALUE = 0;
      /**
       * <code>MODE_NONE = 1;</code>
       */
      public static final int MODE_NONE_VALUE = 1;
      /**
       * <code>ON_CHANGE = 2;</code>
       */
      public static final int ON_CHANGE_VALUE = 2;
      /**
       * <code>ON_NO_STATS = 3;</code>
       */
      public static final int ON_NO_STATS_VALUE = 3;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static AutostatsModeInFunctions valueOf(int value) {
        return forNumber(value);
      }

      public static AutostatsModeInFunctions forNumber(int value) {
        switch (value) {
          case 0: return AUTOSTATS_MODE_IN_FUNCTIONS_UNSPECIFIED;
          case 1: return MODE_NONE;
          case 2: return ON_CHANGE;
          case 3: return ON_NO_STATS;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<AutostatsModeInFunctions>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          AutostatsModeInFunctions> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<AutostatsModeInFunctions>() {
              public AutostatsModeInFunctions findValueByNumber(int number) {
                return AutostatsModeInFunctions.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig.getDescriptor().getEnumTypes().get(2);
      }

      private static final AutostatsModeInFunctions[] VALUES = values();

      public static AutostatsModeInFunctions valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private AutostatsModeInFunctions(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfig.AutostatsModeInFunctions)
    }

    public static final int LOG_LEVEL_FIELD_NUMBER = 1;
    private int logLevel_;
    /**
     * <pre>
     * Logging level for the Greenplum master subcluster. Possible values: TRACE, DEBUG, INFORMATION, WARNING, ERROR.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfig.LogLevel log_level = 1;</code>
     */
    public int getLogLevelValue() {
      return logLevel_;
    }
    /**
     * <pre>
     * Logging level for the Greenplum master subcluster. Possible values: TRACE, DEBUG, INFORMATION, WARNING, ERROR.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfig.LogLevel log_level = 1;</code>
     */
    public yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig.LogLevel getLogLevel() {
      @SuppressWarnings("deprecation")
      yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig.LogLevel result = yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig.LogLevel.valueOf(logLevel_);
      return result == null ? yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig.LogLevel.UNRECOGNIZED : result;
    }

    public static final int MAX_CONNECTIONS_FIELD_NUMBER = 2;
    private com.google.protobuf.Int64Value maxConnections_;
    /**
     * <pre>
     * Maximum number of inbound connections.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_connections = 2;</code>
     */
    public boolean hasMaxConnections() {
      return maxConnections_ != null;
    }
    /**
     * <pre>
     * Maximum number of inbound connections.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_connections = 2;</code>
     */
    public com.google.protobuf.Int64Value getMaxConnections() {
      return maxConnections_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : maxConnections_;
    }
    /**
     * <pre>
     * Maximum number of inbound connections.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_connections = 2;</code>
     */
    public com.google.protobuf.Int64ValueOrBuilder getMaxConnectionsOrBuilder() {
      return getMaxConnections();
    }

    public static final int TIMEZONE_FIELD_NUMBER = 3;
    private com.google.protobuf.StringValue timezone_;
    /**
     * <pre>
     * The server's time zone to be used in DateTime fields conversions. Specified as an IANA identifier.
     * </pre>
     *
     * <code>.google.protobuf.StringValue timezone = 3;</code>
     */
    public boolean hasTimezone() {
      return timezone_ != null;
    }
    /**
     * <pre>
     * The server's time zone to be used in DateTime fields conversions. Specified as an IANA identifier.
     * </pre>
     *
     * <code>.google.protobuf.StringValue timezone = 3;</code>
     */
    public com.google.protobuf.StringValue getTimezone() {
      return timezone_ == null ? com.google.protobuf.StringValue.getDefaultInstance() : timezone_;
    }
    /**
     * <pre>
     * The server's time zone to be used in DateTime fields conversions. Specified as an IANA identifier.
     * </pre>
     *
     * <code>.google.protobuf.StringValue timezone = 3;</code>
     */
    public com.google.protobuf.StringValueOrBuilder getTimezoneOrBuilder() {
      return getTimezone();
    }

    public static final int POOL_FIELD_NUMBER = 4;
    private yandex.cloud.api.mdb.greenplum.v1.GPCF.ConnectionPoolerConfig pool_;
    /**
     * <pre>
     * Odyssey pool settings
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfig pool = 4;</code>
     */
    public boolean hasPool() {
      return pool_ != null;
    }
    /**
     * <pre>
     * Odyssey pool settings
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfig pool = 4;</code>
     */
    public yandex.cloud.api.mdb.greenplum.v1.GPCF.ConnectionPoolerConfig getPool() {
      return pool_ == null ? yandex.cloud.api.mdb.greenplum.v1.GPCF.ConnectionPoolerConfig.getDefaultInstance() : pool_;
    }
    /**
     * <pre>
     * Odyssey pool settings
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfig pool = 4;</code>
     */
    public yandex.cloud.api.mdb.greenplum.v1.GPCF.ConnectionPoolerConfigOrBuilder getPoolOrBuilder() {
      return getPool();
    }

    public static final int MAX_PREPARED_TRANSACTIONS_FIELD_NUMBER = 13;
    private com.google.protobuf.Int64Value maxPreparedTransactions_;
    /**
     * <pre>
     * Sets the maximum number of transactions that can be in the "prepared" state simultaneously
     * https://www.postgresql.org/docs/9.6/runtime-config-resource.html
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_prepared_transactions = 13;</code>
     */
    public boolean hasMaxPreparedTransactions() {
      return maxPreparedTransactions_ != null;
    }
    /**
     * <pre>
     * Sets the maximum number of transactions that can be in the "prepared" state simultaneously
     * https://www.postgresql.org/docs/9.6/runtime-config-resource.html
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_prepared_transactions = 13;</code>
     */
    public com.google.protobuf.Int64Value getMaxPreparedTransactions() {
      return maxPreparedTransactions_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : maxPreparedTransactions_;
    }
    /**
     * <pre>
     * Sets the maximum number of transactions that can be in the "prepared" state simultaneously
     * https://www.postgresql.org/docs/9.6/runtime-config-resource.html
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_prepared_transactions = 13;</code>
     */
    public com.google.protobuf.Int64ValueOrBuilder getMaxPreparedTransactionsOrBuilder() {
      return getMaxPreparedTransactions();
    }

    public static final int RUNAWAY_DETECTOR_ACTIVATION_PERCENT_FIELD_NUMBER = 14;
    private com.google.protobuf.Int64Value runawayDetectorActivationPercent_;
    /**
     * <pre>
     * For queries that are managed by resource queues or resource groups,
     * this parameter determines when Greenplum Database terminates running queries based on the amount of memory the queries are using.
     * A value of 100 disables the automatic termination of queries based on the percentage of memory that is utilized.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#runaway_detector_activation_percent
     * </pre>
     *
     * <code>.google.protobuf.Int64Value runaway_detector_activation_percent = 14;</code>
     */
    public boolean hasRunawayDetectorActivationPercent() {
      return runawayDetectorActivationPercent_ != null;
    }
    /**
     * <pre>
     * For queries that are managed by resource queues or resource groups,
     * this parameter determines when Greenplum Database terminates running queries based on the amount of memory the queries are using.
     * A value of 100 disables the automatic termination of queries based on the percentage of memory that is utilized.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#runaway_detector_activation_percent
     * </pre>
     *
     * <code>.google.protobuf.Int64Value runaway_detector_activation_percent = 14;</code>
     */
    public com.google.protobuf.Int64Value getRunawayDetectorActivationPercent() {
      return runawayDetectorActivationPercent_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : runawayDetectorActivationPercent_;
    }
    /**
     * <pre>
     * For queries that are managed by resource queues or resource groups,
     * this parameter determines when Greenplum Database terminates running queries based on the amount of memory the queries are using.
     * A value of 100 disables the automatic termination of queries based on the percentage of memory that is utilized.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#runaway_detector_activation_percent
     * </pre>
     *
     * <code>.google.protobuf.Int64Value runaway_detector_activation_percent = 14;</code>
     */
    public com.google.protobuf.Int64ValueOrBuilder getRunawayDetectorActivationPercentOrBuilder() {
      return getRunawayDetectorActivationPercent();
    }

    public static final int TCP_KEEPALIVES_COUNT_FIELD_NUMBER = 15;
    private com.google.protobuf.Int64Value tcpKeepalivesCount_;
    /**
     * <pre>
     * How many keepalives may be lost before the connection is considered dead. A value of 0 uses the system default.
     * If TCP_KEEPCNT is not supported, this parameter must be 0.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#tcp_keepalives_count
     * </pre>
     *
     * <code>.google.protobuf.Int64Value tcp_keepalives_count = 15;</code>
     */
    public boolean hasTcpKeepalivesCount() {
      return tcpKeepalivesCount_ != null;
    }
    /**
     * <pre>
     * How many keepalives may be lost before the connection is considered dead. A value of 0 uses the system default.
     * If TCP_KEEPCNT is not supported, this parameter must be 0.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#tcp_keepalives_count
     * </pre>
     *
     * <code>.google.protobuf.Int64Value tcp_keepalives_count = 15;</code>
     */
    public com.google.protobuf.Int64Value getTcpKeepalivesCount() {
      return tcpKeepalivesCount_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : tcpKeepalivesCount_;
    }
    /**
     * <pre>
     * How many keepalives may be lost before the connection is considered dead. A value of 0 uses the system default.
     * If TCP_KEEPCNT is not supported, this parameter must be 0.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#tcp_keepalives_count
     * </pre>
     *
     * <code>.google.protobuf.Int64Value tcp_keepalives_count = 15;</code>
     */
    public com.google.protobuf.Int64ValueOrBuilder getTcpKeepalivesCountOrBuilder() {
      return getTcpKeepalivesCount();
    }

    public static final int TCP_KEEPALIVES_INTERVAL_FIELD_NUMBER = 16;
    private com.google.protobuf.Int64Value tcpKeepalivesInterval_;
    /**
     * <pre>
     * How many seconds to wait for a response to a keepalive before retransmitting. A value of 0 uses the system default.
     * If TCP_KEEPINTVL is not supported, this parameter must be 0.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#tcp_keepalives_interval
     * </pre>
     *
     * <code>.google.protobuf.Int64Value tcp_keepalives_interval = 16;</code>
     */
    public boolean hasTcpKeepalivesInterval() {
      return tcpKeepalivesInterval_ != null;
    }
    /**
     * <pre>
     * How many seconds to wait for a response to a keepalive before retransmitting. A value of 0 uses the system default.
     * If TCP_KEEPINTVL is not supported, this parameter must be 0.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#tcp_keepalives_interval
     * </pre>
     *
     * <code>.google.protobuf.Int64Value tcp_keepalives_interval = 16;</code>
     */
    public com.google.protobuf.Int64Value getTcpKeepalivesInterval() {
      return tcpKeepalivesInterval_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : tcpKeepalivesInterval_;
    }
    /**
     * <pre>
     * How many seconds to wait for a response to a keepalive before retransmitting. A value of 0 uses the system default.
     * If TCP_KEEPINTVL is not supported, this parameter must be 0.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#tcp_keepalives_interval
     * </pre>
     *
     * <code>.google.protobuf.Int64Value tcp_keepalives_interval = 16;</code>
     */
    public com.google.protobuf.Int64ValueOrBuilder getTcpKeepalivesIntervalOrBuilder() {
      return getTcpKeepalivesInterval();
    }

    public static final int READABLE_EXTERNAL_TABLE_TIMEOUT_FIELD_NUMBER = 19;
    private com.google.protobuf.Int64Value readableExternalTableTimeout_;
    /**
     * <pre>
     * When an SQL query reads from an external table, the parameter value specifies the amount of time in seconds that
     * Greenplum Database waits before cancelling the query when data stops being returned from the external table.
     * The default value of 0, specifies no time out. Greenplum Database does not cancel the query.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#readable_external_table_timeout
     * </pre>
     *
     * <code>.google.protobuf.Int64Value readable_external_table_timeout = 19;</code>
     */
    public boolean hasReadableExternalTableTimeout() {
      return readableExternalTableTimeout_ != null;
    }
    /**
     * <pre>
     * When an SQL query reads from an external table, the parameter value specifies the amount of time in seconds that
     * Greenplum Database waits before cancelling the query when data stops being returned from the external table.
     * The default value of 0, specifies no time out. Greenplum Database does not cancel the query.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#readable_external_table_timeout
     * </pre>
     *
     * <code>.google.protobuf.Int64Value readable_external_table_timeout = 19;</code>
     */
    public com.google.protobuf.Int64Value getReadableExternalTableTimeout() {
      return readableExternalTableTimeout_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : readableExternalTableTimeout_;
    }
    /**
     * <pre>
     * When an SQL query reads from an external table, the parameter value specifies the amount of time in seconds that
     * Greenplum Database waits before cancelling the query when data stops being returned from the external table.
     * The default value of 0, specifies no time out. Greenplum Database does not cancel the query.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#readable_external_table_timeout
     * </pre>
     *
     * <code>.google.protobuf.Int64Value readable_external_table_timeout = 19;</code>
     */
    public com.google.protobuf.Int64ValueOrBuilder getReadableExternalTableTimeoutOrBuilder() {
      return getReadableExternalTableTimeout();
    }

    public static final int GP_INTERCONNECT_SND_QUEUE_DEPTH_FIELD_NUMBER = 20;
    private com.google.protobuf.Int64Value gpInterconnectSndQueueDepth_;
    /**
     * <pre>
     * Sets the amount of data per-peer to be queued by the default UDPIFC interconnect on senders.
     * Increasing the depth from its default value will cause the system to use more memory, but may increase performance.
     * Reasonable values for this parameter are between 1 and 4. Increasing the value might radically increase the amount of memory used by the system.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_interconnect_snd_queue_depth
     * </pre>
     *
     * <code>.google.protobuf.Int64Value gp_interconnect_snd_queue_depth = 20;</code>
     */
    public boolean hasGpInterconnectSndQueueDepth() {
      return gpInterconnectSndQueueDepth_ != null;
    }
    /**
     * <pre>
     * Sets the amount of data per-peer to be queued by the default UDPIFC interconnect on senders.
     * Increasing the depth from its default value will cause the system to use more memory, but may increase performance.
     * Reasonable values for this parameter are between 1 and 4. Increasing the value might radically increase the amount of memory used by the system.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_interconnect_snd_queue_depth
     * </pre>
     *
     * <code>.google.protobuf.Int64Value gp_interconnect_snd_queue_depth = 20;</code>
     */
    public com.google.protobuf.Int64Value getGpInterconnectSndQueueDepth() {
      return gpInterconnectSndQueueDepth_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : gpInterconnectSndQueueDepth_;
    }
    /**
     * <pre>
     * Sets the amount of data per-peer to be queued by the default UDPIFC interconnect on senders.
     * Increasing the depth from its default value will cause the system to use more memory, but may increase performance.
     * Reasonable values for this parameter are between 1 and 4. Increasing the value might radically increase the amount of memory used by the system.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_interconnect_snd_queue_depth
     * </pre>
     *
     * <code>.google.protobuf.Int64Value gp_interconnect_snd_queue_depth = 20;</code>
     */
    public com.google.protobuf.Int64ValueOrBuilder getGpInterconnectSndQueueDepthOrBuilder() {
      return getGpInterconnectSndQueueDepth();
    }

    public static final int GP_INTERCONNECT_QUEUE_DEPTH_FIELD_NUMBER = 21;
    private com.google.protobuf.Int64Value gpInterconnectQueueDepth_;
    /**
     * <pre>
     * Sets the amount of data per-peer to be queued by the Greenplum Database interconnect on receivers
     * (when data is received but no space is available to receive it the data will be dropped, and the transmitter will need to resend it)
     * for the default UDPIFC interconnect.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_interconnect_queue_depth
     * </pre>
     *
     * <code>.google.protobuf.Int64Value gp_interconnect_queue_depth = 21;</code>
     */
    public boolean hasGpInterconnectQueueDepth() {
      return gpInterconnectQueueDepth_ != null;
    }
    /**
     * <pre>
     * Sets the amount of data per-peer to be queued by the Greenplum Database interconnect on receivers
     * (when data is received but no space is available to receive it the data will be dropped, and the transmitter will need to resend it)
     * for the default UDPIFC interconnect.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_interconnect_queue_depth
     * </pre>
     *
     * <code>.google.protobuf.Int64Value gp_interconnect_queue_depth = 21;</code>
     */
    public com.google.protobuf.Int64Value getGpInterconnectQueueDepth() {
      return gpInterconnectQueueDepth_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : gpInterconnectQueueDepth_;
    }
    /**
     * <pre>
     * Sets the amount of data per-peer to be queued by the Greenplum Database interconnect on receivers
     * (when data is received but no space is available to receive it the data will be dropped, and the transmitter will need to resend it)
     * for the default UDPIFC interconnect.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_interconnect_queue_depth
     * </pre>
     *
     * <code>.google.protobuf.Int64Value gp_interconnect_queue_depth = 21;</code>
     */
    public com.google.protobuf.Int64ValueOrBuilder getGpInterconnectQueueDepthOrBuilder() {
      return getGpInterconnectQueueDepth();
    }

    public static final int LOG_STATEMENT_FIELD_NUMBER = 22;
    private int logStatement_;
    /**
     * <pre>
     * Controls which SQL statements are logged. DDL logs all data definition commands like CREATE, ALTER, and DROP commands.
     * MOD logs all DDL statements, plus INSERT, UPDATE, DELETE, TRUNCATE, and COPY FROM.
     * PREPARE and EXPLAIN ANALYZE statements are also logged if their contained command is of an appropriate type.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#log_statement
     * Default value is ddl
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfig.LogStatement log_statement = 22;</code>
     */
    public int getLogStatementValue() {
      return logStatement_;
    }
    /**
     * <pre>
     * Controls which SQL statements are logged. DDL logs all data definition commands like CREATE, ALTER, and DROP commands.
     * MOD logs all DDL statements, plus INSERT, UPDATE, DELETE, TRUNCATE, and COPY FROM.
     * PREPARE and EXPLAIN ANALYZE statements are also logged if their contained command is of an appropriate type.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#log_statement
     * Default value is ddl
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfig.LogStatement log_statement = 22;</code>
     */
    public yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig.LogStatement getLogStatement() {
      @SuppressWarnings("deprecation")
      yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig.LogStatement result = yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig.LogStatement.valueOf(logStatement_);
      return result == null ? yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig.LogStatement.UNRECOGNIZED : result;
    }

    public static final int LOG_DURATION_FIELD_NUMBER = 23;
    private com.google.protobuf.BoolValue logDuration_;
    /**
     * <pre>
     * Causes the duration of every completed statement which satisfies log_statement to be logged.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#log_duration
     * </pre>
     *
     * <code>.google.protobuf.BoolValue log_duration = 23;</code>
     */
    public boolean hasLogDuration() {
      return logDuration_ != null;
    }
    /**
     * <pre>
     * Causes the duration of every completed statement which satisfies log_statement to be logged.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#log_duration
     * </pre>
     *
     * <code>.google.protobuf.BoolValue log_duration = 23;</code>
     */
    public com.google.protobuf.BoolValue getLogDuration() {
      return logDuration_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : logDuration_;
    }
    /**
     * <pre>
     * Causes the duration of every completed statement which satisfies log_statement to be logged.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#log_duration
     * </pre>
     *
     * <code>.google.protobuf.BoolValue log_duration = 23;</code>
     */
    public com.google.protobuf.BoolValueOrBuilder getLogDurationOrBuilder() {
      return getLogDuration();
    }

    public static final int OPTIMIZER_ANALYZE_ROOT_PARTITION_FIELD_NUMBER = 24;
    private com.google.protobuf.BoolValue optimizerAnalyzeRootPartition_;
    /**
     * <pre>
     * For a partitioned table, controls whether the ROOTPARTITION keyword is required to collect root partition statistics
     * when the ANALYZE command is run on the table. GPORCA uses the root partition statistics when generating a query plan.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#optimizer_analyze_root_partition
     * </pre>
     *
     * <code>.google.protobuf.BoolValue optimizer_analyze_root_partition = 24;</code>
     */
    public boolean hasOptimizerAnalyzeRootPartition() {
      return optimizerAnalyzeRootPartition_ != null;
    }
    /**
     * <pre>
     * For a partitioned table, controls whether the ROOTPARTITION keyword is required to collect root partition statistics
     * when the ANALYZE command is run on the table. GPORCA uses the root partition statistics when generating a query plan.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#optimizer_analyze_root_partition
     * </pre>
     *
     * <code>.google.protobuf.BoolValue optimizer_analyze_root_partition = 24;</code>
     */
    public com.google.protobuf.BoolValue getOptimizerAnalyzeRootPartition() {
      return optimizerAnalyzeRootPartition_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : optimizerAnalyzeRootPartition_;
    }
    /**
     * <pre>
     * For a partitioned table, controls whether the ROOTPARTITION keyword is required to collect root partition statistics
     * when the ANALYZE command is run on the table. GPORCA uses the root partition statistics when generating a query plan.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#optimizer_analyze_root_partition
     * </pre>
     *
     * <code>.google.protobuf.BoolValue optimizer_analyze_root_partition = 24;</code>
     */
    public com.google.protobuf.BoolValueOrBuilder getOptimizerAnalyzeRootPartitionOrBuilder() {
      return getOptimizerAnalyzeRootPartition();
    }

    public static final int GP_EXTERNAL_MAX_SEGS_FIELD_NUMBER = 25;
    private com.google.protobuf.Int64Value gpExternalMaxSegs_;
    /**
     * <pre>
     * Sets the number of segments that will scan external table data during an external table operation,
     * the purpose being not to overload the system with scanning data and take away resources from other concurrent operations.
     * This only applies to external tables that use the gpfdist:// protocol to access external table data.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_external_max_segs
     * </pre>
     *
     * <code>.google.protobuf.Int64Value gp_external_max_segs = 25;</code>
     */
    public boolean hasGpExternalMaxSegs() {
      return gpExternalMaxSegs_ != null;
    }
    /**
     * <pre>
     * Sets the number of segments that will scan external table data during an external table operation,
     * the purpose being not to overload the system with scanning data and take away resources from other concurrent operations.
     * This only applies to external tables that use the gpfdist:// protocol to access external table data.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_external_max_segs
     * </pre>
     *
     * <code>.google.protobuf.Int64Value gp_external_max_segs = 25;</code>
     */
    public com.google.protobuf.Int64Value getGpExternalMaxSegs() {
      return gpExternalMaxSegs_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : gpExternalMaxSegs_;
    }
    /**
     * <pre>
     * Sets the number of segments that will scan external table data during an external table operation,
     * the purpose being not to overload the system with scanning data and take away resources from other concurrent operations.
     * This only applies to external tables that use the gpfdist:// protocol to access external table data.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_external_max_segs
     * </pre>
     *
     * <code>.google.protobuf.Int64Value gp_external_max_segs = 25;</code>
     */
    public com.google.protobuf.Int64ValueOrBuilder getGpExternalMaxSegsOrBuilder() {
      return getGpExternalMaxSegs();
    }

    public static final int GP_FTS_PROBE_TIMEOUT_FIELD_NUMBER = 26;
    private com.google.protobuf.Int64Value gpFtsProbeTimeout_;
    /**
     * <pre>
     * Specifies the allowed timeout for the fault detection process (ftsprobe) to establish a connection to a segment before declaring it down.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_fts_probe_timeout
     * </pre>
     *
     * <code>.google.protobuf.Int64Value gp_fts_probe_timeout = 26;</code>
     */
    public boolean hasGpFtsProbeTimeout() {
      return gpFtsProbeTimeout_ != null;
    }
    /**
     * <pre>
     * Specifies the allowed timeout for the fault detection process (ftsprobe) to establish a connection to a segment before declaring it down.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_fts_probe_timeout
     * </pre>
     *
     * <code>.google.protobuf.Int64Value gp_fts_probe_timeout = 26;</code>
     */
    public com.google.protobuf.Int64Value getGpFtsProbeTimeout() {
      return gpFtsProbeTimeout_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : gpFtsProbeTimeout_;
    }
    /**
     * <pre>
     * Specifies the allowed timeout for the fault detection process (ftsprobe) to establish a connection to a segment before declaring it down.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_fts_probe_timeout
     * </pre>
     *
     * <code>.google.protobuf.Int64Value gp_fts_probe_timeout = 26;</code>
     */
    public com.google.protobuf.Int64ValueOrBuilder getGpFtsProbeTimeoutOrBuilder() {
      return getGpFtsProbeTimeout();
    }

    public static final int GP_WORKFILE_COMPRESSION_FIELD_NUMBER = 27;
    private com.google.protobuf.BoolValue gpWorkfileCompression_;
    /**
     * <pre>
     * Specifies whether the temporary files created, when a hash aggregation or hash join operation spills to disk, are compressed.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_compression
     * </pre>
     *
     * <code>.google.protobuf.BoolValue gp_workfile_compression = 27;</code>
     */
    public boolean hasGpWorkfileCompression() {
      return gpWorkfileCompression_ != null;
    }
    /**
     * <pre>
     * Specifies whether the temporary files created, when a hash aggregation or hash join operation spills to disk, are compressed.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_compression
     * </pre>
     *
     * <code>.google.protobuf.BoolValue gp_workfile_compression = 27;</code>
     */
    public com.google.protobuf.BoolValue getGpWorkfileCompression() {
      return gpWorkfileCompression_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : gpWorkfileCompression_;
    }
    /**
     * <pre>
     * Specifies whether the temporary files created, when a hash aggregation or hash join operation spills to disk, are compressed.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_compression
     * </pre>
     *
     * <code>.google.protobuf.BoolValue gp_workfile_compression = 27;</code>
     */
    public com.google.protobuf.BoolValueOrBuilder getGpWorkfileCompressionOrBuilder() {
      return getGpWorkfileCompression();
    }

    public static final int GP_AUTOSTATS_MODE_IN_FUNCTIONS_FIELD_NUMBER = 28;
    private int gpAutostatsModeInFunctions_;
    /**
     * <pre>
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_autostats_mode_in_functions
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfig.AutostatsModeInFunctions gp_autostats_mode_in_functions = 28;</code>
     */
    public int getGpAutostatsModeInFunctionsValue() {
      return gpAutostatsModeInFunctions_;
    }
    /**
     * <pre>
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_autostats_mode_in_functions
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfig.AutostatsModeInFunctions gp_autostats_mode_in_functions = 28;</code>
     */
    public yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig.AutostatsModeInFunctions getGpAutostatsModeInFunctions() {
      @SuppressWarnings("deprecation")
      yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig.AutostatsModeInFunctions result = yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig.AutostatsModeInFunctions.valueOf(gpAutostatsModeInFunctions_);
      return result == null ? yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig.AutostatsModeInFunctions.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (logLevel_ != yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig.LogLevel.LOG_LEVEL_UNSPECIFIED.getNumber()) {
        output.writeEnum(1, logLevel_);
      }
      if (maxConnections_ != null) {
        output.writeMessage(2, getMaxConnections());
      }
      if (timezone_ != null) {
        output.writeMessage(3, getTimezone());
      }
      if (pool_ != null) {
        output.writeMessage(4, getPool());
      }
      if (maxPreparedTransactions_ != null) {
        output.writeMessage(13, getMaxPreparedTransactions());
      }
      if (runawayDetectorActivationPercent_ != null) {
        output.writeMessage(14, getRunawayDetectorActivationPercent());
      }
      if (tcpKeepalivesCount_ != null) {
        output.writeMessage(15, getTcpKeepalivesCount());
      }
      if (tcpKeepalivesInterval_ != null) {
        output.writeMessage(16, getTcpKeepalivesInterval());
      }
      if (readableExternalTableTimeout_ != null) {
        output.writeMessage(19, getReadableExternalTableTimeout());
      }
      if (gpInterconnectSndQueueDepth_ != null) {
        output.writeMessage(20, getGpInterconnectSndQueueDepth());
      }
      if (gpInterconnectQueueDepth_ != null) {
        output.writeMessage(21, getGpInterconnectQueueDepth());
      }
      if (logStatement_ != yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig.LogStatement.LOG_STATEMENT_UNSPECIFIED.getNumber()) {
        output.writeEnum(22, logStatement_);
      }
      if (logDuration_ != null) {
        output.writeMessage(23, getLogDuration());
      }
      if (optimizerAnalyzeRootPartition_ != null) {
        output.writeMessage(24, getOptimizerAnalyzeRootPartition());
      }
      if (gpExternalMaxSegs_ != null) {
        output.writeMessage(25, getGpExternalMaxSegs());
      }
      if (gpFtsProbeTimeout_ != null) {
        output.writeMessage(26, getGpFtsProbeTimeout());
      }
      if (gpWorkfileCompression_ != null) {
        output.writeMessage(27, getGpWorkfileCompression());
      }
      if (gpAutostatsModeInFunctions_ != yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig.AutostatsModeInFunctions.AUTOSTATS_MODE_IN_FUNCTIONS_UNSPECIFIED.getNumber()) {
        output.writeEnum(28, gpAutostatsModeInFunctions_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (logLevel_ != yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig.LogLevel.LOG_LEVEL_UNSPECIFIED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, logLevel_);
      }
      if (maxConnections_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getMaxConnections());
      }
      if (timezone_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getTimezone());
      }
      if (pool_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getPool());
      }
      if (maxPreparedTransactions_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(13, getMaxPreparedTransactions());
      }
      if (runawayDetectorActivationPercent_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(14, getRunawayDetectorActivationPercent());
      }
      if (tcpKeepalivesCount_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(15, getTcpKeepalivesCount());
      }
      if (tcpKeepalivesInterval_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(16, getTcpKeepalivesInterval());
      }
      if (readableExternalTableTimeout_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(19, getReadableExternalTableTimeout());
      }
      if (gpInterconnectSndQueueDepth_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(20, getGpInterconnectSndQueueDepth());
      }
      if (gpInterconnectQueueDepth_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(21, getGpInterconnectQueueDepth());
      }
      if (logStatement_ != yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig.LogStatement.LOG_STATEMENT_UNSPECIFIED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(22, logStatement_);
      }
      if (logDuration_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(23, getLogDuration());
      }
      if (optimizerAnalyzeRootPartition_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(24, getOptimizerAnalyzeRootPartition());
      }
      if (gpExternalMaxSegs_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(25, getGpExternalMaxSegs());
      }
      if (gpFtsProbeTimeout_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(26, getGpFtsProbeTimeout());
      }
      if (gpWorkfileCompression_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(27, getGpWorkfileCompression());
      }
      if (gpAutostatsModeInFunctions_ != yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig.AutostatsModeInFunctions.AUTOSTATS_MODE_IN_FUNCTIONS_UNSPECIFIED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(28, gpAutostatsModeInFunctions_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig)) {
        return super.equals(obj);
      }
      yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig other = (yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig) obj;

      boolean result = true;
      result = result && logLevel_ == other.logLevel_;
      result = result && (hasMaxConnections() == other.hasMaxConnections());
      if (hasMaxConnections()) {
        result = result && getMaxConnections()
            .equals(other.getMaxConnections());
      }
      result = result && (hasTimezone() == other.hasTimezone());
      if (hasTimezone()) {
        result = result && getTimezone()
            .equals(other.getTimezone());
      }
      result = result && (hasPool() == other.hasPool());
      if (hasPool()) {
        result = result && getPool()
            .equals(other.getPool());
      }
      result = result && (hasMaxPreparedTransactions() == other.hasMaxPreparedTransactions());
      if (hasMaxPreparedTransactions()) {
        result = result && getMaxPreparedTransactions()
            .equals(other.getMaxPreparedTransactions());
      }
      result = result && (hasRunawayDetectorActivationPercent() == other.hasRunawayDetectorActivationPercent());
      if (hasRunawayDetectorActivationPercent()) {
        result = result && getRunawayDetectorActivationPercent()
            .equals(other.getRunawayDetectorActivationPercent());
      }
      result = result && (hasTcpKeepalivesCount() == other.hasTcpKeepalivesCount());
      if (hasTcpKeepalivesCount()) {
        result = result && getTcpKeepalivesCount()
            .equals(other.getTcpKeepalivesCount());
      }
      result = result && (hasTcpKeepalivesInterval() == other.hasTcpKeepalivesInterval());
      if (hasTcpKeepalivesInterval()) {
        result = result && getTcpKeepalivesInterval()
            .equals(other.getTcpKeepalivesInterval());
      }
      result = result && (hasReadableExternalTableTimeout() == other.hasReadableExternalTableTimeout());
      if (hasReadableExternalTableTimeout()) {
        result = result && getReadableExternalTableTimeout()
            .equals(other.getReadableExternalTableTimeout());
      }
      result = result && (hasGpInterconnectSndQueueDepth() == other.hasGpInterconnectSndQueueDepth());
      if (hasGpInterconnectSndQueueDepth()) {
        result = result && getGpInterconnectSndQueueDepth()
            .equals(other.getGpInterconnectSndQueueDepth());
      }
      result = result && (hasGpInterconnectQueueDepth() == other.hasGpInterconnectQueueDepth());
      if (hasGpInterconnectQueueDepth()) {
        result = result && getGpInterconnectQueueDepth()
            .equals(other.getGpInterconnectQueueDepth());
      }
      result = result && logStatement_ == other.logStatement_;
      result = result && (hasLogDuration() == other.hasLogDuration());
      if (hasLogDuration()) {
        result = result && getLogDuration()
            .equals(other.getLogDuration());
      }
      result = result && (hasOptimizerAnalyzeRootPartition() == other.hasOptimizerAnalyzeRootPartition());
      if (hasOptimizerAnalyzeRootPartition()) {
        result = result && getOptimizerAnalyzeRootPartition()
            .equals(other.getOptimizerAnalyzeRootPartition());
      }
      result = result && (hasGpExternalMaxSegs() == other.hasGpExternalMaxSegs());
      if (hasGpExternalMaxSegs()) {
        result = result && getGpExternalMaxSegs()
            .equals(other.getGpExternalMaxSegs());
      }
      result = result && (hasGpFtsProbeTimeout() == other.hasGpFtsProbeTimeout());
      if (hasGpFtsProbeTimeout()) {
        result = result && getGpFtsProbeTimeout()
            .equals(other.getGpFtsProbeTimeout());
      }
      result = result && (hasGpWorkfileCompression() == other.hasGpWorkfileCompression());
      if (hasGpWorkfileCompression()) {
        result = result && getGpWorkfileCompression()
            .equals(other.getGpWorkfileCompression());
      }
      result = result && gpAutostatsModeInFunctions_ == other.gpAutostatsModeInFunctions_;
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + LOG_LEVEL_FIELD_NUMBER;
      hash = (53 * hash) + logLevel_;
      if (hasMaxConnections()) {
        hash = (37 * hash) + MAX_CONNECTIONS_FIELD_NUMBER;
        hash = (53 * hash) + getMaxConnections().hashCode();
      }
      if (hasTimezone()) {
        hash = (37 * hash) + TIMEZONE_FIELD_NUMBER;
        hash = (53 * hash) + getTimezone().hashCode();
      }
      if (hasPool()) {
        hash = (37 * hash) + POOL_FIELD_NUMBER;
        hash = (53 * hash) + getPool().hashCode();
      }
      if (hasMaxPreparedTransactions()) {
        hash = (37 * hash) + MAX_PREPARED_TRANSACTIONS_FIELD_NUMBER;
        hash = (53 * hash) + getMaxPreparedTransactions().hashCode();
      }
      if (hasRunawayDetectorActivationPercent()) {
        hash = (37 * hash) + RUNAWAY_DETECTOR_ACTIVATION_PERCENT_FIELD_NUMBER;
        hash = (53 * hash) + getRunawayDetectorActivationPercent().hashCode();
      }
      if (hasTcpKeepalivesCount()) {
        hash = (37 * hash) + TCP_KEEPALIVES_COUNT_FIELD_NUMBER;
        hash = (53 * hash) + getTcpKeepalivesCount().hashCode();
      }
      if (hasTcpKeepalivesInterval()) {
        hash = (37 * hash) + TCP_KEEPALIVES_INTERVAL_FIELD_NUMBER;
        hash = (53 * hash) + getTcpKeepalivesInterval().hashCode();
      }
      if (hasReadableExternalTableTimeout()) {
        hash = (37 * hash) + READABLE_EXTERNAL_TABLE_TIMEOUT_FIELD_NUMBER;
        hash = (53 * hash) + getReadableExternalTableTimeout().hashCode();
      }
      if (hasGpInterconnectSndQueueDepth()) {
        hash = (37 * hash) + GP_INTERCONNECT_SND_QUEUE_DEPTH_FIELD_NUMBER;
        hash = (53 * hash) + getGpInterconnectSndQueueDepth().hashCode();
      }
      if (hasGpInterconnectQueueDepth()) {
        hash = (37 * hash) + GP_INTERCONNECT_QUEUE_DEPTH_FIELD_NUMBER;
        hash = (53 * hash) + getGpInterconnectQueueDepth().hashCode();
      }
      hash = (37 * hash) + LOG_STATEMENT_FIELD_NUMBER;
      hash = (53 * hash) + logStatement_;
      if (hasLogDuration()) {
        hash = (37 * hash) + LOG_DURATION_FIELD_NUMBER;
        hash = (53 * hash) + getLogDuration().hashCode();
      }
      if (hasOptimizerAnalyzeRootPartition()) {
        hash = (37 * hash) + OPTIMIZER_ANALYZE_ROOT_PARTITION_FIELD_NUMBER;
        hash = (53 * hash) + getOptimizerAnalyzeRootPartition().hashCode();
      }
      if (hasGpExternalMaxSegs()) {
        hash = (37 * hash) + GP_EXTERNAL_MAX_SEGS_FIELD_NUMBER;
        hash = (53 * hash) + getGpExternalMaxSegs().hashCode();
      }
      if (hasGpFtsProbeTimeout()) {
        hash = (37 * hash) + GP_FTS_PROBE_TIMEOUT_FIELD_NUMBER;
        hash = (53 * hash) + getGpFtsProbeTimeout().hashCode();
      }
      if (hasGpWorkfileCompression()) {
        hash = (37 * hash) + GP_WORKFILE_COMPRESSION_FIELD_NUMBER;
        hash = (53 * hash) + getGpWorkfileCompression().hashCode();
      }
      hash = (37 * hash) + GP_AUTOSTATS_MODE_IN_FUNCTIONS_FIELD_NUMBER;
      hash = (53 * hash) + gpAutostatsModeInFunctions_;
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Greenplum master subcluster configuration options. Detailed description for each set of options
     * Any options not listed here are not supported.
     * </pre>
     *
     * Protobuf type {@code yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfig}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfig)
        yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return yandex.cloud.api.mdb.greenplum.v1.GPCF.internal_static_yandex_cloud_mdb_greenplum_v1_GreenplumMasterConfig_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return yandex.cloud.api.mdb.greenplum.v1.GPCF.internal_static_yandex_cloud_mdb_greenplum_v1_GreenplumMasterConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig.class, yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig.Builder.class);
      }

      // Construct using yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        logLevel_ = 0;

        if (maxConnectionsBuilder_ == null) {
          maxConnections_ = null;
        } else {
          maxConnections_ = null;
          maxConnectionsBuilder_ = null;
        }
        if (timezoneBuilder_ == null) {
          timezone_ = null;
        } else {
          timezone_ = null;
          timezoneBuilder_ = null;
        }
        if (poolBuilder_ == null) {
          pool_ = null;
        } else {
          pool_ = null;
          poolBuilder_ = null;
        }
        if (maxPreparedTransactionsBuilder_ == null) {
          maxPreparedTransactions_ = null;
        } else {
          maxPreparedTransactions_ = null;
          maxPreparedTransactionsBuilder_ = null;
        }
        if (runawayDetectorActivationPercentBuilder_ == null) {
          runawayDetectorActivationPercent_ = null;
        } else {
          runawayDetectorActivationPercent_ = null;
          runawayDetectorActivationPercentBuilder_ = null;
        }
        if (tcpKeepalivesCountBuilder_ == null) {
          tcpKeepalivesCount_ = null;
        } else {
          tcpKeepalivesCount_ = null;
          tcpKeepalivesCountBuilder_ = null;
        }
        if (tcpKeepalivesIntervalBuilder_ == null) {
          tcpKeepalivesInterval_ = null;
        } else {
          tcpKeepalivesInterval_ = null;
          tcpKeepalivesIntervalBuilder_ = null;
        }
        if (readableExternalTableTimeoutBuilder_ == null) {
          readableExternalTableTimeout_ = null;
        } else {
          readableExternalTableTimeout_ = null;
          readableExternalTableTimeoutBuilder_ = null;
        }
        if (gpInterconnectSndQueueDepthBuilder_ == null) {
          gpInterconnectSndQueueDepth_ = null;
        } else {
          gpInterconnectSndQueueDepth_ = null;
          gpInterconnectSndQueueDepthBuilder_ = null;
        }
        if (gpInterconnectQueueDepthBuilder_ == null) {
          gpInterconnectQueueDepth_ = null;
        } else {
          gpInterconnectQueueDepth_ = null;
          gpInterconnectQueueDepthBuilder_ = null;
        }
        logStatement_ = 0;

        if (logDurationBuilder_ == null) {
          logDuration_ = null;
        } else {
          logDuration_ = null;
          logDurationBuilder_ = null;
        }
        if (optimizerAnalyzeRootPartitionBuilder_ == null) {
          optimizerAnalyzeRootPartition_ = null;
        } else {
          optimizerAnalyzeRootPartition_ = null;
          optimizerAnalyzeRootPartitionBuilder_ = null;
        }
        if (gpExternalMaxSegsBuilder_ == null) {
          gpExternalMaxSegs_ = null;
        } else {
          gpExternalMaxSegs_ = null;
          gpExternalMaxSegsBuilder_ = null;
        }
        if (gpFtsProbeTimeoutBuilder_ == null) {
          gpFtsProbeTimeout_ = null;
        } else {
          gpFtsProbeTimeout_ = null;
          gpFtsProbeTimeoutBuilder_ = null;
        }
        if (gpWorkfileCompressionBuilder_ == null) {
          gpWorkfileCompression_ = null;
        } else {
          gpWorkfileCompression_ = null;
          gpWorkfileCompressionBuilder_ = null;
        }
        gpAutostatsModeInFunctions_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return yandex.cloud.api.mdb.greenplum.v1.GPCF.internal_static_yandex_cloud_mdb_greenplum_v1_GreenplumMasterConfig_descriptor;
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig getDefaultInstanceForType() {
        return yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig.getDefaultInstance();
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig build() {
        yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig buildPartial() {
        yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig result = new yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig(this);
        result.logLevel_ = logLevel_;
        if (maxConnectionsBuilder_ == null) {
          result.maxConnections_ = maxConnections_;
        } else {
          result.maxConnections_ = maxConnectionsBuilder_.build();
        }
        if (timezoneBuilder_ == null) {
          result.timezone_ = timezone_;
        } else {
          result.timezone_ = timezoneBuilder_.build();
        }
        if (poolBuilder_ == null) {
          result.pool_ = pool_;
        } else {
          result.pool_ = poolBuilder_.build();
        }
        if (maxPreparedTransactionsBuilder_ == null) {
          result.maxPreparedTransactions_ = maxPreparedTransactions_;
        } else {
          result.maxPreparedTransactions_ = maxPreparedTransactionsBuilder_.build();
        }
        if (runawayDetectorActivationPercentBuilder_ == null) {
          result.runawayDetectorActivationPercent_ = runawayDetectorActivationPercent_;
        } else {
          result.runawayDetectorActivationPercent_ = runawayDetectorActivationPercentBuilder_.build();
        }
        if (tcpKeepalivesCountBuilder_ == null) {
          result.tcpKeepalivesCount_ = tcpKeepalivesCount_;
        } else {
          result.tcpKeepalivesCount_ = tcpKeepalivesCountBuilder_.build();
        }
        if (tcpKeepalivesIntervalBuilder_ == null) {
          result.tcpKeepalivesInterval_ = tcpKeepalivesInterval_;
        } else {
          result.tcpKeepalivesInterval_ = tcpKeepalivesIntervalBuilder_.build();
        }
        if (readableExternalTableTimeoutBuilder_ == null) {
          result.readableExternalTableTimeout_ = readableExternalTableTimeout_;
        } else {
          result.readableExternalTableTimeout_ = readableExternalTableTimeoutBuilder_.build();
        }
        if (gpInterconnectSndQueueDepthBuilder_ == null) {
          result.gpInterconnectSndQueueDepth_ = gpInterconnectSndQueueDepth_;
        } else {
          result.gpInterconnectSndQueueDepth_ = gpInterconnectSndQueueDepthBuilder_.build();
        }
        if (gpInterconnectQueueDepthBuilder_ == null) {
          result.gpInterconnectQueueDepth_ = gpInterconnectQueueDepth_;
        } else {
          result.gpInterconnectQueueDepth_ = gpInterconnectQueueDepthBuilder_.build();
        }
        result.logStatement_ = logStatement_;
        if (logDurationBuilder_ == null) {
          result.logDuration_ = logDuration_;
        } else {
          result.logDuration_ = logDurationBuilder_.build();
        }
        if (optimizerAnalyzeRootPartitionBuilder_ == null) {
          result.optimizerAnalyzeRootPartition_ = optimizerAnalyzeRootPartition_;
        } else {
          result.optimizerAnalyzeRootPartition_ = optimizerAnalyzeRootPartitionBuilder_.build();
        }
        if (gpExternalMaxSegsBuilder_ == null) {
          result.gpExternalMaxSegs_ = gpExternalMaxSegs_;
        } else {
          result.gpExternalMaxSegs_ = gpExternalMaxSegsBuilder_.build();
        }
        if (gpFtsProbeTimeoutBuilder_ == null) {
          result.gpFtsProbeTimeout_ = gpFtsProbeTimeout_;
        } else {
          result.gpFtsProbeTimeout_ = gpFtsProbeTimeoutBuilder_.build();
        }
        if (gpWorkfileCompressionBuilder_ == null) {
          result.gpWorkfileCompression_ = gpWorkfileCompression_;
        } else {
          result.gpWorkfileCompression_ = gpWorkfileCompressionBuilder_.build();
        }
        result.gpAutostatsModeInFunctions_ = gpAutostatsModeInFunctions_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig) {
          return mergeFrom((yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig other) {
        if (other == yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig.getDefaultInstance()) return this;
        if (other.logLevel_ != 0) {
          setLogLevelValue(other.getLogLevelValue());
        }
        if (other.hasMaxConnections()) {
          mergeMaxConnections(other.getMaxConnections());
        }
        if (other.hasTimezone()) {
          mergeTimezone(other.getTimezone());
        }
        if (other.hasPool()) {
          mergePool(other.getPool());
        }
        if (other.hasMaxPreparedTransactions()) {
          mergeMaxPreparedTransactions(other.getMaxPreparedTransactions());
        }
        if (other.hasRunawayDetectorActivationPercent()) {
          mergeRunawayDetectorActivationPercent(other.getRunawayDetectorActivationPercent());
        }
        if (other.hasTcpKeepalivesCount()) {
          mergeTcpKeepalivesCount(other.getTcpKeepalivesCount());
        }
        if (other.hasTcpKeepalivesInterval()) {
          mergeTcpKeepalivesInterval(other.getTcpKeepalivesInterval());
        }
        if (other.hasReadableExternalTableTimeout()) {
          mergeReadableExternalTableTimeout(other.getReadableExternalTableTimeout());
        }
        if (other.hasGpInterconnectSndQueueDepth()) {
          mergeGpInterconnectSndQueueDepth(other.getGpInterconnectSndQueueDepth());
        }
        if (other.hasGpInterconnectQueueDepth()) {
          mergeGpInterconnectQueueDepth(other.getGpInterconnectQueueDepth());
        }
        if (other.logStatement_ != 0) {
          setLogStatementValue(other.getLogStatementValue());
        }
        if (other.hasLogDuration()) {
          mergeLogDuration(other.getLogDuration());
        }
        if (other.hasOptimizerAnalyzeRootPartition()) {
          mergeOptimizerAnalyzeRootPartition(other.getOptimizerAnalyzeRootPartition());
        }
        if (other.hasGpExternalMaxSegs()) {
          mergeGpExternalMaxSegs(other.getGpExternalMaxSegs());
        }
        if (other.hasGpFtsProbeTimeout()) {
          mergeGpFtsProbeTimeout(other.getGpFtsProbeTimeout());
        }
        if (other.hasGpWorkfileCompression()) {
          mergeGpWorkfileCompression(other.getGpWorkfileCompression());
        }
        if (other.gpAutostatsModeInFunctions_ != 0) {
          setGpAutostatsModeInFunctionsValue(other.getGpAutostatsModeInFunctionsValue());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int logLevel_ = 0;
      /**
       * <pre>
       * Logging level for the Greenplum master subcluster. Possible values: TRACE, DEBUG, INFORMATION, WARNING, ERROR.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfig.LogLevel log_level = 1;</code>
       */
      public int getLogLevelValue() {
        return logLevel_;
      }
      /**
       * <pre>
       * Logging level for the Greenplum master subcluster. Possible values: TRACE, DEBUG, INFORMATION, WARNING, ERROR.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfig.LogLevel log_level = 1;</code>
       */
      public Builder setLogLevelValue(int value) {
        logLevel_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Logging level for the Greenplum master subcluster. Possible values: TRACE, DEBUG, INFORMATION, WARNING, ERROR.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfig.LogLevel log_level = 1;</code>
       */
      public yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig.LogLevel getLogLevel() {
        @SuppressWarnings("deprecation")
        yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig.LogLevel result = yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig.LogLevel.valueOf(logLevel_);
        return result == null ? yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig.LogLevel.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Logging level for the Greenplum master subcluster. Possible values: TRACE, DEBUG, INFORMATION, WARNING, ERROR.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfig.LogLevel log_level = 1;</code>
       */
      public Builder setLogLevel(yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig.LogLevel value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        logLevel_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Logging level for the Greenplum master subcluster. Possible values: TRACE, DEBUG, INFORMATION, WARNING, ERROR.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfig.LogLevel log_level = 1;</code>
       */
      public Builder clearLogLevel() {
        
        logLevel_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Int64Value maxConnections_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> maxConnectionsBuilder_;
      /**
       * <pre>
       * Maximum number of inbound connections.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_connections = 2;</code>
       */
      public boolean hasMaxConnections() {
        return maxConnectionsBuilder_ != null || maxConnections_ != null;
      }
      /**
       * <pre>
       * Maximum number of inbound connections.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_connections = 2;</code>
       */
      public com.google.protobuf.Int64Value getMaxConnections() {
        if (maxConnectionsBuilder_ == null) {
          return maxConnections_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : maxConnections_;
        } else {
          return maxConnectionsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Maximum number of inbound connections.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_connections = 2;</code>
       */
      public Builder setMaxConnections(com.google.protobuf.Int64Value value) {
        if (maxConnectionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          maxConnections_ = value;
          onChanged();
        } else {
          maxConnectionsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Maximum number of inbound connections.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_connections = 2;</code>
       */
      public Builder setMaxConnections(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (maxConnectionsBuilder_ == null) {
          maxConnections_ = builderForValue.build();
          onChanged();
        } else {
          maxConnectionsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Maximum number of inbound connections.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_connections = 2;</code>
       */
      public Builder mergeMaxConnections(com.google.protobuf.Int64Value value) {
        if (maxConnectionsBuilder_ == null) {
          if (maxConnections_ != null) {
            maxConnections_ =
              com.google.protobuf.Int64Value.newBuilder(maxConnections_).mergeFrom(value).buildPartial();
          } else {
            maxConnections_ = value;
          }
          onChanged();
        } else {
          maxConnectionsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Maximum number of inbound connections.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_connections = 2;</code>
       */
      public Builder clearMaxConnections() {
        if (maxConnectionsBuilder_ == null) {
          maxConnections_ = null;
          onChanged();
        } else {
          maxConnections_ = null;
          maxConnectionsBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Maximum number of inbound connections.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_connections = 2;</code>
       */
      public com.google.protobuf.Int64Value.Builder getMaxConnectionsBuilder() {
        
        onChanged();
        return getMaxConnectionsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Maximum number of inbound connections.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_connections = 2;</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getMaxConnectionsOrBuilder() {
        if (maxConnectionsBuilder_ != null) {
          return maxConnectionsBuilder_.getMessageOrBuilder();
        } else {
          return maxConnections_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : maxConnections_;
        }
      }
      /**
       * <pre>
       * Maximum number of inbound connections.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_connections = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getMaxConnectionsFieldBuilder() {
        if (maxConnectionsBuilder_ == null) {
          maxConnectionsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getMaxConnections(),
                  getParentForChildren(),
                  isClean());
          maxConnections_ = null;
        }
        return maxConnectionsBuilder_;
      }

      private com.google.protobuf.StringValue timezone_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder> timezoneBuilder_;
      /**
       * <pre>
       * The server's time zone to be used in DateTime fields conversions. Specified as an IANA identifier.
       * </pre>
       *
       * <code>.google.protobuf.StringValue timezone = 3;</code>
       */
      public boolean hasTimezone() {
        return timezoneBuilder_ != null || timezone_ != null;
      }
      /**
       * <pre>
       * The server's time zone to be used in DateTime fields conversions. Specified as an IANA identifier.
       * </pre>
       *
       * <code>.google.protobuf.StringValue timezone = 3;</code>
       */
      public com.google.protobuf.StringValue getTimezone() {
        if (timezoneBuilder_ == null) {
          return timezone_ == null ? com.google.protobuf.StringValue.getDefaultInstance() : timezone_;
        } else {
          return timezoneBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The server's time zone to be used in DateTime fields conversions. Specified as an IANA identifier.
       * </pre>
       *
       * <code>.google.protobuf.StringValue timezone = 3;</code>
       */
      public Builder setTimezone(com.google.protobuf.StringValue value) {
        if (timezoneBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          timezone_ = value;
          onChanged();
        } else {
          timezoneBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The server's time zone to be used in DateTime fields conversions. Specified as an IANA identifier.
       * </pre>
       *
       * <code>.google.protobuf.StringValue timezone = 3;</code>
       */
      public Builder setTimezone(
          com.google.protobuf.StringValue.Builder builderForValue) {
        if (timezoneBuilder_ == null) {
          timezone_ = builderForValue.build();
          onChanged();
        } else {
          timezoneBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The server's time zone to be used in DateTime fields conversions. Specified as an IANA identifier.
       * </pre>
       *
       * <code>.google.protobuf.StringValue timezone = 3;</code>
       */
      public Builder mergeTimezone(com.google.protobuf.StringValue value) {
        if (timezoneBuilder_ == null) {
          if (timezone_ != null) {
            timezone_ =
              com.google.protobuf.StringValue.newBuilder(timezone_).mergeFrom(value).buildPartial();
          } else {
            timezone_ = value;
          }
          onChanged();
        } else {
          timezoneBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The server's time zone to be used in DateTime fields conversions. Specified as an IANA identifier.
       * </pre>
       *
       * <code>.google.protobuf.StringValue timezone = 3;</code>
       */
      public Builder clearTimezone() {
        if (timezoneBuilder_ == null) {
          timezone_ = null;
          onChanged();
        } else {
          timezone_ = null;
          timezoneBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The server's time zone to be used in DateTime fields conversions. Specified as an IANA identifier.
       * </pre>
       *
       * <code>.google.protobuf.StringValue timezone = 3;</code>
       */
      public com.google.protobuf.StringValue.Builder getTimezoneBuilder() {
        
        onChanged();
        return getTimezoneFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The server's time zone to be used in DateTime fields conversions. Specified as an IANA identifier.
       * </pre>
       *
       * <code>.google.protobuf.StringValue timezone = 3;</code>
       */
      public com.google.protobuf.StringValueOrBuilder getTimezoneOrBuilder() {
        if (timezoneBuilder_ != null) {
          return timezoneBuilder_.getMessageOrBuilder();
        } else {
          return timezone_ == null ?
              com.google.protobuf.StringValue.getDefaultInstance() : timezone_;
        }
      }
      /**
       * <pre>
       * The server's time zone to be used in DateTime fields conversions. Specified as an IANA identifier.
       * </pre>
       *
       * <code>.google.protobuf.StringValue timezone = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder> 
          getTimezoneFieldBuilder() {
        if (timezoneBuilder_ == null) {
          timezoneBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder>(
                  getTimezone(),
                  getParentForChildren(),
                  isClean());
          timezone_ = null;
        }
        return timezoneBuilder_;
      }

      private yandex.cloud.api.mdb.greenplum.v1.GPCF.ConnectionPoolerConfig pool_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.mdb.greenplum.v1.GPCF.ConnectionPoolerConfig, yandex.cloud.api.mdb.greenplum.v1.GPCF.ConnectionPoolerConfig.Builder, yandex.cloud.api.mdb.greenplum.v1.GPCF.ConnectionPoolerConfigOrBuilder> poolBuilder_;
      /**
       * <pre>
       * Odyssey pool settings
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfig pool = 4;</code>
       */
      public boolean hasPool() {
        return poolBuilder_ != null || pool_ != null;
      }
      /**
       * <pre>
       * Odyssey pool settings
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfig pool = 4;</code>
       */
      public yandex.cloud.api.mdb.greenplum.v1.GPCF.ConnectionPoolerConfig getPool() {
        if (poolBuilder_ == null) {
          return pool_ == null ? yandex.cloud.api.mdb.greenplum.v1.GPCF.ConnectionPoolerConfig.getDefaultInstance() : pool_;
        } else {
          return poolBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Odyssey pool settings
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfig pool = 4;</code>
       */
      public Builder setPool(yandex.cloud.api.mdb.greenplum.v1.GPCF.ConnectionPoolerConfig value) {
        if (poolBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          pool_ = value;
          onChanged();
        } else {
          poolBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Odyssey pool settings
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfig pool = 4;</code>
       */
      public Builder setPool(
          yandex.cloud.api.mdb.greenplum.v1.GPCF.ConnectionPoolerConfig.Builder builderForValue) {
        if (poolBuilder_ == null) {
          pool_ = builderForValue.build();
          onChanged();
        } else {
          poolBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Odyssey pool settings
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfig pool = 4;</code>
       */
      public Builder mergePool(yandex.cloud.api.mdb.greenplum.v1.GPCF.ConnectionPoolerConfig value) {
        if (poolBuilder_ == null) {
          if (pool_ != null) {
            pool_ =
              yandex.cloud.api.mdb.greenplum.v1.GPCF.ConnectionPoolerConfig.newBuilder(pool_).mergeFrom(value).buildPartial();
          } else {
            pool_ = value;
          }
          onChanged();
        } else {
          poolBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Odyssey pool settings
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfig pool = 4;</code>
       */
      public Builder clearPool() {
        if (poolBuilder_ == null) {
          pool_ = null;
          onChanged();
        } else {
          pool_ = null;
          poolBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Odyssey pool settings
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfig pool = 4;</code>
       */
      public yandex.cloud.api.mdb.greenplum.v1.GPCF.ConnectionPoolerConfig.Builder getPoolBuilder() {
        
        onChanged();
        return getPoolFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Odyssey pool settings
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfig pool = 4;</code>
       */
      public yandex.cloud.api.mdb.greenplum.v1.GPCF.ConnectionPoolerConfigOrBuilder getPoolOrBuilder() {
        if (poolBuilder_ != null) {
          return poolBuilder_.getMessageOrBuilder();
        } else {
          return pool_ == null ?
              yandex.cloud.api.mdb.greenplum.v1.GPCF.ConnectionPoolerConfig.getDefaultInstance() : pool_;
        }
      }
      /**
       * <pre>
       * Odyssey pool settings
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.ConnectionPoolerConfig pool = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.mdb.greenplum.v1.GPCF.ConnectionPoolerConfig, yandex.cloud.api.mdb.greenplum.v1.GPCF.ConnectionPoolerConfig.Builder, yandex.cloud.api.mdb.greenplum.v1.GPCF.ConnectionPoolerConfigOrBuilder> 
          getPoolFieldBuilder() {
        if (poolBuilder_ == null) {
          poolBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              yandex.cloud.api.mdb.greenplum.v1.GPCF.ConnectionPoolerConfig, yandex.cloud.api.mdb.greenplum.v1.GPCF.ConnectionPoolerConfig.Builder, yandex.cloud.api.mdb.greenplum.v1.GPCF.ConnectionPoolerConfigOrBuilder>(
                  getPool(),
                  getParentForChildren(),
                  isClean());
          pool_ = null;
        }
        return poolBuilder_;
      }

      private com.google.protobuf.Int64Value maxPreparedTransactions_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> maxPreparedTransactionsBuilder_;
      /**
       * <pre>
       * Sets the maximum number of transactions that can be in the "prepared" state simultaneously
       * https://www.postgresql.org/docs/9.6/runtime-config-resource.html
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_prepared_transactions = 13;</code>
       */
      public boolean hasMaxPreparedTransactions() {
        return maxPreparedTransactionsBuilder_ != null || maxPreparedTransactions_ != null;
      }
      /**
       * <pre>
       * Sets the maximum number of transactions that can be in the "prepared" state simultaneously
       * https://www.postgresql.org/docs/9.6/runtime-config-resource.html
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_prepared_transactions = 13;</code>
       */
      public com.google.protobuf.Int64Value getMaxPreparedTransactions() {
        if (maxPreparedTransactionsBuilder_ == null) {
          return maxPreparedTransactions_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : maxPreparedTransactions_;
        } else {
          return maxPreparedTransactionsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Sets the maximum number of transactions that can be in the "prepared" state simultaneously
       * https://www.postgresql.org/docs/9.6/runtime-config-resource.html
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_prepared_transactions = 13;</code>
       */
      public Builder setMaxPreparedTransactions(com.google.protobuf.Int64Value value) {
        if (maxPreparedTransactionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          maxPreparedTransactions_ = value;
          onChanged();
        } else {
          maxPreparedTransactionsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Sets the maximum number of transactions that can be in the "prepared" state simultaneously
       * https://www.postgresql.org/docs/9.6/runtime-config-resource.html
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_prepared_transactions = 13;</code>
       */
      public Builder setMaxPreparedTransactions(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (maxPreparedTransactionsBuilder_ == null) {
          maxPreparedTransactions_ = builderForValue.build();
          onChanged();
        } else {
          maxPreparedTransactionsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Sets the maximum number of transactions that can be in the "prepared" state simultaneously
       * https://www.postgresql.org/docs/9.6/runtime-config-resource.html
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_prepared_transactions = 13;</code>
       */
      public Builder mergeMaxPreparedTransactions(com.google.protobuf.Int64Value value) {
        if (maxPreparedTransactionsBuilder_ == null) {
          if (maxPreparedTransactions_ != null) {
            maxPreparedTransactions_ =
              com.google.protobuf.Int64Value.newBuilder(maxPreparedTransactions_).mergeFrom(value).buildPartial();
          } else {
            maxPreparedTransactions_ = value;
          }
          onChanged();
        } else {
          maxPreparedTransactionsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Sets the maximum number of transactions that can be in the "prepared" state simultaneously
       * https://www.postgresql.org/docs/9.6/runtime-config-resource.html
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_prepared_transactions = 13;</code>
       */
      public Builder clearMaxPreparedTransactions() {
        if (maxPreparedTransactionsBuilder_ == null) {
          maxPreparedTransactions_ = null;
          onChanged();
        } else {
          maxPreparedTransactions_ = null;
          maxPreparedTransactionsBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Sets the maximum number of transactions that can be in the "prepared" state simultaneously
       * https://www.postgresql.org/docs/9.6/runtime-config-resource.html
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_prepared_transactions = 13;</code>
       */
      public com.google.protobuf.Int64Value.Builder getMaxPreparedTransactionsBuilder() {
        
        onChanged();
        return getMaxPreparedTransactionsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Sets the maximum number of transactions that can be in the "prepared" state simultaneously
       * https://www.postgresql.org/docs/9.6/runtime-config-resource.html
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_prepared_transactions = 13;</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getMaxPreparedTransactionsOrBuilder() {
        if (maxPreparedTransactionsBuilder_ != null) {
          return maxPreparedTransactionsBuilder_.getMessageOrBuilder();
        } else {
          return maxPreparedTransactions_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : maxPreparedTransactions_;
        }
      }
      /**
       * <pre>
       * Sets the maximum number of transactions that can be in the "prepared" state simultaneously
       * https://www.postgresql.org/docs/9.6/runtime-config-resource.html
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_prepared_transactions = 13;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getMaxPreparedTransactionsFieldBuilder() {
        if (maxPreparedTransactionsBuilder_ == null) {
          maxPreparedTransactionsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getMaxPreparedTransactions(),
                  getParentForChildren(),
                  isClean());
          maxPreparedTransactions_ = null;
        }
        return maxPreparedTransactionsBuilder_;
      }

      private com.google.protobuf.Int64Value runawayDetectorActivationPercent_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> runawayDetectorActivationPercentBuilder_;
      /**
       * <pre>
       * For queries that are managed by resource queues or resource groups,
       * this parameter determines when Greenplum Database terminates running queries based on the amount of memory the queries are using.
       * A value of 100 disables the automatic termination of queries based on the percentage of memory that is utilized.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#runaway_detector_activation_percent
       * </pre>
       *
       * <code>.google.protobuf.Int64Value runaway_detector_activation_percent = 14;</code>
       */
      public boolean hasRunawayDetectorActivationPercent() {
        return runawayDetectorActivationPercentBuilder_ != null || runawayDetectorActivationPercent_ != null;
      }
      /**
       * <pre>
       * For queries that are managed by resource queues or resource groups,
       * this parameter determines when Greenplum Database terminates running queries based on the amount of memory the queries are using.
       * A value of 100 disables the automatic termination of queries based on the percentage of memory that is utilized.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#runaway_detector_activation_percent
       * </pre>
       *
       * <code>.google.protobuf.Int64Value runaway_detector_activation_percent = 14;</code>
       */
      public com.google.protobuf.Int64Value getRunawayDetectorActivationPercent() {
        if (runawayDetectorActivationPercentBuilder_ == null) {
          return runawayDetectorActivationPercent_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : runawayDetectorActivationPercent_;
        } else {
          return runawayDetectorActivationPercentBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * For queries that are managed by resource queues or resource groups,
       * this parameter determines when Greenplum Database terminates running queries based on the amount of memory the queries are using.
       * A value of 100 disables the automatic termination of queries based on the percentage of memory that is utilized.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#runaway_detector_activation_percent
       * </pre>
       *
       * <code>.google.protobuf.Int64Value runaway_detector_activation_percent = 14;</code>
       */
      public Builder setRunawayDetectorActivationPercent(com.google.protobuf.Int64Value value) {
        if (runawayDetectorActivationPercentBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          runawayDetectorActivationPercent_ = value;
          onChanged();
        } else {
          runawayDetectorActivationPercentBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * For queries that are managed by resource queues or resource groups,
       * this parameter determines when Greenplum Database terminates running queries based on the amount of memory the queries are using.
       * A value of 100 disables the automatic termination of queries based on the percentage of memory that is utilized.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#runaway_detector_activation_percent
       * </pre>
       *
       * <code>.google.protobuf.Int64Value runaway_detector_activation_percent = 14;</code>
       */
      public Builder setRunawayDetectorActivationPercent(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (runawayDetectorActivationPercentBuilder_ == null) {
          runawayDetectorActivationPercent_ = builderForValue.build();
          onChanged();
        } else {
          runawayDetectorActivationPercentBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * For queries that are managed by resource queues or resource groups,
       * this parameter determines when Greenplum Database terminates running queries based on the amount of memory the queries are using.
       * A value of 100 disables the automatic termination of queries based on the percentage of memory that is utilized.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#runaway_detector_activation_percent
       * </pre>
       *
       * <code>.google.protobuf.Int64Value runaway_detector_activation_percent = 14;</code>
       */
      public Builder mergeRunawayDetectorActivationPercent(com.google.protobuf.Int64Value value) {
        if (runawayDetectorActivationPercentBuilder_ == null) {
          if (runawayDetectorActivationPercent_ != null) {
            runawayDetectorActivationPercent_ =
              com.google.protobuf.Int64Value.newBuilder(runawayDetectorActivationPercent_).mergeFrom(value).buildPartial();
          } else {
            runawayDetectorActivationPercent_ = value;
          }
          onChanged();
        } else {
          runawayDetectorActivationPercentBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * For queries that are managed by resource queues or resource groups,
       * this parameter determines when Greenplum Database terminates running queries based on the amount of memory the queries are using.
       * A value of 100 disables the automatic termination of queries based on the percentage of memory that is utilized.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#runaway_detector_activation_percent
       * </pre>
       *
       * <code>.google.protobuf.Int64Value runaway_detector_activation_percent = 14;</code>
       */
      public Builder clearRunawayDetectorActivationPercent() {
        if (runawayDetectorActivationPercentBuilder_ == null) {
          runawayDetectorActivationPercent_ = null;
          onChanged();
        } else {
          runawayDetectorActivationPercent_ = null;
          runawayDetectorActivationPercentBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * For queries that are managed by resource queues or resource groups,
       * this parameter determines when Greenplum Database terminates running queries based on the amount of memory the queries are using.
       * A value of 100 disables the automatic termination of queries based on the percentage of memory that is utilized.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#runaway_detector_activation_percent
       * </pre>
       *
       * <code>.google.protobuf.Int64Value runaway_detector_activation_percent = 14;</code>
       */
      public com.google.protobuf.Int64Value.Builder getRunawayDetectorActivationPercentBuilder() {
        
        onChanged();
        return getRunawayDetectorActivationPercentFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * For queries that are managed by resource queues or resource groups,
       * this parameter determines when Greenplum Database terminates running queries based on the amount of memory the queries are using.
       * A value of 100 disables the automatic termination of queries based on the percentage of memory that is utilized.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#runaway_detector_activation_percent
       * </pre>
       *
       * <code>.google.protobuf.Int64Value runaway_detector_activation_percent = 14;</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getRunawayDetectorActivationPercentOrBuilder() {
        if (runawayDetectorActivationPercentBuilder_ != null) {
          return runawayDetectorActivationPercentBuilder_.getMessageOrBuilder();
        } else {
          return runawayDetectorActivationPercent_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : runawayDetectorActivationPercent_;
        }
      }
      /**
       * <pre>
       * For queries that are managed by resource queues or resource groups,
       * this parameter determines when Greenplum Database terminates running queries based on the amount of memory the queries are using.
       * A value of 100 disables the automatic termination of queries based on the percentage of memory that is utilized.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#runaway_detector_activation_percent
       * </pre>
       *
       * <code>.google.protobuf.Int64Value runaway_detector_activation_percent = 14;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getRunawayDetectorActivationPercentFieldBuilder() {
        if (runawayDetectorActivationPercentBuilder_ == null) {
          runawayDetectorActivationPercentBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getRunawayDetectorActivationPercent(),
                  getParentForChildren(),
                  isClean());
          runawayDetectorActivationPercent_ = null;
        }
        return runawayDetectorActivationPercentBuilder_;
      }

      private com.google.protobuf.Int64Value tcpKeepalivesCount_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> tcpKeepalivesCountBuilder_;
      /**
       * <pre>
       * How many keepalives may be lost before the connection is considered dead. A value of 0 uses the system default.
       * If TCP_KEEPCNT is not supported, this parameter must be 0.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#tcp_keepalives_count
       * </pre>
       *
       * <code>.google.protobuf.Int64Value tcp_keepalives_count = 15;</code>
       */
      public boolean hasTcpKeepalivesCount() {
        return tcpKeepalivesCountBuilder_ != null || tcpKeepalivesCount_ != null;
      }
      /**
       * <pre>
       * How many keepalives may be lost before the connection is considered dead. A value of 0 uses the system default.
       * If TCP_KEEPCNT is not supported, this parameter must be 0.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#tcp_keepalives_count
       * </pre>
       *
       * <code>.google.protobuf.Int64Value tcp_keepalives_count = 15;</code>
       */
      public com.google.protobuf.Int64Value getTcpKeepalivesCount() {
        if (tcpKeepalivesCountBuilder_ == null) {
          return tcpKeepalivesCount_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : tcpKeepalivesCount_;
        } else {
          return tcpKeepalivesCountBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * How many keepalives may be lost before the connection is considered dead. A value of 0 uses the system default.
       * If TCP_KEEPCNT is not supported, this parameter must be 0.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#tcp_keepalives_count
       * </pre>
       *
       * <code>.google.protobuf.Int64Value tcp_keepalives_count = 15;</code>
       */
      public Builder setTcpKeepalivesCount(com.google.protobuf.Int64Value value) {
        if (tcpKeepalivesCountBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tcpKeepalivesCount_ = value;
          onChanged();
        } else {
          tcpKeepalivesCountBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * How many keepalives may be lost before the connection is considered dead. A value of 0 uses the system default.
       * If TCP_KEEPCNT is not supported, this parameter must be 0.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#tcp_keepalives_count
       * </pre>
       *
       * <code>.google.protobuf.Int64Value tcp_keepalives_count = 15;</code>
       */
      public Builder setTcpKeepalivesCount(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (tcpKeepalivesCountBuilder_ == null) {
          tcpKeepalivesCount_ = builderForValue.build();
          onChanged();
        } else {
          tcpKeepalivesCountBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * How many keepalives may be lost before the connection is considered dead. A value of 0 uses the system default.
       * If TCP_KEEPCNT is not supported, this parameter must be 0.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#tcp_keepalives_count
       * </pre>
       *
       * <code>.google.protobuf.Int64Value tcp_keepalives_count = 15;</code>
       */
      public Builder mergeTcpKeepalivesCount(com.google.protobuf.Int64Value value) {
        if (tcpKeepalivesCountBuilder_ == null) {
          if (tcpKeepalivesCount_ != null) {
            tcpKeepalivesCount_ =
              com.google.protobuf.Int64Value.newBuilder(tcpKeepalivesCount_).mergeFrom(value).buildPartial();
          } else {
            tcpKeepalivesCount_ = value;
          }
          onChanged();
        } else {
          tcpKeepalivesCountBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * How many keepalives may be lost before the connection is considered dead. A value of 0 uses the system default.
       * If TCP_KEEPCNT is not supported, this parameter must be 0.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#tcp_keepalives_count
       * </pre>
       *
       * <code>.google.protobuf.Int64Value tcp_keepalives_count = 15;</code>
       */
      public Builder clearTcpKeepalivesCount() {
        if (tcpKeepalivesCountBuilder_ == null) {
          tcpKeepalivesCount_ = null;
          onChanged();
        } else {
          tcpKeepalivesCount_ = null;
          tcpKeepalivesCountBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * How many keepalives may be lost before the connection is considered dead. A value of 0 uses the system default.
       * If TCP_KEEPCNT is not supported, this parameter must be 0.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#tcp_keepalives_count
       * </pre>
       *
       * <code>.google.protobuf.Int64Value tcp_keepalives_count = 15;</code>
       */
      public com.google.protobuf.Int64Value.Builder getTcpKeepalivesCountBuilder() {
        
        onChanged();
        return getTcpKeepalivesCountFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * How many keepalives may be lost before the connection is considered dead. A value of 0 uses the system default.
       * If TCP_KEEPCNT is not supported, this parameter must be 0.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#tcp_keepalives_count
       * </pre>
       *
       * <code>.google.protobuf.Int64Value tcp_keepalives_count = 15;</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getTcpKeepalivesCountOrBuilder() {
        if (tcpKeepalivesCountBuilder_ != null) {
          return tcpKeepalivesCountBuilder_.getMessageOrBuilder();
        } else {
          return tcpKeepalivesCount_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : tcpKeepalivesCount_;
        }
      }
      /**
       * <pre>
       * How many keepalives may be lost before the connection is considered dead. A value of 0 uses the system default.
       * If TCP_KEEPCNT is not supported, this parameter must be 0.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#tcp_keepalives_count
       * </pre>
       *
       * <code>.google.protobuf.Int64Value tcp_keepalives_count = 15;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getTcpKeepalivesCountFieldBuilder() {
        if (tcpKeepalivesCountBuilder_ == null) {
          tcpKeepalivesCountBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getTcpKeepalivesCount(),
                  getParentForChildren(),
                  isClean());
          tcpKeepalivesCount_ = null;
        }
        return tcpKeepalivesCountBuilder_;
      }

      private com.google.protobuf.Int64Value tcpKeepalivesInterval_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> tcpKeepalivesIntervalBuilder_;
      /**
       * <pre>
       * How many seconds to wait for a response to a keepalive before retransmitting. A value of 0 uses the system default.
       * If TCP_KEEPINTVL is not supported, this parameter must be 0.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#tcp_keepalives_interval
       * </pre>
       *
       * <code>.google.protobuf.Int64Value tcp_keepalives_interval = 16;</code>
       */
      public boolean hasTcpKeepalivesInterval() {
        return tcpKeepalivesIntervalBuilder_ != null || tcpKeepalivesInterval_ != null;
      }
      /**
       * <pre>
       * How many seconds to wait for a response to a keepalive before retransmitting. A value of 0 uses the system default.
       * If TCP_KEEPINTVL is not supported, this parameter must be 0.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#tcp_keepalives_interval
       * </pre>
       *
       * <code>.google.protobuf.Int64Value tcp_keepalives_interval = 16;</code>
       */
      public com.google.protobuf.Int64Value getTcpKeepalivesInterval() {
        if (tcpKeepalivesIntervalBuilder_ == null) {
          return tcpKeepalivesInterval_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : tcpKeepalivesInterval_;
        } else {
          return tcpKeepalivesIntervalBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * How many seconds to wait for a response to a keepalive before retransmitting. A value of 0 uses the system default.
       * If TCP_KEEPINTVL is not supported, this parameter must be 0.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#tcp_keepalives_interval
       * </pre>
       *
       * <code>.google.protobuf.Int64Value tcp_keepalives_interval = 16;</code>
       */
      public Builder setTcpKeepalivesInterval(com.google.protobuf.Int64Value value) {
        if (tcpKeepalivesIntervalBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tcpKeepalivesInterval_ = value;
          onChanged();
        } else {
          tcpKeepalivesIntervalBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * How many seconds to wait for a response to a keepalive before retransmitting. A value of 0 uses the system default.
       * If TCP_KEEPINTVL is not supported, this parameter must be 0.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#tcp_keepalives_interval
       * </pre>
       *
       * <code>.google.protobuf.Int64Value tcp_keepalives_interval = 16;</code>
       */
      public Builder setTcpKeepalivesInterval(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (tcpKeepalivesIntervalBuilder_ == null) {
          tcpKeepalivesInterval_ = builderForValue.build();
          onChanged();
        } else {
          tcpKeepalivesIntervalBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * How many seconds to wait for a response to a keepalive before retransmitting. A value of 0 uses the system default.
       * If TCP_KEEPINTVL is not supported, this parameter must be 0.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#tcp_keepalives_interval
       * </pre>
       *
       * <code>.google.protobuf.Int64Value tcp_keepalives_interval = 16;</code>
       */
      public Builder mergeTcpKeepalivesInterval(com.google.protobuf.Int64Value value) {
        if (tcpKeepalivesIntervalBuilder_ == null) {
          if (tcpKeepalivesInterval_ != null) {
            tcpKeepalivesInterval_ =
              com.google.protobuf.Int64Value.newBuilder(tcpKeepalivesInterval_).mergeFrom(value).buildPartial();
          } else {
            tcpKeepalivesInterval_ = value;
          }
          onChanged();
        } else {
          tcpKeepalivesIntervalBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * How many seconds to wait for a response to a keepalive before retransmitting. A value of 0 uses the system default.
       * If TCP_KEEPINTVL is not supported, this parameter must be 0.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#tcp_keepalives_interval
       * </pre>
       *
       * <code>.google.protobuf.Int64Value tcp_keepalives_interval = 16;</code>
       */
      public Builder clearTcpKeepalivesInterval() {
        if (tcpKeepalivesIntervalBuilder_ == null) {
          tcpKeepalivesInterval_ = null;
          onChanged();
        } else {
          tcpKeepalivesInterval_ = null;
          tcpKeepalivesIntervalBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * How many seconds to wait for a response to a keepalive before retransmitting. A value of 0 uses the system default.
       * If TCP_KEEPINTVL is not supported, this parameter must be 0.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#tcp_keepalives_interval
       * </pre>
       *
       * <code>.google.protobuf.Int64Value tcp_keepalives_interval = 16;</code>
       */
      public com.google.protobuf.Int64Value.Builder getTcpKeepalivesIntervalBuilder() {
        
        onChanged();
        return getTcpKeepalivesIntervalFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * How many seconds to wait for a response to a keepalive before retransmitting. A value of 0 uses the system default.
       * If TCP_KEEPINTVL is not supported, this parameter must be 0.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#tcp_keepalives_interval
       * </pre>
       *
       * <code>.google.protobuf.Int64Value tcp_keepalives_interval = 16;</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getTcpKeepalivesIntervalOrBuilder() {
        if (tcpKeepalivesIntervalBuilder_ != null) {
          return tcpKeepalivesIntervalBuilder_.getMessageOrBuilder();
        } else {
          return tcpKeepalivesInterval_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : tcpKeepalivesInterval_;
        }
      }
      /**
       * <pre>
       * How many seconds to wait for a response to a keepalive before retransmitting. A value of 0 uses the system default.
       * If TCP_KEEPINTVL is not supported, this parameter must be 0.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#tcp_keepalives_interval
       * </pre>
       *
       * <code>.google.protobuf.Int64Value tcp_keepalives_interval = 16;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getTcpKeepalivesIntervalFieldBuilder() {
        if (tcpKeepalivesIntervalBuilder_ == null) {
          tcpKeepalivesIntervalBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getTcpKeepalivesInterval(),
                  getParentForChildren(),
                  isClean());
          tcpKeepalivesInterval_ = null;
        }
        return tcpKeepalivesIntervalBuilder_;
      }

      private com.google.protobuf.Int64Value readableExternalTableTimeout_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> readableExternalTableTimeoutBuilder_;
      /**
       * <pre>
       * When an SQL query reads from an external table, the parameter value specifies the amount of time in seconds that
       * Greenplum Database waits before cancelling the query when data stops being returned from the external table.
       * The default value of 0, specifies no time out. Greenplum Database does not cancel the query.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#readable_external_table_timeout
       * </pre>
       *
       * <code>.google.protobuf.Int64Value readable_external_table_timeout = 19;</code>
       */
      public boolean hasReadableExternalTableTimeout() {
        return readableExternalTableTimeoutBuilder_ != null || readableExternalTableTimeout_ != null;
      }
      /**
       * <pre>
       * When an SQL query reads from an external table, the parameter value specifies the amount of time in seconds that
       * Greenplum Database waits before cancelling the query when data stops being returned from the external table.
       * The default value of 0, specifies no time out. Greenplum Database does not cancel the query.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#readable_external_table_timeout
       * </pre>
       *
       * <code>.google.protobuf.Int64Value readable_external_table_timeout = 19;</code>
       */
      public com.google.protobuf.Int64Value getReadableExternalTableTimeout() {
        if (readableExternalTableTimeoutBuilder_ == null) {
          return readableExternalTableTimeout_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : readableExternalTableTimeout_;
        } else {
          return readableExternalTableTimeoutBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * When an SQL query reads from an external table, the parameter value specifies the amount of time in seconds that
       * Greenplum Database waits before cancelling the query when data stops being returned from the external table.
       * The default value of 0, specifies no time out. Greenplum Database does not cancel the query.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#readable_external_table_timeout
       * </pre>
       *
       * <code>.google.protobuf.Int64Value readable_external_table_timeout = 19;</code>
       */
      public Builder setReadableExternalTableTimeout(com.google.protobuf.Int64Value value) {
        if (readableExternalTableTimeoutBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          readableExternalTableTimeout_ = value;
          onChanged();
        } else {
          readableExternalTableTimeoutBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * When an SQL query reads from an external table, the parameter value specifies the amount of time in seconds that
       * Greenplum Database waits before cancelling the query when data stops being returned from the external table.
       * The default value of 0, specifies no time out. Greenplum Database does not cancel the query.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#readable_external_table_timeout
       * </pre>
       *
       * <code>.google.protobuf.Int64Value readable_external_table_timeout = 19;</code>
       */
      public Builder setReadableExternalTableTimeout(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (readableExternalTableTimeoutBuilder_ == null) {
          readableExternalTableTimeout_ = builderForValue.build();
          onChanged();
        } else {
          readableExternalTableTimeoutBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * When an SQL query reads from an external table, the parameter value specifies the amount of time in seconds that
       * Greenplum Database waits before cancelling the query when data stops being returned from the external table.
       * The default value of 0, specifies no time out. Greenplum Database does not cancel the query.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#readable_external_table_timeout
       * </pre>
       *
       * <code>.google.protobuf.Int64Value readable_external_table_timeout = 19;</code>
       */
      public Builder mergeReadableExternalTableTimeout(com.google.protobuf.Int64Value value) {
        if (readableExternalTableTimeoutBuilder_ == null) {
          if (readableExternalTableTimeout_ != null) {
            readableExternalTableTimeout_ =
              com.google.protobuf.Int64Value.newBuilder(readableExternalTableTimeout_).mergeFrom(value).buildPartial();
          } else {
            readableExternalTableTimeout_ = value;
          }
          onChanged();
        } else {
          readableExternalTableTimeoutBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * When an SQL query reads from an external table, the parameter value specifies the amount of time in seconds that
       * Greenplum Database waits before cancelling the query when data stops being returned from the external table.
       * The default value of 0, specifies no time out. Greenplum Database does not cancel the query.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#readable_external_table_timeout
       * </pre>
       *
       * <code>.google.protobuf.Int64Value readable_external_table_timeout = 19;</code>
       */
      public Builder clearReadableExternalTableTimeout() {
        if (readableExternalTableTimeoutBuilder_ == null) {
          readableExternalTableTimeout_ = null;
          onChanged();
        } else {
          readableExternalTableTimeout_ = null;
          readableExternalTableTimeoutBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * When an SQL query reads from an external table, the parameter value specifies the amount of time in seconds that
       * Greenplum Database waits before cancelling the query when data stops being returned from the external table.
       * The default value of 0, specifies no time out. Greenplum Database does not cancel the query.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#readable_external_table_timeout
       * </pre>
       *
       * <code>.google.protobuf.Int64Value readable_external_table_timeout = 19;</code>
       */
      public com.google.protobuf.Int64Value.Builder getReadableExternalTableTimeoutBuilder() {
        
        onChanged();
        return getReadableExternalTableTimeoutFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * When an SQL query reads from an external table, the parameter value specifies the amount of time in seconds that
       * Greenplum Database waits before cancelling the query when data stops being returned from the external table.
       * The default value of 0, specifies no time out. Greenplum Database does not cancel the query.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#readable_external_table_timeout
       * </pre>
       *
       * <code>.google.protobuf.Int64Value readable_external_table_timeout = 19;</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getReadableExternalTableTimeoutOrBuilder() {
        if (readableExternalTableTimeoutBuilder_ != null) {
          return readableExternalTableTimeoutBuilder_.getMessageOrBuilder();
        } else {
          return readableExternalTableTimeout_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : readableExternalTableTimeout_;
        }
      }
      /**
       * <pre>
       * When an SQL query reads from an external table, the parameter value specifies the amount of time in seconds that
       * Greenplum Database waits before cancelling the query when data stops being returned from the external table.
       * The default value of 0, specifies no time out. Greenplum Database does not cancel the query.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#readable_external_table_timeout
       * </pre>
       *
       * <code>.google.protobuf.Int64Value readable_external_table_timeout = 19;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getReadableExternalTableTimeoutFieldBuilder() {
        if (readableExternalTableTimeoutBuilder_ == null) {
          readableExternalTableTimeoutBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getReadableExternalTableTimeout(),
                  getParentForChildren(),
                  isClean());
          readableExternalTableTimeout_ = null;
        }
        return readableExternalTableTimeoutBuilder_;
      }

      private com.google.protobuf.Int64Value gpInterconnectSndQueueDepth_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> gpInterconnectSndQueueDepthBuilder_;
      /**
       * <pre>
       * Sets the amount of data per-peer to be queued by the default UDPIFC interconnect on senders.
       * Increasing the depth from its default value will cause the system to use more memory, but may increase performance.
       * Reasonable values for this parameter are between 1 and 4. Increasing the value might radically increase the amount of memory used by the system.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_interconnect_snd_queue_depth
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_interconnect_snd_queue_depth = 20;</code>
       */
      public boolean hasGpInterconnectSndQueueDepth() {
        return gpInterconnectSndQueueDepthBuilder_ != null || gpInterconnectSndQueueDepth_ != null;
      }
      /**
       * <pre>
       * Sets the amount of data per-peer to be queued by the default UDPIFC interconnect on senders.
       * Increasing the depth from its default value will cause the system to use more memory, but may increase performance.
       * Reasonable values for this parameter are between 1 and 4. Increasing the value might radically increase the amount of memory used by the system.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_interconnect_snd_queue_depth
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_interconnect_snd_queue_depth = 20;</code>
       */
      public com.google.protobuf.Int64Value getGpInterconnectSndQueueDepth() {
        if (gpInterconnectSndQueueDepthBuilder_ == null) {
          return gpInterconnectSndQueueDepth_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : gpInterconnectSndQueueDepth_;
        } else {
          return gpInterconnectSndQueueDepthBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Sets the amount of data per-peer to be queued by the default UDPIFC interconnect on senders.
       * Increasing the depth from its default value will cause the system to use more memory, but may increase performance.
       * Reasonable values for this parameter are between 1 and 4. Increasing the value might radically increase the amount of memory used by the system.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_interconnect_snd_queue_depth
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_interconnect_snd_queue_depth = 20;</code>
       */
      public Builder setGpInterconnectSndQueueDepth(com.google.protobuf.Int64Value value) {
        if (gpInterconnectSndQueueDepthBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          gpInterconnectSndQueueDepth_ = value;
          onChanged();
        } else {
          gpInterconnectSndQueueDepthBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Sets the amount of data per-peer to be queued by the default UDPIFC interconnect on senders.
       * Increasing the depth from its default value will cause the system to use more memory, but may increase performance.
       * Reasonable values for this parameter are between 1 and 4. Increasing the value might radically increase the amount of memory used by the system.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_interconnect_snd_queue_depth
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_interconnect_snd_queue_depth = 20;</code>
       */
      public Builder setGpInterconnectSndQueueDepth(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (gpInterconnectSndQueueDepthBuilder_ == null) {
          gpInterconnectSndQueueDepth_ = builderForValue.build();
          onChanged();
        } else {
          gpInterconnectSndQueueDepthBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Sets the amount of data per-peer to be queued by the default UDPIFC interconnect on senders.
       * Increasing the depth from its default value will cause the system to use more memory, but may increase performance.
       * Reasonable values for this parameter are between 1 and 4. Increasing the value might radically increase the amount of memory used by the system.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_interconnect_snd_queue_depth
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_interconnect_snd_queue_depth = 20;</code>
       */
      public Builder mergeGpInterconnectSndQueueDepth(com.google.protobuf.Int64Value value) {
        if (gpInterconnectSndQueueDepthBuilder_ == null) {
          if (gpInterconnectSndQueueDepth_ != null) {
            gpInterconnectSndQueueDepth_ =
              com.google.protobuf.Int64Value.newBuilder(gpInterconnectSndQueueDepth_).mergeFrom(value).buildPartial();
          } else {
            gpInterconnectSndQueueDepth_ = value;
          }
          onChanged();
        } else {
          gpInterconnectSndQueueDepthBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Sets the amount of data per-peer to be queued by the default UDPIFC interconnect on senders.
       * Increasing the depth from its default value will cause the system to use more memory, but may increase performance.
       * Reasonable values for this parameter are between 1 and 4. Increasing the value might radically increase the amount of memory used by the system.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_interconnect_snd_queue_depth
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_interconnect_snd_queue_depth = 20;</code>
       */
      public Builder clearGpInterconnectSndQueueDepth() {
        if (gpInterconnectSndQueueDepthBuilder_ == null) {
          gpInterconnectSndQueueDepth_ = null;
          onChanged();
        } else {
          gpInterconnectSndQueueDepth_ = null;
          gpInterconnectSndQueueDepthBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Sets the amount of data per-peer to be queued by the default UDPIFC interconnect on senders.
       * Increasing the depth from its default value will cause the system to use more memory, but may increase performance.
       * Reasonable values for this parameter are between 1 and 4. Increasing the value might radically increase the amount of memory used by the system.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_interconnect_snd_queue_depth
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_interconnect_snd_queue_depth = 20;</code>
       */
      public com.google.protobuf.Int64Value.Builder getGpInterconnectSndQueueDepthBuilder() {
        
        onChanged();
        return getGpInterconnectSndQueueDepthFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Sets the amount of data per-peer to be queued by the default UDPIFC interconnect on senders.
       * Increasing the depth from its default value will cause the system to use more memory, but may increase performance.
       * Reasonable values for this parameter are between 1 and 4. Increasing the value might radically increase the amount of memory used by the system.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_interconnect_snd_queue_depth
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_interconnect_snd_queue_depth = 20;</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getGpInterconnectSndQueueDepthOrBuilder() {
        if (gpInterconnectSndQueueDepthBuilder_ != null) {
          return gpInterconnectSndQueueDepthBuilder_.getMessageOrBuilder();
        } else {
          return gpInterconnectSndQueueDepth_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : gpInterconnectSndQueueDepth_;
        }
      }
      /**
       * <pre>
       * Sets the amount of data per-peer to be queued by the default UDPIFC interconnect on senders.
       * Increasing the depth from its default value will cause the system to use more memory, but may increase performance.
       * Reasonable values for this parameter are between 1 and 4. Increasing the value might radically increase the amount of memory used by the system.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_interconnect_snd_queue_depth
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_interconnect_snd_queue_depth = 20;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getGpInterconnectSndQueueDepthFieldBuilder() {
        if (gpInterconnectSndQueueDepthBuilder_ == null) {
          gpInterconnectSndQueueDepthBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getGpInterconnectSndQueueDepth(),
                  getParentForChildren(),
                  isClean());
          gpInterconnectSndQueueDepth_ = null;
        }
        return gpInterconnectSndQueueDepthBuilder_;
      }

      private com.google.protobuf.Int64Value gpInterconnectQueueDepth_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> gpInterconnectQueueDepthBuilder_;
      /**
       * <pre>
       * Sets the amount of data per-peer to be queued by the Greenplum Database interconnect on receivers
       * (when data is received but no space is available to receive it the data will be dropped, and the transmitter will need to resend it)
       * for the default UDPIFC interconnect.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_interconnect_queue_depth
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_interconnect_queue_depth = 21;</code>
       */
      public boolean hasGpInterconnectQueueDepth() {
        return gpInterconnectQueueDepthBuilder_ != null || gpInterconnectQueueDepth_ != null;
      }
      /**
       * <pre>
       * Sets the amount of data per-peer to be queued by the Greenplum Database interconnect on receivers
       * (when data is received but no space is available to receive it the data will be dropped, and the transmitter will need to resend it)
       * for the default UDPIFC interconnect.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_interconnect_queue_depth
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_interconnect_queue_depth = 21;</code>
       */
      public com.google.protobuf.Int64Value getGpInterconnectQueueDepth() {
        if (gpInterconnectQueueDepthBuilder_ == null) {
          return gpInterconnectQueueDepth_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : gpInterconnectQueueDepth_;
        } else {
          return gpInterconnectQueueDepthBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Sets the amount of data per-peer to be queued by the Greenplum Database interconnect on receivers
       * (when data is received but no space is available to receive it the data will be dropped, and the transmitter will need to resend it)
       * for the default UDPIFC interconnect.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_interconnect_queue_depth
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_interconnect_queue_depth = 21;</code>
       */
      public Builder setGpInterconnectQueueDepth(com.google.protobuf.Int64Value value) {
        if (gpInterconnectQueueDepthBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          gpInterconnectQueueDepth_ = value;
          onChanged();
        } else {
          gpInterconnectQueueDepthBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Sets the amount of data per-peer to be queued by the Greenplum Database interconnect on receivers
       * (when data is received but no space is available to receive it the data will be dropped, and the transmitter will need to resend it)
       * for the default UDPIFC interconnect.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_interconnect_queue_depth
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_interconnect_queue_depth = 21;</code>
       */
      public Builder setGpInterconnectQueueDepth(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (gpInterconnectQueueDepthBuilder_ == null) {
          gpInterconnectQueueDepth_ = builderForValue.build();
          onChanged();
        } else {
          gpInterconnectQueueDepthBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Sets the amount of data per-peer to be queued by the Greenplum Database interconnect on receivers
       * (when data is received but no space is available to receive it the data will be dropped, and the transmitter will need to resend it)
       * for the default UDPIFC interconnect.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_interconnect_queue_depth
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_interconnect_queue_depth = 21;</code>
       */
      public Builder mergeGpInterconnectQueueDepth(com.google.protobuf.Int64Value value) {
        if (gpInterconnectQueueDepthBuilder_ == null) {
          if (gpInterconnectQueueDepth_ != null) {
            gpInterconnectQueueDepth_ =
              com.google.protobuf.Int64Value.newBuilder(gpInterconnectQueueDepth_).mergeFrom(value).buildPartial();
          } else {
            gpInterconnectQueueDepth_ = value;
          }
          onChanged();
        } else {
          gpInterconnectQueueDepthBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Sets the amount of data per-peer to be queued by the Greenplum Database interconnect on receivers
       * (when data is received but no space is available to receive it the data will be dropped, and the transmitter will need to resend it)
       * for the default UDPIFC interconnect.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_interconnect_queue_depth
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_interconnect_queue_depth = 21;</code>
       */
      public Builder clearGpInterconnectQueueDepth() {
        if (gpInterconnectQueueDepthBuilder_ == null) {
          gpInterconnectQueueDepth_ = null;
          onChanged();
        } else {
          gpInterconnectQueueDepth_ = null;
          gpInterconnectQueueDepthBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Sets the amount of data per-peer to be queued by the Greenplum Database interconnect on receivers
       * (when data is received but no space is available to receive it the data will be dropped, and the transmitter will need to resend it)
       * for the default UDPIFC interconnect.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_interconnect_queue_depth
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_interconnect_queue_depth = 21;</code>
       */
      public com.google.protobuf.Int64Value.Builder getGpInterconnectQueueDepthBuilder() {
        
        onChanged();
        return getGpInterconnectQueueDepthFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Sets the amount of data per-peer to be queued by the Greenplum Database interconnect on receivers
       * (when data is received but no space is available to receive it the data will be dropped, and the transmitter will need to resend it)
       * for the default UDPIFC interconnect.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_interconnect_queue_depth
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_interconnect_queue_depth = 21;</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getGpInterconnectQueueDepthOrBuilder() {
        if (gpInterconnectQueueDepthBuilder_ != null) {
          return gpInterconnectQueueDepthBuilder_.getMessageOrBuilder();
        } else {
          return gpInterconnectQueueDepth_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : gpInterconnectQueueDepth_;
        }
      }
      /**
       * <pre>
       * Sets the amount of data per-peer to be queued by the Greenplum Database interconnect on receivers
       * (when data is received but no space is available to receive it the data will be dropped, and the transmitter will need to resend it)
       * for the default UDPIFC interconnect.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_interconnect_queue_depth
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_interconnect_queue_depth = 21;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getGpInterconnectQueueDepthFieldBuilder() {
        if (gpInterconnectQueueDepthBuilder_ == null) {
          gpInterconnectQueueDepthBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getGpInterconnectQueueDepth(),
                  getParentForChildren(),
                  isClean());
          gpInterconnectQueueDepth_ = null;
        }
        return gpInterconnectQueueDepthBuilder_;
      }

      private int logStatement_ = 0;
      /**
       * <pre>
       * Controls which SQL statements are logged. DDL logs all data definition commands like CREATE, ALTER, and DROP commands.
       * MOD logs all DDL statements, plus INSERT, UPDATE, DELETE, TRUNCATE, and COPY FROM.
       * PREPARE and EXPLAIN ANALYZE statements are also logged if their contained command is of an appropriate type.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#log_statement
       * Default value is ddl
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfig.LogStatement log_statement = 22;</code>
       */
      public int getLogStatementValue() {
        return logStatement_;
      }
      /**
       * <pre>
       * Controls which SQL statements are logged. DDL logs all data definition commands like CREATE, ALTER, and DROP commands.
       * MOD logs all DDL statements, plus INSERT, UPDATE, DELETE, TRUNCATE, and COPY FROM.
       * PREPARE and EXPLAIN ANALYZE statements are also logged if their contained command is of an appropriate type.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#log_statement
       * Default value is ddl
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfig.LogStatement log_statement = 22;</code>
       */
      public Builder setLogStatementValue(int value) {
        logStatement_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Controls which SQL statements are logged. DDL logs all data definition commands like CREATE, ALTER, and DROP commands.
       * MOD logs all DDL statements, plus INSERT, UPDATE, DELETE, TRUNCATE, and COPY FROM.
       * PREPARE and EXPLAIN ANALYZE statements are also logged if their contained command is of an appropriate type.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#log_statement
       * Default value is ddl
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfig.LogStatement log_statement = 22;</code>
       */
      public yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig.LogStatement getLogStatement() {
        @SuppressWarnings("deprecation")
        yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig.LogStatement result = yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig.LogStatement.valueOf(logStatement_);
        return result == null ? yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig.LogStatement.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Controls which SQL statements are logged. DDL logs all data definition commands like CREATE, ALTER, and DROP commands.
       * MOD logs all DDL statements, plus INSERT, UPDATE, DELETE, TRUNCATE, and COPY FROM.
       * PREPARE and EXPLAIN ANALYZE statements are also logged if their contained command is of an appropriate type.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#log_statement
       * Default value is ddl
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfig.LogStatement log_statement = 22;</code>
       */
      public Builder setLogStatement(yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig.LogStatement value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        logStatement_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Controls which SQL statements are logged. DDL logs all data definition commands like CREATE, ALTER, and DROP commands.
       * MOD logs all DDL statements, plus INSERT, UPDATE, DELETE, TRUNCATE, and COPY FROM.
       * PREPARE and EXPLAIN ANALYZE statements are also logged if their contained command is of an appropriate type.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#log_statement
       * Default value is ddl
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfig.LogStatement log_statement = 22;</code>
       */
      public Builder clearLogStatement() {
        
        logStatement_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.BoolValue logDuration_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> logDurationBuilder_;
      /**
       * <pre>
       * Causes the duration of every completed statement which satisfies log_statement to be logged.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#log_duration
       * </pre>
       *
       * <code>.google.protobuf.BoolValue log_duration = 23;</code>
       */
      public boolean hasLogDuration() {
        return logDurationBuilder_ != null || logDuration_ != null;
      }
      /**
       * <pre>
       * Causes the duration of every completed statement which satisfies log_statement to be logged.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#log_duration
       * </pre>
       *
       * <code>.google.protobuf.BoolValue log_duration = 23;</code>
       */
      public com.google.protobuf.BoolValue getLogDuration() {
        if (logDurationBuilder_ == null) {
          return logDuration_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : logDuration_;
        } else {
          return logDurationBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Causes the duration of every completed statement which satisfies log_statement to be logged.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#log_duration
       * </pre>
       *
       * <code>.google.protobuf.BoolValue log_duration = 23;</code>
       */
      public Builder setLogDuration(com.google.protobuf.BoolValue value) {
        if (logDurationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          logDuration_ = value;
          onChanged();
        } else {
          logDurationBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Causes the duration of every completed statement which satisfies log_statement to be logged.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#log_duration
       * </pre>
       *
       * <code>.google.protobuf.BoolValue log_duration = 23;</code>
       */
      public Builder setLogDuration(
          com.google.protobuf.BoolValue.Builder builderForValue) {
        if (logDurationBuilder_ == null) {
          logDuration_ = builderForValue.build();
          onChanged();
        } else {
          logDurationBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Causes the duration of every completed statement which satisfies log_statement to be logged.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#log_duration
       * </pre>
       *
       * <code>.google.protobuf.BoolValue log_duration = 23;</code>
       */
      public Builder mergeLogDuration(com.google.protobuf.BoolValue value) {
        if (logDurationBuilder_ == null) {
          if (logDuration_ != null) {
            logDuration_ =
              com.google.protobuf.BoolValue.newBuilder(logDuration_).mergeFrom(value).buildPartial();
          } else {
            logDuration_ = value;
          }
          onChanged();
        } else {
          logDurationBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Causes the duration of every completed statement which satisfies log_statement to be logged.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#log_duration
       * </pre>
       *
       * <code>.google.protobuf.BoolValue log_duration = 23;</code>
       */
      public Builder clearLogDuration() {
        if (logDurationBuilder_ == null) {
          logDuration_ = null;
          onChanged();
        } else {
          logDuration_ = null;
          logDurationBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Causes the duration of every completed statement which satisfies log_statement to be logged.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#log_duration
       * </pre>
       *
       * <code>.google.protobuf.BoolValue log_duration = 23;</code>
       */
      public com.google.protobuf.BoolValue.Builder getLogDurationBuilder() {
        
        onChanged();
        return getLogDurationFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Causes the duration of every completed statement which satisfies log_statement to be logged.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#log_duration
       * </pre>
       *
       * <code>.google.protobuf.BoolValue log_duration = 23;</code>
       */
      public com.google.protobuf.BoolValueOrBuilder getLogDurationOrBuilder() {
        if (logDurationBuilder_ != null) {
          return logDurationBuilder_.getMessageOrBuilder();
        } else {
          return logDuration_ == null ?
              com.google.protobuf.BoolValue.getDefaultInstance() : logDuration_;
        }
      }
      /**
       * <pre>
       * Causes the duration of every completed statement which satisfies log_statement to be logged.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#log_duration
       * </pre>
       *
       * <code>.google.protobuf.BoolValue log_duration = 23;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> 
          getLogDurationFieldBuilder() {
        if (logDurationBuilder_ == null) {
          logDurationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder>(
                  getLogDuration(),
                  getParentForChildren(),
                  isClean());
          logDuration_ = null;
        }
        return logDurationBuilder_;
      }

      private com.google.protobuf.BoolValue optimizerAnalyzeRootPartition_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> optimizerAnalyzeRootPartitionBuilder_;
      /**
       * <pre>
       * For a partitioned table, controls whether the ROOTPARTITION keyword is required to collect root partition statistics
       * when the ANALYZE command is run on the table. GPORCA uses the root partition statistics when generating a query plan.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#optimizer_analyze_root_partition
       * </pre>
       *
       * <code>.google.protobuf.BoolValue optimizer_analyze_root_partition = 24;</code>
       */
      public boolean hasOptimizerAnalyzeRootPartition() {
        return optimizerAnalyzeRootPartitionBuilder_ != null || optimizerAnalyzeRootPartition_ != null;
      }
      /**
       * <pre>
       * For a partitioned table, controls whether the ROOTPARTITION keyword is required to collect root partition statistics
       * when the ANALYZE command is run on the table. GPORCA uses the root partition statistics when generating a query plan.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#optimizer_analyze_root_partition
       * </pre>
       *
       * <code>.google.protobuf.BoolValue optimizer_analyze_root_partition = 24;</code>
       */
      public com.google.protobuf.BoolValue getOptimizerAnalyzeRootPartition() {
        if (optimizerAnalyzeRootPartitionBuilder_ == null) {
          return optimizerAnalyzeRootPartition_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : optimizerAnalyzeRootPartition_;
        } else {
          return optimizerAnalyzeRootPartitionBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * For a partitioned table, controls whether the ROOTPARTITION keyword is required to collect root partition statistics
       * when the ANALYZE command is run on the table. GPORCA uses the root partition statistics when generating a query plan.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#optimizer_analyze_root_partition
       * </pre>
       *
       * <code>.google.protobuf.BoolValue optimizer_analyze_root_partition = 24;</code>
       */
      public Builder setOptimizerAnalyzeRootPartition(com.google.protobuf.BoolValue value) {
        if (optimizerAnalyzeRootPartitionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          optimizerAnalyzeRootPartition_ = value;
          onChanged();
        } else {
          optimizerAnalyzeRootPartitionBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * For a partitioned table, controls whether the ROOTPARTITION keyword is required to collect root partition statistics
       * when the ANALYZE command is run on the table. GPORCA uses the root partition statistics when generating a query plan.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#optimizer_analyze_root_partition
       * </pre>
       *
       * <code>.google.protobuf.BoolValue optimizer_analyze_root_partition = 24;</code>
       */
      public Builder setOptimizerAnalyzeRootPartition(
          com.google.protobuf.BoolValue.Builder builderForValue) {
        if (optimizerAnalyzeRootPartitionBuilder_ == null) {
          optimizerAnalyzeRootPartition_ = builderForValue.build();
          onChanged();
        } else {
          optimizerAnalyzeRootPartitionBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * For a partitioned table, controls whether the ROOTPARTITION keyword is required to collect root partition statistics
       * when the ANALYZE command is run on the table. GPORCA uses the root partition statistics when generating a query plan.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#optimizer_analyze_root_partition
       * </pre>
       *
       * <code>.google.protobuf.BoolValue optimizer_analyze_root_partition = 24;</code>
       */
      public Builder mergeOptimizerAnalyzeRootPartition(com.google.protobuf.BoolValue value) {
        if (optimizerAnalyzeRootPartitionBuilder_ == null) {
          if (optimizerAnalyzeRootPartition_ != null) {
            optimizerAnalyzeRootPartition_ =
              com.google.protobuf.BoolValue.newBuilder(optimizerAnalyzeRootPartition_).mergeFrom(value).buildPartial();
          } else {
            optimizerAnalyzeRootPartition_ = value;
          }
          onChanged();
        } else {
          optimizerAnalyzeRootPartitionBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * For a partitioned table, controls whether the ROOTPARTITION keyword is required to collect root partition statistics
       * when the ANALYZE command is run on the table. GPORCA uses the root partition statistics when generating a query plan.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#optimizer_analyze_root_partition
       * </pre>
       *
       * <code>.google.protobuf.BoolValue optimizer_analyze_root_partition = 24;</code>
       */
      public Builder clearOptimizerAnalyzeRootPartition() {
        if (optimizerAnalyzeRootPartitionBuilder_ == null) {
          optimizerAnalyzeRootPartition_ = null;
          onChanged();
        } else {
          optimizerAnalyzeRootPartition_ = null;
          optimizerAnalyzeRootPartitionBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * For a partitioned table, controls whether the ROOTPARTITION keyword is required to collect root partition statistics
       * when the ANALYZE command is run on the table. GPORCA uses the root partition statistics when generating a query plan.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#optimizer_analyze_root_partition
       * </pre>
       *
       * <code>.google.protobuf.BoolValue optimizer_analyze_root_partition = 24;</code>
       */
      public com.google.protobuf.BoolValue.Builder getOptimizerAnalyzeRootPartitionBuilder() {
        
        onChanged();
        return getOptimizerAnalyzeRootPartitionFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * For a partitioned table, controls whether the ROOTPARTITION keyword is required to collect root partition statistics
       * when the ANALYZE command is run on the table. GPORCA uses the root partition statistics when generating a query plan.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#optimizer_analyze_root_partition
       * </pre>
       *
       * <code>.google.protobuf.BoolValue optimizer_analyze_root_partition = 24;</code>
       */
      public com.google.protobuf.BoolValueOrBuilder getOptimizerAnalyzeRootPartitionOrBuilder() {
        if (optimizerAnalyzeRootPartitionBuilder_ != null) {
          return optimizerAnalyzeRootPartitionBuilder_.getMessageOrBuilder();
        } else {
          return optimizerAnalyzeRootPartition_ == null ?
              com.google.protobuf.BoolValue.getDefaultInstance() : optimizerAnalyzeRootPartition_;
        }
      }
      /**
       * <pre>
       * For a partitioned table, controls whether the ROOTPARTITION keyword is required to collect root partition statistics
       * when the ANALYZE command is run on the table. GPORCA uses the root partition statistics when generating a query plan.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#optimizer_analyze_root_partition
       * </pre>
       *
       * <code>.google.protobuf.BoolValue optimizer_analyze_root_partition = 24;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> 
          getOptimizerAnalyzeRootPartitionFieldBuilder() {
        if (optimizerAnalyzeRootPartitionBuilder_ == null) {
          optimizerAnalyzeRootPartitionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder>(
                  getOptimizerAnalyzeRootPartition(),
                  getParentForChildren(),
                  isClean());
          optimizerAnalyzeRootPartition_ = null;
        }
        return optimizerAnalyzeRootPartitionBuilder_;
      }

      private com.google.protobuf.Int64Value gpExternalMaxSegs_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> gpExternalMaxSegsBuilder_;
      /**
       * <pre>
       * Sets the number of segments that will scan external table data during an external table operation,
       * the purpose being not to overload the system with scanning data and take away resources from other concurrent operations.
       * This only applies to external tables that use the gpfdist:// protocol to access external table data.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_external_max_segs
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_external_max_segs = 25;</code>
       */
      public boolean hasGpExternalMaxSegs() {
        return gpExternalMaxSegsBuilder_ != null || gpExternalMaxSegs_ != null;
      }
      /**
       * <pre>
       * Sets the number of segments that will scan external table data during an external table operation,
       * the purpose being not to overload the system with scanning data and take away resources from other concurrent operations.
       * This only applies to external tables that use the gpfdist:// protocol to access external table data.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_external_max_segs
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_external_max_segs = 25;</code>
       */
      public com.google.protobuf.Int64Value getGpExternalMaxSegs() {
        if (gpExternalMaxSegsBuilder_ == null) {
          return gpExternalMaxSegs_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : gpExternalMaxSegs_;
        } else {
          return gpExternalMaxSegsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Sets the number of segments that will scan external table data during an external table operation,
       * the purpose being not to overload the system with scanning data and take away resources from other concurrent operations.
       * This only applies to external tables that use the gpfdist:// protocol to access external table data.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_external_max_segs
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_external_max_segs = 25;</code>
       */
      public Builder setGpExternalMaxSegs(com.google.protobuf.Int64Value value) {
        if (gpExternalMaxSegsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          gpExternalMaxSegs_ = value;
          onChanged();
        } else {
          gpExternalMaxSegsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Sets the number of segments that will scan external table data during an external table operation,
       * the purpose being not to overload the system with scanning data and take away resources from other concurrent operations.
       * This only applies to external tables that use the gpfdist:// protocol to access external table data.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_external_max_segs
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_external_max_segs = 25;</code>
       */
      public Builder setGpExternalMaxSegs(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (gpExternalMaxSegsBuilder_ == null) {
          gpExternalMaxSegs_ = builderForValue.build();
          onChanged();
        } else {
          gpExternalMaxSegsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Sets the number of segments that will scan external table data during an external table operation,
       * the purpose being not to overload the system with scanning data and take away resources from other concurrent operations.
       * This only applies to external tables that use the gpfdist:// protocol to access external table data.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_external_max_segs
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_external_max_segs = 25;</code>
       */
      public Builder mergeGpExternalMaxSegs(com.google.protobuf.Int64Value value) {
        if (gpExternalMaxSegsBuilder_ == null) {
          if (gpExternalMaxSegs_ != null) {
            gpExternalMaxSegs_ =
              com.google.protobuf.Int64Value.newBuilder(gpExternalMaxSegs_).mergeFrom(value).buildPartial();
          } else {
            gpExternalMaxSegs_ = value;
          }
          onChanged();
        } else {
          gpExternalMaxSegsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Sets the number of segments that will scan external table data during an external table operation,
       * the purpose being not to overload the system with scanning data and take away resources from other concurrent operations.
       * This only applies to external tables that use the gpfdist:// protocol to access external table data.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_external_max_segs
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_external_max_segs = 25;</code>
       */
      public Builder clearGpExternalMaxSegs() {
        if (gpExternalMaxSegsBuilder_ == null) {
          gpExternalMaxSegs_ = null;
          onChanged();
        } else {
          gpExternalMaxSegs_ = null;
          gpExternalMaxSegsBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Sets the number of segments that will scan external table data during an external table operation,
       * the purpose being not to overload the system with scanning data and take away resources from other concurrent operations.
       * This only applies to external tables that use the gpfdist:// protocol to access external table data.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_external_max_segs
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_external_max_segs = 25;</code>
       */
      public com.google.protobuf.Int64Value.Builder getGpExternalMaxSegsBuilder() {
        
        onChanged();
        return getGpExternalMaxSegsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Sets the number of segments that will scan external table data during an external table operation,
       * the purpose being not to overload the system with scanning data and take away resources from other concurrent operations.
       * This only applies to external tables that use the gpfdist:// protocol to access external table data.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_external_max_segs
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_external_max_segs = 25;</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getGpExternalMaxSegsOrBuilder() {
        if (gpExternalMaxSegsBuilder_ != null) {
          return gpExternalMaxSegsBuilder_.getMessageOrBuilder();
        } else {
          return gpExternalMaxSegs_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : gpExternalMaxSegs_;
        }
      }
      /**
       * <pre>
       * Sets the number of segments that will scan external table data during an external table operation,
       * the purpose being not to overload the system with scanning data and take away resources from other concurrent operations.
       * This only applies to external tables that use the gpfdist:// protocol to access external table data.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_external_max_segs
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_external_max_segs = 25;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getGpExternalMaxSegsFieldBuilder() {
        if (gpExternalMaxSegsBuilder_ == null) {
          gpExternalMaxSegsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getGpExternalMaxSegs(),
                  getParentForChildren(),
                  isClean());
          gpExternalMaxSegs_ = null;
        }
        return gpExternalMaxSegsBuilder_;
      }

      private com.google.protobuf.Int64Value gpFtsProbeTimeout_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> gpFtsProbeTimeoutBuilder_;
      /**
       * <pre>
       * Specifies the allowed timeout for the fault detection process (ftsprobe) to establish a connection to a segment before declaring it down.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_fts_probe_timeout
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_fts_probe_timeout = 26;</code>
       */
      public boolean hasGpFtsProbeTimeout() {
        return gpFtsProbeTimeoutBuilder_ != null || gpFtsProbeTimeout_ != null;
      }
      /**
       * <pre>
       * Specifies the allowed timeout for the fault detection process (ftsprobe) to establish a connection to a segment before declaring it down.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_fts_probe_timeout
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_fts_probe_timeout = 26;</code>
       */
      public com.google.protobuf.Int64Value getGpFtsProbeTimeout() {
        if (gpFtsProbeTimeoutBuilder_ == null) {
          return gpFtsProbeTimeout_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : gpFtsProbeTimeout_;
        } else {
          return gpFtsProbeTimeoutBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Specifies the allowed timeout for the fault detection process (ftsprobe) to establish a connection to a segment before declaring it down.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_fts_probe_timeout
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_fts_probe_timeout = 26;</code>
       */
      public Builder setGpFtsProbeTimeout(com.google.protobuf.Int64Value value) {
        if (gpFtsProbeTimeoutBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          gpFtsProbeTimeout_ = value;
          onChanged();
        } else {
          gpFtsProbeTimeoutBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Specifies the allowed timeout for the fault detection process (ftsprobe) to establish a connection to a segment before declaring it down.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_fts_probe_timeout
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_fts_probe_timeout = 26;</code>
       */
      public Builder setGpFtsProbeTimeout(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (gpFtsProbeTimeoutBuilder_ == null) {
          gpFtsProbeTimeout_ = builderForValue.build();
          onChanged();
        } else {
          gpFtsProbeTimeoutBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Specifies the allowed timeout for the fault detection process (ftsprobe) to establish a connection to a segment before declaring it down.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_fts_probe_timeout
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_fts_probe_timeout = 26;</code>
       */
      public Builder mergeGpFtsProbeTimeout(com.google.protobuf.Int64Value value) {
        if (gpFtsProbeTimeoutBuilder_ == null) {
          if (gpFtsProbeTimeout_ != null) {
            gpFtsProbeTimeout_ =
              com.google.protobuf.Int64Value.newBuilder(gpFtsProbeTimeout_).mergeFrom(value).buildPartial();
          } else {
            gpFtsProbeTimeout_ = value;
          }
          onChanged();
        } else {
          gpFtsProbeTimeoutBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Specifies the allowed timeout for the fault detection process (ftsprobe) to establish a connection to a segment before declaring it down.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_fts_probe_timeout
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_fts_probe_timeout = 26;</code>
       */
      public Builder clearGpFtsProbeTimeout() {
        if (gpFtsProbeTimeoutBuilder_ == null) {
          gpFtsProbeTimeout_ = null;
          onChanged();
        } else {
          gpFtsProbeTimeout_ = null;
          gpFtsProbeTimeoutBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Specifies the allowed timeout for the fault detection process (ftsprobe) to establish a connection to a segment before declaring it down.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_fts_probe_timeout
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_fts_probe_timeout = 26;</code>
       */
      public com.google.protobuf.Int64Value.Builder getGpFtsProbeTimeoutBuilder() {
        
        onChanged();
        return getGpFtsProbeTimeoutFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Specifies the allowed timeout for the fault detection process (ftsprobe) to establish a connection to a segment before declaring it down.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_fts_probe_timeout
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_fts_probe_timeout = 26;</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getGpFtsProbeTimeoutOrBuilder() {
        if (gpFtsProbeTimeoutBuilder_ != null) {
          return gpFtsProbeTimeoutBuilder_.getMessageOrBuilder();
        } else {
          return gpFtsProbeTimeout_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : gpFtsProbeTimeout_;
        }
      }
      /**
       * <pre>
       * Specifies the allowed timeout for the fault detection process (ftsprobe) to establish a connection to a segment before declaring it down.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_fts_probe_timeout
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_fts_probe_timeout = 26;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getGpFtsProbeTimeoutFieldBuilder() {
        if (gpFtsProbeTimeoutBuilder_ == null) {
          gpFtsProbeTimeoutBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getGpFtsProbeTimeout(),
                  getParentForChildren(),
                  isClean());
          gpFtsProbeTimeout_ = null;
        }
        return gpFtsProbeTimeoutBuilder_;
      }

      private com.google.protobuf.BoolValue gpWorkfileCompression_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> gpWorkfileCompressionBuilder_;
      /**
       * <pre>
       * Specifies whether the temporary files created, when a hash aggregation or hash join operation spills to disk, are compressed.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_compression
       * </pre>
       *
       * <code>.google.protobuf.BoolValue gp_workfile_compression = 27;</code>
       */
      public boolean hasGpWorkfileCompression() {
        return gpWorkfileCompressionBuilder_ != null || gpWorkfileCompression_ != null;
      }
      /**
       * <pre>
       * Specifies whether the temporary files created, when a hash aggregation or hash join operation spills to disk, are compressed.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_compression
       * </pre>
       *
       * <code>.google.protobuf.BoolValue gp_workfile_compression = 27;</code>
       */
      public com.google.protobuf.BoolValue getGpWorkfileCompression() {
        if (gpWorkfileCompressionBuilder_ == null) {
          return gpWorkfileCompression_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : gpWorkfileCompression_;
        } else {
          return gpWorkfileCompressionBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Specifies whether the temporary files created, when a hash aggregation or hash join operation spills to disk, are compressed.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_compression
       * </pre>
       *
       * <code>.google.protobuf.BoolValue gp_workfile_compression = 27;</code>
       */
      public Builder setGpWorkfileCompression(com.google.protobuf.BoolValue value) {
        if (gpWorkfileCompressionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          gpWorkfileCompression_ = value;
          onChanged();
        } else {
          gpWorkfileCompressionBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Specifies whether the temporary files created, when a hash aggregation or hash join operation spills to disk, are compressed.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_compression
       * </pre>
       *
       * <code>.google.protobuf.BoolValue gp_workfile_compression = 27;</code>
       */
      public Builder setGpWorkfileCompression(
          com.google.protobuf.BoolValue.Builder builderForValue) {
        if (gpWorkfileCompressionBuilder_ == null) {
          gpWorkfileCompression_ = builderForValue.build();
          onChanged();
        } else {
          gpWorkfileCompressionBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Specifies whether the temporary files created, when a hash aggregation or hash join operation spills to disk, are compressed.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_compression
       * </pre>
       *
       * <code>.google.protobuf.BoolValue gp_workfile_compression = 27;</code>
       */
      public Builder mergeGpWorkfileCompression(com.google.protobuf.BoolValue value) {
        if (gpWorkfileCompressionBuilder_ == null) {
          if (gpWorkfileCompression_ != null) {
            gpWorkfileCompression_ =
              com.google.protobuf.BoolValue.newBuilder(gpWorkfileCompression_).mergeFrom(value).buildPartial();
          } else {
            gpWorkfileCompression_ = value;
          }
          onChanged();
        } else {
          gpWorkfileCompressionBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Specifies whether the temporary files created, when a hash aggregation or hash join operation spills to disk, are compressed.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_compression
       * </pre>
       *
       * <code>.google.protobuf.BoolValue gp_workfile_compression = 27;</code>
       */
      public Builder clearGpWorkfileCompression() {
        if (gpWorkfileCompressionBuilder_ == null) {
          gpWorkfileCompression_ = null;
          onChanged();
        } else {
          gpWorkfileCompression_ = null;
          gpWorkfileCompressionBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Specifies whether the temporary files created, when a hash aggregation or hash join operation spills to disk, are compressed.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_compression
       * </pre>
       *
       * <code>.google.protobuf.BoolValue gp_workfile_compression = 27;</code>
       */
      public com.google.protobuf.BoolValue.Builder getGpWorkfileCompressionBuilder() {
        
        onChanged();
        return getGpWorkfileCompressionFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Specifies whether the temporary files created, when a hash aggregation or hash join operation spills to disk, are compressed.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_compression
       * </pre>
       *
       * <code>.google.protobuf.BoolValue gp_workfile_compression = 27;</code>
       */
      public com.google.protobuf.BoolValueOrBuilder getGpWorkfileCompressionOrBuilder() {
        if (gpWorkfileCompressionBuilder_ != null) {
          return gpWorkfileCompressionBuilder_.getMessageOrBuilder();
        } else {
          return gpWorkfileCompression_ == null ?
              com.google.protobuf.BoolValue.getDefaultInstance() : gpWorkfileCompression_;
        }
      }
      /**
       * <pre>
       * Specifies whether the temporary files created, when a hash aggregation or hash join operation spills to disk, are compressed.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_compression
       * </pre>
       *
       * <code>.google.protobuf.BoolValue gp_workfile_compression = 27;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> 
          getGpWorkfileCompressionFieldBuilder() {
        if (gpWorkfileCompressionBuilder_ == null) {
          gpWorkfileCompressionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder>(
                  getGpWorkfileCompression(),
                  getParentForChildren(),
                  isClean());
          gpWorkfileCompression_ = null;
        }
        return gpWorkfileCompressionBuilder_;
      }

      private int gpAutostatsModeInFunctions_ = 0;
      /**
       * <pre>
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_autostats_mode_in_functions
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfig.AutostatsModeInFunctions gp_autostats_mode_in_functions = 28;</code>
       */
      public int getGpAutostatsModeInFunctionsValue() {
        return gpAutostatsModeInFunctions_;
      }
      /**
       * <pre>
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_autostats_mode_in_functions
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfig.AutostatsModeInFunctions gp_autostats_mode_in_functions = 28;</code>
       */
      public Builder setGpAutostatsModeInFunctionsValue(int value) {
        gpAutostatsModeInFunctions_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_autostats_mode_in_functions
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfig.AutostatsModeInFunctions gp_autostats_mode_in_functions = 28;</code>
       */
      public yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig.AutostatsModeInFunctions getGpAutostatsModeInFunctions() {
        @SuppressWarnings("deprecation")
        yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig.AutostatsModeInFunctions result = yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig.AutostatsModeInFunctions.valueOf(gpAutostatsModeInFunctions_);
        return result == null ? yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig.AutostatsModeInFunctions.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_autostats_mode_in_functions
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfig.AutostatsModeInFunctions gp_autostats_mode_in_functions = 28;</code>
       */
      public Builder setGpAutostatsModeInFunctions(yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig.AutostatsModeInFunctions value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        gpAutostatsModeInFunctions_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_autostats_mode_in_functions
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfig.AutostatsModeInFunctions gp_autostats_mode_in_functions = 28;</code>
       */
      public Builder clearGpAutostatsModeInFunctions() {
        
        gpAutostatsModeInFunctions_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfig)
    }

    // @@protoc_insertion_point(class_scope:yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfig)
    private static final yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig();
    }

    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GreenplumMasterConfig>
        PARSER = new com.google.protobuf.AbstractParser<GreenplumMasterConfig>() {
      @java.lang.Override
      public GreenplumMasterConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GreenplumMasterConfig(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<GreenplumMasterConfig> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GreenplumMasterConfig> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GreenplumSegmentConfigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:yandex.cloud.mdb.greenplum.v1.GreenplumSegmentConfig)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Logging level for the Greenplum segment subcluster. Possible values: TRACE, DEBUG, INFORMATION, WARNING, ERROR.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumSegmentConfig.LogLevel log_level = 1;</code>
     */
    int getLogLevelValue();
    /**
     * <pre>
     * Logging level for the Greenplum segment subcluster. Possible values: TRACE, DEBUG, INFORMATION, WARNING, ERROR.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumSegmentConfig.LogLevel log_level = 1;</code>
     */
    yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig.LogLevel getLogLevel();

    /**
     * <pre>
     * Maximum number of inbound connections.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_connections = 2;</code>
     */
    boolean hasMaxConnections();
    /**
     * <pre>
     * Maximum number of inbound connections.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_connections = 2;</code>
     */
    com.google.protobuf.Int64Value getMaxConnections();
    /**
     * <pre>
     * Maximum number of inbound connections.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_connections = 2;</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getMaxConnectionsOrBuilder();

    /**
     * <pre>
     * Specify the maximum size of WAL files that replication slots are allowed to retain in the pg_wal directory at checkpoint time.
     * https://www.postgresql.org/docs/current/runtime-config-replication.html
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_slot_wal_keep_size = 7;</code>
     */
    boolean hasMaxSlotWalKeepSize();
    /**
     * <pre>
     * Specify the maximum size of WAL files that replication slots are allowed to retain in the pg_wal directory at checkpoint time.
     * https://www.postgresql.org/docs/current/runtime-config-replication.html
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_slot_wal_keep_size = 7;</code>
     */
    com.google.protobuf.Int64Value getMaxSlotWalKeepSize();
    /**
     * <pre>
     * Specify the maximum size of WAL files that replication slots are allowed to retain in the pg_wal directory at checkpoint time.
     * https://www.postgresql.org/docs/current/runtime-config-replication.html
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_slot_wal_keep_size = 7;</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getMaxSlotWalKeepSizeOrBuilder();

    /**
     * <pre>
     * Sets the maximum total disk size that all running queries are allowed to use for creating temporary spill files at each segment.
     * The default value is 0, which means a limit is not enforced.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_segment
     * </pre>
     *
     * <code>.google.protobuf.Int64Value gp_workfile_limit_per_segment = 8;</code>
     */
    boolean hasGpWorkfileLimitPerSegment();
    /**
     * <pre>
     * Sets the maximum total disk size that all running queries are allowed to use for creating temporary spill files at each segment.
     * The default value is 0, which means a limit is not enforced.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_segment
     * </pre>
     *
     * <code>.google.protobuf.Int64Value gp_workfile_limit_per_segment = 8;</code>
     */
    com.google.protobuf.Int64Value getGpWorkfileLimitPerSegment();
    /**
     * <pre>
     * Sets the maximum total disk size that all running queries are allowed to use for creating temporary spill files at each segment.
     * The default value is 0, which means a limit is not enforced.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_segment
     * </pre>
     *
     * <code>.google.protobuf.Int64Value gp_workfile_limit_per_segment = 8;</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getGpWorkfileLimitPerSegmentOrBuilder();

    /**
     * <pre>
     * Sets the maximum disk size an individual query is allowed to use for creating temporary spill files at each segment.
     * The default value is 0, which means a limit is not enforced.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_query
     * </pre>
     *
     * <code>.google.protobuf.Int64Value gp_workfile_limit_per_query = 9;</code>
     */
    boolean hasGpWorkfileLimitPerQuery();
    /**
     * <pre>
     * Sets the maximum disk size an individual query is allowed to use for creating temporary spill files at each segment.
     * The default value is 0, which means a limit is not enforced.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_query
     * </pre>
     *
     * <code>.google.protobuf.Int64Value gp_workfile_limit_per_query = 9;</code>
     */
    com.google.protobuf.Int64Value getGpWorkfileLimitPerQuery();
    /**
     * <pre>
     * Sets the maximum disk size an individual query is allowed to use for creating temporary spill files at each segment.
     * The default value is 0, which means a limit is not enforced.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_query
     * </pre>
     *
     * <code>.google.protobuf.Int64Value gp_workfile_limit_per_query = 9;</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getGpWorkfileLimitPerQueryOrBuilder();

    /**
     * <pre>
     * Sets the maximum number of temporary spill files (also known as workfiles) allowed per query per segment.
     * Spill files are created when executing a query that requires more memory than it is allocated.
     * The current query is terminated when the limit is exceeded.
     * Set the value to 0 (zero) to allow an unlimited number of spill files. master session reload
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_files_per_query
     * Default value is 10000
     * </pre>
     *
     * <code>.google.protobuf.Int64Value gp_workfile_limit_files_per_query = 10;</code>
     */
    boolean hasGpWorkfileLimitFilesPerQuery();
    /**
     * <pre>
     * Sets the maximum number of temporary spill files (also known as workfiles) allowed per query per segment.
     * Spill files are created when executing a query that requires more memory than it is allocated.
     * The current query is terminated when the limit is exceeded.
     * Set the value to 0 (zero) to allow an unlimited number of spill files. master session reload
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_files_per_query
     * Default value is 10000
     * </pre>
     *
     * <code>.google.protobuf.Int64Value gp_workfile_limit_files_per_query = 10;</code>
     */
    com.google.protobuf.Int64Value getGpWorkfileLimitFilesPerQuery();
    /**
     * <pre>
     * Sets the maximum number of temporary spill files (also known as workfiles) allowed per query per segment.
     * Spill files are created when executing a query that requires more memory than it is allocated.
     * The current query is terminated when the limit is exceeded.
     * Set the value to 0 (zero) to allow an unlimited number of spill files. master session reload
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_files_per_query
     * Default value is 10000
     * </pre>
     *
     * <code>.google.protobuf.Int64Value gp_workfile_limit_files_per_query = 10;</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getGpWorkfileLimitFilesPerQueryOrBuilder();

    /**
     * <pre>
     * Identifies the resource management scheme currently enabled in the Greenplum Database cluster. The default scheme is to use resource queues.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_resource_manager
     * "group" is the default value
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumSegmentConfig.GPResourceManager gp_resource_manager = 11;</code>
     */
    int getGpResourceManagerValue();
    /**
     * <pre>
     * Identifies the resource management scheme currently enabled in the Greenplum Database cluster. The default scheme is to use resource queues.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_resource_manager
     * "group" is the default value
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumSegmentConfig.GPResourceManager gp_resource_manager = 11;</code>
     */
    yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig.GPResourceManager getGpResourceManager();

    /**
     * <pre>
     * Identifies the maximum percentage of system CPU resources to allocate to resource groups on each Greenplum Database segment node.
     * Note: The gp_resource_group_cpu_limit server configuration parameter is enforced only when resource group-based resource management is active.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_resource_group_cpu_limit
     * </pre>
     *
     * <code>.google.protobuf.FloatValue gp_resource_group_cpu_limit = 17;</code>
     */
    boolean hasGpResourceGroupCpuLimit();
    /**
     * <pre>
     * Identifies the maximum percentage of system CPU resources to allocate to resource groups on each Greenplum Database segment node.
     * Note: The gp_resource_group_cpu_limit server configuration parameter is enforced only when resource group-based resource management is active.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_resource_group_cpu_limit
     * </pre>
     *
     * <code>.google.protobuf.FloatValue gp_resource_group_cpu_limit = 17;</code>
     */
    com.google.protobuf.FloatValue getGpResourceGroupCpuLimit();
    /**
     * <pre>
     * Identifies the maximum percentage of system CPU resources to allocate to resource groups on each Greenplum Database segment node.
     * Note: The gp_resource_group_cpu_limit server configuration parameter is enforced only when resource group-based resource management is active.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_resource_group_cpu_limit
     * </pre>
     *
     * <code>.google.protobuf.FloatValue gp_resource_group_cpu_limit = 17;</code>
     */
    com.google.protobuf.FloatValueOrBuilder getGpResourceGroupCpuLimitOrBuilder();

    /**
     * <pre>
     * Identifies the maximum percentage of system memory resources to allocate to resource groups on each Greenplum Database segment node.
     * Note: The gp_resource_group_memory_limit server configuration parameter is enforced only when resource group-based resource management is active.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_resource_group_memory_limit
     * </pre>
     *
     * <code>.google.protobuf.FloatValue gp_resource_group_memory_limit = 18;</code>
     */
    boolean hasGpResourceGroupMemoryLimit();
    /**
     * <pre>
     * Identifies the maximum percentage of system memory resources to allocate to resource groups on each Greenplum Database segment node.
     * Note: The gp_resource_group_memory_limit server configuration parameter is enforced only when resource group-based resource management is active.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_resource_group_memory_limit
     * </pre>
     *
     * <code>.google.protobuf.FloatValue gp_resource_group_memory_limit = 18;</code>
     */
    com.google.protobuf.FloatValue getGpResourceGroupMemoryLimit();
    /**
     * <pre>
     * Identifies the maximum percentage of system memory resources to allocate to resource groups on each Greenplum Database segment node.
     * Note: The gp_resource_group_memory_limit server configuration parameter is enforced only when resource group-based resource management is active.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_resource_group_memory_limit
     * </pre>
     *
     * <code>.google.protobuf.FloatValue gp_resource_group_memory_limit = 18;</code>
     */
    com.google.protobuf.FloatValueOrBuilder getGpResourceGroupMemoryLimitOrBuilder();
  }
  /**
   * <pre>
   * Greenplum segment subcluster configuration options. Detailed description for each set of options
   * Any options not listed here are not supported.
   * </pre>
   *
   * Protobuf type {@code yandex.cloud.mdb.greenplum.v1.GreenplumSegmentConfig}
   */
  public  static final class GreenplumSegmentConfig extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:yandex.cloud.mdb.greenplum.v1.GreenplumSegmentConfig)
      GreenplumSegmentConfigOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use GreenplumSegmentConfig.newBuilder() to construct.
    private GreenplumSegmentConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GreenplumSegmentConfig() {
      logLevel_ = 0;
      gpResourceManager_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private GreenplumSegmentConfig(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              logLevel_ = rawValue;
              break;
            }
            case 18: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (maxConnections_ != null) {
                subBuilder = maxConnections_.toBuilder();
              }
              maxConnections_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(maxConnections_);
                maxConnections_ = subBuilder.buildPartial();
              }

              break;
            }
            case 58: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (maxSlotWalKeepSize_ != null) {
                subBuilder = maxSlotWalKeepSize_.toBuilder();
              }
              maxSlotWalKeepSize_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(maxSlotWalKeepSize_);
                maxSlotWalKeepSize_ = subBuilder.buildPartial();
              }

              break;
            }
            case 66: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (gpWorkfileLimitPerSegment_ != null) {
                subBuilder = gpWorkfileLimitPerSegment_.toBuilder();
              }
              gpWorkfileLimitPerSegment_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(gpWorkfileLimitPerSegment_);
                gpWorkfileLimitPerSegment_ = subBuilder.buildPartial();
              }

              break;
            }
            case 74: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (gpWorkfileLimitPerQuery_ != null) {
                subBuilder = gpWorkfileLimitPerQuery_.toBuilder();
              }
              gpWorkfileLimitPerQuery_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(gpWorkfileLimitPerQuery_);
                gpWorkfileLimitPerQuery_ = subBuilder.buildPartial();
              }

              break;
            }
            case 82: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (gpWorkfileLimitFilesPerQuery_ != null) {
                subBuilder = gpWorkfileLimitFilesPerQuery_.toBuilder();
              }
              gpWorkfileLimitFilesPerQuery_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(gpWorkfileLimitFilesPerQuery_);
                gpWorkfileLimitFilesPerQuery_ = subBuilder.buildPartial();
              }

              break;
            }
            case 88: {
              int rawValue = input.readEnum();

              gpResourceManager_ = rawValue;
              break;
            }
            case 138: {
              com.google.protobuf.FloatValue.Builder subBuilder = null;
              if (gpResourceGroupCpuLimit_ != null) {
                subBuilder = gpResourceGroupCpuLimit_.toBuilder();
              }
              gpResourceGroupCpuLimit_ = input.readMessage(com.google.protobuf.FloatValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(gpResourceGroupCpuLimit_);
                gpResourceGroupCpuLimit_ = subBuilder.buildPartial();
              }

              break;
            }
            case 146: {
              com.google.protobuf.FloatValue.Builder subBuilder = null;
              if (gpResourceGroupMemoryLimit_ != null) {
                subBuilder = gpResourceGroupMemoryLimit_.toBuilder();
              }
              gpResourceGroupMemoryLimit_ = input.readMessage(com.google.protobuf.FloatValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(gpResourceGroupMemoryLimit_);
                gpResourceGroupMemoryLimit_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return yandex.cloud.api.mdb.greenplum.v1.GPCF.internal_static_yandex_cloud_mdb_greenplum_v1_GreenplumSegmentConfig_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return yandex.cloud.api.mdb.greenplum.v1.GPCF.internal_static_yandex_cloud_mdb_greenplum_v1_GreenplumSegmentConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig.class, yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig.Builder.class);
    }

    /**
     * Protobuf enum {@code yandex.cloud.mdb.greenplum.v1.GreenplumSegmentConfig.LogLevel}
     */
    public enum LogLevel
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>LOG_LEVEL_UNSPECIFIED = 0;</code>
       */
      LOG_LEVEL_UNSPECIFIED(0),
      /**
       * <code>TRACE = 1;</code>
       */
      TRACE(1),
      /**
       * <code>DEBUG = 2;</code>
       */
      DEBUG(2),
      /**
       * <code>INFORMATION = 3;</code>
       */
      INFORMATION(3),
      /**
       * <code>WARNING = 4;</code>
       */
      WARNING(4),
      /**
       * <code>ERROR = 5;</code>
       */
      ERROR(5),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>LOG_LEVEL_UNSPECIFIED = 0;</code>
       */
      public static final int LOG_LEVEL_UNSPECIFIED_VALUE = 0;
      /**
       * <code>TRACE = 1;</code>
       */
      public static final int TRACE_VALUE = 1;
      /**
       * <code>DEBUG = 2;</code>
       */
      public static final int DEBUG_VALUE = 2;
      /**
       * <code>INFORMATION = 3;</code>
       */
      public static final int INFORMATION_VALUE = 3;
      /**
       * <code>WARNING = 4;</code>
       */
      public static final int WARNING_VALUE = 4;
      /**
       * <code>ERROR = 5;</code>
       */
      public static final int ERROR_VALUE = 5;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static LogLevel valueOf(int value) {
        return forNumber(value);
      }

      public static LogLevel forNumber(int value) {
        switch (value) {
          case 0: return LOG_LEVEL_UNSPECIFIED;
          case 1: return TRACE;
          case 2: return DEBUG;
          case 3: return INFORMATION;
          case 4: return WARNING;
          case 5: return ERROR;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<LogLevel>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          LogLevel> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<LogLevel>() {
              public LogLevel findValueByNumber(int number) {
                return LogLevel.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig.getDescriptor().getEnumTypes().get(0);
      }

      private static final LogLevel[] VALUES = values();

      public static LogLevel valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private LogLevel(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:yandex.cloud.mdb.greenplum.v1.GreenplumSegmentConfig.LogLevel)
    }

    /**
     * Protobuf enum {@code yandex.cloud.mdb.greenplum.v1.GreenplumSegmentConfig.GPResourceManager}
     */
    public enum GPResourceManager
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>GP_RESOURCE_MANAGER_UNSPECIFIED = 0;</code>
       */
      GP_RESOURCE_MANAGER_UNSPECIFIED(0),
      /**
       * <code>QUEUE = 1;</code>
       */
      QUEUE(1),
      /**
       * <code>GROUP = 2;</code>
       */
      GROUP(2),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>GP_RESOURCE_MANAGER_UNSPECIFIED = 0;</code>
       */
      public static final int GP_RESOURCE_MANAGER_UNSPECIFIED_VALUE = 0;
      /**
       * <code>QUEUE = 1;</code>
       */
      public static final int QUEUE_VALUE = 1;
      /**
       * <code>GROUP = 2;</code>
       */
      public static final int GROUP_VALUE = 2;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static GPResourceManager valueOf(int value) {
        return forNumber(value);
      }

      public static GPResourceManager forNumber(int value) {
        switch (value) {
          case 0: return GP_RESOURCE_MANAGER_UNSPECIFIED;
          case 1: return QUEUE;
          case 2: return GROUP;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<GPResourceManager>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          GPResourceManager> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<GPResourceManager>() {
              public GPResourceManager findValueByNumber(int number) {
                return GPResourceManager.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig.getDescriptor().getEnumTypes().get(1);
      }

      private static final GPResourceManager[] VALUES = values();

      public static GPResourceManager valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private GPResourceManager(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:yandex.cloud.mdb.greenplum.v1.GreenplumSegmentConfig.GPResourceManager)
    }

    public static final int LOG_LEVEL_FIELD_NUMBER = 1;
    private int logLevel_;
    /**
     * <pre>
     * Logging level for the Greenplum segment subcluster. Possible values: TRACE, DEBUG, INFORMATION, WARNING, ERROR.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumSegmentConfig.LogLevel log_level = 1;</code>
     */
    public int getLogLevelValue() {
      return logLevel_;
    }
    /**
     * <pre>
     * Logging level for the Greenplum segment subcluster. Possible values: TRACE, DEBUG, INFORMATION, WARNING, ERROR.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumSegmentConfig.LogLevel log_level = 1;</code>
     */
    public yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig.LogLevel getLogLevel() {
      @SuppressWarnings("deprecation")
      yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig.LogLevel result = yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig.LogLevel.valueOf(logLevel_);
      return result == null ? yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig.LogLevel.UNRECOGNIZED : result;
    }

    public static final int MAX_CONNECTIONS_FIELD_NUMBER = 2;
    private com.google.protobuf.Int64Value maxConnections_;
    /**
     * <pre>
     * Maximum number of inbound connections.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_connections = 2;</code>
     */
    public boolean hasMaxConnections() {
      return maxConnections_ != null;
    }
    /**
     * <pre>
     * Maximum number of inbound connections.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_connections = 2;</code>
     */
    public com.google.protobuf.Int64Value getMaxConnections() {
      return maxConnections_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : maxConnections_;
    }
    /**
     * <pre>
     * Maximum number of inbound connections.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_connections = 2;</code>
     */
    public com.google.protobuf.Int64ValueOrBuilder getMaxConnectionsOrBuilder() {
      return getMaxConnections();
    }

    public static final int MAX_SLOT_WAL_KEEP_SIZE_FIELD_NUMBER = 7;
    private com.google.protobuf.Int64Value maxSlotWalKeepSize_;
    /**
     * <pre>
     * Specify the maximum size of WAL files that replication slots are allowed to retain in the pg_wal directory at checkpoint time.
     * https://www.postgresql.org/docs/current/runtime-config-replication.html
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_slot_wal_keep_size = 7;</code>
     */
    public boolean hasMaxSlotWalKeepSize() {
      return maxSlotWalKeepSize_ != null;
    }
    /**
     * <pre>
     * Specify the maximum size of WAL files that replication slots are allowed to retain in the pg_wal directory at checkpoint time.
     * https://www.postgresql.org/docs/current/runtime-config-replication.html
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_slot_wal_keep_size = 7;</code>
     */
    public com.google.protobuf.Int64Value getMaxSlotWalKeepSize() {
      return maxSlotWalKeepSize_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : maxSlotWalKeepSize_;
    }
    /**
     * <pre>
     * Specify the maximum size of WAL files that replication slots are allowed to retain in the pg_wal directory at checkpoint time.
     * https://www.postgresql.org/docs/current/runtime-config-replication.html
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_slot_wal_keep_size = 7;</code>
     */
    public com.google.protobuf.Int64ValueOrBuilder getMaxSlotWalKeepSizeOrBuilder() {
      return getMaxSlotWalKeepSize();
    }

    public static final int GP_WORKFILE_LIMIT_PER_SEGMENT_FIELD_NUMBER = 8;
    private com.google.protobuf.Int64Value gpWorkfileLimitPerSegment_;
    /**
     * <pre>
     * Sets the maximum total disk size that all running queries are allowed to use for creating temporary spill files at each segment.
     * The default value is 0, which means a limit is not enforced.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_segment
     * </pre>
     *
     * <code>.google.protobuf.Int64Value gp_workfile_limit_per_segment = 8;</code>
     */
    public boolean hasGpWorkfileLimitPerSegment() {
      return gpWorkfileLimitPerSegment_ != null;
    }
    /**
     * <pre>
     * Sets the maximum total disk size that all running queries are allowed to use for creating temporary spill files at each segment.
     * The default value is 0, which means a limit is not enforced.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_segment
     * </pre>
     *
     * <code>.google.protobuf.Int64Value gp_workfile_limit_per_segment = 8;</code>
     */
    public com.google.protobuf.Int64Value getGpWorkfileLimitPerSegment() {
      return gpWorkfileLimitPerSegment_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : gpWorkfileLimitPerSegment_;
    }
    /**
     * <pre>
     * Sets the maximum total disk size that all running queries are allowed to use for creating temporary spill files at each segment.
     * The default value is 0, which means a limit is not enforced.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_segment
     * </pre>
     *
     * <code>.google.protobuf.Int64Value gp_workfile_limit_per_segment = 8;</code>
     */
    public com.google.protobuf.Int64ValueOrBuilder getGpWorkfileLimitPerSegmentOrBuilder() {
      return getGpWorkfileLimitPerSegment();
    }

    public static final int GP_WORKFILE_LIMIT_PER_QUERY_FIELD_NUMBER = 9;
    private com.google.protobuf.Int64Value gpWorkfileLimitPerQuery_;
    /**
     * <pre>
     * Sets the maximum disk size an individual query is allowed to use for creating temporary spill files at each segment.
     * The default value is 0, which means a limit is not enforced.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_query
     * </pre>
     *
     * <code>.google.protobuf.Int64Value gp_workfile_limit_per_query = 9;</code>
     */
    public boolean hasGpWorkfileLimitPerQuery() {
      return gpWorkfileLimitPerQuery_ != null;
    }
    /**
     * <pre>
     * Sets the maximum disk size an individual query is allowed to use for creating temporary spill files at each segment.
     * The default value is 0, which means a limit is not enforced.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_query
     * </pre>
     *
     * <code>.google.protobuf.Int64Value gp_workfile_limit_per_query = 9;</code>
     */
    public com.google.protobuf.Int64Value getGpWorkfileLimitPerQuery() {
      return gpWorkfileLimitPerQuery_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : gpWorkfileLimitPerQuery_;
    }
    /**
     * <pre>
     * Sets the maximum disk size an individual query is allowed to use for creating temporary spill files at each segment.
     * The default value is 0, which means a limit is not enforced.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_query
     * </pre>
     *
     * <code>.google.protobuf.Int64Value gp_workfile_limit_per_query = 9;</code>
     */
    public com.google.protobuf.Int64ValueOrBuilder getGpWorkfileLimitPerQueryOrBuilder() {
      return getGpWorkfileLimitPerQuery();
    }

    public static final int GP_WORKFILE_LIMIT_FILES_PER_QUERY_FIELD_NUMBER = 10;
    private com.google.protobuf.Int64Value gpWorkfileLimitFilesPerQuery_;
    /**
     * <pre>
     * Sets the maximum number of temporary spill files (also known as workfiles) allowed per query per segment.
     * Spill files are created when executing a query that requires more memory than it is allocated.
     * The current query is terminated when the limit is exceeded.
     * Set the value to 0 (zero) to allow an unlimited number of spill files. master session reload
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_files_per_query
     * Default value is 10000
     * </pre>
     *
     * <code>.google.protobuf.Int64Value gp_workfile_limit_files_per_query = 10;</code>
     */
    public boolean hasGpWorkfileLimitFilesPerQuery() {
      return gpWorkfileLimitFilesPerQuery_ != null;
    }
    /**
     * <pre>
     * Sets the maximum number of temporary spill files (also known as workfiles) allowed per query per segment.
     * Spill files are created when executing a query that requires more memory than it is allocated.
     * The current query is terminated when the limit is exceeded.
     * Set the value to 0 (zero) to allow an unlimited number of spill files. master session reload
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_files_per_query
     * Default value is 10000
     * </pre>
     *
     * <code>.google.protobuf.Int64Value gp_workfile_limit_files_per_query = 10;</code>
     */
    public com.google.protobuf.Int64Value getGpWorkfileLimitFilesPerQuery() {
      return gpWorkfileLimitFilesPerQuery_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : gpWorkfileLimitFilesPerQuery_;
    }
    /**
     * <pre>
     * Sets the maximum number of temporary spill files (also known as workfiles) allowed per query per segment.
     * Spill files are created when executing a query that requires more memory than it is allocated.
     * The current query is terminated when the limit is exceeded.
     * Set the value to 0 (zero) to allow an unlimited number of spill files. master session reload
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_files_per_query
     * Default value is 10000
     * </pre>
     *
     * <code>.google.protobuf.Int64Value gp_workfile_limit_files_per_query = 10;</code>
     */
    public com.google.protobuf.Int64ValueOrBuilder getGpWorkfileLimitFilesPerQueryOrBuilder() {
      return getGpWorkfileLimitFilesPerQuery();
    }

    public static final int GP_RESOURCE_MANAGER_FIELD_NUMBER = 11;
    private int gpResourceManager_;
    /**
     * <pre>
     * Identifies the resource management scheme currently enabled in the Greenplum Database cluster. The default scheme is to use resource queues.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_resource_manager
     * "group" is the default value
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumSegmentConfig.GPResourceManager gp_resource_manager = 11;</code>
     */
    public int getGpResourceManagerValue() {
      return gpResourceManager_;
    }
    /**
     * <pre>
     * Identifies the resource management scheme currently enabled in the Greenplum Database cluster. The default scheme is to use resource queues.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_resource_manager
     * "group" is the default value
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumSegmentConfig.GPResourceManager gp_resource_manager = 11;</code>
     */
    public yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig.GPResourceManager getGpResourceManager() {
      @SuppressWarnings("deprecation")
      yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig.GPResourceManager result = yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig.GPResourceManager.valueOf(gpResourceManager_);
      return result == null ? yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig.GPResourceManager.UNRECOGNIZED : result;
    }

    public static final int GP_RESOURCE_GROUP_CPU_LIMIT_FIELD_NUMBER = 17;
    private com.google.protobuf.FloatValue gpResourceGroupCpuLimit_;
    /**
     * <pre>
     * Identifies the maximum percentage of system CPU resources to allocate to resource groups on each Greenplum Database segment node.
     * Note: The gp_resource_group_cpu_limit server configuration parameter is enforced only when resource group-based resource management is active.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_resource_group_cpu_limit
     * </pre>
     *
     * <code>.google.protobuf.FloatValue gp_resource_group_cpu_limit = 17;</code>
     */
    public boolean hasGpResourceGroupCpuLimit() {
      return gpResourceGroupCpuLimit_ != null;
    }
    /**
     * <pre>
     * Identifies the maximum percentage of system CPU resources to allocate to resource groups on each Greenplum Database segment node.
     * Note: The gp_resource_group_cpu_limit server configuration parameter is enforced only when resource group-based resource management is active.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_resource_group_cpu_limit
     * </pre>
     *
     * <code>.google.protobuf.FloatValue gp_resource_group_cpu_limit = 17;</code>
     */
    public com.google.protobuf.FloatValue getGpResourceGroupCpuLimit() {
      return gpResourceGroupCpuLimit_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : gpResourceGroupCpuLimit_;
    }
    /**
     * <pre>
     * Identifies the maximum percentage of system CPU resources to allocate to resource groups on each Greenplum Database segment node.
     * Note: The gp_resource_group_cpu_limit server configuration parameter is enforced only when resource group-based resource management is active.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_resource_group_cpu_limit
     * </pre>
     *
     * <code>.google.protobuf.FloatValue gp_resource_group_cpu_limit = 17;</code>
     */
    public com.google.protobuf.FloatValueOrBuilder getGpResourceGroupCpuLimitOrBuilder() {
      return getGpResourceGroupCpuLimit();
    }

    public static final int GP_RESOURCE_GROUP_MEMORY_LIMIT_FIELD_NUMBER = 18;
    private com.google.protobuf.FloatValue gpResourceGroupMemoryLimit_;
    /**
     * <pre>
     * Identifies the maximum percentage of system memory resources to allocate to resource groups on each Greenplum Database segment node.
     * Note: The gp_resource_group_memory_limit server configuration parameter is enforced only when resource group-based resource management is active.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_resource_group_memory_limit
     * </pre>
     *
     * <code>.google.protobuf.FloatValue gp_resource_group_memory_limit = 18;</code>
     */
    public boolean hasGpResourceGroupMemoryLimit() {
      return gpResourceGroupMemoryLimit_ != null;
    }
    /**
     * <pre>
     * Identifies the maximum percentage of system memory resources to allocate to resource groups on each Greenplum Database segment node.
     * Note: The gp_resource_group_memory_limit server configuration parameter is enforced only when resource group-based resource management is active.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_resource_group_memory_limit
     * </pre>
     *
     * <code>.google.protobuf.FloatValue gp_resource_group_memory_limit = 18;</code>
     */
    public com.google.protobuf.FloatValue getGpResourceGroupMemoryLimit() {
      return gpResourceGroupMemoryLimit_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : gpResourceGroupMemoryLimit_;
    }
    /**
     * <pre>
     * Identifies the maximum percentage of system memory resources to allocate to resource groups on each Greenplum Database segment node.
     * Note: The gp_resource_group_memory_limit server configuration parameter is enforced only when resource group-based resource management is active.
     * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_resource_group_memory_limit
     * </pre>
     *
     * <code>.google.protobuf.FloatValue gp_resource_group_memory_limit = 18;</code>
     */
    public com.google.protobuf.FloatValueOrBuilder getGpResourceGroupMemoryLimitOrBuilder() {
      return getGpResourceGroupMemoryLimit();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (logLevel_ != yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig.LogLevel.LOG_LEVEL_UNSPECIFIED.getNumber()) {
        output.writeEnum(1, logLevel_);
      }
      if (maxConnections_ != null) {
        output.writeMessage(2, getMaxConnections());
      }
      if (maxSlotWalKeepSize_ != null) {
        output.writeMessage(7, getMaxSlotWalKeepSize());
      }
      if (gpWorkfileLimitPerSegment_ != null) {
        output.writeMessage(8, getGpWorkfileLimitPerSegment());
      }
      if (gpWorkfileLimitPerQuery_ != null) {
        output.writeMessage(9, getGpWorkfileLimitPerQuery());
      }
      if (gpWorkfileLimitFilesPerQuery_ != null) {
        output.writeMessage(10, getGpWorkfileLimitFilesPerQuery());
      }
      if (gpResourceManager_ != yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig.GPResourceManager.GP_RESOURCE_MANAGER_UNSPECIFIED.getNumber()) {
        output.writeEnum(11, gpResourceManager_);
      }
      if (gpResourceGroupCpuLimit_ != null) {
        output.writeMessage(17, getGpResourceGroupCpuLimit());
      }
      if (gpResourceGroupMemoryLimit_ != null) {
        output.writeMessage(18, getGpResourceGroupMemoryLimit());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (logLevel_ != yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig.LogLevel.LOG_LEVEL_UNSPECIFIED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, logLevel_);
      }
      if (maxConnections_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getMaxConnections());
      }
      if (maxSlotWalKeepSize_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getMaxSlotWalKeepSize());
      }
      if (gpWorkfileLimitPerSegment_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getGpWorkfileLimitPerSegment());
      }
      if (gpWorkfileLimitPerQuery_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, getGpWorkfileLimitPerQuery());
      }
      if (gpWorkfileLimitFilesPerQuery_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, getGpWorkfileLimitFilesPerQuery());
      }
      if (gpResourceManager_ != yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig.GPResourceManager.GP_RESOURCE_MANAGER_UNSPECIFIED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(11, gpResourceManager_);
      }
      if (gpResourceGroupCpuLimit_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(17, getGpResourceGroupCpuLimit());
      }
      if (gpResourceGroupMemoryLimit_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(18, getGpResourceGroupMemoryLimit());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig)) {
        return super.equals(obj);
      }
      yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig other = (yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig) obj;

      boolean result = true;
      result = result && logLevel_ == other.logLevel_;
      result = result && (hasMaxConnections() == other.hasMaxConnections());
      if (hasMaxConnections()) {
        result = result && getMaxConnections()
            .equals(other.getMaxConnections());
      }
      result = result && (hasMaxSlotWalKeepSize() == other.hasMaxSlotWalKeepSize());
      if (hasMaxSlotWalKeepSize()) {
        result = result && getMaxSlotWalKeepSize()
            .equals(other.getMaxSlotWalKeepSize());
      }
      result = result && (hasGpWorkfileLimitPerSegment() == other.hasGpWorkfileLimitPerSegment());
      if (hasGpWorkfileLimitPerSegment()) {
        result = result && getGpWorkfileLimitPerSegment()
            .equals(other.getGpWorkfileLimitPerSegment());
      }
      result = result && (hasGpWorkfileLimitPerQuery() == other.hasGpWorkfileLimitPerQuery());
      if (hasGpWorkfileLimitPerQuery()) {
        result = result && getGpWorkfileLimitPerQuery()
            .equals(other.getGpWorkfileLimitPerQuery());
      }
      result = result && (hasGpWorkfileLimitFilesPerQuery() == other.hasGpWorkfileLimitFilesPerQuery());
      if (hasGpWorkfileLimitFilesPerQuery()) {
        result = result && getGpWorkfileLimitFilesPerQuery()
            .equals(other.getGpWorkfileLimitFilesPerQuery());
      }
      result = result && gpResourceManager_ == other.gpResourceManager_;
      result = result && (hasGpResourceGroupCpuLimit() == other.hasGpResourceGroupCpuLimit());
      if (hasGpResourceGroupCpuLimit()) {
        result = result && getGpResourceGroupCpuLimit()
            .equals(other.getGpResourceGroupCpuLimit());
      }
      result = result && (hasGpResourceGroupMemoryLimit() == other.hasGpResourceGroupMemoryLimit());
      if (hasGpResourceGroupMemoryLimit()) {
        result = result && getGpResourceGroupMemoryLimit()
            .equals(other.getGpResourceGroupMemoryLimit());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + LOG_LEVEL_FIELD_NUMBER;
      hash = (53 * hash) + logLevel_;
      if (hasMaxConnections()) {
        hash = (37 * hash) + MAX_CONNECTIONS_FIELD_NUMBER;
        hash = (53 * hash) + getMaxConnections().hashCode();
      }
      if (hasMaxSlotWalKeepSize()) {
        hash = (37 * hash) + MAX_SLOT_WAL_KEEP_SIZE_FIELD_NUMBER;
        hash = (53 * hash) + getMaxSlotWalKeepSize().hashCode();
      }
      if (hasGpWorkfileLimitPerSegment()) {
        hash = (37 * hash) + GP_WORKFILE_LIMIT_PER_SEGMENT_FIELD_NUMBER;
        hash = (53 * hash) + getGpWorkfileLimitPerSegment().hashCode();
      }
      if (hasGpWorkfileLimitPerQuery()) {
        hash = (37 * hash) + GP_WORKFILE_LIMIT_PER_QUERY_FIELD_NUMBER;
        hash = (53 * hash) + getGpWorkfileLimitPerQuery().hashCode();
      }
      if (hasGpWorkfileLimitFilesPerQuery()) {
        hash = (37 * hash) + GP_WORKFILE_LIMIT_FILES_PER_QUERY_FIELD_NUMBER;
        hash = (53 * hash) + getGpWorkfileLimitFilesPerQuery().hashCode();
      }
      hash = (37 * hash) + GP_RESOURCE_MANAGER_FIELD_NUMBER;
      hash = (53 * hash) + gpResourceManager_;
      if (hasGpResourceGroupCpuLimit()) {
        hash = (37 * hash) + GP_RESOURCE_GROUP_CPU_LIMIT_FIELD_NUMBER;
        hash = (53 * hash) + getGpResourceGroupCpuLimit().hashCode();
      }
      if (hasGpResourceGroupMemoryLimit()) {
        hash = (37 * hash) + GP_RESOURCE_GROUP_MEMORY_LIMIT_FIELD_NUMBER;
        hash = (53 * hash) + getGpResourceGroupMemoryLimit().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Greenplum segment subcluster configuration options. Detailed description for each set of options
     * Any options not listed here are not supported.
     * </pre>
     *
     * Protobuf type {@code yandex.cloud.mdb.greenplum.v1.GreenplumSegmentConfig}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:yandex.cloud.mdb.greenplum.v1.GreenplumSegmentConfig)
        yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return yandex.cloud.api.mdb.greenplum.v1.GPCF.internal_static_yandex_cloud_mdb_greenplum_v1_GreenplumSegmentConfig_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return yandex.cloud.api.mdb.greenplum.v1.GPCF.internal_static_yandex_cloud_mdb_greenplum_v1_GreenplumSegmentConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig.class, yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig.Builder.class);
      }

      // Construct using yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        logLevel_ = 0;

        if (maxConnectionsBuilder_ == null) {
          maxConnections_ = null;
        } else {
          maxConnections_ = null;
          maxConnectionsBuilder_ = null;
        }
        if (maxSlotWalKeepSizeBuilder_ == null) {
          maxSlotWalKeepSize_ = null;
        } else {
          maxSlotWalKeepSize_ = null;
          maxSlotWalKeepSizeBuilder_ = null;
        }
        if (gpWorkfileLimitPerSegmentBuilder_ == null) {
          gpWorkfileLimitPerSegment_ = null;
        } else {
          gpWorkfileLimitPerSegment_ = null;
          gpWorkfileLimitPerSegmentBuilder_ = null;
        }
        if (gpWorkfileLimitPerQueryBuilder_ == null) {
          gpWorkfileLimitPerQuery_ = null;
        } else {
          gpWorkfileLimitPerQuery_ = null;
          gpWorkfileLimitPerQueryBuilder_ = null;
        }
        if (gpWorkfileLimitFilesPerQueryBuilder_ == null) {
          gpWorkfileLimitFilesPerQuery_ = null;
        } else {
          gpWorkfileLimitFilesPerQuery_ = null;
          gpWorkfileLimitFilesPerQueryBuilder_ = null;
        }
        gpResourceManager_ = 0;

        if (gpResourceGroupCpuLimitBuilder_ == null) {
          gpResourceGroupCpuLimit_ = null;
        } else {
          gpResourceGroupCpuLimit_ = null;
          gpResourceGroupCpuLimitBuilder_ = null;
        }
        if (gpResourceGroupMemoryLimitBuilder_ == null) {
          gpResourceGroupMemoryLimit_ = null;
        } else {
          gpResourceGroupMemoryLimit_ = null;
          gpResourceGroupMemoryLimitBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return yandex.cloud.api.mdb.greenplum.v1.GPCF.internal_static_yandex_cloud_mdb_greenplum_v1_GreenplumSegmentConfig_descriptor;
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig getDefaultInstanceForType() {
        return yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig.getDefaultInstance();
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig build() {
        yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig buildPartial() {
        yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig result = new yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig(this);
        result.logLevel_ = logLevel_;
        if (maxConnectionsBuilder_ == null) {
          result.maxConnections_ = maxConnections_;
        } else {
          result.maxConnections_ = maxConnectionsBuilder_.build();
        }
        if (maxSlotWalKeepSizeBuilder_ == null) {
          result.maxSlotWalKeepSize_ = maxSlotWalKeepSize_;
        } else {
          result.maxSlotWalKeepSize_ = maxSlotWalKeepSizeBuilder_.build();
        }
        if (gpWorkfileLimitPerSegmentBuilder_ == null) {
          result.gpWorkfileLimitPerSegment_ = gpWorkfileLimitPerSegment_;
        } else {
          result.gpWorkfileLimitPerSegment_ = gpWorkfileLimitPerSegmentBuilder_.build();
        }
        if (gpWorkfileLimitPerQueryBuilder_ == null) {
          result.gpWorkfileLimitPerQuery_ = gpWorkfileLimitPerQuery_;
        } else {
          result.gpWorkfileLimitPerQuery_ = gpWorkfileLimitPerQueryBuilder_.build();
        }
        if (gpWorkfileLimitFilesPerQueryBuilder_ == null) {
          result.gpWorkfileLimitFilesPerQuery_ = gpWorkfileLimitFilesPerQuery_;
        } else {
          result.gpWorkfileLimitFilesPerQuery_ = gpWorkfileLimitFilesPerQueryBuilder_.build();
        }
        result.gpResourceManager_ = gpResourceManager_;
        if (gpResourceGroupCpuLimitBuilder_ == null) {
          result.gpResourceGroupCpuLimit_ = gpResourceGroupCpuLimit_;
        } else {
          result.gpResourceGroupCpuLimit_ = gpResourceGroupCpuLimitBuilder_.build();
        }
        if (gpResourceGroupMemoryLimitBuilder_ == null) {
          result.gpResourceGroupMemoryLimit_ = gpResourceGroupMemoryLimit_;
        } else {
          result.gpResourceGroupMemoryLimit_ = gpResourceGroupMemoryLimitBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig) {
          return mergeFrom((yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig other) {
        if (other == yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig.getDefaultInstance()) return this;
        if (other.logLevel_ != 0) {
          setLogLevelValue(other.getLogLevelValue());
        }
        if (other.hasMaxConnections()) {
          mergeMaxConnections(other.getMaxConnections());
        }
        if (other.hasMaxSlotWalKeepSize()) {
          mergeMaxSlotWalKeepSize(other.getMaxSlotWalKeepSize());
        }
        if (other.hasGpWorkfileLimitPerSegment()) {
          mergeGpWorkfileLimitPerSegment(other.getGpWorkfileLimitPerSegment());
        }
        if (other.hasGpWorkfileLimitPerQuery()) {
          mergeGpWorkfileLimitPerQuery(other.getGpWorkfileLimitPerQuery());
        }
        if (other.hasGpWorkfileLimitFilesPerQuery()) {
          mergeGpWorkfileLimitFilesPerQuery(other.getGpWorkfileLimitFilesPerQuery());
        }
        if (other.gpResourceManager_ != 0) {
          setGpResourceManagerValue(other.getGpResourceManagerValue());
        }
        if (other.hasGpResourceGroupCpuLimit()) {
          mergeGpResourceGroupCpuLimit(other.getGpResourceGroupCpuLimit());
        }
        if (other.hasGpResourceGroupMemoryLimit()) {
          mergeGpResourceGroupMemoryLimit(other.getGpResourceGroupMemoryLimit());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int logLevel_ = 0;
      /**
       * <pre>
       * Logging level for the Greenplum segment subcluster. Possible values: TRACE, DEBUG, INFORMATION, WARNING, ERROR.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumSegmentConfig.LogLevel log_level = 1;</code>
       */
      public int getLogLevelValue() {
        return logLevel_;
      }
      /**
       * <pre>
       * Logging level for the Greenplum segment subcluster. Possible values: TRACE, DEBUG, INFORMATION, WARNING, ERROR.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumSegmentConfig.LogLevel log_level = 1;</code>
       */
      public Builder setLogLevelValue(int value) {
        logLevel_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Logging level for the Greenplum segment subcluster. Possible values: TRACE, DEBUG, INFORMATION, WARNING, ERROR.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumSegmentConfig.LogLevel log_level = 1;</code>
       */
      public yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig.LogLevel getLogLevel() {
        @SuppressWarnings("deprecation")
        yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig.LogLevel result = yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig.LogLevel.valueOf(logLevel_);
        return result == null ? yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig.LogLevel.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Logging level for the Greenplum segment subcluster. Possible values: TRACE, DEBUG, INFORMATION, WARNING, ERROR.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumSegmentConfig.LogLevel log_level = 1;</code>
       */
      public Builder setLogLevel(yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig.LogLevel value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        logLevel_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Logging level for the Greenplum segment subcluster. Possible values: TRACE, DEBUG, INFORMATION, WARNING, ERROR.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumSegmentConfig.LogLevel log_level = 1;</code>
       */
      public Builder clearLogLevel() {
        
        logLevel_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Int64Value maxConnections_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> maxConnectionsBuilder_;
      /**
       * <pre>
       * Maximum number of inbound connections.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_connections = 2;</code>
       */
      public boolean hasMaxConnections() {
        return maxConnectionsBuilder_ != null || maxConnections_ != null;
      }
      /**
       * <pre>
       * Maximum number of inbound connections.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_connections = 2;</code>
       */
      public com.google.protobuf.Int64Value getMaxConnections() {
        if (maxConnectionsBuilder_ == null) {
          return maxConnections_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : maxConnections_;
        } else {
          return maxConnectionsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Maximum number of inbound connections.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_connections = 2;</code>
       */
      public Builder setMaxConnections(com.google.protobuf.Int64Value value) {
        if (maxConnectionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          maxConnections_ = value;
          onChanged();
        } else {
          maxConnectionsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Maximum number of inbound connections.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_connections = 2;</code>
       */
      public Builder setMaxConnections(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (maxConnectionsBuilder_ == null) {
          maxConnections_ = builderForValue.build();
          onChanged();
        } else {
          maxConnectionsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Maximum number of inbound connections.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_connections = 2;</code>
       */
      public Builder mergeMaxConnections(com.google.protobuf.Int64Value value) {
        if (maxConnectionsBuilder_ == null) {
          if (maxConnections_ != null) {
            maxConnections_ =
              com.google.protobuf.Int64Value.newBuilder(maxConnections_).mergeFrom(value).buildPartial();
          } else {
            maxConnections_ = value;
          }
          onChanged();
        } else {
          maxConnectionsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Maximum number of inbound connections.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_connections = 2;</code>
       */
      public Builder clearMaxConnections() {
        if (maxConnectionsBuilder_ == null) {
          maxConnections_ = null;
          onChanged();
        } else {
          maxConnections_ = null;
          maxConnectionsBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Maximum number of inbound connections.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_connections = 2;</code>
       */
      public com.google.protobuf.Int64Value.Builder getMaxConnectionsBuilder() {
        
        onChanged();
        return getMaxConnectionsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Maximum number of inbound connections.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_connections = 2;</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getMaxConnectionsOrBuilder() {
        if (maxConnectionsBuilder_ != null) {
          return maxConnectionsBuilder_.getMessageOrBuilder();
        } else {
          return maxConnections_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : maxConnections_;
        }
      }
      /**
       * <pre>
       * Maximum number of inbound connections.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_connections = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getMaxConnectionsFieldBuilder() {
        if (maxConnectionsBuilder_ == null) {
          maxConnectionsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getMaxConnections(),
                  getParentForChildren(),
                  isClean());
          maxConnections_ = null;
        }
        return maxConnectionsBuilder_;
      }

      private com.google.protobuf.Int64Value maxSlotWalKeepSize_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> maxSlotWalKeepSizeBuilder_;
      /**
       * <pre>
       * Specify the maximum size of WAL files that replication slots are allowed to retain in the pg_wal directory at checkpoint time.
       * https://www.postgresql.org/docs/current/runtime-config-replication.html
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_slot_wal_keep_size = 7;</code>
       */
      public boolean hasMaxSlotWalKeepSize() {
        return maxSlotWalKeepSizeBuilder_ != null || maxSlotWalKeepSize_ != null;
      }
      /**
       * <pre>
       * Specify the maximum size of WAL files that replication slots are allowed to retain in the pg_wal directory at checkpoint time.
       * https://www.postgresql.org/docs/current/runtime-config-replication.html
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_slot_wal_keep_size = 7;</code>
       */
      public com.google.protobuf.Int64Value getMaxSlotWalKeepSize() {
        if (maxSlotWalKeepSizeBuilder_ == null) {
          return maxSlotWalKeepSize_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : maxSlotWalKeepSize_;
        } else {
          return maxSlotWalKeepSizeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Specify the maximum size of WAL files that replication slots are allowed to retain in the pg_wal directory at checkpoint time.
       * https://www.postgresql.org/docs/current/runtime-config-replication.html
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_slot_wal_keep_size = 7;</code>
       */
      public Builder setMaxSlotWalKeepSize(com.google.protobuf.Int64Value value) {
        if (maxSlotWalKeepSizeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          maxSlotWalKeepSize_ = value;
          onChanged();
        } else {
          maxSlotWalKeepSizeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Specify the maximum size of WAL files that replication slots are allowed to retain in the pg_wal directory at checkpoint time.
       * https://www.postgresql.org/docs/current/runtime-config-replication.html
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_slot_wal_keep_size = 7;</code>
       */
      public Builder setMaxSlotWalKeepSize(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (maxSlotWalKeepSizeBuilder_ == null) {
          maxSlotWalKeepSize_ = builderForValue.build();
          onChanged();
        } else {
          maxSlotWalKeepSizeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Specify the maximum size of WAL files that replication slots are allowed to retain in the pg_wal directory at checkpoint time.
       * https://www.postgresql.org/docs/current/runtime-config-replication.html
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_slot_wal_keep_size = 7;</code>
       */
      public Builder mergeMaxSlotWalKeepSize(com.google.protobuf.Int64Value value) {
        if (maxSlotWalKeepSizeBuilder_ == null) {
          if (maxSlotWalKeepSize_ != null) {
            maxSlotWalKeepSize_ =
              com.google.protobuf.Int64Value.newBuilder(maxSlotWalKeepSize_).mergeFrom(value).buildPartial();
          } else {
            maxSlotWalKeepSize_ = value;
          }
          onChanged();
        } else {
          maxSlotWalKeepSizeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Specify the maximum size of WAL files that replication slots are allowed to retain in the pg_wal directory at checkpoint time.
       * https://www.postgresql.org/docs/current/runtime-config-replication.html
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_slot_wal_keep_size = 7;</code>
       */
      public Builder clearMaxSlotWalKeepSize() {
        if (maxSlotWalKeepSizeBuilder_ == null) {
          maxSlotWalKeepSize_ = null;
          onChanged();
        } else {
          maxSlotWalKeepSize_ = null;
          maxSlotWalKeepSizeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Specify the maximum size of WAL files that replication slots are allowed to retain in the pg_wal directory at checkpoint time.
       * https://www.postgresql.org/docs/current/runtime-config-replication.html
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_slot_wal_keep_size = 7;</code>
       */
      public com.google.protobuf.Int64Value.Builder getMaxSlotWalKeepSizeBuilder() {
        
        onChanged();
        return getMaxSlotWalKeepSizeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Specify the maximum size of WAL files that replication slots are allowed to retain in the pg_wal directory at checkpoint time.
       * https://www.postgresql.org/docs/current/runtime-config-replication.html
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_slot_wal_keep_size = 7;</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getMaxSlotWalKeepSizeOrBuilder() {
        if (maxSlotWalKeepSizeBuilder_ != null) {
          return maxSlotWalKeepSizeBuilder_.getMessageOrBuilder();
        } else {
          return maxSlotWalKeepSize_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : maxSlotWalKeepSize_;
        }
      }
      /**
       * <pre>
       * Specify the maximum size of WAL files that replication slots are allowed to retain in the pg_wal directory at checkpoint time.
       * https://www.postgresql.org/docs/current/runtime-config-replication.html
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_slot_wal_keep_size = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getMaxSlotWalKeepSizeFieldBuilder() {
        if (maxSlotWalKeepSizeBuilder_ == null) {
          maxSlotWalKeepSizeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getMaxSlotWalKeepSize(),
                  getParentForChildren(),
                  isClean());
          maxSlotWalKeepSize_ = null;
        }
        return maxSlotWalKeepSizeBuilder_;
      }

      private com.google.protobuf.Int64Value gpWorkfileLimitPerSegment_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> gpWorkfileLimitPerSegmentBuilder_;
      /**
       * <pre>
       * Sets the maximum total disk size that all running queries are allowed to use for creating temporary spill files at each segment.
       * The default value is 0, which means a limit is not enforced.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_segment
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_workfile_limit_per_segment = 8;</code>
       */
      public boolean hasGpWorkfileLimitPerSegment() {
        return gpWorkfileLimitPerSegmentBuilder_ != null || gpWorkfileLimitPerSegment_ != null;
      }
      /**
       * <pre>
       * Sets the maximum total disk size that all running queries are allowed to use for creating temporary spill files at each segment.
       * The default value is 0, which means a limit is not enforced.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_segment
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_workfile_limit_per_segment = 8;</code>
       */
      public com.google.protobuf.Int64Value getGpWorkfileLimitPerSegment() {
        if (gpWorkfileLimitPerSegmentBuilder_ == null) {
          return gpWorkfileLimitPerSegment_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : gpWorkfileLimitPerSegment_;
        } else {
          return gpWorkfileLimitPerSegmentBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Sets the maximum total disk size that all running queries are allowed to use for creating temporary spill files at each segment.
       * The default value is 0, which means a limit is not enforced.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_segment
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_workfile_limit_per_segment = 8;</code>
       */
      public Builder setGpWorkfileLimitPerSegment(com.google.protobuf.Int64Value value) {
        if (gpWorkfileLimitPerSegmentBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          gpWorkfileLimitPerSegment_ = value;
          onChanged();
        } else {
          gpWorkfileLimitPerSegmentBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Sets the maximum total disk size that all running queries are allowed to use for creating temporary spill files at each segment.
       * The default value is 0, which means a limit is not enforced.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_segment
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_workfile_limit_per_segment = 8;</code>
       */
      public Builder setGpWorkfileLimitPerSegment(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (gpWorkfileLimitPerSegmentBuilder_ == null) {
          gpWorkfileLimitPerSegment_ = builderForValue.build();
          onChanged();
        } else {
          gpWorkfileLimitPerSegmentBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Sets the maximum total disk size that all running queries are allowed to use for creating temporary spill files at each segment.
       * The default value is 0, which means a limit is not enforced.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_segment
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_workfile_limit_per_segment = 8;</code>
       */
      public Builder mergeGpWorkfileLimitPerSegment(com.google.protobuf.Int64Value value) {
        if (gpWorkfileLimitPerSegmentBuilder_ == null) {
          if (gpWorkfileLimitPerSegment_ != null) {
            gpWorkfileLimitPerSegment_ =
              com.google.protobuf.Int64Value.newBuilder(gpWorkfileLimitPerSegment_).mergeFrom(value).buildPartial();
          } else {
            gpWorkfileLimitPerSegment_ = value;
          }
          onChanged();
        } else {
          gpWorkfileLimitPerSegmentBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Sets the maximum total disk size that all running queries are allowed to use for creating temporary spill files at each segment.
       * The default value is 0, which means a limit is not enforced.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_segment
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_workfile_limit_per_segment = 8;</code>
       */
      public Builder clearGpWorkfileLimitPerSegment() {
        if (gpWorkfileLimitPerSegmentBuilder_ == null) {
          gpWorkfileLimitPerSegment_ = null;
          onChanged();
        } else {
          gpWorkfileLimitPerSegment_ = null;
          gpWorkfileLimitPerSegmentBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Sets the maximum total disk size that all running queries are allowed to use for creating temporary spill files at each segment.
       * The default value is 0, which means a limit is not enforced.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_segment
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_workfile_limit_per_segment = 8;</code>
       */
      public com.google.protobuf.Int64Value.Builder getGpWorkfileLimitPerSegmentBuilder() {
        
        onChanged();
        return getGpWorkfileLimitPerSegmentFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Sets the maximum total disk size that all running queries are allowed to use for creating temporary spill files at each segment.
       * The default value is 0, which means a limit is not enforced.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_segment
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_workfile_limit_per_segment = 8;</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getGpWorkfileLimitPerSegmentOrBuilder() {
        if (gpWorkfileLimitPerSegmentBuilder_ != null) {
          return gpWorkfileLimitPerSegmentBuilder_.getMessageOrBuilder();
        } else {
          return gpWorkfileLimitPerSegment_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : gpWorkfileLimitPerSegment_;
        }
      }
      /**
       * <pre>
       * Sets the maximum total disk size that all running queries are allowed to use for creating temporary spill files at each segment.
       * The default value is 0, which means a limit is not enforced.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_segment
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_workfile_limit_per_segment = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getGpWorkfileLimitPerSegmentFieldBuilder() {
        if (gpWorkfileLimitPerSegmentBuilder_ == null) {
          gpWorkfileLimitPerSegmentBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getGpWorkfileLimitPerSegment(),
                  getParentForChildren(),
                  isClean());
          gpWorkfileLimitPerSegment_ = null;
        }
        return gpWorkfileLimitPerSegmentBuilder_;
      }

      private com.google.protobuf.Int64Value gpWorkfileLimitPerQuery_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> gpWorkfileLimitPerQueryBuilder_;
      /**
       * <pre>
       * Sets the maximum disk size an individual query is allowed to use for creating temporary spill files at each segment.
       * The default value is 0, which means a limit is not enforced.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_query
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_workfile_limit_per_query = 9;</code>
       */
      public boolean hasGpWorkfileLimitPerQuery() {
        return gpWorkfileLimitPerQueryBuilder_ != null || gpWorkfileLimitPerQuery_ != null;
      }
      /**
       * <pre>
       * Sets the maximum disk size an individual query is allowed to use for creating temporary spill files at each segment.
       * The default value is 0, which means a limit is not enforced.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_query
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_workfile_limit_per_query = 9;</code>
       */
      public com.google.protobuf.Int64Value getGpWorkfileLimitPerQuery() {
        if (gpWorkfileLimitPerQueryBuilder_ == null) {
          return gpWorkfileLimitPerQuery_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : gpWorkfileLimitPerQuery_;
        } else {
          return gpWorkfileLimitPerQueryBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Sets the maximum disk size an individual query is allowed to use for creating temporary spill files at each segment.
       * The default value is 0, which means a limit is not enforced.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_query
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_workfile_limit_per_query = 9;</code>
       */
      public Builder setGpWorkfileLimitPerQuery(com.google.protobuf.Int64Value value) {
        if (gpWorkfileLimitPerQueryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          gpWorkfileLimitPerQuery_ = value;
          onChanged();
        } else {
          gpWorkfileLimitPerQueryBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Sets the maximum disk size an individual query is allowed to use for creating temporary spill files at each segment.
       * The default value is 0, which means a limit is not enforced.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_query
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_workfile_limit_per_query = 9;</code>
       */
      public Builder setGpWorkfileLimitPerQuery(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (gpWorkfileLimitPerQueryBuilder_ == null) {
          gpWorkfileLimitPerQuery_ = builderForValue.build();
          onChanged();
        } else {
          gpWorkfileLimitPerQueryBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Sets the maximum disk size an individual query is allowed to use for creating temporary spill files at each segment.
       * The default value is 0, which means a limit is not enforced.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_query
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_workfile_limit_per_query = 9;</code>
       */
      public Builder mergeGpWorkfileLimitPerQuery(com.google.protobuf.Int64Value value) {
        if (gpWorkfileLimitPerQueryBuilder_ == null) {
          if (gpWorkfileLimitPerQuery_ != null) {
            gpWorkfileLimitPerQuery_ =
              com.google.protobuf.Int64Value.newBuilder(gpWorkfileLimitPerQuery_).mergeFrom(value).buildPartial();
          } else {
            gpWorkfileLimitPerQuery_ = value;
          }
          onChanged();
        } else {
          gpWorkfileLimitPerQueryBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Sets the maximum disk size an individual query is allowed to use for creating temporary spill files at each segment.
       * The default value is 0, which means a limit is not enforced.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_query
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_workfile_limit_per_query = 9;</code>
       */
      public Builder clearGpWorkfileLimitPerQuery() {
        if (gpWorkfileLimitPerQueryBuilder_ == null) {
          gpWorkfileLimitPerQuery_ = null;
          onChanged();
        } else {
          gpWorkfileLimitPerQuery_ = null;
          gpWorkfileLimitPerQueryBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Sets the maximum disk size an individual query is allowed to use for creating temporary spill files at each segment.
       * The default value is 0, which means a limit is not enforced.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_query
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_workfile_limit_per_query = 9;</code>
       */
      public com.google.protobuf.Int64Value.Builder getGpWorkfileLimitPerQueryBuilder() {
        
        onChanged();
        return getGpWorkfileLimitPerQueryFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Sets the maximum disk size an individual query is allowed to use for creating temporary spill files at each segment.
       * The default value is 0, which means a limit is not enforced.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_query
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_workfile_limit_per_query = 9;</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getGpWorkfileLimitPerQueryOrBuilder() {
        if (gpWorkfileLimitPerQueryBuilder_ != null) {
          return gpWorkfileLimitPerQueryBuilder_.getMessageOrBuilder();
        } else {
          return gpWorkfileLimitPerQuery_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : gpWorkfileLimitPerQuery_;
        }
      }
      /**
       * <pre>
       * Sets the maximum disk size an individual query is allowed to use for creating temporary spill files at each segment.
       * The default value is 0, which means a limit is not enforced.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_query
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_workfile_limit_per_query = 9;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getGpWorkfileLimitPerQueryFieldBuilder() {
        if (gpWorkfileLimitPerQueryBuilder_ == null) {
          gpWorkfileLimitPerQueryBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getGpWorkfileLimitPerQuery(),
                  getParentForChildren(),
                  isClean());
          gpWorkfileLimitPerQuery_ = null;
        }
        return gpWorkfileLimitPerQueryBuilder_;
      }

      private com.google.protobuf.Int64Value gpWorkfileLimitFilesPerQuery_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> gpWorkfileLimitFilesPerQueryBuilder_;
      /**
       * <pre>
       * Sets the maximum number of temporary spill files (also known as workfiles) allowed per query per segment.
       * Spill files are created when executing a query that requires more memory than it is allocated.
       * The current query is terminated when the limit is exceeded.
       * Set the value to 0 (zero) to allow an unlimited number of spill files. master session reload
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_files_per_query
       * Default value is 10000
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_workfile_limit_files_per_query = 10;</code>
       */
      public boolean hasGpWorkfileLimitFilesPerQuery() {
        return gpWorkfileLimitFilesPerQueryBuilder_ != null || gpWorkfileLimitFilesPerQuery_ != null;
      }
      /**
       * <pre>
       * Sets the maximum number of temporary spill files (also known as workfiles) allowed per query per segment.
       * Spill files are created when executing a query that requires more memory than it is allocated.
       * The current query is terminated when the limit is exceeded.
       * Set the value to 0 (zero) to allow an unlimited number of spill files. master session reload
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_files_per_query
       * Default value is 10000
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_workfile_limit_files_per_query = 10;</code>
       */
      public com.google.protobuf.Int64Value getGpWorkfileLimitFilesPerQuery() {
        if (gpWorkfileLimitFilesPerQueryBuilder_ == null) {
          return gpWorkfileLimitFilesPerQuery_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : gpWorkfileLimitFilesPerQuery_;
        } else {
          return gpWorkfileLimitFilesPerQueryBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Sets the maximum number of temporary spill files (also known as workfiles) allowed per query per segment.
       * Spill files are created when executing a query that requires more memory than it is allocated.
       * The current query is terminated when the limit is exceeded.
       * Set the value to 0 (zero) to allow an unlimited number of spill files. master session reload
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_files_per_query
       * Default value is 10000
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_workfile_limit_files_per_query = 10;</code>
       */
      public Builder setGpWorkfileLimitFilesPerQuery(com.google.protobuf.Int64Value value) {
        if (gpWorkfileLimitFilesPerQueryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          gpWorkfileLimitFilesPerQuery_ = value;
          onChanged();
        } else {
          gpWorkfileLimitFilesPerQueryBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Sets the maximum number of temporary spill files (also known as workfiles) allowed per query per segment.
       * Spill files are created when executing a query that requires more memory than it is allocated.
       * The current query is terminated when the limit is exceeded.
       * Set the value to 0 (zero) to allow an unlimited number of spill files. master session reload
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_files_per_query
       * Default value is 10000
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_workfile_limit_files_per_query = 10;</code>
       */
      public Builder setGpWorkfileLimitFilesPerQuery(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (gpWorkfileLimitFilesPerQueryBuilder_ == null) {
          gpWorkfileLimitFilesPerQuery_ = builderForValue.build();
          onChanged();
        } else {
          gpWorkfileLimitFilesPerQueryBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Sets the maximum number of temporary spill files (also known as workfiles) allowed per query per segment.
       * Spill files are created when executing a query that requires more memory than it is allocated.
       * The current query is terminated when the limit is exceeded.
       * Set the value to 0 (zero) to allow an unlimited number of spill files. master session reload
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_files_per_query
       * Default value is 10000
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_workfile_limit_files_per_query = 10;</code>
       */
      public Builder mergeGpWorkfileLimitFilesPerQuery(com.google.protobuf.Int64Value value) {
        if (gpWorkfileLimitFilesPerQueryBuilder_ == null) {
          if (gpWorkfileLimitFilesPerQuery_ != null) {
            gpWorkfileLimitFilesPerQuery_ =
              com.google.protobuf.Int64Value.newBuilder(gpWorkfileLimitFilesPerQuery_).mergeFrom(value).buildPartial();
          } else {
            gpWorkfileLimitFilesPerQuery_ = value;
          }
          onChanged();
        } else {
          gpWorkfileLimitFilesPerQueryBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Sets the maximum number of temporary spill files (also known as workfiles) allowed per query per segment.
       * Spill files are created when executing a query that requires more memory than it is allocated.
       * The current query is terminated when the limit is exceeded.
       * Set the value to 0 (zero) to allow an unlimited number of spill files. master session reload
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_files_per_query
       * Default value is 10000
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_workfile_limit_files_per_query = 10;</code>
       */
      public Builder clearGpWorkfileLimitFilesPerQuery() {
        if (gpWorkfileLimitFilesPerQueryBuilder_ == null) {
          gpWorkfileLimitFilesPerQuery_ = null;
          onChanged();
        } else {
          gpWorkfileLimitFilesPerQuery_ = null;
          gpWorkfileLimitFilesPerQueryBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Sets the maximum number of temporary spill files (also known as workfiles) allowed per query per segment.
       * Spill files are created when executing a query that requires more memory than it is allocated.
       * The current query is terminated when the limit is exceeded.
       * Set the value to 0 (zero) to allow an unlimited number of spill files. master session reload
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_files_per_query
       * Default value is 10000
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_workfile_limit_files_per_query = 10;</code>
       */
      public com.google.protobuf.Int64Value.Builder getGpWorkfileLimitFilesPerQueryBuilder() {
        
        onChanged();
        return getGpWorkfileLimitFilesPerQueryFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Sets the maximum number of temporary spill files (also known as workfiles) allowed per query per segment.
       * Spill files are created when executing a query that requires more memory than it is allocated.
       * The current query is terminated when the limit is exceeded.
       * Set the value to 0 (zero) to allow an unlimited number of spill files. master session reload
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_files_per_query
       * Default value is 10000
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_workfile_limit_files_per_query = 10;</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getGpWorkfileLimitFilesPerQueryOrBuilder() {
        if (gpWorkfileLimitFilesPerQueryBuilder_ != null) {
          return gpWorkfileLimitFilesPerQueryBuilder_.getMessageOrBuilder();
        } else {
          return gpWorkfileLimitFilesPerQuery_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : gpWorkfileLimitFilesPerQuery_;
        }
      }
      /**
       * <pre>
       * Sets the maximum number of temporary spill files (also known as workfiles) allowed per query per segment.
       * Spill files are created when executing a query that requires more memory than it is allocated.
       * The current query is terminated when the limit is exceeded.
       * Set the value to 0 (zero) to allow an unlimited number of spill files. master session reload
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_files_per_query
       * Default value is 10000
       * </pre>
       *
       * <code>.google.protobuf.Int64Value gp_workfile_limit_files_per_query = 10;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getGpWorkfileLimitFilesPerQueryFieldBuilder() {
        if (gpWorkfileLimitFilesPerQueryBuilder_ == null) {
          gpWorkfileLimitFilesPerQueryBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getGpWorkfileLimitFilesPerQuery(),
                  getParentForChildren(),
                  isClean());
          gpWorkfileLimitFilesPerQuery_ = null;
        }
        return gpWorkfileLimitFilesPerQueryBuilder_;
      }

      private int gpResourceManager_ = 0;
      /**
       * <pre>
       * Identifies the resource management scheme currently enabled in the Greenplum Database cluster. The default scheme is to use resource queues.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_resource_manager
       * "group" is the default value
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumSegmentConfig.GPResourceManager gp_resource_manager = 11;</code>
       */
      public int getGpResourceManagerValue() {
        return gpResourceManager_;
      }
      /**
       * <pre>
       * Identifies the resource management scheme currently enabled in the Greenplum Database cluster. The default scheme is to use resource queues.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_resource_manager
       * "group" is the default value
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumSegmentConfig.GPResourceManager gp_resource_manager = 11;</code>
       */
      public Builder setGpResourceManagerValue(int value) {
        gpResourceManager_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Identifies the resource management scheme currently enabled in the Greenplum Database cluster. The default scheme is to use resource queues.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_resource_manager
       * "group" is the default value
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumSegmentConfig.GPResourceManager gp_resource_manager = 11;</code>
       */
      public yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig.GPResourceManager getGpResourceManager() {
        @SuppressWarnings("deprecation")
        yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig.GPResourceManager result = yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig.GPResourceManager.valueOf(gpResourceManager_);
        return result == null ? yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig.GPResourceManager.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Identifies the resource management scheme currently enabled in the Greenplum Database cluster. The default scheme is to use resource queues.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_resource_manager
       * "group" is the default value
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumSegmentConfig.GPResourceManager gp_resource_manager = 11;</code>
       */
      public Builder setGpResourceManager(yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig.GPResourceManager value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        gpResourceManager_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Identifies the resource management scheme currently enabled in the Greenplum Database cluster. The default scheme is to use resource queues.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_resource_manager
       * "group" is the default value
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumSegmentConfig.GPResourceManager gp_resource_manager = 11;</code>
       */
      public Builder clearGpResourceManager() {
        
        gpResourceManager_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.FloatValue gpResourceGroupCpuLimit_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> gpResourceGroupCpuLimitBuilder_;
      /**
       * <pre>
       * Identifies the maximum percentage of system CPU resources to allocate to resource groups on each Greenplum Database segment node.
       * Note: The gp_resource_group_cpu_limit server configuration parameter is enforced only when resource group-based resource management is active.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_resource_group_cpu_limit
       * </pre>
       *
       * <code>.google.protobuf.FloatValue gp_resource_group_cpu_limit = 17;</code>
       */
      public boolean hasGpResourceGroupCpuLimit() {
        return gpResourceGroupCpuLimitBuilder_ != null || gpResourceGroupCpuLimit_ != null;
      }
      /**
       * <pre>
       * Identifies the maximum percentage of system CPU resources to allocate to resource groups on each Greenplum Database segment node.
       * Note: The gp_resource_group_cpu_limit server configuration parameter is enforced only when resource group-based resource management is active.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_resource_group_cpu_limit
       * </pre>
       *
       * <code>.google.protobuf.FloatValue gp_resource_group_cpu_limit = 17;</code>
       */
      public com.google.protobuf.FloatValue getGpResourceGroupCpuLimit() {
        if (gpResourceGroupCpuLimitBuilder_ == null) {
          return gpResourceGroupCpuLimit_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : gpResourceGroupCpuLimit_;
        } else {
          return gpResourceGroupCpuLimitBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Identifies the maximum percentage of system CPU resources to allocate to resource groups on each Greenplum Database segment node.
       * Note: The gp_resource_group_cpu_limit server configuration parameter is enforced only when resource group-based resource management is active.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_resource_group_cpu_limit
       * </pre>
       *
       * <code>.google.protobuf.FloatValue gp_resource_group_cpu_limit = 17;</code>
       */
      public Builder setGpResourceGroupCpuLimit(com.google.protobuf.FloatValue value) {
        if (gpResourceGroupCpuLimitBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          gpResourceGroupCpuLimit_ = value;
          onChanged();
        } else {
          gpResourceGroupCpuLimitBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Identifies the maximum percentage of system CPU resources to allocate to resource groups on each Greenplum Database segment node.
       * Note: The gp_resource_group_cpu_limit server configuration parameter is enforced only when resource group-based resource management is active.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_resource_group_cpu_limit
       * </pre>
       *
       * <code>.google.protobuf.FloatValue gp_resource_group_cpu_limit = 17;</code>
       */
      public Builder setGpResourceGroupCpuLimit(
          com.google.protobuf.FloatValue.Builder builderForValue) {
        if (gpResourceGroupCpuLimitBuilder_ == null) {
          gpResourceGroupCpuLimit_ = builderForValue.build();
          onChanged();
        } else {
          gpResourceGroupCpuLimitBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Identifies the maximum percentage of system CPU resources to allocate to resource groups on each Greenplum Database segment node.
       * Note: The gp_resource_group_cpu_limit server configuration parameter is enforced only when resource group-based resource management is active.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_resource_group_cpu_limit
       * </pre>
       *
       * <code>.google.protobuf.FloatValue gp_resource_group_cpu_limit = 17;</code>
       */
      public Builder mergeGpResourceGroupCpuLimit(com.google.protobuf.FloatValue value) {
        if (gpResourceGroupCpuLimitBuilder_ == null) {
          if (gpResourceGroupCpuLimit_ != null) {
            gpResourceGroupCpuLimit_ =
              com.google.protobuf.FloatValue.newBuilder(gpResourceGroupCpuLimit_).mergeFrom(value).buildPartial();
          } else {
            gpResourceGroupCpuLimit_ = value;
          }
          onChanged();
        } else {
          gpResourceGroupCpuLimitBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Identifies the maximum percentage of system CPU resources to allocate to resource groups on each Greenplum Database segment node.
       * Note: The gp_resource_group_cpu_limit server configuration parameter is enforced only when resource group-based resource management is active.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_resource_group_cpu_limit
       * </pre>
       *
       * <code>.google.protobuf.FloatValue gp_resource_group_cpu_limit = 17;</code>
       */
      public Builder clearGpResourceGroupCpuLimit() {
        if (gpResourceGroupCpuLimitBuilder_ == null) {
          gpResourceGroupCpuLimit_ = null;
          onChanged();
        } else {
          gpResourceGroupCpuLimit_ = null;
          gpResourceGroupCpuLimitBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Identifies the maximum percentage of system CPU resources to allocate to resource groups on each Greenplum Database segment node.
       * Note: The gp_resource_group_cpu_limit server configuration parameter is enforced only when resource group-based resource management is active.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_resource_group_cpu_limit
       * </pre>
       *
       * <code>.google.protobuf.FloatValue gp_resource_group_cpu_limit = 17;</code>
       */
      public com.google.protobuf.FloatValue.Builder getGpResourceGroupCpuLimitBuilder() {
        
        onChanged();
        return getGpResourceGroupCpuLimitFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Identifies the maximum percentage of system CPU resources to allocate to resource groups on each Greenplum Database segment node.
       * Note: The gp_resource_group_cpu_limit server configuration parameter is enforced only when resource group-based resource management is active.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_resource_group_cpu_limit
       * </pre>
       *
       * <code>.google.protobuf.FloatValue gp_resource_group_cpu_limit = 17;</code>
       */
      public com.google.protobuf.FloatValueOrBuilder getGpResourceGroupCpuLimitOrBuilder() {
        if (gpResourceGroupCpuLimitBuilder_ != null) {
          return gpResourceGroupCpuLimitBuilder_.getMessageOrBuilder();
        } else {
          return gpResourceGroupCpuLimit_ == null ?
              com.google.protobuf.FloatValue.getDefaultInstance() : gpResourceGroupCpuLimit_;
        }
      }
      /**
       * <pre>
       * Identifies the maximum percentage of system CPU resources to allocate to resource groups on each Greenplum Database segment node.
       * Note: The gp_resource_group_cpu_limit server configuration parameter is enforced only when resource group-based resource management is active.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_resource_group_cpu_limit
       * </pre>
       *
       * <code>.google.protobuf.FloatValue gp_resource_group_cpu_limit = 17;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> 
          getGpResourceGroupCpuLimitFieldBuilder() {
        if (gpResourceGroupCpuLimitBuilder_ == null) {
          gpResourceGroupCpuLimitBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder>(
                  getGpResourceGroupCpuLimit(),
                  getParentForChildren(),
                  isClean());
          gpResourceGroupCpuLimit_ = null;
        }
        return gpResourceGroupCpuLimitBuilder_;
      }

      private com.google.protobuf.FloatValue gpResourceGroupMemoryLimit_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> gpResourceGroupMemoryLimitBuilder_;
      /**
       * <pre>
       * Identifies the maximum percentage of system memory resources to allocate to resource groups on each Greenplum Database segment node.
       * Note: The gp_resource_group_memory_limit server configuration parameter is enforced only when resource group-based resource management is active.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_resource_group_memory_limit
       * </pre>
       *
       * <code>.google.protobuf.FloatValue gp_resource_group_memory_limit = 18;</code>
       */
      public boolean hasGpResourceGroupMemoryLimit() {
        return gpResourceGroupMemoryLimitBuilder_ != null || gpResourceGroupMemoryLimit_ != null;
      }
      /**
       * <pre>
       * Identifies the maximum percentage of system memory resources to allocate to resource groups on each Greenplum Database segment node.
       * Note: The gp_resource_group_memory_limit server configuration parameter is enforced only when resource group-based resource management is active.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_resource_group_memory_limit
       * </pre>
       *
       * <code>.google.protobuf.FloatValue gp_resource_group_memory_limit = 18;</code>
       */
      public com.google.protobuf.FloatValue getGpResourceGroupMemoryLimit() {
        if (gpResourceGroupMemoryLimitBuilder_ == null) {
          return gpResourceGroupMemoryLimit_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : gpResourceGroupMemoryLimit_;
        } else {
          return gpResourceGroupMemoryLimitBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Identifies the maximum percentage of system memory resources to allocate to resource groups on each Greenplum Database segment node.
       * Note: The gp_resource_group_memory_limit server configuration parameter is enforced only when resource group-based resource management is active.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_resource_group_memory_limit
       * </pre>
       *
       * <code>.google.protobuf.FloatValue gp_resource_group_memory_limit = 18;</code>
       */
      public Builder setGpResourceGroupMemoryLimit(com.google.protobuf.FloatValue value) {
        if (gpResourceGroupMemoryLimitBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          gpResourceGroupMemoryLimit_ = value;
          onChanged();
        } else {
          gpResourceGroupMemoryLimitBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Identifies the maximum percentage of system memory resources to allocate to resource groups on each Greenplum Database segment node.
       * Note: The gp_resource_group_memory_limit server configuration parameter is enforced only when resource group-based resource management is active.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_resource_group_memory_limit
       * </pre>
       *
       * <code>.google.protobuf.FloatValue gp_resource_group_memory_limit = 18;</code>
       */
      public Builder setGpResourceGroupMemoryLimit(
          com.google.protobuf.FloatValue.Builder builderForValue) {
        if (gpResourceGroupMemoryLimitBuilder_ == null) {
          gpResourceGroupMemoryLimit_ = builderForValue.build();
          onChanged();
        } else {
          gpResourceGroupMemoryLimitBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Identifies the maximum percentage of system memory resources to allocate to resource groups on each Greenplum Database segment node.
       * Note: The gp_resource_group_memory_limit server configuration parameter is enforced only when resource group-based resource management is active.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_resource_group_memory_limit
       * </pre>
       *
       * <code>.google.protobuf.FloatValue gp_resource_group_memory_limit = 18;</code>
       */
      public Builder mergeGpResourceGroupMemoryLimit(com.google.protobuf.FloatValue value) {
        if (gpResourceGroupMemoryLimitBuilder_ == null) {
          if (gpResourceGroupMemoryLimit_ != null) {
            gpResourceGroupMemoryLimit_ =
              com.google.protobuf.FloatValue.newBuilder(gpResourceGroupMemoryLimit_).mergeFrom(value).buildPartial();
          } else {
            gpResourceGroupMemoryLimit_ = value;
          }
          onChanged();
        } else {
          gpResourceGroupMemoryLimitBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Identifies the maximum percentage of system memory resources to allocate to resource groups on each Greenplum Database segment node.
       * Note: The gp_resource_group_memory_limit server configuration parameter is enforced only when resource group-based resource management is active.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_resource_group_memory_limit
       * </pre>
       *
       * <code>.google.protobuf.FloatValue gp_resource_group_memory_limit = 18;</code>
       */
      public Builder clearGpResourceGroupMemoryLimit() {
        if (gpResourceGroupMemoryLimitBuilder_ == null) {
          gpResourceGroupMemoryLimit_ = null;
          onChanged();
        } else {
          gpResourceGroupMemoryLimit_ = null;
          gpResourceGroupMemoryLimitBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Identifies the maximum percentage of system memory resources to allocate to resource groups on each Greenplum Database segment node.
       * Note: The gp_resource_group_memory_limit server configuration parameter is enforced only when resource group-based resource management is active.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_resource_group_memory_limit
       * </pre>
       *
       * <code>.google.protobuf.FloatValue gp_resource_group_memory_limit = 18;</code>
       */
      public com.google.protobuf.FloatValue.Builder getGpResourceGroupMemoryLimitBuilder() {
        
        onChanged();
        return getGpResourceGroupMemoryLimitFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Identifies the maximum percentage of system memory resources to allocate to resource groups on each Greenplum Database segment node.
       * Note: The gp_resource_group_memory_limit server configuration parameter is enforced only when resource group-based resource management is active.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_resource_group_memory_limit
       * </pre>
       *
       * <code>.google.protobuf.FloatValue gp_resource_group_memory_limit = 18;</code>
       */
      public com.google.protobuf.FloatValueOrBuilder getGpResourceGroupMemoryLimitOrBuilder() {
        if (gpResourceGroupMemoryLimitBuilder_ != null) {
          return gpResourceGroupMemoryLimitBuilder_.getMessageOrBuilder();
        } else {
          return gpResourceGroupMemoryLimit_ == null ?
              com.google.protobuf.FloatValue.getDefaultInstance() : gpResourceGroupMemoryLimit_;
        }
      }
      /**
       * <pre>
       * Identifies the maximum percentage of system memory resources to allocate to resource groups on each Greenplum Database segment node.
       * Note: The gp_resource_group_memory_limit server configuration parameter is enforced only when resource group-based resource management is active.
       * https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_resource_group_memory_limit
       * </pre>
       *
       * <code>.google.protobuf.FloatValue gp_resource_group_memory_limit = 18;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> 
          getGpResourceGroupMemoryLimitFieldBuilder() {
        if (gpResourceGroupMemoryLimitBuilder_ == null) {
          gpResourceGroupMemoryLimitBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder>(
                  getGpResourceGroupMemoryLimit(),
                  getParentForChildren(),
                  isClean());
          gpResourceGroupMemoryLimit_ = null;
        }
        return gpResourceGroupMemoryLimitBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:yandex.cloud.mdb.greenplum.v1.GreenplumSegmentConfig)
    }

    // @@protoc_insertion_point(class_scope:yandex.cloud.mdb.greenplum.v1.GreenplumSegmentConfig)
    private static final yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig();
    }

    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GreenplumSegmentConfig>
        PARSER = new com.google.protobuf.AbstractParser<GreenplumSegmentConfig>() {
      @java.lang.Override
      public GreenplumSegmentConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GreenplumSegmentConfig(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<GreenplumSegmentConfig> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GreenplumSegmentConfig> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GreenplumMasterConfigSetOrBuilder extends
      // @@protoc_insertion_point(interface_extends:yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfigSet)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Effective settings for a Greenplum master subcluster (a combination of settings defined
     * in [user_config] and [default_config]).
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfig effective_config = 1 [(.yandex.cloud.required) = true];</code>
     */
    boolean hasEffectiveConfig();
    /**
     * <pre>
     * Effective settings for a Greenplum master subcluster (a combination of settings defined
     * in [user_config] and [default_config]).
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfig effective_config = 1 [(.yandex.cloud.required) = true];</code>
     */
    yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig getEffectiveConfig();
    /**
     * <pre>
     * Effective settings for a Greenplum master subcluster (a combination of settings defined
     * in [user_config] and [default_config]).
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfig effective_config = 1 [(.yandex.cloud.required) = true];</code>
     */
    yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfigOrBuilder getEffectiveConfigOrBuilder();

    /**
     * <pre>
     * User-defined settings for a Greenplum master subcluster.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfig user_config = 2;</code>
     */
    boolean hasUserConfig();
    /**
     * <pre>
     * User-defined settings for a Greenplum master subcluster.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfig user_config = 2;</code>
     */
    yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig getUserConfig();
    /**
     * <pre>
     * User-defined settings for a Greenplum master subcluster.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfig user_config = 2;</code>
     */
    yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfigOrBuilder getUserConfigOrBuilder();

    /**
     * <pre>
     * Default configuration for a Greenplum master subcluster.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfig default_config = 3;</code>
     */
    boolean hasDefaultConfig();
    /**
     * <pre>
     * Default configuration for a Greenplum master subcluster.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfig default_config = 3;</code>
     */
    yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig getDefaultConfig();
    /**
     * <pre>
     * Default configuration for a Greenplum master subcluster.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfig default_config = 3;</code>
     */
    yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfigOrBuilder getDefaultConfigOrBuilder();
  }
  /**
   * Protobuf type {@code yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfigSet}
   */
  public  static final class GreenplumMasterConfigSet extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfigSet)
      GreenplumMasterConfigSetOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use GreenplumMasterConfigSet.newBuilder() to construct.
    private GreenplumMasterConfigSet(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GreenplumMasterConfigSet() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private GreenplumMasterConfigSet(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig.Builder subBuilder = null;
              if (effectiveConfig_ != null) {
                subBuilder = effectiveConfig_.toBuilder();
              }
              effectiveConfig_ = input.readMessage(yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(effectiveConfig_);
                effectiveConfig_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig.Builder subBuilder = null;
              if (userConfig_ != null) {
                subBuilder = userConfig_.toBuilder();
              }
              userConfig_ = input.readMessage(yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(userConfig_);
                userConfig_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig.Builder subBuilder = null;
              if (defaultConfig_ != null) {
                subBuilder = defaultConfig_.toBuilder();
              }
              defaultConfig_ = input.readMessage(yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(defaultConfig_);
                defaultConfig_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return yandex.cloud.api.mdb.greenplum.v1.GPCF.internal_static_yandex_cloud_mdb_greenplum_v1_GreenplumMasterConfigSet_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return yandex.cloud.api.mdb.greenplum.v1.GPCF.internal_static_yandex_cloud_mdb_greenplum_v1_GreenplumMasterConfigSet_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfigSet.class, yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfigSet.Builder.class);
    }

    public static final int EFFECTIVE_CONFIG_FIELD_NUMBER = 1;
    private yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig effectiveConfig_;
    /**
     * <pre>
     * Effective settings for a Greenplum master subcluster (a combination of settings defined
     * in [user_config] and [default_config]).
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfig effective_config = 1 [(.yandex.cloud.required) = true];</code>
     */
    public boolean hasEffectiveConfig() {
      return effectiveConfig_ != null;
    }
    /**
     * <pre>
     * Effective settings for a Greenplum master subcluster (a combination of settings defined
     * in [user_config] and [default_config]).
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfig effective_config = 1 [(.yandex.cloud.required) = true];</code>
     */
    public yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig getEffectiveConfig() {
      return effectiveConfig_ == null ? yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig.getDefaultInstance() : effectiveConfig_;
    }
    /**
     * <pre>
     * Effective settings for a Greenplum master subcluster (a combination of settings defined
     * in [user_config] and [default_config]).
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfig effective_config = 1 [(.yandex.cloud.required) = true];</code>
     */
    public yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfigOrBuilder getEffectiveConfigOrBuilder() {
      return getEffectiveConfig();
    }

    public static final int USER_CONFIG_FIELD_NUMBER = 2;
    private yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig userConfig_;
    /**
     * <pre>
     * User-defined settings for a Greenplum master subcluster.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfig user_config = 2;</code>
     */
    public boolean hasUserConfig() {
      return userConfig_ != null;
    }
    /**
     * <pre>
     * User-defined settings for a Greenplum master subcluster.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfig user_config = 2;</code>
     */
    public yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig getUserConfig() {
      return userConfig_ == null ? yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig.getDefaultInstance() : userConfig_;
    }
    /**
     * <pre>
     * User-defined settings for a Greenplum master subcluster.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfig user_config = 2;</code>
     */
    public yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfigOrBuilder getUserConfigOrBuilder() {
      return getUserConfig();
    }

    public static final int DEFAULT_CONFIG_FIELD_NUMBER = 3;
    private yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig defaultConfig_;
    /**
     * <pre>
     * Default configuration for a Greenplum master subcluster.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfig default_config = 3;</code>
     */
    public boolean hasDefaultConfig() {
      return defaultConfig_ != null;
    }
    /**
     * <pre>
     * Default configuration for a Greenplum master subcluster.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfig default_config = 3;</code>
     */
    public yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig getDefaultConfig() {
      return defaultConfig_ == null ? yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig.getDefaultInstance() : defaultConfig_;
    }
    /**
     * <pre>
     * Default configuration for a Greenplum master subcluster.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfig default_config = 3;</code>
     */
    public yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfigOrBuilder getDefaultConfigOrBuilder() {
      return getDefaultConfig();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (effectiveConfig_ != null) {
        output.writeMessage(1, getEffectiveConfig());
      }
      if (userConfig_ != null) {
        output.writeMessage(2, getUserConfig());
      }
      if (defaultConfig_ != null) {
        output.writeMessage(3, getDefaultConfig());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (effectiveConfig_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getEffectiveConfig());
      }
      if (userConfig_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getUserConfig());
      }
      if (defaultConfig_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getDefaultConfig());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfigSet)) {
        return super.equals(obj);
      }
      yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfigSet other = (yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfigSet) obj;

      boolean result = true;
      result = result && (hasEffectiveConfig() == other.hasEffectiveConfig());
      if (hasEffectiveConfig()) {
        result = result && getEffectiveConfig()
            .equals(other.getEffectiveConfig());
      }
      result = result && (hasUserConfig() == other.hasUserConfig());
      if (hasUserConfig()) {
        result = result && getUserConfig()
            .equals(other.getUserConfig());
      }
      result = result && (hasDefaultConfig() == other.hasDefaultConfig());
      if (hasDefaultConfig()) {
        result = result && getDefaultConfig()
            .equals(other.getDefaultConfig());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasEffectiveConfig()) {
        hash = (37 * hash) + EFFECTIVE_CONFIG_FIELD_NUMBER;
        hash = (53 * hash) + getEffectiveConfig().hashCode();
      }
      if (hasUserConfig()) {
        hash = (37 * hash) + USER_CONFIG_FIELD_NUMBER;
        hash = (53 * hash) + getUserConfig().hashCode();
      }
      if (hasDefaultConfig()) {
        hash = (37 * hash) + DEFAULT_CONFIG_FIELD_NUMBER;
        hash = (53 * hash) + getDefaultConfig().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfigSet parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfigSet parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfigSet parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfigSet parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfigSet parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfigSet parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfigSet parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfigSet parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfigSet parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfigSet parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfigSet parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfigSet parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfigSet prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfigSet}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfigSet)
        yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfigSetOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return yandex.cloud.api.mdb.greenplum.v1.GPCF.internal_static_yandex_cloud_mdb_greenplum_v1_GreenplumMasterConfigSet_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return yandex.cloud.api.mdb.greenplum.v1.GPCF.internal_static_yandex_cloud_mdb_greenplum_v1_GreenplumMasterConfigSet_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfigSet.class, yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfigSet.Builder.class);
      }

      // Construct using yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfigSet.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (effectiveConfigBuilder_ == null) {
          effectiveConfig_ = null;
        } else {
          effectiveConfig_ = null;
          effectiveConfigBuilder_ = null;
        }
        if (userConfigBuilder_ == null) {
          userConfig_ = null;
        } else {
          userConfig_ = null;
          userConfigBuilder_ = null;
        }
        if (defaultConfigBuilder_ == null) {
          defaultConfig_ = null;
        } else {
          defaultConfig_ = null;
          defaultConfigBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return yandex.cloud.api.mdb.greenplum.v1.GPCF.internal_static_yandex_cloud_mdb_greenplum_v1_GreenplumMasterConfigSet_descriptor;
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfigSet getDefaultInstanceForType() {
        return yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfigSet.getDefaultInstance();
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfigSet build() {
        yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfigSet result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfigSet buildPartial() {
        yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfigSet result = new yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfigSet(this);
        if (effectiveConfigBuilder_ == null) {
          result.effectiveConfig_ = effectiveConfig_;
        } else {
          result.effectiveConfig_ = effectiveConfigBuilder_.build();
        }
        if (userConfigBuilder_ == null) {
          result.userConfig_ = userConfig_;
        } else {
          result.userConfig_ = userConfigBuilder_.build();
        }
        if (defaultConfigBuilder_ == null) {
          result.defaultConfig_ = defaultConfig_;
        } else {
          result.defaultConfig_ = defaultConfigBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfigSet) {
          return mergeFrom((yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfigSet)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfigSet other) {
        if (other == yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfigSet.getDefaultInstance()) return this;
        if (other.hasEffectiveConfig()) {
          mergeEffectiveConfig(other.getEffectiveConfig());
        }
        if (other.hasUserConfig()) {
          mergeUserConfig(other.getUserConfig());
        }
        if (other.hasDefaultConfig()) {
          mergeDefaultConfig(other.getDefaultConfig());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfigSet parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfigSet) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig effectiveConfig_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig, yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig.Builder, yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfigOrBuilder> effectiveConfigBuilder_;
      /**
       * <pre>
       * Effective settings for a Greenplum master subcluster (a combination of settings defined
       * in [user_config] and [default_config]).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfig effective_config = 1 [(.yandex.cloud.required) = true];</code>
       */
      public boolean hasEffectiveConfig() {
        return effectiveConfigBuilder_ != null || effectiveConfig_ != null;
      }
      /**
       * <pre>
       * Effective settings for a Greenplum master subcluster (a combination of settings defined
       * in [user_config] and [default_config]).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfig effective_config = 1 [(.yandex.cloud.required) = true];</code>
       */
      public yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig getEffectiveConfig() {
        if (effectiveConfigBuilder_ == null) {
          return effectiveConfig_ == null ? yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig.getDefaultInstance() : effectiveConfig_;
        } else {
          return effectiveConfigBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Effective settings for a Greenplum master subcluster (a combination of settings defined
       * in [user_config] and [default_config]).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfig effective_config = 1 [(.yandex.cloud.required) = true];</code>
       */
      public Builder setEffectiveConfig(yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig value) {
        if (effectiveConfigBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          effectiveConfig_ = value;
          onChanged();
        } else {
          effectiveConfigBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Effective settings for a Greenplum master subcluster (a combination of settings defined
       * in [user_config] and [default_config]).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfig effective_config = 1 [(.yandex.cloud.required) = true];</code>
       */
      public Builder setEffectiveConfig(
          yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig.Builder builderForValue) {
        if (effectiveConfigBuilder_ == null) {
          effectiveConfig_ = builderForValue.build();
          onChanged();
        } else {
          effectiveConfigBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Effective settings for a Greenplum master subcluster (a combination of settings defined
       * in [user_config] and [default_config]).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfig effective_config = 1 [(.yandex.cloud.required) = true];</code>
       */
      public Builder mergeEffectiveConfig(yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig value) {
        if (effectiveConfigBuilder_ == null) {
          if (effectiveConfig_ != null) {
            effectiveConfig_ =
              yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig.newBuilder(effectiveConfig_).mergeFrom(value).buildPartial();
          } else {
            effectiveConfig_ = value;
          }
          onChanged();
        } else {
          effectiveConfigBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Effective settings for a Greenplum master subcluster (a combination of settings defined
       * in [user_config] and [default_config]).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfig effective_config = 1 [(.yandex.cloud.required) = true];</code>
       */
      public Builder clearEffectiveConfig() {
        if (effectiveConfigBuilder_ == null) {
          effectiveConfig_ = null;
          onChanged();
        } else {
          effectiveConfig_ = null;
          effectiveConfigBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Effective settings for a Greenplum master subcluster (a combination of settings defined
       * in [user_config] and [default_config]).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfig effective_config = 1 [(.yandex.cloud.required) = true];</code>
       */
      public yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig.Builder getEffectiveConfigBuilder() {
        
        onChanged();
        return getEffectiveConfigFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Effective settings for a Greenplum master subcluster (a combination of settings defined
       * in [user_config] and [default_config]).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfig effective_config = 1 [(.yandex.cloud.required) = true];</code>
       */
      public yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfigOrBuilder getEffectiveConfigOrBuilder() {
        if (effectiveConfigBuilder_ != null) {
          return effectiveConfigBuilder_.getMessageOrBuilder();
        } else {
          return effectiveConfig_ == null ?
              yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig.getDefaultInstance() : effectiveConfig_;
        }
      }
      /**
       * <pre>
       * Effective settings for a Greenplum master subcluster (a combination of settings defined
       * in [user_config] and [default_config]).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfig effective_config = 1 [(.yandex.cloud.required) = true];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig, yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig.Builder, yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfigOrBuilder> 
          getEffectiveConfigFieldBuilder() {
        if (effectiveConfigBuilder_ == null) {
          effectiveConfigBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig, yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig.Builder, yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfigOrBuilder>(
                  getEffectiveConfig(),
                  getParentForChildren(),
                  isClean());
          effectiveConfig_ = null;
        }
        return effectiveConfigBuilder_;
      }

      private yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig userConfig_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig, yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig.Builder, yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfigOrBuilder> userConfigBuilder_;
      /**
       * <pre>
       * User-defined settings for a Greenplum master subcluster.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfig user_config = 2;</code>
       */
      public boolean hasUserConfig() {
        return userConfigBuilder_ != null || userConfig_ != null;
      }
      /**
       * <pre>
       * User-defined settings for a Greenplum master subcluster.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfig user_config = 2;</code>
       */
      public yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig getUserConfig() {
        if (userConfigBuilder_ == null) {
          return userConfig_ == null ? yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig.getDefaultInstance() : userConfig_;
        } else {
          return userConfigBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * User-defined settings for a Greenplum master subcluster.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfig user_config = 2;</code>
       */
      public Builder setUserConfig(yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig value) {
        if (userConfigBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          userConfig_ = value;
          onChanged();
        } else {
          userConfigBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * User-defined settings for a Greenplum master subcluster.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfig user_config = 2;</code>
       */
      public Builder setUserConfig(
          yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig.Builder builderForValue) {
        if (userConfigBuilder_ == null) {
          userConfig_ = builderForValue.build();
          onChanged();
        } else {
          userConfigBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * User-defined settings for a Greenplum master subcluster.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfig user_config = 2;</code>
       */
      public Builder mergeUserConfig(yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig value) {
        if (userConfigBuilder_ == null) {
          if (userConfig_ != null) {
            userConfig_ =
              yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig.newBuilder(userConfig_).mergeFrom(value).buildPartial();
          } else {
            userConfig_ = value;
          }
          onChanged();
        } else {
          userConfigBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * User-defined settings for a Greenplum master subcluster.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfig user_config = 2;</code>
       */
      public Builder clearUserConfig() {
        if (userConfigBuilder_ == null) {
          userConfig_ = null;
          onChanged();
        } else {
          userConfig_ = null;
          userConfigBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * User-defined settings for a Greenplum master subcluster.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfig user_config = 2;</code>
       */
      public yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig.Builder getUserConfigBuilder() {
        
        onChanged();
        return getUserConfigFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * User-defined settings for a Greenplum master subcluster.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfig user_config = 2;</code>
       */
      public yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfigOrBuilder getUserConfigOrBuilder() {
        if (userConfigBuilder_ != null) {
          return userConfigBuilder_.getMessageOrBuilder();
        } else {
          return userConfig_ == null ?
              yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig.getDefaultInstance() : userConfig_;
        }
      }
      /**
       * <pre>
       * User-defined settings for a Greenplum master subcluster.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfig user_config = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig, yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig.Builder, yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfigOrBuilder> 
          getUserConfigFieldBuilder() {
        if (userConfigBuilder_ == null) {
          userConfigBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig, yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig.Builder, yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfigOrBuilder>(
                  getUserConfig(),
                  getParentForChildren(),
                  isClean());
          userConfig_ = null;
        }
        return userConfigBuilder_;
      }

      private yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig defaultConfig_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig, yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig.Builder, yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfigOrBuilder> defaultConfigBuilder_;
      /**
       * <pre>
       * Default configuration for a Greenplum master subcluster.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfig default_config = 3;</code>
       */
      public boolean hasDefaultConfig() {
        return defaultConfigBuilder_ != null || defaultConfig_ != null;
      }
      /**
       * <pre>
       * Default configuration for a Greenplum master subcluster.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfig default_config = 3;</code>
       */
      public yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig getDefaultConfig() {
        if (defaultConfigBuilder_ == null) {
          return defaultConfig_ == null ? yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig.getDefaultInstance() : defaultConfig_;
        } else {
          return defaultConfigBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Default configuration for a Greenplum master subcluster.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfig default_config = 3;</code>
       */
      public Builder setDefaultConfig(yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig value) {
        if (defaultConfigBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          defaultConfig_ = value;
          onChanged();
        } else {
          defaultConfigBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Default configuration for a Greenplum master subcluster.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfig default_config = 3;</code>
       */
      public Builder setDefaultConfig(
          yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig.Builder builderForValue) {
        if (defaultConfigBuilder_ == null) {
          defaultConfig_ = builderForValue.build();
          onChanged();
        } else {
          defaultConfigBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Default configuration for a Greenplum master subcluster.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfig default_config = 3;</code>
       */
      public Builder mergeDefaultConfig(yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig value) {
        if (defaultConfigBuilder_ == null) {
          if (defaultConfig_ != null) {
            defaultConfig_ =
              yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig.newBuilder(defaultConfig_).mergeFrom(value).buildPartial();
          } else {
            defaultConfig_ = value;
          }
          onChanged();
        } else {
          defaultConfigBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Default configuration for a Greenplum master subcluster.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfig default_config = 3;</code>
       */
      public Builder clearDefaultConfig() {
        if (defaultConfigBuilder_ == null) {
          defaultConfig_ = null;
          onChanged();
        } else {
          defaultConfig_ = null;
          defaultConfigBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Default configuration for a Greenplum master subcluster.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfig default_config = 3;</code>
       */
      public yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig.Builder getDefaultConfigBuilder() {
        
        onChanged();
        return getDefaultConfigFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Default configuration for a Greenplum master subcluster.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfig default_config = 3;</code>
       */
      public yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfigOrBuilder getDefaultConfigOrBuilder() {
        if (defaultConfigBuilder_ != null) {
          return defaultConfigBuilder_.getMessageOrBuilder();
        } else {
          return defaultConfig_ == null ?
              yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig.getDefaultInstance() : defaultConfig_;
        }
      }
      /**
       * <pre>
       * Default configuration for a Greenplum master subcluster.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfig default_config = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig, yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig.Builder, yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfigOrBuilder> 
          getDefaultConfigFieldBuilder() {
        if (defaultConfigBuilder_ == null) {
          defaultConfigBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig, yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfig.Builder, yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfigOrBuilder>(
                  getDefaultConfig(),
                  getParentForChildren(),
                  isClean());
          defaultConfig_ = null;
        }
        return defaultConfigBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfigSet)
    }

    // @@protoc_insertion_point(class_scope:yandex.cloud.mdb.greenplum.v1.GreenplumMasterConfigSet)
    private static final yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfigSet DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfigSet();
    }

    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfigSet getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GreenplumMasterConfigSet>
        PARSER = new com.google.protobuf.AbstractParser<GreenplumMasterConfigSet>() {
      @java.lang.Override
      public GreenplumMasterConfigSet parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GreenplumMasterConfigSet(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<GreenplumMasterConfigSet> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GreenplumMasterConfigSet> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumMasterConfigSet getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GreenplumSegmentConfigSetOrBuilder extends
      // @@protoc_insertion_point(interface_extends:yandex.cloud.mdb.greenplum.v1.GreenplumSegmentConfigSet)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Effective settings for a Greenplum segment subcluster (a combination of settings defined
     * in [user_config] and [default_config]).
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumSegmentConfig effective_config = 1 [(.yandex.cloud.required) = true];</code>
     */
    boolean hasEffectiveConfig();
    /**
     * <pre>
     * Effective settings for a Greenplum segment subcluster (a combination of settings defined
     * in [user_config] and [default_config]).
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumSegmentConfig effective_config = 1 [(.yandex.cloud.required) = true];</code>
     */
    yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig getEffectiveConfig();
    /**
     * <pre>
     * Effective settings for a Greenplum segment subcluster (a combination of settings defined
     * in [user_config] and [default_config]).
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumSegmentConfig effective_config = 1 [(.yandex.cloud.required) = true];</code>
     */
    yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfigOrBuilder getEffectiveConfigOrBuilder();

    /**
     * <pre>
     * User-defined settings for a Greenplum segment subcluster.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumSegmentConfig user_config = 2;</code>
     */
    boolean hasUserConfig();
    /**
     * <pre>
     * User-defined settings for a Greenplum segment subcluster.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumSegmentConfig user_config = 2;</code>
     */
    yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig getUserConfig();
    /**
     * <pre>
     * User-defined settings for a Greenplum segment subcluster.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumSegmentConfig user_config = 2;</code>
     */
    yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfigOrBuilder getUserConfigOrBuilder();

    /**
     * <pre>
     * Default configuration for a Greenplum segment subcluster.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumSegmentConfig default_config = 3;</code>
     */
    boolean hasDefaultConfig();
    /**
     * <pre>
     * Default configuration for a Greenplum segment subcluster.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumSegmentConfig default_config = 3;</code>
     */
    yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig getDefaultConfig();
    /**
     * <pre>
     * Default configuration for a Greenplum segment subcluster.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumSegmentConfig default_config = 3;</code>
     */
    yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfigOrBuilder getDefaultConfigOrBuilder();
  }
  /**
   * Protobuf type {@code yandex.cloud.mdb.greenplum.v1.GreenplumSegmentConfigSet}
   */
  public  static final class GreenplumSegmentConfigSet extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:yandex.cloud.mdb.greenplum.v1.GreenplumSegmentConfigSet)
      GreenplumSegmentConfigSetOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use GreenplumSegmentConfigSet.newBuilder() to construct.
    private GreenplumSegmentConfigSet(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GreenplumSegmentConfigSet() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private GreenplumSegmentConfigSet(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig.Builder subBuilder = null;
              if (effectiveConfig_ != null) {
                subBuilder = effectiveConfig_.toBuilder();
              }
              effectiveConfig_ = input.readMessage(yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(effectiveConfig_);
                effectiveConfig_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig.Builder subBuilder = null;
              if (userConfig_ != null) {
                subBuilder = userConfig_.toBuilder();
              }
              userConfig_ = input.readMessage(yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(userConfig_);
                userConfig_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig.Builder subBuilder = null;
              if (defaultConfig_ != null) {
                subBuilder = defaultConfig_.toBuilder();
              }
              defaultConfig_ = input.readMessage(yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(defaultConfig_);
                defaultConfig_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return yandex.cloud.api.mdb.greenplum.v1.GPCF.internal_static_yandex_cloud_mdb_greenplum_v1_GreenplumSegmentConfigSet_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return yandex.cloud.api.mdb.greenplum.v1.GPCF.internal_static_yandex_cloud_mdb_greenplum_v1_GreenplumSegmentConfigSet_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfigSet.class, yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfigSet.Builder.class);
    }

    public static final int EFFECTIVE_CONFIG_FIELD_NUMBER = 1;
    private yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig effectiveConfig_;
    /**
     * <pre>
     * Effective settings for a Greenplum segment subcluster (a combination of settings defined
     * in [user_config] and [default_config]).
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumSegmentConfig effective_config = 1 [(.yandex.cloud.required) = true];</code>
     */
    public boolean hasEffectiveConfig() {
      return effectiveConfig_ != null;
    }
    /**
     * <pre>
     * Effective settings for a Greenplum segment subcluster (a combination of settings defined
     * in [user_config] and [default_config]).
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumSegmentConfig effective_config = 1 [(.yandex.cloud.required) = true];</code>
     */
    public yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig getEffectiveConfig() {
      return effectiveConfig_ == null ? yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig.getDefaultInstance() : effectiveConfig_;
    }
    /**
     * <pre>
     * Effective settings for a Greenplum segment subcluster (a combination of settings defined
     * in [user_config] and [default_config]).
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumSegmentConfig effective_config = 1 [(.yandex.cloud.required) = true];</code>
     */
    public yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfigOrBuilder getEffectiveConfigOrBuilder() {
      return getEffectiveConfig();
    }

    public static final int USER_CONFIG_FIELD_NUMBER = 2;
    private yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig userConfig_;
    /**
     * <pre>
     * User-defined settings for a Greenplum segment subcluster.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumSegmentConfig user_config = 2;</code>
     */
    public boolean hasUserConfig() {
      return userConfig_ != null;
    }
    /**
     * <pre>
     * User-defined settings for a Greenplum segment subcluster.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumSegmentConfig user_config = 2;</code>
     */
    public yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig getUserConfig() {
      return userConfig_ == null ? yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig.getDefaultInstance() : userConfig_;
    }
    /**
     * <pre>
     * User-defined settings for a Greenplum segment subcluster.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumSegmentConfig user_config = 2;</code>
     */
    public yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfigOrBuilder getUserConfigOrBuilder() {
      return getUserConfig();
    }

    public static final int DEFAULT_CONFIG_FIELD_NUMBER = 3;
    private yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig defaultConfig_;
    /**
     * <pre>
     * Default configuration for a Greenplum segment subcluster.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumSegmentConfig default_config = 3;</code>
     */
    public boolean hasDefaultConfig() {
      return defaultConfig_ != null;
    }
    /**
     * <pre>
     * Default configuration for a Greenplum segment subcluster.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumSegmentConfig default_config = 3;</code>
     */
    public yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig getDefaultConfig() {
      return defaultConfig_ == null ? yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig.getDefaultInstance() : defaultConfig_;
    }
    /**
     * <pre>
     * Default configuration for a Greenplum segment subcluster.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumSegmentConfig default_config = 3;</code>
     */
    public yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfigOrBuilder getDefaultConfigOrBuilder() {
      return getDefaultConfig();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (effectiveConfig_ != null) {
        output.writeMessage(1, getEffectiveConfig());
      }
      if (userConfig_ != null) {
        output.writeMessage(2, getUserConfig());
      }
      if (defaultConfig_ != null) {
        output.writeMessage(3, getDefaultConfig());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (effectiveConfig_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getEffectiveConfig());
      }
      if (userConfig_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getUserConfig());
      }
      if (defaultConfig_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getDefaultConfig());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfigSet)) {
        return super.equals(obj);
      }
      yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfigSet other = (yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfigSet) obj;

      boolean result = true;
      result = result && (hasEffectiveConfig() == other.hasEffectiveConfig());
      if (hasEffectiveConfig()) {
        result = result && getEffectiveConfig()
            .equals(other.getEffectiveConfig());
      }
      result = result && (hasUserConfig() == other.hasUserConfig());
      if (hasUserConfig()) {
        result = result && getUserConfig()
            .equals(other.getUserConfig());
      }
      result = result && (hasDefaultConfig() == other.hasDefaultConfig());
      if (hasDefaultConfig()) {
        result = result && getDefaultConfig()
            .equals(other.getDefaultConfig());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasEffectiveConfig()) {
        hash = (37 * hash) + EFFECTIVE_CONFIG_FIELD_NUMBER;
        hash = (53 * hash) + getEffectiveConfig().hashCode();
      }
      if (hasUserConfig()) {
        hash = (37 * hash) + USER_CONFIG_FIELD_NUMBER;
        hash = (53 * hash) + getUserConfig().hashCode();
      }
      if (hasDefaultConfig()) {
        hash = (37 * hash) + DEFAULT_CONFIG_FIELD_NUMBER;
        hash = (53 * hash) + getDefaultConfig().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfigSet parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfigSet parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfigSet parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfigSet parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfigSet parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfigSet parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfigSet parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfigSet parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfigSet parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfigSet parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfigSet parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfigSet parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfigSet prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code yandex.cloud.mdb.greenplum.v1.GreenplumSegmentConfigSet}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:yandex.cloud.mdb.greenplum.v1.GreenplumSegmentConfigSet)
        yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfigSetOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return yandex.cloud.api.mdb.greenplum.v1.GPCF.internal_static_yandex_cloud_mdb_greenplum_v1_GreenplumSegmentConfigSet_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return yandex.cloud.api.mdb.greenplum.v1.GPCF.internal_static_yandex_cloud_mdb_greenplum_v1_GreenplumSegmentConfigSet_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfigSet.class, yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfigSet.Builder.class);
      }

      // Construct using yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfigSet.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (effectiveConfigBuilder_ == null) {
          effectiveConfig_ = null;
        } else {
          effectiveConfig_ = null;
          effectiveConfigBuilder_ = null;
        }
        if (userConfigBuilder_ == null) {
          userConfig_ = null;
        } else {
          userConfig_ = null;
          userConfigBuilder_ = null;
        }
        if (defaultConfigBuilder_ == null) {
          defaultConfig_ = null;
        } else {
          defaultConfig_ = null;
          defaultConfigBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return yandex.cloud.api.mdb.greenplum.v1.GPCF.internal_static_yandex_cloud_mdb_greenplum_v1_GreenplumSegmentConfigSet_descriptor;
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfigSet getDefaultInstanceForType() {
        return yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfigSet.getDefaultInstance();
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfigSet build() {
        yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfigSet result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfigSet buildPartial() {
        yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfigSet result = new yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfigSet(this);
        if (effectiveConfigBuilder_ == null) {
          result.effectiveConfig_ = effectiveConfig_;
        } else {
          result.effectiveConfig_ = effectiveConfigBuilder_.build();
        }
        if (userConfigBuilder_ == null) {
          result.userConfig_ = userConfig_;
        } else {
          result.userConfig_ = userConfigBuilder_.build();
        }
        if (defaultConfigBuilder_ == null) {
          result.defaultConfig_ = defaultConfig_;
        } else {
          result.defaultConfig_ = defaultConfigBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfigSet) {
          return mergeFrom((yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfigSet)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfigSet other) {
        if (other == yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfigSet.getDefaultInstance()) return this;
        if (other.hasEffectiveConfig()) {
          mergeEffectiveConfig(other.getEffectiveConfig());
        }
        if (other.hasUserConfig()) {
          mergeUserConfig(other.getUserConfig());
        }
        if (other.hasDefaultConfig()) {
          mergeDefaultConfig(other.getDefaultConfig());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfigSet parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfigSet) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig effectiveConfig_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig, yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig.Builder, yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfigOrBuilder> effectiveConfigBuilder_;
      /**
       * <pre>
       * Effective settings for a Greenplum segment subcluster (a combination of settings defined
       * in [user_config] and [default_config]).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumSegmentConfig effective_config = 1 [(.yandex.cloud.required) = true];</code>
       */
      public boolean hasEffectiveConfig() {
        return effectiveConfigBuilder_ != null || effectiveConfig_ != null;
      }
      /**
       * <pre>
       * Effective settings for a Greenplum segment subcluster (a combination of settings defined
       * in [user_config] and [default_config]).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumSegmentConfig effective_config = 1 [(.yandex.cloud.required) = true];</code>
       */
      public yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig getEffectiveConfig() {
        if (effectiveConfigBuilder_ == null) {
          return effectiveConfig_ == null ? yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig.getDefaultInstance() : effectiveConfig_;
        } else {
          return effectiveConfigBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Effective settings for a Greenplum segment subcluster (a combination of settings defined
       * in [user_config] and [default_config]).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumSegmentConfig effective_config = 1 [(.yandex.cloud.required) = true];</code>
       */
      public Builder setEffectiveConfig(yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig value) {
        if (effectiveConfigBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          effectiveConfig_ = value;
          onChanged();
        } else {
          effectiveConfigBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Effective settings for a Greenplum segment subcluster (a combination of settings defined
       * in [user_config] and [default_config]).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumSegmentConfig effective_config = 1 [(.yandex.cloud.required) = true];</code>
       */
      public Builder setEffectiveConfig(
          yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig.Builder builderForValue) {
        if (effectiveConfigBuilder_ == null) {
          effectiveConfig_ = builderForValue.build();
          onChanged();
        } else {
          effectiveConfigBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Effective settings for a Greenplum segment subcluster (a combination of settings defined
       * in [user_config] and [default_config]).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumSegmentConfig effective_config = 1 [(.yandex.cloud.required) = true];</code>
       */
      public Builder mergeEffectiveConfig(yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig value) {
        if (effectiveConfigBuilder_ == null) {
          if (effectiveConfig_ != null) {
            effectiveConfig_ =
              yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig.newBuilder(effectiveConfig_).mergeFrom(value).buildPartial();
          } else {
            effectiveConfig_ = value;
          }
          onChanged();
        } else {
          effectiveConfigBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Effective settings for a Greenplum segment subcluster (a combination of settings defined
       * in [user_config] and [default_config]).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumSegmentConfig effective_config = 1 [(.yandex.cloud.required) = true];</code>
       */
      public Builder clearEffectiveConfig() {
        if (effectiveConfigBuilder_ == null) {
          effectiveConfig_ = null;
          onChanged();
        } else {
          effectiveConfig_ = null;
          effectiveConfigBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Effective settings for a Greenplum segment subcluster (a combination of settings defined
       * in [user_config] and [default_config]).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumSegmentConfig effective_config = 1 [(.yandex.cloud.required) = true];</code>
       */
      public yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig.Builder getEffectiveConfigBuilder() {
        
        onChanged();
        return getEffectiveConfigFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Effective settings for a Greenplum segment subcluster (a combination of settings defined
       * in [user_config] and [default_config]).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumSegmentConfig effective_config = 1 [(.yandex.cloud.required) = true];</code>
       */
      public yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfigOrBuilder getEffectiveConfigOrBuilder() {
        if (effectiveConfigBuilder_ != null) {
          return effectiveConfigBuilder_.getMessageOrBuilder();
        } else {
          return effectiveConfig_ == null ?
              yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig.getDefaultInstance() : effectiveConfig_;
        }
      }
      /**
       * <pre>
       * Effective settings for a Greenplum segment subcluster (a combination of settings defined
       * in [user_config] and [default_config]).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumSegmentConfig effective_config = 1 [(.yandex.cloud.required) = true];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig, yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig.Builder, yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfigOrBuilder> 
          getEffectiveConfigFieldBuilder() {
        if (effectiveConfigBuilder_ == null) {
          effectiveConfigBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig, yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig.Builder, yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfigOrBuilder>(
                  getEffectiveConfig(),
                  getParentForChildren(),
                  isClean());
          effectiveConfig_ = null;
        }
        return effectiveConfigBuilder_;
      }

      private yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig userConfig_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig, yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig.Builder, yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfigOrBuilder> userConfigBuilder_;
      /**
       * <pre>
       * User-defined settings for a Greenplum segment subcluster.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumSegmentConfig user_config = 2;</code>
       */
      public boolean hasUserConfig() {
        return userConfigBuilder_ != null || userConfig_ != null;
      }
      /**
       * <pre>
       * User-defined settings for a Greenplum segment subcluster.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumSegmentConfig user_config = 2;</code>
       */
      public yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig getUserConfig() {
        if (userConfigBuilder_ == null) {
          return userConfig_ == null ? yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig.getDefaultInstance() : userConfig_;
        } else {
          return userConfigBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * User-defined settings for a Greenplum segment subcluster.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumSegmentConfig user_config = 2;</code>
       */
      public Builder setUserConfig(yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig value) {
        if (userConfigBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          userConfig_ = value;
          onChanged();
        } else {
          userConfigBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * User-defined settings for a Greenplum segment subcluster.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumSegmentConfig user_config = 2;</code>
       */
      public Builder setUserConfig(
          yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig.Builder builderForValue) {
        if (userConfigBuilder_ == null) {
          userConfig_ = builderForValue.build();
          onChanged();
        } else {
          userConfigBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * User-defined settings for a Greenplum segment subcluster.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumSegmentConfig user_config = 2;</code>
       */
      public Builder mergeUserConfig(yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig value) {
        if (userConfigBuilder_ == null) {
          if (userConfig_ != null) {
            userConfig_ =
              yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig.newBuilder(userConfig_).mergeFrom(value).buildPartial();
          } else {
            userConfig_ = value;
          }
          onChanged();
        } else {
          userConfigBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * User-defined settings for a Greenplum segment subcluster.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumSegmentConfig user_config = 2;</code>
       */
      public Builder clearUserConfig() {
        if (userConfigBuilder_ == null) {
          userConfig_ = null;
          onChanged();
        } else {
          userConfig_ = null;
          userConfigBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * User-defined settings for a Greenplum segment subcluster.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumSegmentConfig user_config = 2;</code>
       */
      public yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig.Builder getUserConfigBuilder() {
        
        onChanged();
        return getUserConfigFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * User-defined settings for a Greenplum segment subcluster.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumSegmentConfig user_config = 2;</code>
       */
      public yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfigOrBuilder getUserConfigOrBuilder() {
        if (userConfigBuilder_ != null) {
          return userConfigBuilder_.getMessageOrBuilder();
        } else {
          return userConfig_ == null ?
              yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig.getDefaultInstance() : userConfig_;
        }
      }
      /**
       * <pre>
       * User-defined settings for a Greenplum segment subcluster.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumSegmentConfig user_config = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig, yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig.Builder, yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfigOrBuilder> 
          getUserConfigFieldBuilder() {
        if (userConfigBuilder_ == null) {
          userConfigBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig, yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig.Builder, yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfigOrBuilder>(
                  getUserConfig(),
                  getParentForChildren(),
                  isClean());
          userConfig_ = null;
        }
        return userConfigBuilder_;
      }

      private yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig defaultConfig_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig, yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig.Builder, yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfigOrBuilder> defaultConfigBuilder_;
      /**
       * <pre>
       * Default configuration for a Greenplum segment subcluster.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumSegmentConfig default_config = 3;</code>
       */
      public boolean hasDefaultConfig() {
        return defaultConfigBuilder_ != null || defaultConfig_ != null;
      }
      /**
       * <pre>
       * Default configuration for a Greenplum segment subcluster.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumSegmentConfig default_config = 3;</code>
       */
      public yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig getDefaultConfig() {
        if (defaultConfigBuilder_ == null) {
          return defaultConfig_ == null ? yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig.getDefaultInstance() : defaultConfig_;
        } else {
          return defaultConfigBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Default configuration for a Greenplum segment subcluster.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumSegmentConfig default_config = 3;</code>
       */
      public Builder setDefaultConfig(yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig value) {
        if (defaultConfigBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          defaultConfig_ = value;
          onChanged();
        } else {
          defaultConfigBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Default configuration for a Greenplum segment subcluster.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumSegmentConfig default_config = 3;</code>
       */
      public Builder setDefaultConfig(
          yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig.Builder builderForValue) {
        if (defaultConfigBuilder_ == null) {
          defaultConfig_ = builderForValue.build();
          onChanged();
        } else {
          defaultConfigBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Default configuration for a Greenplum segment subcluster.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumSegmentConfig default_config = 3;</code>
       */
      public Builder mergeDefaultConfig(yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig value) {
        if (defaultConfigBuilder_ == null) {
          if (defaultConfig_ != null) {
            defaultConfig_ =
              yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig.newBuilder(defaultConfig_).mergeFrom(value).buildPartial();
          } else {
            defaultConfig_ = value;
          }
          onChanged();
        } else {
          defaultConfigBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Default configuration for a Greenplum segment subcluster.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumSegmentConfig default_config = 3;</code>
       */
      public Builder clearDefaultConfig() {
        if (defaultConfigBuilder_ == null) {
          defaultConfig_ = null;
          onChanged();
        } else {
          defaultConfig_ = null;
          defaultConfigBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Default configuration for a Greenplum segment subcluster.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumSegmentConfig default_config = 3;</code>
       */
      public yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig.Builder getDefaultConfigBuilder() {
        
        onChanged();
        return getDefaultConfigFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Default configuration for a Greenplum segment subcluster.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumSegmentConfig default_config = 3;</code>
       */
      public yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfigOrBuilder getDefaultConfigOrBuilder() {
        if (defaultConfigBuilder_ != null) {
          return defaultConfigBuilder_.getMessageOrBuilder();
        } else {
          return defaultConfig_ == null ?
              yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig.getDefaultInstance() : defaultConfig_;
        }
      }
      /**
       * <pre>
       * Default configuration for a Greenplum segment subcluster.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.greenplum.v1.GreenplumSegmentConfig default_config = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig, yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig.Builder, yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfigOrBuilder> 
          getDefaultConfigFieldBuilder() {
        if (defaultConfigBuilder_ == null) {
          defaultConfigBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig, yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfig.Builder, yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfigOrBuilder>(
                  getDefaultConfig(),
                  getParentForChildren(),
                  isClean());
          defaultConfig_ = null;
        }
        return defaultConfigBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:yandex.cloud.mdb.greenplum.v1.GreenplumSegmentConfigSet)
    }

    // @@protoc_insertion_point(class_scope:yandex.cloud.mdb.greenplum.v1.GreenplumSegmentConfigSet)
    private static final yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfigSet DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfigSet();
    }

    public static yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfigSet getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GreenplumSegmentConfigSet>
        PARSER = new com.google.protobuf.AbstractParser<GreenplumSegmentConfigSet>() {
      @java.lang.Override
      public GreenplumSegmentConfigSet parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GreenplumSegmentConfigSet(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<GreenplumSegmentConfigSet> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GreenplumSegmentConfigSet> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public yandex.cloud.api.mdb.greenplum.v1.GPCF.GreenplumSegmentConfigSet getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_yandex_cloud_mdb_greenplum_v1_Resources_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_yandex_cloud_mdb_greenplum_v1_Resources_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_yandex_cloud_mdb_greenplum_v1_ConnectionPoolerConfig_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_yandex_cloud_mdb_greenplum_v1_ConnectionPoolerConfig_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_yandex_cloud_mdb_greenplum_v1_MasterSubclusterConfig_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_yandex_cloud_mdb_greenplum_v1_MasterSubclusterConfig_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_yandex_cloud_mdb_greenplum_v1_SegmentSubclusterConfig_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_yandex_cloud_mdb_greenplum_v1_SegmentSubclusterConfig_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_yandex_cloud_mdb_greenplum_v1_GreenplumMasterConfig_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_yandex_cloud_mdb_greenplum_v1_GreenplumMasterConfig_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_yandex_cloud_mdb_greenplum_v1_GreenplumSegmentConfig_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_yandex_cloud_mdb_greenplum_v1_GreenplumSegmentConfig_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_yandex_cloud_mdb_greenplum_v1_GreenplumMasterConfigSet_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_yandex_cloud_mdb_greenplum_v1_GreenplumMasterConfigSet_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_yandex_cloud_mdb_greenplum_v1_GreenplumSegmentConfigSet_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_yandex_cloud_mdb_greenplum_v1_GreenplumSegmentConfigSet_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n*yandex/cloud/mdb/greenplum/v1/config.p" +
      "roto\022\035yandex.cloud.mdb.greenplum.v1\032\036goo" +
      "gle/protobuf/wrappers.proto\032\035yandex/clou" +
      "d/validation.proto\"P\n\tResources\022\032\n\022resou" +
      "rce_preset_id\030\001 \001(\t\022\021\n\tdisk_size\030\002 \001(\003\022\024" +
      "\n\014disk_type_id\030\003 \001(\t\"\220\002\n\026ConnectionPoole" +
      "rConfig\022L\n\004mode\030\001 \001(\0162>.yandex.cloud.mdb" +
      ".greenplum.v1.ConnectionPoolerConfig.Poo" +
      "lMode\022)\n\004size\030\002 \001(\0132\033.google.protobuf.In" +
      "t64Value\0228\n\023client_idle_timeout\030\003 \001(\0132\033." +
      "google.protobuf.Int64Value\"C\n\010PoolMode\022\031" +
      "\n\025POOL_MODE_UNSPECIFIED\020\000\022\013\n\007SESSION\020\001\022\017" +
      "\n\013TRANSACTION\020\002\"\236\001\n\026MasterSubclusterConf" +
      "ig\022;\n\tresources\030\001 \001(\0132(.yandex.cloud.mdb" +
      ".greenplum.v1.Resources\022G\n\006config\030\002 \001(\0132" +
      "7.yandex.cloud.mdb.greenplum.v1.Greenplu" +
      "mMasterConfigSet\"\240\001\n\027SegmentSubclusterCo" +
      "nfig\022;\n\tresources\030\001 \001(\0132(.yandex.cloud.m" +
      "db.greenplum.v1.Resources\022H\n\006config\030\002 \001(" +
      "\01328.yandex.cloud.mdb.greenplum.v1.Greenp" +
      "lumSegmentConfigSet\"\223\014\n\025GreenplumMasterC" +
      "onfig\022P\n\tlog_level\030\001 \001(\0162=.yandex.cloud." +
      "mdb.greenplum.v1.GreenplumMasterConfig.L" +
      "ogLevel\0224\n\017max_connections\030\002 \001(\0132\033.googl" +
      "e.protobuf.Int64Value\022.\n\010timezone\030\003 \001(\0132" +
      "\034.google.protobuf.StringValue\022C\n\004pool\030\004 " +
      "\001(\01325.yandex.cloud.mdb.greenplum.v1.Conn" +
      "ectionPoolerConfig\022>\n\031max_prepared_trans" +
      "actions\030\r \001(\0132\033.google.protobuf.Int64Val" +
      "ue\022H\n#runaway_detector_activation_percen" +
      "t\030\016 \001(\0132\033.google.protobuf.Int64Value\0229\n\024" +
      "tcp_keepalives_count\030\017 \001(\0132\033.google.prot" +
      "obuf.Int64Value\022<\n\027tcp_keepalives_interv" +
      "al\030\020 \001(\0132\033.google.protobuf.Int64Value\022D\n" +
      "\037readable_external_table_timeout\030\023 \001(\0132\033" +
      ".google.protobuf.Int64Value\022D\n\037gp_interc" +
      "onnect_snd_queue_depth\030\024 \001(\0132\033.google.pr" +
      "otobuf.Int64Value\022@\n\033gp_interconnect_que" +
      "ue_depth\030\025 \001(\0132\033.google.protobuf.Int64Va" +
      "lue\022X\n\rlog_statement\030\026 \001(\0162A.yandex.clou" +
      "d.mdb.greenplum.v1.GreenplumMasterConfig" +
      ".LogStatement\0220\n\014log_duration\030\027 \001(\0132\032.go" +
      "ogle.protobuf.BoolValue\022D\n optimizer_ana" +
      "lyze_root_partition\030\030 \001(\0132\032.google.proto" +
      "buf.BoolValue\0229\n\024gp_external_max_segs\030\031 " +
      "\001(\0132\033.google.protobuf.Int64Value\0229\n\024gp_f" +
      "ts_probe_timeout\030\032 \001(\0132\033.google.protobuf" +
      ".Int64Value\022;\n\027gp_workfile_compression\030\033" +
      " \001(\0132\032.google.protobuf.BoolValue\022u\n\036gp_a" +
      "utostats_mode_in_functions\030\034 \001(\0162M.yande" +
      "x.cloud.mdb.greenplum.v1.GreenplumMaster" +
      "Config.AutostatsModeInFunctions\"d\n\010LogLe" +
      "vel\022\031\n\025LOG_LEVEL_UNSPECIFIED\020\000\022\t\n\005TRACE\020" +
      "\001\022\t\n\005DEBUG\020\002\022\017\n\013INFORMATION\020\003\022\013\n\007WARNING" +
      "\020\004\022\t\n\005ERROR\020\005\"R\n\014LogStatement\022\035\n\031LOG_STA" +
      "TEMENT_UNSPECIFIED\020\000\022\010\n\004NONE\020\001\022\007\n\003DDL\020\002\022" +
      "\007\n\003MOD\020\003\022\007\n\003ALL\020\004\"v\n\030AutostatsModeInFunc" +
      "tions\022+\n\'AUTOSTATS_MODE_IN_FUNCTIONS_UNS" +
      "PECIFIED\020\000\022\r\n\tMODE_NONE\020\001\022\r\n\tON_CHANGE\020\002" +
      "\022\017\n\013ON_NO_STATS\020\003\"\317\006\n\026GreenplumSegmentCo" +
      "nfig\022Q\n\tlog_level\030\001 \001(\0162>.yandex.cloud.m" +
      "db.greenplum.v1.GreenplumSegmentConfig.L" +
      "ogLevel\0224\n\017max_connections\030\002 \001(\0132\033.googl" +
      "e.protobuf.Int64Value\022;\n\026max_slot_wal_ke" +
      "ep_size\030\007 \001(\0132\033.google.protobuf.Int64Val" +
      "ue\022B\n\035gp_workfile_limit_per_segment\030\010 \001(" +
      "\0132\033.google.protobuf.Int64Value\022@\n\033gp_wor" +
      "kfile_limit_per_query\030\t \001(\0132\033.google.pro" +
      "tobuf.Int64Value\022F\n!gp_workfile_limit_fi" +
      "les_per_query\030\n \001(\0132\033.google.protobuf.In" +
      "t64Value\022d\n\023gp_resource_manager\030\013 \001(\0162G." +
      "yandex.cloud.mdb.greenplum.v1.GreenplumS" +
      "egmentConfig.GPResourceManager\022@\n\033gp_res" +
      "ource_group_cpu_limit\030\021 \001(\0132\033.google.pro" +
      "tobuf.FloatValue\022C\n\036gp_resource_group_me" +
      "mory_limit\030\022 \001(\0132\033.google.protobuf.Float" +
      "Value\"d\n\010LogLevel\022\031\n\025LOG_LEVEL_UNSPECIFI" +
      "ED\020\000\022\t\n\005TRACE\020\001\022\t\n\005DEBUG\020\002\022\017\n\013INFORMATIO" +
      "N\020\003\022\013\n\007WARNING\020\004\022\t\n\005ERROR\020\005\"N\n\021GPResourc" +
      "eManager\022#\n\037GP_RESOURCE_MANAGER_UNSPECIF" +
      "IED\020\000\022\t\n\005QUEUE\020\001\022\t\n\005GROUP\020\002\"\211\002\n\030Greenplu" +
      "mMasterConfigSet\022T\n\020effective_config\030\001 \001" +
      "(\01324.yandex.cloud.mdb.greenplum.v1.Green" +
      "plumMasterConfigB\004\350\3071\001\022I\n\013user_config\030\002 " +
      "\001(\01324.yandex.cloud.mdb.greenplum.v1.Gree" +
      "nplumMasterConfig\022L\n\016default_config\030\003 \001(" +
      "\01324.yandex.cloud.mdb.greenplum.v1.Greenp" +
      "lumMasterConfig\"\215\002\n\031GreenplumSegmentConf" +
      "igSet\022U\n\020effective_config\030\001 \001(\01325.yandex" +
      ".cloud.mdb.greenplum.v1.GreenplumSegment" +
      "ConfigB\004\350\3071\001\022J\n\013user_config\030\002 \001(\01325.yand" +
      "ex.cloud.mdb.greenplum.v1.GreenplumSegme" +
      "ntConfig\022M\n\016default_config\030\003 \001(\01325.yande" +
      "x.cloud.mdb.greenplum.v1.GreenplumSegmen" +
      "tConfigBv\n!yandex.cloud.api.mdb.greenplu" +
      "m.v1B\004GPCFZKgithub.com/yandex-cloud/go-g" +
      "enproto/yandex/cloud/mdb/greenplum/v1;gr" +
      "eenplumb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.protobuf.WrappersProto.getDescriptor(),
          yandex.cloud.api.Validation.getDescriptor(),
        }, assigner);
    internal_static_yandex_cloud_mdb_greenplum_v1_Resources_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_yandex_cloud_mdb_greenplum_v1_Resources_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_yandex_cloud_mdb_greenplum_v1_Resources_descriptor,
        new java.lang.String[] { "ResourcePresetId", "DiskSize", "DiskTypeId", });
    internal_static_yandex_cloud_mdb_greenplum_v1_ConnectionPoolerConfig_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_yandex_cloud_mdb_greenplum_v1_ConnectionPoolerConfig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_yandex_cloud_mdb_greenplum_v1_ConnectionPoolerConfig_descriptor,
        new java.lang.String[] { "Mode", "Size", "ClientIdleTimeout", });
    internal_static_yandex_cloud_mdb_greenplum_v1_MasterSubclusterConfig_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_yandex_cloud_mdb_greenplum_v1_MasterSubclusterConfig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_yandex_cloud_mdb_greenplum_v1_MasterSubclusterConfig_descriptor,
        new java.lang.String[] { "Resources", "Config", });
    internal_static_yandex_cloud_mdb_greenplum_v1_SegmentSubclusterConfig_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_yandex_cloud_mdb_greenplum_v1_SegmentSubclusterConfig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_yandex_cloud_mdb_greenplum_v1_SegmentSubclusterConfig_descriptor,
        new java.lang.String[] { "Resources", "Config", });
    internal_static_yandex_cloud_mdb_greenplum_v1_GreenplumMasterConfig_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_yandex_cloud_mdb_greenplum_v1_GreenplumMasterConfig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_yandex_cloud_mdb_greenplum_v1_GreenplumMasterConfig_descriptor,
        new java.lang.String[] { "LogLevel", "MaxConnections", "Timezone", "Pool", "MaxPreparedTransactions", "RunawayDetectorActivationPercent", "TcpKeepalivesCount", "TcpKeepalivesInterval", "ReadableExternalTableTimeout", "GpInterconnectSndQueueDepth", "GpInterconnectQueueDepth", "LogStatement", "LogDuration", "OptimizerAnalyzeRootPartition", "GpExternalMaxSegs", "GpFtsProbeTimeout", "GpWorkfileCompression", "GpAutostatsModeInFunctions", });
    internal_static_yandex_cloud_mdb_greenplum_v1_GreenplumSegmentConfig_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_yandex_cloud_mdb_greenplum_v1_GreenplumSegmentConfig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_yandex_cloud_mdb_greenplum_v1_GreenplumSegmentConfig_descriptor,
        new java.lang.String[] { "LogLevel", "MaxConnections", "MaxSlotWalKeepSize", "GpWorkfileLimitPerSegment", "GpWorkfileLimitPerQuery", "GpWorkfileLimitFilesPerQuery", "GpResourceManager", "GpResourceGroupCpuLimit", "GpResourceGroupMemoryLimit", });
    internal_static_yandex_cloud_mdb_greenplum_v1_GreenplumMasterConfigSet_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_yandex_cloud_mdb_greenplum_v1_GreenplumMasterConfigSet_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_yandex_cloud_mdb_greenplum_v1_GreenplumMasterConfigSet_descriptor,
        new java.lang.String[] { "EffectiveConfig", "UserConfig", "DefaultConfig", });
    internal_static_yandex_cloud_mdb_greenplum_v1_GreenplumSegmentConfigSet_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_yandex_cloud_mdb_greenplum_v1_GreenplumSegmentConfigSet_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_yandex_cloud_mdb_greenplum_v1_GreenplumSegmentConfigSet_descriptor,
        new java.lang.String[] { "EffectiveConfig", "UserConfig", "DefaultConfig", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(yandex.cloud.api.Validation.required);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.google.protobuf.WrappersProto.getDescriptor();
    yandex.cloud.api.Validation.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}

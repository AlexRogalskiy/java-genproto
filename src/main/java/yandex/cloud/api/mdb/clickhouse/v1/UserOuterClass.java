// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: yandex/cloud/mdb/clickhouse/v1/user.proto

package yandex.cloud.api.mdb.clickhouse.v1;

public final class UserOuterClass {
  private UserOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface UserOrBuilder extends
      // @@protoc_insertion_point(interface_extends:yandex.cloud.mdb.clickhouse.v1.User)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Name of the ClickHouse user.
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    java.lang.String getName();
    /**
     * <pre>
     * Name of the ClickHouse user.
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * ID of the ClickHouse cluster the user belongs to.
     * </pre>
     *
     * <code>string cluster_id = 2;</code>
     */
    java.lang.String getClusterId();
    /**
     * <pre>
     * ID of the ClickHouse cluster the user belongs to.
     * </pre>
     *
     * <code>string cluster_id = 2;</code>
     */
    com.google.protobuf.ByteString
        getClusterIdBytes();

    /**
     * <pre>
     * Set of permissions granted to the user.
     * </pre>
     *
     * <code>repeated .yandex.cloud.mdb.clickhouse.v1.Permission permissions = 3;</code>
     */
    java.util.List<yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.Permission> 
        getPermissionsList();
    /**
     * <pre>
     * Set of permissions granted to the user.
     * </pre>
     *
     * <code>repeated .yandex.cloud.mdb.clickhouse.v1.Permission permissions = 3;</code>
     */
    yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.Permission getPermissions(int index);
    /**
     * <pre>
     * Set of permissions granted to the user.
     * </pre>
     *
     * <code>repeated .yandex.cloud.mdb.clickhouse.v1.Permission permissions = 3;</code>
     */
    int getPermissionsCount();
    /**
     * <pre>
     * Set of permissions granted to the user.
     * </pre>
     *
     * <code>repeated .yandex.cloud.mdb.clickhouse.v1.Permission permissions = 3;</code>
     */
    java.util.List<? extends yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.PermissionOrBuilder> 
        getPermissionsOrBuilderList();
    /**
     * <pre>
     * Set of permissions granted to the user.
     * </pre>
     *
     * <code>repeated .yandex.cloud.mdb.clickhouse.v1.Permission permissions = 3;</code>
     */
    yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.PermissionOrBuilder getPermissionsOrBuilder(
        int index);

    /**
     * <code>.yandex.cloud.mdb.clickhouse.v1.UserSettings settings = 4;</code>
     */
    boolean hasSettings();
    /**
     * <code>.yandex.cloud.mdb.clickhouse.v1.UserSettings settings = 4;</code>
     */
    yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings getSettings();
    /**
     * <code>.yandex.cloud.mdb.clickhouse.v1.UserSettings settings = 4;</code>
     */
    yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettingsOrBuilder getSettingsOrBuilder();

    /**
     * <pre>
     * Set of quotas assigned to the user.
     * </pre>
     *
     * <code>repeated .yandex.cloud.mdb.clickhouse.v1.UserQuota quotas = 5;</code>
     */
    java.util.List<yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuota> 
        getQuotasList();
    /**
     * <pre>
     * Set of quotas assigned to the user.
     * </pre>
     *
     * <code>repeated .yandex.cloud.mdb.clickhouse.v1.UserQuota quotas = 5;</code>
     */
    yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuota getQuotas(int index);
    /**
     * <pre>
     * Set of quotas assigned to the user.
     * </pre>
     *
     * <code>repeated .yandex.cloud.mdb.clickhouse.v1.UserQuota quotas = 5;</code>
     */
    int getQuotasCount();
    /**
     * <pre>
     * Set of quotas assigned to the user.
     * </pre>
     *
     * <code>repeated .yandex.cloud.mdb.clickhouse.v1.UserQuota quotas = 5;</code>
     */
    java.util.List<? extends yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuotaOrBuilder> 
        getQuotasOrBuilderList();
    /**
     * <pre>
     * Set of quotas assigned to the user.
     * </pre>
     *
     * <code>repeated .yandex.cloud.mdb.clickhouse.v1.UserQuota quotas = 5;</code>
     */
    yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuotaOrBuilder getQuotasOrBuilder(
        int index);
  }
  /**
   * <pre>
   * A ClickHouse User resource. For more information, see 
   * the [Developer's guide](/docs/managed-clickhouse/concepts).
   * </pre>
   *
   * Protobuf type {@code yandex.cloud.mdb.clickhouse.v1.User}
   */
  public  static final class User extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:yandex.cloud.mdb.clickhouse.v1.User)
      UserOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use User.newBuilder() to construct.
    private User(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private User() {
      name_ = "";
      clusterId_ = "";
      permissions_ = java.util.Collections.emptyList();
      quotas_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private User(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              clusterId_ = s;
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                permissions_ = new java.util.ArrayList<yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.Permission>();
                mutable_bitField0_ |= 0x00000004;
              }
              permissions_.add(
                  input.readMessage(yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.Permission.parser(), extensionRegistry));
              break;
            }
            case 34: {
              yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.Builder subBuilder = null;
              if (settings_ != null) {
                subBuilder = settings_.toBuilder();
              }
              settings_ = input.readMessage(yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(settings_);
                settings_ = subBuilder.buildPartial();
              }

              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                quotas_ = new java.util.ArrayList<yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuota>();
                mutable_bitField0_ |= 0x00000010;
              }
              quotas_.add(
                  input.readMessage(yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuota.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          permissions_ = java.util.Collections.unmodifiableList(permissions_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          quotas_ = java.util.Collections.unmodifiableList(quotas_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.internal_static_yandex_cloud_mdb_clickhouse_v1_User_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.internal_static_yandex_cloud_mdb_clickhouse_v1_User_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.User.class, yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.User.Builder.class);
    }

    private int bitField0_;
    public static final int NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * Name of the ClickHouse user.
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Name of the ClickHouse user.
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CLUSTER_ID_FIELD_NUMBER = 2;
    private volatile java.lang.Object clusterId_;
    /**
     * <pre>
     * ID of the ClickHouse cluster the user belongs to.
     * </pre>
     *
     * <code>string cluster_id = 2;</code>
     */
    public java.lang.String getClusterId() {
      java.lang.Object ref = clusterId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        clusterId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * ID of the ClickHouse cluster the user belongs to.
     * </pre>
     *
     * <code>string cluster_id = 2;</code>
     */
    public com.google.protobuf.ByteString
        getClusterIdBytes() {
      java.lang.Object ref = clusterId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        clusterId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PERMISSIONS_FIELD_NUMBER = 3;
    private java.util.List<yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.Permission> permissions_;
    /**
     * <pre>
     * Set of permissions granted to the user.
     * </pre>
     *
     * <code>repeated .yandex.cloud.mdb.clickhouse.v1.Permission permissions = 3;</code>
     */
    public java.util.List<yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.Permission> getPermissionsList() {
      return permissions_;
    }
    /**
     * <pre>
     * Set of permissions granted to the user.
     * </pre>
     *
     * <code>repeated .yandex.cloud.mdb.clickhouse.v1.Permission permissions = 3;</code>
     */
    public java.util.List<? extends yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.PermissionOrBuilder> 
        getPermissionsOrBuilderList() {
      return permissions_;
    }
    /**
     * <pre>
     * Set of permissions granted to the user.
     * </pre>
     *
     * <code>repeated .yandex.cloud.mdb.clickhouse.v1.Permission permissions = 3;</code>
     */
    public int getPermissionsCount() {
      return permissions_.size();
    }
    /**
     * <pre>
     * Set of permissions granted to the user.
     * </pre>
     *
     * <code>repeated .yandex.cloud.mdb.clickhouse.v1.Permission permissions = 3;</code>
     */
    public yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.Permission getPermissions(int index) {
      return permissions_.get(index);
    }
    /**
     * <pre>
     * Set of permissions granted to the user.
     * </pre>
     *
     * <code>repeated .yandex.cloud.mdb.clickhouse.v1.Permission permissions = 3;</code>
     */
    public yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.PermissionOrBuilder getPermissionsOrBuilder(
        int index) {
      return permissions_.get(index);
    }

    public static final int SETTINGS_FIELD_NUMBER = 4;
    private yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings settings_;
    /**
     * <code>.yandex.cloud.mdb.clickhouse.v1.UserSettings settings = 4;</code>
     */
    public boolean hasSettings() {
      return settings_ != null;
    }
    /**
     * <code>.yandex.cloud.mdb.clickhouse.v1.UserSettings settings = 4;</code>
     */
    public yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings getSettings() {
      return settings_ == null ? yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.getDefaultInstance() : settings_;
    }
    /**
     * <code>.yandex.cloud.mdb.clickhouse.v1.UserSettings settings = 4;</code>
     */
    public yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettingsOrBuilder getSettingsOrBuilder() {
      return getSettings();
    }

    public static final int QUOTAS_FIELD_NUMBER = 5;
    private java.util.List<yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuota> quotas_;
    /**
     * <pre>
     * Set of quotas assigned to the user.
     * </pre>
     *
     * <code>repeated .yandex.cloud.mdb.clickhouse.v1.UserQuota quotas = 5;</code>
     */
    public java.util.List<yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuota> getQuotasList() {
      return quotas_;
    }
    /**
     * <pre>
     * Set of quotas assigned to the user.
     * </pre>
     *
     * <code>repeated .yandex.cloud.mdb.clickhouse.v1.UserQuota quotas = 5;</code>
     */
    public java.util.List<? extends yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuotaOrBuilder> 
        getQuotasOrBuilderList() {
      return quotas_;
    }
    /**
     * <pre>
     * Set of quotas assigned to the user.
     * </pre>
     *
     * <code>repeated .yandex.cloud.mdb.clickhouse.v1.UserQuota quotas = 5;</code>
     */
    public int getQuotasCount() {
      return quotas_.size();
    }
    /**
     * <pre>
     * Set of quotas assigned to the user.
     * </pre>
     *
     * <code>repeated .yandex.cloud.mdb.clickhouse.v1.UserQuota quotas = 5;</code>
     */
    public yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuota getQuotas(int index) {
      return quotas_.get(index);
    }
    /**
     * <pre>
     * Set of quotas assigned to the user.
     * </pre>
     *
     * <code>repeated .yandex.cloud.mdb.clickhouse.v1.UserQuota quotas = 5;</code>
     */
    public yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuotaOrBuilder getQuotasOrBuilder(
        int index) {
      return quotas_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      if (!getClusterIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, clusterId_);
      }
      for (int i = 0; i < permissions_.size(); i++) {
        output.writeMessage(3, permissions_.get(i));
      }
      if (settings_ != null) {
        output.writeMessage(4, getSettings());
      }
      for (int i = 0; i < quotas_.size(); i++) {
        output.writeMessage(5, quotas_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      if (!getClusterIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, clusterId_);
      }
      for (int i = 0; i < permissions_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, permissions_.get(i));
      }
      if (settings_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getSettings());
      }
      for (int i = 0; i < quotas_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, quotas_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.User)) {
        return super.equals(obj);
      }
      yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.User other = (yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.User) obj;

      boolean result = true;
      result = result && getName()
          .equals(other.getName());
      result = result && getClusterId()
          .equals(other.getClusterId());
      result = result && getPermissionsList()
          .equals(other.getPermissionsList());
      result = result && (hasSettings() == other.hasSettings());
      if (hasSettings()) {
        result = result && getSettings()
            .equals(other.getSettings());
      }
      result = result && getQuotasList()
          .equals(other.getQuotasList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + CLUSTER_ID_FIELD_NUMBER;
      hash = (53 * hash) + getClusterId().hashCode();
      if (getPermissionsCount() > 0) {
        hash = (37 * hash) + PERMISSIONS_FIELD_NUMBER;
        hash = (53 * hash) + getPermissionsList().hashCode();
      }
      if (hasSettings()) {
        hash = (37 * hash) + SETTINGS_FIELD_NUMBER;
        hash = (53 * hash) + getSettings().hashCode();
      }
      if (getQuotasCount() > 0) {
        hash = (37 * hash) + QUOTAS_FIELD_NUMBER;
        hash = (53 * hash) + getQuotasList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.User parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.User parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.User parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.User parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.User parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.User parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.User parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.User parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.User parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.User parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.User parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.User parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.User prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A ClickHouse User resource. For more information, see 
     * the [Developer's guide](/docs/managed-clickhouse/concepts).
     * </pre>
     *
     * Protobuf type {@code yandex.cloud.mdb.clickhouse.v1.User}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:yandex.cloud.mdb.clickhouse.v1.User)
        yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.internal_static_yandex_cloud_mdb_clickhouse_v1_User_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.internal_static_yandex_cloud_mdb_clickhouse_v1_User_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.User.class, yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.User.Builder.class);
      }

      // Construct using yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.User.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getPermissionsFieldBuilder();
          getQuotasFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        name_ = "";

        clusterId_ = "";

        if (permissionsBuilder_ == null) {
          permissions_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          permissionsBuilder_.clear();
        }
        if (settingsBuilder_ == null) {
          settings_ = null;
        } else {
          settings_ = null;
          settingsBuilder_ = null;
        }
        if (quotasBuilder_ == null) {
          quotas_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          quotasBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.internal_static_yandex_cloud_mdb_clickhouse_v1_User_descriptor;
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.User getDefaultInstanceForType() {
        return yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.User.getDefaultInstance();
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.User build() {
        yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.User result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.User buildPartial() {
        yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.User result = new yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.User(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.name_ = name_;
        result.clusterId_ = clusterId_;
        if (permissionsBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            permissions_ = java.util.Collections.unmodifiableList(permissions_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.permissions_ = permissions_;
        } else {
          result.permissions_ = permissionsBuilder_.build();
        }
        if (settingsBuilder_ == null) {
          result.settings_ = settings_;
        } else {
          result.settings_ = settingsBuilder_.build();
        }
        if (quotasBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            quotas_ = java.util.Collections.unmodifiableList(quotas_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.quotas_ = quotas_;
        } else {
          result.quotas_ = quotasBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.User) {
          return mergeFrom((yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.User)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.User other) {
        if (other == yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.User.getDefaultInstance()) return this;
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (!other.getClusterId().isEmpty()) {
          clusterId_ = other.clusterId_;
          onChanged();
        }
        if (permissionsBuilder_ == null) {
          if (!other.permissions_.isEmpty()) {
            if (permissions_.isEmpty()) {
              permissions_ = other.permissions_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensurePermissionsIsMutable();
              permissions_.addAll(other.permissions_);
            }
            onChanged();
          }
        } else {
          if (!other.permissions_.isEmpty()) {
            if (permissionsBuilder_.isEmpty()) {
              permissionsBuilder_.dispose();
              permissionsBuilder_ = null;
              permissions_ = other.permissions_;
              bitField0_ = (bitField0_ & ~0x00000004);
              permissionsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getPermissionsFieldBuilder() : null;
            } else {
              permissionsBuilder_.addAllMessages(other.permissions_);
            }
          }
        }
        if (other.hasSettings()) {
          mergeSettings(other.getSettings());
        }
        if (quotasBuilder_ == null) {
          if (!other.quotas_.isEmpty()) {
            if (quotas_.isEmpty()) {
              quotas_ = other.quotas_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureQuotasIsMutable();
              quotas_.addAll(other.quotas_);
            }
            onChanged();
          }
        } else {
          if (!other.quotas_.isEmpty()) {
            if (quotasBuilder_.isEmpty()) {
              quotasBuilder_.dispose();
              quotasBuilder_ = null;
              quotas_ = other.quotas_;
              bitField0_ = (bitField0_ & ~0x00000010);
              quotasBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getQuotasFieldBuilder() : null;
            } else {
              quotasBuilder_.addAllMessages(other.quotas_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.User parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.User) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * Name of the ClickHouse user.
       * </pre>
       *
       * <code>string name = 1;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Name of the ClickHouse user.
       * </pre>
       *
       * <code>string name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Name of the ClickHouse user.
       * </pre>
       *
       * <code>string name = 1;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Name of the ClickHouse user.
       * </pre>
       *
       * <code>string name = 1;</code>
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Name of the ClickHouse user.
       * </pre>
       *
       * <code>string name = 1;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object clusterId_ = "";
      /**
       * <pre>
       * ID of the ClickHouse cluster the user belongs to.
       * </pre>
       *
       * <code>string cluster_id = 2;</code>
       */
      public java.lang.String getClusterId() {
        java.lang.Object ref = clusterId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          clusterId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * ID of the ClickHouse cluster the user belongs to.
       * </pre>
       *
       * <code>string cluster_id = 2;</code>
       */
      public com.google.protobuf.ByteString
          getClusterIdBytes() {
        java.lang.Object ref = clusterId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          clusterId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * ID of the ClickHouse cluster the user belongs to.
       * </pre>
       *
       * <code>string cluster_id = 2;</code>
       */
      public Builder setClusterId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        clusterId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ID of the ClickHouse cluster the user belongs to.
       * </pre>
       *
       * <code>string cluster_id = 2;</code>
       */
      public Builder clearClusterId() {
        
        clusterId_ = getDefaultInstance().getClusterId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ID of the ClickHouse cluster the user belongs to.
       * </pre>
       *
       * <code>string cluster_id = 2;</code>
       */
      public Builder setClusterIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        clusterId_ = value;
        onChanged();
        return this;
      }

      private java.util.List<yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.Permission> permissions_ =
        java.util.Collections.emptyList();
      private void ensurePermissionsIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          permissions_ = new java.util.ArrayList<yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.Permission>(permissions_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.Permission, yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.Permission.Builder, yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.PermissionOrBuilder> permissionsBuilder_;

      /**
       * <pre>
       * Set of permissions granted to the user.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.Permission permissions = 3;</code>
       */
      public java.util.List<yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.Permission> getPermissionsList() {
        if (permissionsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(permissions_);
        } else {
          return permissionsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Set of permissions granted to the user.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.Permission permissions = 3;</code>
       */
      public int getPermissionsCount() {
        if (permissionsBuilder_ == null) {
          return permissions_.size();
        } else {
          return permissionsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Set of permissions granted to the user.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.Permission permissions = 3;</code>
       */
      public yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.Permission getPermissions(int index) {
        if (permissionsBuilder_ == null) {
          return permissions_.get(index);
        } else {
          return permissionsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Set of permissions granted to the user.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.Permission permissions = 3;</code>
       */
      public Builder setPermissions(
          int index, yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.Permission value) {
        if (permissionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePermissionsIsMutable();
          permissions_.set(index, value);
          onChanged();
        } else {
          permissionsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Set of permissions granted to the user.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.Permission permissions = 3;</code>
       */
      public Builder setPermissions(
          int index, yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.Permission.Builder builderForValue) {
        if (permissionsBuilder_ == null) {
          ensurePermissionsIsMutable();
          permissions_.set(index, builderForValue.build());
          onChanged();
        } else {
          permissionsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Set of permissions granted to the user.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.Permission permissions = 3;</code>
       */
      public Builder addPermissions(yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.Permission value) {
        if (permissionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePermissionsIsMutable();
          permissions_.add(value);
          onChanged();
        } else {
          permissionsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Set of permissions granted to the user.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.Permission permissions = 3;</code>
       */
      public Builder addPermissions(
          int index, yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.Permission value) {
        if (permissionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePermissionsIsMutable();
          permissions_.add(index, value);
          onChanged();
        } else {
          permissionsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Set of permissions granted to the user.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.Permission permissions = 3;</code>
       */
      public Builder addPermissions(
          yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.Permission.Builder builderForValue) {
        if (permissionsBuilder_ == null) {
          ensurePermissionsIsMutable();
          permissions_.add(builderForValue.build());
          onChanged();
        } else {
          permissionsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Set of permissions granted to the user.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.Permission permissions = 3;</code>
       */
      public Builder addPermissions(
          int index, yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.Permission.Builder builderForValue) {
        if (permissionsBuilder_ == null) {
          ensurePermissionsIsMutable();
          permissions_.add(index, builderForValue.build());
          onChanged();
        } else {
          permissionsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Set of permissions granted to the user.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.Permission permissions = 3;</code>
       */
      public Builder addAllPermissions(
          java.lang.Iterable<? extends yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.Permission> values) {
        if (permissionsBuilder_ == null) {
          ensurePermissionsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, permissions_);
          onChanged();
        } else {
          permissionsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Set of permissions granted to the user.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.Permission permissions = 3;</code>
       */
      public Builder clearPermissions() {
        if (permissionsBuilder_ == null) {
          permissions_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          permissionsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Set of permissions granted to the user.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.Permission permissions = 3;</code>
       */
      public Builder removePermissions(int index) {
        if (permissionsBuilder_ == null) {
          ensurePermissionsIsMutable();
          permissions_.remove(index);
          onChanged();
        } else {
          permissionsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Set of permissions granted to the user.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.Permission permissions = 3;</code>
       */
      public yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.Permission.Builder getPermissionsBuilder(
          int index) {
        return getPermissionsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Set of permissions granted to the user.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.Permission permissions = 3;</code>
       */
      public yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.PermissionOrBuilder getPermissionsOrBuilder(
          int index) {
        if (permissionsBuilder_ == null) {
          return permissions_.get(index);  } else {
          return permissionsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Set of permissions granted to the user.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.Permission permissions = 3;</code>
       */
      public java.util.List<? extends yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.PermissionOrBuilder> 
           getPermissionsOrBuilderList() {
        if (permissionsBuilder_ != null) {
          return permissionsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(permissions_);
        }
      }
      /**
       * <pre>
       * Set of permissions granted to the user.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.Permission permissions = 3;</code>
       */
      public yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.Permission.Builder addPermissionsBuilder() {
        return getPermissionsFieldBuilder().addBuilder(
            yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.Permission.getDefaultInstance());
      }
      /**
       * <pre>
       * Set of permissions granted to the user.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.Permission permissions = 3;</code>
       */
      public yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.Permission.Builder addPermissionsBuilder(
          int index) {
        return getPermissionsFieldBuilder().addBuilder(
            index, yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.Permission.getDefaultInstance());
      }
      /**
       * <pre>
       * Set of permissions granted to the user.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.Permission permissions = 3;</code>
       */
      public java.util.List<yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.Permission.Builder> 
           getPermissionsBuilderList() {
        return getPermissionsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.Permission, yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.Permission.Builder, yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.PermissionOrBuilder> 
          getPermissionsFieldBuilder() {
        if (permissionsBuilder_ == null) {
          permissionsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.Permission, yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.Permission.Builder, yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.PermissionOrBuilder>(
                  permissions_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          permissions_ = null;
        }
        return permissionsBuilder_;
      }

      private yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings settings_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings, yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.Builder, yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettingsOrBuilder> settingsBuilder_;
      /**
       * <code>.yandex.cloud.mdb.clickhouse.v1.UserSettings settings = 4;</code>
       */
      public boolean hasSettings() {
        return settingsBuilder_ != null || settings_ != null;
      }
      /**
       * <code>.yandex.cloud.mdb.clickhouse.v1.UserSettings settings = 4;</code>
       */
      public yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings getSettings() {
        if (settingsBuilder_ == null) {
          return settings_ == null ? yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.getDefaultInstance() : settings_;
        } else {
          return settingsBuilder_.getMessage();
        }
      }
      /**
       * <code>.yandex.cloud.mdb.clickhouse.v1.UserSettings settings = 4;</code>
       */
      public Builder setSettings(yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings value) {
        if (settingsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          settings_ = value;
          onChanged();
        } else {
          settingsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.yandex.cloud.mdb.clickhouse.v1.UserSettings settings = 4;</code>
       */
      public Builder setSettings(
          yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.Builder builderForValue) {
        if (settingsBuilder_ == null) {
          settings_ = builderForValue.build();
          onChanged();
        } else {
          settingsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.yandex.cloud.mdb.clickhouse.v1.UserSettings settings = 4;</code>
       */
      public Builder mergeSettings(yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings value) {
        if (settingsBuilder_ == null) {
          if (settings_ != null) {
            settings_ =
              yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.newBuilder(settings_).mergeFrom(value).buildPartial();
          } else {
            settings_ = value;
          }
          onChanged();
        } else {
          settingsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.yandex.cloud.mdb.clickhouse.v1.UserSettings settings = 4;</code>
       */
      public Builder clearSettings() {
        if (settingsBuilder_ == null) {
          settings_ = null;
          onChanged();
        } else {
          settings_ = null;
          settingsBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.yandex.cloud.mdb.clickhouse.v1.UserSettings settings = 4;</code>
       */
      public yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.Builder getSettingsBuilder() {
        
        onChanged();
        return getSettingsFieldBuilder().getBuilder();
      }
      /**
       * <code>.yandex.cloud.mdb.clickhouse.v1.UserSettings settings = 4;</code>
       */
      public yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettingsOrBuilder getSettingsOrBuilder() {
        if (settingsBuilder_ != null) {
          return settingsBuilder_.getMessageOrBuilder();
        } else {
          return settings_ == null ?
              yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.getDefaultInstance() : settings_;
        }
      }
      /**
       * <code>.yandex.cloud.mdb.clickhouse.v1.UserSettings settings = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings, yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.Builder, yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettingsOrBuilder> 
          getSettingsFieldBuilder() {
        if (settingsBuilder_ == null) {
          settingsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings, yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.Builder, yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettingsOrBuilder>(
                  getSettings(),
                  getParentForChildren(),
                  isClean());
          settings_ = null;
        }
        return settingsBuilder_;
      }

      private java.util.List<yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuota> quotas_ =
        java.util.Collections.emptyList();
      private void ensureQuotasIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          quotas_ = new java.util.ArrayList<yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuota>(quotas_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuota, yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuota.Builder, yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuotaOrBuilder> quotasBuilder_;

      /**
       * <pre>
       * Set of quotas assigned to the user.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.UserQuota quotas = 5;</code>
       */
      public java.util.List<yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuota> getQuotasList() {
        if (quotasBuilder_ == null) {
          return java.util.Collections.unmodifiableList(quotas_);
        } else {
          return quotasBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Set of quotas assigned to the user.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.UserQuota quotas = 5;</code>
       */
      public int getQuotasCount() {
        if (quotasBuilder_ == null) {
          return quotas_.size();
        } else {
          return quotasBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Set of quotas assigned to the user.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.UserQuota quotas = 5;</code>
       */
      public yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuota getQuotas(int index) {
        if (quotasBuilder_ == null) {
          return quotas_.get(index);
        } else {
          return quotasBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Set of quotas assigned to the user.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.UserQuota quotas = 5;</code>
       */
      public Builder setQuotas(
          int index, yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuota value) {
        if (quotasBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureQuotasIsMutable();
          quotas_.set(index, value);
          onChanged();
        } else {
          quotasBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Set of quotas assigned to the user.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.UserQuota quotas = 5;</code>
       */
      public Builder setQuotas(
          int index, yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuota.Builder builderForValue) {
        if (quotasBuilder_ == null) {
          ensureQuotasIsMutable();
          quotas_.set(index, builderForValue.build());
          onChanged();
        } else {
          quotasBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Set of quotas assigned to the user.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.UserQuota quotas = 5;</code>
       */
      public Builder addQuotas(yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuota value) {
        if (quotasBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureQuotasIsMutable();
          quotas_.add(value);
          onChanged();
        } else {
          quotasBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Set of quotas assigned to the user.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.UserQuota quotas = 5;</code>
       */
      public Builder addQuotas(
          int index, yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuota value) {
        if (quotasBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureQuotasIsMutable();
          quotas_.add(index, value);
          onChanged();
        } else {
          quotasBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Set of quotas assigned to the user.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.UserQuota quotas = 5;</code>
       */
      public Builder addQuotas(
          yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuota.Builder builderForValue) {
        if (quotasBuilder_ == null) {
          ensureQuotasIsMutable();
          quotas_.add(builderForValue.build());
          onChanged();
        } else {
          quotasBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Set of quotas assigned to the user.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.UserQuota quotas = 5;</code>
       */
      public Builder addQuotas(
          int index, yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuota.Builder builderForValue) {
        if (quotasBuilder_ == null) {
          ensureQuotasIsMutable();
          quotas_.add(index, builderForValue.build());
          onChanged();
        } else {
          quotasBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Set of quotas assigned to the user.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.UserQuota quotas = 5;</code>
       */
      public Builder addAllQuotas(
          java.lang.Iterable<? extends yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuota> values) {
        if (quotasBuilder_ == null) {
          ensureQuotasIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, quotas_);
          onChanged();
        } else {
          quotasBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Set of quotas assigned to the user.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.UserQuota quotas = 5;</code>
       */
      public Builder clearQuotas() {
        if (quotasBuilder_ == null) {
          quotas_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          quotasBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Set of quotas assigned to the user.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.UserQuota quotas = 5;</code>
       */
      public Builder removeQuotas(int index) {
        if (quotasBuilder_ == null) {
          ensureQuotasIsMutable();
          quotas_.remove(index);
          onChanged();
        } else {
          quotasBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Set of quotas assigned to the user.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.UserQuota quotas = 5;</code>
       */
      public yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuota.Builder getQuotasBuilder(
          int index) {
        return getQuotasFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Set of quotas assigned to the user.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.UserQuota quotas = 5;</code>
       */
      public yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuotaOrBuilder getQuotasOrBuilder(
          int index) {
        if (quotasBuilder_ == null) {
          return quotas_.get(index);  } else {
          return quotasBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Set of quotas assigned to the user.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.UserQuota quotas = 5;</code>
       */
      public java.util.List<? extends yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuotaOrBuilder> 
           getQuotasOrBuilderList() {
        if (quotasBuilder_ != null) {
          return quotasBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(quotas_);
        }
      }
      /**
       * <pre>
       * Set of quotas assigned to the user.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.UserQuota quotas = 5;</code>
       */
      public yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuota.Builder addQuotasBuilder() {
        return getQuotasFieldBuilder().addBuilder(
            yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuota.getDefaultInstance());
      }
      /**
       * <pre>
       * Set of quotas assigned to the user.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.UserQuota quotas = 5;</code>
       */
      public yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuota.Builder addQuotasBuilder(
          int index) {
        return getQuotasFieldBuilder().addBuilder(
            index, yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuota.getDefaultInstance());
      }
      /**
       * <pre>
       * Set of quotas assigned to the user.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.UserQuota quotas = 5;</code>
       */
      public java.util.List<yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuota.Builder> 
           getQuotasBuilderList() {
        return getQuotasFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuota, yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuota.Builder, yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuotaOrBuilder> 
          getQuotasFieldBuilder() {
        if (quotasBuilder_ == null) {
          quotasBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuota, yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuota.Builder, yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuotaOrBuilder>(
                  quotas_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          quotas_ = null;
        }
        return quotasBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:yandex.cloud.mdb.clickhouse.v1.User)
    }

    // @@protoc_insertion_point(class_scope:yandex.cloud.mdb.clickhouse.v1.User)
    private static final yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.User DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.User();
    }

    public static yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.User getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<User>
        PARSER = new com.google.protobuf.AbstractParser<User>() {
      @java.lang.Override
      public User parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new User(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<User> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<User> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.User getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PermissionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:yandex.cloud.mdb.clickhouse.v1.Permission)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Name of the database that the permission grants access to.
     * </pre>
     *
     * <code>string database_name = 1;</code>
     */
    java.lang.String getDatabaseName();
    /**
     * <pre>
     * Name of the database that the permission grants access to.
     * </pre>
     *
     * <code>string database_name = 1;</code>
     */
    com.google.protobuf.ByteString
        getDatabaseNameBytes();
  }
  /**
   * Protobuf type {@code yandex.cloud.mdb.clickhouse.v1.Permission}
   */
  public  static final class Permission extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:yandex.cloud.mdb.clickhouse.v1.Permission)
      PermissionOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Permission.newBuilder() to construct.
    private Permission(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Permission() {
      databaseName_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Permission(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              databaseName_ = s;
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.internal_static_yandex_cloud_mdb_clickhouse_v1_Permission_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.internal_static_yandex_cloud_mdb_clickhouse_v1_Permission_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.Permission.class, yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.Permission.Builder.class);
    }

    public static final int DATABASE_NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object databaseName_;
    /**
     * <pre>
     * Name of the database that the permission grants access to.
     * </pre>
     *
     * <code>string database_name = 1;</code>
     */
    public java.lang.String getDatabaseName() {
      java.lang.Object ref = databaseName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        databaseName_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Name of the database that the permission grants access to.
     * </pre>
     *
     * <code>string database_name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getDatabaseNameBytes() {
      java.lang.Object ref = databaseName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        databaseName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getDatabaseNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, databaseName_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getDatabaseNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, databaseName_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.Permission)) {
        return super.equals(obj);
      }
      yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.Permission other = (yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.Permission) obj;

      boolean result = true;
      result = result && getDatabaseName()
          .equals(other.getDatabaseName());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + DATABASE_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getDatabaseName().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.Permission parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.Permission parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.Permission parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.Permission parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.Permission parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.Permission parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.Permission parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.Permission parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.Permission parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.Permission parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.Permission parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.Permission parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.Permission prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code yandex.cloud.mdb.clickhouse.v1.Permission}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:yandex.cloud.mdb.clickhouse.v1.Permission)
        yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.PermissionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.internal_static_yandex_cloud_mdb_clickhouse_v1_Permission_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.internal_static_yandex_cloud_mdb_clickhouse_v1_Permission_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.Permission.class, yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.Permission.Builder.class);
      }

      // Construct using yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.Permission.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        databaseName_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.internal_static_yandex_cloud_mdb_clickhouse_v1_Permission_descriptor;
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.Permission getDefaultInstanceForType() {
        return yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.Permission.getDefaultInstance();
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.Permission build() {
        yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.Permission result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.Permission buildPartial() {
        yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.Permission result = new yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.Permission(this);
        result.databaseName_ = databaseName_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.Permission) {
          return mergeFrom((yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.Permission)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.Permission other) {
        if (other == yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.Permission.getDefaultInstance()) return this;
        if (!other.getDatabaseName().isEmpty()) {
          databaseName_ = other.databaseName_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.Permission parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.Permission) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object databaseName_ = "";
      /**
       * <pre>
       * Name of the database that the permission grants access to.
       * </pre>
       *
       * <code>string database_name = 1;</code>
       */
      public java.lang.String getDatabaseName() {
        java.lang.Object ref = databaseName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          databaseName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Name of the database that the permission grants access to.
       * </pre>
       *
       * <code>string database_name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getDatabaseNameBytes() {
        java.lang.Object ref = databaseName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          databaseName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Name of the database that the permission grants access to.
       * </pre>
       *
       * <code>string database_name = 1;</code>
       */
      public Builder setDatabaseName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        databaseName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Name of the database that the permission grants access to.
       * </pre>
       *
       * <code>string database_name = 1;</code>
       */
      public Builder clearDatabaseName() {
        
        databaseName_ = getDefaultInstance().getDatabaseName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Name of the database that the permission grants access to.
       * </pre>
       *
       * <code>string database_name = 1;</code>
       */
      public Builder setDatabaseNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        databaseName_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:yandex.cloud.mdb.clickhouse.v1.Permission)
    }

    // @@protoc_insertion_point(class_scope:yandex.cloud.mdb.clickhouse.v1.Permission)
    private static final yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.Permission DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.Permission();
    }

    public static yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.Permission getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Permission>
        PARSER = new com.google.protobuf.AbstractParser<Permission>() {
      @java.lang.Override
      public Permission parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Permission(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Permission> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Permission> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.Permission getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface UserSpecOrBuilder extends
      // @@protoc_insertion_point(interface_extends:yandex.cloud.mdb.clickhouse.v1.UserSpec)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Name of the ClickHouse user.
     * </pre>
     *
     * <code>string name = 1 [(.yandex.cloud.required) = true, (.yandex.cloud.pattern) = "[a-zA-Z0-9_]*", (.yandex.cloud.length) = "&lt;=63"];</code>
     */
    java.lang.String getName();
    /**
     * <pre>
     * Name of the ClickHouse user.
     * </pre>
     *
     * <code>string name = 1 [(.yandex.cloud.required) = true, (.yandex.cloud.pattern) = "[a-zA-Z0-9_]*", (.yandex.cloud.length) = "&lt;=63"];</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * Password of the ClickHouse user.
     * </pre>
     *
     * <code>string password = 2 [(.yandex.cloud.required) = true, (.yandex.cloud.length) = "8-128"];</code>
     */
    java.lang.String getPassword();
    /**
     * <pre>
     * Password of the ClickHouse user.
     * </pre>
     *
     * <code>string password = 2 [(.yandex.cloud.required) = true, (.yandex.cloud.length) = "8-128"];</code>
     */
    com.google.protobuf.ByteString
        getPasswordBytes();

    /**
     * <pre>
     * Set of permissions to grant to the user.
     * </pre>
     *
     * <code>repeated .yandex.cloud.mdb.clickhouse.v1.Permission permissions = 3;</code>
     */
    java.util.List<yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.Permission> 
        getPermissionsList();
    /**
     * <pre>
     * Set of permissions to grant to the user.
     * </pre>
     *
     * <code>repeated .yandex.cloud.mdb.clickhouse.v1.Permission permissions = 3;</code>
     */
    yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.Permission getPermissions(int index);
    /**
     * <pre>
     * Set of permissions to grant to the user.
     * </pre>
     *
     * <code>repeated .yandex.cloud.mdb.clickhouse.v1.Permission permissions = 3;</code>
     */
    int getPermissionsCount();
    /**
     * <pre>
     * Set of permissions to grant to the user.
     * </pre>
     *
     * <code>repeated .yandex.cloud.mdb.clickhouse.v1.Permission permissions = 3;</code>
     */
    java.util.List<? extends yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.PermissionOrBuilder> 
        getPermissionsOrBuilderList();
    /**
     * <pre>
     * Set of permissions to grant to the user.
     * </pre>
     *
     * <code>repeated .yandex.cloud.mdb.clickhouse.v1.Permission permissions = 3;</code>
     */
    yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.PermissionOrBuilder getPermissionsOrBuilder(
        int index);

    /**
     * <code>.yandex.cloud.mdb.clickhouse.v1.UserSettings settings = 4;</code>
     */
    boolean hasSettings();
    /**
     * <code>.yandex.cloud.mdb.clickhouse.v1.UserSettings settings = 4;</code>
     */
    yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings getSettings();
    /**
     * <code>.yandex.cloud.mdb.clickhouse.v1.UserSettings settings = 4;</code>
     */
    yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettingsOrBuilder getSettingsOrBuilder();

    /**
     * <pre>
     * Set of quotas assigned to the user.
     * </pre>
     *
     * <code>repeated .yandex.cloud.mdb.clickhouse.v1.UserQuota quotas = 5;</code>
     */
    java.util.List<yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuota> 
        getQuotasList();
    /**
     * <pre>
     * Set of quotas assigned to the user.
     * </pre>
     *
     * <code>repeated .yandex.cloud.mdb.clickhouse.v1.UserQuota quotas = 5;</code>
     */
    yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuota getQuotas(int index);
    /**
     * <pre>
     * Set of quotas assigned to the user.
     * </pre>
     *
     * <code>repeated .yandex.cloud.mdb.clickhouse.v1.UserQuota quotas = 5;</code>
     */
    int getQuotasCount();
    /**
     * <pre>
     * Set of quotas assigned to the user.
     * </pre>
     *
     * <code>repeated .yandex.cloud.mdb.clickhouse.v1.UserQuota quotas = 5;</code>
     */
    java.util.List<? extends yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuotaOrBuilder> 
        getQuotasOrBuilderList();
    /**
     * <pre>
     * Set of quotas assigned to the user.
     * </pre>
     *
     * <code>repeated .yandex.cloud.mdb.clickhouse.v1.UserQuota quotas = 5;</code>
     */
    yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuotaOrBuilder getQuotasOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code yandex.cloud.mdb.clickhouse.v1.UserSpec}
   */
  public  static final class UserSpec extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:yandex.cloud.mdb.clickhouse.v1.UserSpec)
      UserSpecOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use UserSpec.newBuilder() to construct.
    private UserSpec(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private UserSpec() {
      name_ = "";
      password_ = "";
      permissions_ = java.util.Collections.emptyList();
      quotas_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private UserSpec(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              password_ = s;
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                permissions_ = new java.util.ArrayList<yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.Permission>();
                mutable_bitField0_ |= 0x00000004;
              }
              permissions_.add(
                  input.readMessage(yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.Permission.parser(), extensionRegistry));
              break;
            }
            case 34: {
              yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.Builder subBuilder = null;
              if (settings_ != null) {
                subBuilder = settings_.toBuilder();
              }
              settings_ = input.readMessage(yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(settings_);
                settings_ = subBuilder.buildPartial();
              }

              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                quotas_ = new java.util.ArrayList<yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuota>();
                mutable_bitField0_ |= 0x00000010;
              }
              quotas_.add(
                  input.readMessage(yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuota.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          permissions_ = java.util.Collections.unmodifiableList(permissions_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          quotas_ = java.util.Collections.unmodifiableList(quotas_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.internal_static_yandex_cloud_mdb_clickhouse_v1_UserSpec_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.internal_static_yandex_cloud_mdb_clickhouse_v1_UserSpec_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSpec.class, yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSpec.Builder.class);
    }

    private int bitField0_;
    public static final int NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * Name of the ClickHouse user.
     * </pre>
     *
     * <code>string name = 1 [(.yandex.cloud.required) = true, (.yandex.cloud.pattern) = "[a-zA-Z0-9_]*", (.yandex.cloud.length) = "&lt;=63"];</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Name of the ClickHouse user.
     * </pre>
     *
     * <code>string name = 1 [(.yandex.cloud.required) = true, (.yandex.cloud.pattern) = "[a-zA-Z0-9_]*", (.yandex.cloud.length) = "&lt;=63"];</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PASSWORD_FIELD_NUMBER = 2;
    private volatile java.lang.Object password_;
    /**
     * <pre>
     * Password of the ClickHouse user.
     * </pre>
     *
     * <code>string password = 2 [(.yandex.cloud.required) = true, (.yandex.cloud.length) = "8-128"];</code>
     */
    public java.lang.String getPassword() {
      java.lang.Object ref = password_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        password_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Password of the ClickHouse user.
     * </pre>
     *
     * <code>string password = 2 [(.yandex.cloud.required) = true, (.yandex.cloud.length) = "8-128"];</code>
     */
    public com.google.protobuf.ByteString
        getPasswordBytes() {
      java.lang.Object ref = password_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        password_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PERMISSIONS_FIELD_NUMBER = 3;
    private java.util.List<yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.Permission> permissions_;
    /**
     * <pre>
     * Set of permissions to grant to the user.
     * </pre>
     *
     * <code>repeated .yandex.cloud.mdb.clickhouse.v1.Permission permissions = 3;</code>
     */
    public java.util.List<yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.Permission> getPermissionsList() {
      return permissions_;
    }
    /**
     * <pre>
     * Set of permissions to grant to the user.
     * </pre>
     *
     * <code>repeated .yandex.cloud.mdb.clickhouse.v1.Permission permissions = 3;</code>
     */
    public java.util.List<? extends yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.PermissionOrBuilder> 
        getPermissionsOrBuilderList() {
      return permissions_;
    }
    /**
     * <pre>
     * Set of permissions to grant to the user.
     * </pre>
     *
     * <code>repeated .yandex.cloud.mdb.clickhouse.v1.Permission permissions = 3;</code>
     */
    public int getPermissionsCount() {
      return permissions_.size();
    }
    /**
     * <pre>
     * Set of permissions to grant to the user.
     * </pre>
     *
     * <code>repeated .yandex.cloud.mdb.clickhouse.v1.Permission permissions = 3;</code>
     */
    public yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.Permission getPermissions(int index) {
      return permissions_.get(index);
    }
    /**
     * <pre>
     * Set of permissions to grant to the user.
     * </pre>
     *
     * <code>repeated .yandex.cloud.mdb.clickhouse.v1.Permission permissions = 3;</code>
     */
    public yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.PermissionOrBuilder getPermissionsOrBuilder(
        int index) {
      return permissions_.get(index);
    }

    public static final int SETTINGS_FIELD_NUMBER = 4;
    private yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings settings_;
    /**
     * <code>.yandex.cloud.mdb.clickhouse.v1.UserSettings settings = 4;</code>
     */
    public boolean hasSettings() {
      return settings_ != null;
    }
    /**
     * <code>.yandex.cloud.mdb.clickhouse.v1.UserSettings settings = 4;</code>
     */
    public yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings getSettings() {
      return settings_ == null ? yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.getDefaultInstance() : settings_;
    }
    /**
     * <code>.yandex.cloud.mdb.clickhouse.v1.UserSettings settings = 4;</code>
     */
    public yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettingsOrBuilder getSettingsOrBuilder() {
      return getSettings();
    }

    public static final int QUOTAS_FIELD_NUMBER = 5;
    private java.util.List<yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuota> quotas_;
    /**
     * <pre>
     * Set of quotas assigned to the user.
     * </pre>
     *
     * <code>repeated .yandex.cloud.mdb.clickhouse.v1.UserQuota quotas = 5;</code>
     */
    public java.util.List<yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuota> getQuotasList() {
      return quotas_;
    }
    /**
     * <pre>
     * Set of quotas assigned to the user.
     * </pre>
     *
     * <code>repeated .yandex.cloud.mdb.clickhouse.v1.UserQuota quotas = 5;</code>
     */
    public java.util.List<? extends yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuotaOrBuilder> 
        getQuotasOrBuilderList() {
      return quotas_;
    }
    /**
     * <pre>
     * Set of quotas assigned to the user.
     * </pre>
     *
     * <code>repeated .yandex.cloud.mdb.clickhouse.v1.UserQuota quotas = 5;</code>
     */
    public int getQuotasCount() {
      return quotas_.size();
    }
    /**
     * <pre>
     * Set of quotas assigned to the user.
     * </pre>
     *
     * <code>repeated .yandex.cloud.mdb.clickhouse.v1.UserQuota quotas = 5;</code>
     */
    public yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuota getQuotas(int index) {
      return quotas_.get(index);
    }
    /**
     * <pre>
     * Set of quotas assigned to the user.
     * </pre>
     *
     * <code>repeated .yandex.cloud.mdb.clickhouse.v1.UserQuota quotas = 5;</code>
     */
    public yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuotaOrBuilder getQuotasOrBuilder(
        int index) {
      return quotas_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      if (!getPasswordBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, password_);
      }
      for (int i = 0; i < permissions_.size(); i++) {
        output.writeMessage(3, permissions_.get(i));
      }
      if (settings_ != null) {
        output.writeMessage(4, getSettings());
      }
      for (int i = 0; i < quotas_.size(); i++) {
        output.writeMessage(5, quotas_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      if (!getPasswordBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, password_);
      }
      for (int i = 0; i < permissions_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, permissions_.get(i));
      }
      if (settings_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getSettings());
      }
      for (int i = 0; i < quotas_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, quotas_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSpec)) {
        return super.equals(obj);
      }
      yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSpec other = (yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSpec) obj;

      boolean result = true;
      result = result && getName()
          .equals(other.getName());
      result = result && getPassword()
          .equals(other.getPassword());
      result = result && getPermissionsList()
          .equals(other.getPermissionsList());
      result = result && (hasSettings() == other.hasSettings());
      if (hasSettings()) {
        result = result && getSettings()
            .equals(other.getSettings());
      }
      result = result && getQuotasList()
          .equals(other.getQuotasList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + PASSWORD_FIELD_NUMBER;
      hash = (53 * hash) + getPassword().hashCode();
      if (getPermissionsCount() > 0) {
        hash = (37 * hash) + PERMISSIONS_FIELD_NUMBER;
        hash = (53 * hash) + getPermissionsList().hashCode();
      }
      if (hasSettings()) {
        hash = (37 * hash) + SETTINGS_FIELD_NUMBER;
        hash = (53 * hash) + getSettings().hashCode();
      }
      if (getQuotasCount() > 0) {
        hash = (37 * hash) + QUOTAS_FIELD_NUMBER;
        hash = (53 * hash) + getQuotasList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSpec parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSpec parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSpec parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSpec parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSpec parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSpec parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSpec parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSpec parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSpec parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSpec parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSpec parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSpec parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSpec prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code yandex.cloud.mdb.clickhouse.v1.UserSpec}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:yandex.cloud.mdb.clickhouse.v1.UserSpec)
        yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSpecOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.internal_static_yandex_cloud_mdb_clickhouse_v1_UserSpec_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.internal_static_yandex_cloud_mdb_clickhouse_v1_UserSpec_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSpec.class, yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSpec.Builder.class);
      }

      // Construct using yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSpec.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getPermissionsFieldBuilder();
          getQuotasFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        name_ = "";

        password_ = "";

        if (permissionsBuilder_ == null) {
          permissions_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          permissionsBuilder_.clear();
        }
        if (settingsBuilder_ == null) {
          settings_ = null;
        } else {
          settings_ = null;
          settingsBuilder_ = null;
        }
        if (quotasBuilder_ == null) {
          quotas_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          quotasBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.internal_static_yandex_cloud_mdb_clickhouse_v1_UserSpec_descriptor;
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSpec getDefaultInstanceForType() {
        return yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSpec.getDefaultInstance();
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSpec build() {
        yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSpec result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSpec buildPartial() {
        yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSpec result = new yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSpec(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.name_ = name_;
        result.password_ = password_;
        if (permissionsBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            permissions_ = java.util.Collections.unmodifiableList(permissions_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.permissions_ = permissions_;
        } else {
          result.permissions_ = permissionsBuilder_.build();
        }
        if (settingsBuilder_ == null) {
          result.settings_ = settings_;
        } else {
          result.settings_ = settingsBuilder_.build();
        }
        if (quotasBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            quotas_ = java.util.Collections.unmodifiableList(quotas_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.quotas_ = quotas_;
        } else {
          result.quotas_ = quotasBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSpec) {
          return mergeFrom((yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSpec)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSpec other) {
        if (other == yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSpec.getDefaultInstance()) return this;
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (!other.getPassword().isEmpty()) {
          password_ = other.password_;
          onChanged();
        }
        if (permissionsBuilder_ == null) {
          if (!other.permissions_.isEmpty()) {
            if (permissions_.isEmpty()) {
              permissions_ = other.permissions_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensurePermissionsIsMutable();
              permissions_.addAll(other.permissions_);
            }
            onChanged();
          }
        } else {
          if (!other.permissions_.isEmpty()) {
            if (permissionsBuilder_.isEmpty()) {
              permissionsBuilder_.dispose();
              permissionsBuilder_ = null;
              permissions_ = other.permissions_;
              bitField0_ = (bitField0_ & ~0x00000004);
              permissionsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getPermissionsFieldBuilder() : null;
            } else {
              permissionsBuilder_.addAllMessages(other.permissions_);
            }
          }
        }
        if (other.hasSettings()) {
          mergeSettings(other.getSettings());
        }
        if (quotasBuilder_ == null) {
          if (!other.quotas_.isEmpty()) {
            if (quotas_.isEmpty()) {
              quotas_ = other.quotas_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureQuotasIsMutable();
              quotas_.addAll(other.quotas_);
            }
            onChanged();
          }
        } else {
          if (!other.quotas_.isEmpty()) {
            if (quotasBuilder_.isEmpty()) {
              quotasBuilder_.dispose();
              quotasBuilder_ = null;
              quotas_ = other.quotas_;
              bitField0_ = (bitField0_ & ~0x00000010);
              quotasBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getQuotasFieldBuilder() : null;
            } else {
              quotasBuilder_.addAllMessages(other.quotas_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSpec parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSpec) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * Name of the ClickHouse user.
       * </pre>
       *
       * <code>string name = 1 [(.yandex.cloud.required) = true, (.yandex.cloud.pattern) = "[a-zA-Z0-9_]*", (.yandex.cloud.length) = "&lt;=63"];</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Name of the ClickHouse user.
       * </pre>
       *
       * <code>string name = 1 [(.yandex.cloud.required) = true, (.yandex.cloud.pattern) = "[a-zA-Z0-9_]*", (.yandex.cloud.length) = "&lt;=63"];</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Name of the ClickHouse user.
       * </pre>
       *
       * <code>string name = 1 [(.yandex.cloud.required) = true, (.yandex.cloud.pattern) = "[a-zA-Z0-9_]*", (.yandex.cloud.length) = "&lt;=63"];</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Name of the ClickHouse user.
       * </pre>
       *
       * <code>string name = 1 [(.yandex.cloud.required) = true, (.yandex.cloud.pattern) = "[a-zA-Z0-9_]*", (.yandex.cloud.length) = "&lt;=63"];</code>
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Name of the ClickHouse user.
       * </pre>
       *
       * <code>string name = 1 [(.yandex.cloud.required) = true, (.yandex.cloud.pattern) = "[a-zA-Z0-9_]*", (.yandex.cloud.length) = "&lt;=63"];</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object password_ = "";
      /**
       * <pre>
       * Password of the ClickHouse user.
       * </pre>
       *
       * <code>string password = 2 [(.yandex.cloud.required) = true, (.yandex.cloud.length) = "8-128"];</code>
       */
      public java.lang.String getPassword() {
        java.lang.Object ref = password_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          password_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Password of the ClickHouse user.
       * </pre>
       *
       * <code>string password = 2 [(.yandex.cloud.required) = true, (.yandex.cloud.length) = "8-128"];</code>
       */
      public com.google.protobuf.ByteString
          getPasswordBytes() {
        java.lang.Object ref = password_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          password_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Password of the ClickHouse user.
       * </pre>
       *
       * <code>string password = 2 [(.yandex.cloud.required) = true, (.yandex.cloud.length) = "8-128"];</code>
       */
      public Builder setPassword(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        password_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Password of the ClickHouse user.
       * </pre>
       *
       * <code>string password = 2 [(.yandex.cloud.required) = true, (.yandex.cloud.length) = "8-128"];</code>
       */
      public Builder clearPassword() {
        
        password_ = getDefaultInstance().getPassword();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Password of the ClickHouse user.
       * </pre>
       *
       * <code>string password = 2 [(.yandex.cloud.required) = true, (.yandex.cloud.length) = "8-128"];</code>
       */
      public Builder setPasswordBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        password_ = value;
        onChanged();
        return this;
      }

      private java.util.List<yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.Permission> permissions_ =
        java.util.Collections.emptyList();
      private void ensurePermissionsIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          permissions_ = new java.util.ArrayList<yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.Permission>(permissions_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.Permission, yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.Permission.Builder, yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.PermissionOrBuilder> permissionsBuilder_;

      /**
       * <pre>
       * Set of permissions to grant to the user.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.Permission permissions = 3;</code>
       */
      public java.util.List<yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.Permission> getPermissionsList() {
        if (permissionsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(permissions_);
        } else {
          return permissionsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Set of permissions to grant to the user.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.Permission permissions = 3;</code>
       */
      public int getPermissionsCount() {
        if (permissionsBuilder_ == null) {
          return permissions_.size();
        } else {
          return permissionsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Set of permissions to grant to the user.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.Permission permissions = 3;</code>
       */
      public yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.Permission getPermissions(int index) {
        if (permissionsBuilder_ == null) {
          return permissions_.get(index);
        } else {
          return permissionsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Set of permissions to grant to the user.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.Permission permissions = 3;</code>
       */
      public Builder setPermissions(
          int index, yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.Permission value) {
        if (permissionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePermissionsIsMutable();
          permissions_.set(index, value);
          onChanged();
        } else {
          permissionsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Set of permissions to grant to the user.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.Permission permissions = 3;</code>
       */
      public Builder setPermissions(
          int index, yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.Permission.Builder builderForValue) {
        if (permissionsBuilder_ == null) {
          ensurePermissionsIsMutable();
          permissions_.set(index, builderForValue.build());
          onChanged();
        } else {
          permissionsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Set of permissions to grant to the user.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.Permission permissions = 3;</code>
       */
      public Builder addPermissions(yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.Permission value) {
        if (permissionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePermissionsIsMutable();
          permissions_.add(value);
          onChanged();
        } else {
          permissionsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Set of permissions to grant to the user.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.Permission permissions = 3;</code>
       */
      public Builder addPermissions(
          int index, yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.Permission value) {
        if (permissionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePermissionsIsMutable();
          permissions_.add(index, value);
          onChanged();
        } else {
          permissionsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Set of permissions to grant to the user.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.Permission permissions = 3;</code>
       */
      public Builder addPermissions(
          yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.Permission.Builder builderForValue) {
        if (permissionsBuilder_ == null) {
          ensurePermissionsIsMutable();
          permissions_.add(builderForValue.build());
          onChanged();
        } else {
          permissionsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Set of permissions to grant to the user.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.Permission permissions = 3;</code>
       */
      public Builder addPermissions(
          int index, yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.Permission.Builder builderForValue) {
        if (permissionsBuilder_ == null) {
          ensurePermissionsIsMutable();
          permissions_.add(index, builderForValue.build());
          onChanged();
        } else {
          permissionsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Set of permissions to grant to the user.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.Permission permissions = 3;</code>
       */
      public Builder addAllPermissions(
          java.lang.Iterable<? extends yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.Permission> values) {
        if (permissionsBuilder_ == null) {
          ensurePermissionsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, permissions_);
          onChanged();
        } else {
          permissionsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Set of permissions to grant to the user.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.Permission permissions = 3;</code>
       */
      public Builder clearPermissions() {
        if (permissionsBuilder_ == null) {
          permissions_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          permissionsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Set of permissions to grant to the user.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.Permission permissions = 3;</code>
       */
      public Builder removePermissions(int index) {
        if (permissionsBuilder_ == null) {
          ensurePermissionsIsMutable();
          permissions_.remove(index);
          onChanged();
        } else {
          permissionsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Set of permissions to grant to the user.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.Permission permissions = 3;</code>
       */
      public yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.Permission.Builder getPermissionsBuilder(
          int index) {
        return getPermissionsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Set of permissions to grant to the user.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.Permission permissions = 3;</code>
       */
      public yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.PermissionOrBuilder getPermissionsOrBuilder(
          int index) {
        if (permissionsBuilder_ == null) {
          return permissions_.get(index);  } else {
          return permissionsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Set of permissions to grant to the user.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.Permission permissions = 3;</code>
       */
      public java.util.List<? extends yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.PermissionOrBuilder> 
           getPermissionsOrBuilderList() {
        if (permissionsBuilder_ != null) {
          return permissionsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(permissions_);
        }
      }
      /**
       * <pre>
       * Set of permissions to grant to the user.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.Permission permissions = 3;</code>
       */
      public yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.Permission.Builder addPermissionsBuilder() {
        return getPermissionsFieldBuilder().addBuilder(
            yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.Permission.getDefaultInstance());
      }
      /**
       * <pre>
       * Set of permissions to grant to the user.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.Permission permissions = 3;</code>
       */
      public yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.Permission.Builder addPermissionsBuilder(
          int index) {
        return getPermissionsFieldBuilder().addBuilder(
            index, yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.Permission.getDefaultInstance());
      }
      /**
       * <pre>
       * Set of permissions to grant to the user.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.Permission permissions = 3;</code>
       */
      public java.util.List<yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.Permission.Builder> 
           getPermissionsBuilderList() {
        return getPermissionsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.Permission, yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.Permission.Builder, yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.PermissionOrBuilder> 
          getPermissionsFieldBuilder() {
        if (permissionsBuilder_ == null) {
          permissionsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.Permission, yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.Permission.Builder, yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.PermissionOrBuilder>(
                  permissions_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          permissions_ = null;
        }
        return permissionsBuilder_;
      }

      private yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings settings_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings, yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.Builder, yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettingsOrBuilder> settingsBuilder_;
      /**
       * <code>.yandex.cloud.mdb.clickhouse.v1.UserSettings settings = 4;</code>
       */
      public boolean hasSettings() {
        return settingsBuilder_ != null || settings_ != null;
      }
      /**
       * <code>.yandex.cloud.mdb.clickhouse.v1.UserSettings settings = 4;</code>
       */
      public yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings getSettings() {
        if (settingsBuilder_ == null) {
          return settings_ == null ? yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.getDefaultInstance() : settings_;
        } else {
          return settingsBuilder_.getMessage();
        }
      }
      /**
       * <code>.yandex.cloud.mdb.clickhouse.v1.UserSettings settings = 4;</code>
       */
      public Builder setSettings(yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings value) {
        if (settingsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          settings_ = value;
          onChanged();
        } else {
          settingsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.yandex.cloud.mdb.clickhouse.v1.UserSettings settings = 4;</code>
       */
      public Builder setSettings(
          yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.Builder builderForValue) {
        if (settingsBuilder_ == null) {
          settings_ = builderForValue.build();
          onChanged();
        } else {
          settingsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.yandex.cloud.mdb.clickhouse.v1.UserSettings settings = 4;</code>
       */
      public Builder mergeSettings(yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings value) {
        if (settingsBuilder_ == null) {
          if (settings_ != null) {
            settings_ =
              yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.newBuilder(settings_).mergeFrom(value).buildPartial();
          } else {
            settings_ = value;
          }
          onChanged();
        } else {
          settingsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.yandex.cloud.mdb.clickhouse.v1.UserSettings settings = 4;</code>
       */
      public Builder clearSettings() {
        if (settingsBuilder_ == null) {
          settings_ = null;
          onChanged();
        } else {
          settings_ = null;
          settingsBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.yandex.cloud.mdb.clickhouse.v1.UserSettings settings = 4;</code>
       */
      public yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.Builder getSettingsBuilder() {
        
        onChanged();
        return getSettingsFieldBuilder().getBuilder();
      }
      /**
       * <code>.yandex.cloud.mdb.clickhouse.v1.UserSettings settings = 4;</code>
       */
      public yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettingsOrBuilder getSettingsOrBuilder() {
        if (settingsBuilder_ != null) {
          return settingsBuilder_.getMessageOrBuilder();
        } else {
          return settings_ == null ?
              yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.getDefaultInstance() : settings_;
        }
      }
      /**
       * <code>.yandex.cloud.mdb.clickhouse.v1.UserSettings settings = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings, yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.Builder, yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettingsOrBuilder> 
          getSettingsFieldBuilder() {
        if (settingsBuilder_ == null) {
          settingsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings, yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.Builder, yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettingsOrBuilder>(
                  getSettings(),
                  getParentForChildren(),
                  isClean());
          settings_ = null;
        }
        return settingsBuilder_;
      }

      private java.util.List<yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuota> quotas_ =
        java.util.Collections.emptyList();
      private void ensureQuotasIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          quotas_ = new java.util.ArrayList<yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuota>(quotas_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuota, yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuota.Builder, yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuotaOrBuilder> quotasBuilder_;

      /**
       * <pre>
       * Set of quotas assigned to the user.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.UserQuota quotas = 5;</code>
       */
      public java.util.List<yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuota> getQuotasList() {
        if (quotasBuilder_ == null) {
          return java.util.Collections.unmodifiableList(quotas_);
        } else {
          return quotasBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Set of quotas assigned to the user.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.UserQuota quotas = 5;</code>
       */
      public int getQuotasCount() {
        if (quotasBuilder_ == null) {
          return quotas_.size();
        } else {
          return quotasBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Set of quotas assigned to the user.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.UserQuota quotas = 5;</code>
       */
      public yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuota getQuotas(int index) {
        if (quotasBuilder_ == null) {
          return quotas_.get(index);
        } else {
          return quotasBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Set of quotas assigned to the user.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.UserQuota quotas = 5;</code>
       */
      public Builder setQuotas(
          int index, yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuota value) {
        if (quotasBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureQuotasIsMutable();
          quotas_.set(index, value);
          onChanged();
        } else {
          quotasBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Set of quotas assigned to the user.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.UserQuota quotas = 5;</code>
       */
      public Builder setQuotas(
          int index, yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuota.Builder builderForValue) {
        if (quotasBuilder_ == null) {
          ensureQuotasIsMutable();
          quotas_.set(index, builderForValue.build());
          onChanged();
        } else {
          quotasBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Set of quotas assigned to the user.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.UserQuota quotas = 5;</code>
       */
      public Builder addQuotas(yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuota value) {
        if (quotasBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureQuotasIsMutable();
          quotas_.add(value);
          onChanged();
        } else {
          quotasBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Set of quotas assigned to the user.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.UserQuota quotas = 5;</code>
       */
      public Builder addQuotas(
          int index, yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuota value) {
        if (quotasBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureQuotasIsMutable();
          quotas_.add(index, value);
          onChanged();
        } else {
          quotasBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Set of quotas assigned to the user.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.UserQuota quotas = 5;</code>
       */
      public Builder addQuotas(
          yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuota.Builder builderForValue) {
        if (quotasBuilder_ == null) {
          ensureQuotasIsMutable();
          quotas_.add(builderForValue.build());
          onChanged();
        } else {
          quotasBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Set of quotas assigned to the user.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.UserQuota quotas = 5;</code>
       */
      public Builder addQuotas(
          int index, yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuota.Builder builderForValue) {
        if (quotasBuilder_ == null) {
          ensureQuotasIsMutable();
          quotas_.add(index, builderForValue.build());
          onChanged();
        } else {
          quotasBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Set of quotas assigned to the user.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.UserQuota quotas = 5;</code>
       */
      public Builder addAllQuotas(
          java.lang.Iterable<? extends yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuota> values) {
        if (quotasBuilder_ == null) {
          ensureQuotasIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, quotas_);
          onChanged();
        } else {
          quotasBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Set of quotas assigned to the user.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.UserQuota quotas = 5;</code>
       */
      public Builder clearQuotas() {
        if (quotasBuilder_ == null) {
          quotas_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          quotasBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Set of quotas assigned to the user.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.UserQuota quotas = 5;</code>
       */
      public Builder removeQuotas(int index) {
        if (quotasBuilder_ == null) {
          ensureQuotasIsMutable();
          quotas_.remove(index);
          onChanged();
        } else {
          quotasBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Set of quotas assigned to the user.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.UserQuota quotas = 5;</code>
       */
      public yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuota.Builder getQuotasBuilder(
          int index) {
        return getQuotasFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Set of quotas assigned to the user.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.UserQuota quotas = 5;</code>
       */
      public yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuotaOrBuilder getQuotasOrBuilder(
          int index) {
        if (quotasBuilder_ == null) {
          return quotas_.get(index);  } else {
          return quotasBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Set of quotas assigned to the user.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.UserQuota quotas = 5;</code>
       */
      public java.util.List<? extends yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuotaOrBuilder> 
           getQuotasOrBuilderList() {
        if (quotasBuilder_ != null) {
          return quotasBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(quotas_);
        }
      }
      /**
       * <pre>
       * Set of quotas assigned to the user.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.UserQuota quotas = 5;</code>
       */
      public yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuota.Builder addQuotasBuilder() {
        return getQuotasFieldBuilder().addBuilder(
            yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuota.getDefaultInstance());
      }
      /**
       * <pre>
       * Set of quotas assigned to the user.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.UserQuota quotas = 5;</code>
       */
      public yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuota.Builder addQuotasBuilder(
          int index) {
        return getQuotasFieldBuilder().addBuilder(
            index, yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuota.getDefaultInstance());
      }
      /**
       * <pre>
       * Set of quotas assigned to the user.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.UserQuota quotas = 5;</code>
       */
      public java.util.List<yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuota.Builder> 
           getQuotasBuilderList() {
        return getQuotasFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuota, yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuota.Builder, yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuotaOrBuilder> 
          getQuotasFieldBuilder() {
        if (quotasBuilder_ == null) {
          quotasBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuota, yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuota.Builder, yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuotaOrBuilder>(
                  quotas_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          quotas_ = null;
        }
        return quotasBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:yandex.cloud.mdb.clickhouse.v1.UserSpec)
    }

    // @@protoc_insertion_point(class_scope:yandex.cloud.mdb.clickhouse.v1.UserSpec)
    private static final yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSpec DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSpec();
    }

    public static yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSpec getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<UserSpec>
        PARSER = new com.google.protobuf.AbstractParser<UserSpec>() {
      @java.lang.Override
      public UserSpec parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new UserSpec(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<UserSpec> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<UserSpec> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSpec getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface UserSettingsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:yandex.cloud.mdb.clickhouse.v1.UserSettings)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Restricts permissions for non-DDL queries.
     * Possible values:
     * * 0 (default) —  no restrictions.
     * * 1 — only read data queries are allowed.
     * * 2 — read data and change settings queries are allowed.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/permissions_for_queries/#settings_readonly).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value readonly = 1 [(.yandex.cloud.value) = "0-2"];</code>
     */
    boolean hasReadonly();
    /**
     * <pre>
     * Restricts permissions for non-DDL queries.
     * Possible values:
     * * 0 (default) —  no restrictions.
     * * 1 — only read data queries are allowed.
     * * 2 — read data and change settings queries are allowed.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/permissions_for_queries/#settings_readonly).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value readonly = 1 [(.yandex.cloud.value) = "0-2"];</code>
     */
    com.google.protobuf.Int64Value getReadonly();
    /**
     * <pre>
     * Restricts permissions for non-DDL queries.
     * Possible values:
     * * 0 (default) —  no restrictions.
     * * 1 — only read data queries are allowed.
     * * 2 — read data and change settings queries are allowed.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/permissions_for_queries/#settings_readonly).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value readonly = 1 [(.yandex.cloud.value) = "0-2"];</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getReadonlyOrBuilder();

    /**
     * <pre>
     * Whether DDL queries are allowed. Default value: `false`.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/permissions_for_queries/#settings_allow_ddl).
     * </pre>
     *
     * <code>.google.protobuf.BoolValue allow_ddl = 2;</code>
     */
    boolean hasAllowDdl();
    /**
     * <pre>
     * Whether DDL queries are allowed. Default value: `false`.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/permissions_for_queries/#settings_allow_ddl).
     * </pre>
     *
     * <code>.google.protobuf.BoolValue allow_ddl = 2;</code>
     */
    com.google.protobuf.BoolValue getAllowDdl();
    /**
     * <pre>
     * Whether DDL queries are allowed. Default value: `false`.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/permissions_for_queries/#settings_allow_ddl).
     * </pre>
     *
     * <code>.google.protobuf.BoolValue allow_ddl = 2;</code>
     */
    com.google.protobuf.BoolValueOrBuilder getAllowDdlOrBuilder();

    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-insert_quorum).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value insert_quorum = 3 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    boolean hasInsertQuorum();
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-insert_quorum).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value insert_quorum = 3 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    com.google.protobuf.Int64Value getInsertQuorum();
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-insert_quorum).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value insert_quorum = 3 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getInsertQuorumOrBuilder();

    /**
     * <pre>
     * Connection timeout in milliseconds.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#connect-timeout-receive-timeout-send-timeout).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value connect_timeout = 39 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    boolean hasConnectTimeout();
    /**
     * <pre>
     * Connection timeout in milliseconds.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#connect-timeout-receive-timeout-send-timeout).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value connect_timeout = 39 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    com.google.protobuf.Int64Value getConnectTimeout();
    /**
     * <pre>
     * Connection timeout in milliseconds.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#connect-timeout-receive-timeout-send-timeout).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value connect_timeout = 39 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getConnectTimeoutOrBuilder();

    /**
     * <pre>
     * Receive timeout in milliseconds.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#connect-timeout-receive-timeout-send-timeout).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value receive_timeout = 40 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    boolean hasReceiveTimeout();
    /**
     * <pre>
     * Receive timeout in milliseconds.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#connect-timeout-receive-timeout-send-timeout).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value receive_timeout = 40 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    com.google.protobuf.Int64Value getReceiveTimeout();
    /**
     * <pre>
     * Receive timeout in milliseconds.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#connect-timeout-receive-timeout-send-timeout).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value receive_timeout = 40 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getReceiveTimeoutOrBuilder();

    /**
     * <pre>
     * Send timeout in milliseconds.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#connect-timeout-receive-timeout-send-timeout).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value send_timeout = 41 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    boolean hasSendTimeout();
    /**
     * <pre>
     * Send timeout in milliseconds.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#connect-timeout-receive-timeout-send-timeout).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value send_timeout = 41 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    com.google.protobuf.Int64Value getSendTimeout();
    /**
     * <pre>
     * Send timeout in milliseconds.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#connect-timeout-receive-timeout-send-timeout).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value send_timeout = 41 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getSendTimeoutOrBuilder();

    /**
     * <pre>
     * Quorum write timeout in milliseconds. Default value: 60000.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-insert_quorum_timeout).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value insert_quorum_timeout = 4 [(.yandex.cloud.value) = "&gt;=1000"];</code>
     */
    boolean hasInsertQuorumTimeout();
    /**
     * <pre>
     * Quorum write timeout in milliseconds. Default value: 60000.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-insert_quorum_timeout).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value insert_quorum_timeout = 4 [(.yandex.cloud.value) = "&gt;=1000"];</code>
     */
    com.google.protobuf.Int64Value getInsertQuorumTimeout();
    /**
     * <pre>
     * Quorum write timeout in milliseconds. Default value: 60000.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-insert_quorum_timeout).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value insert_quorum_timeout = 4 [(.yandex.cloud.value) = "&gt;=1000"];</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getInsertQuorumTimeoutOrBuilder();

    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-select_sequential_consistency).
     * </pre>
     *
     * <code>.google.protobuf.BoolValue select_sequential_consistency = 5;</code>
     */
    boolean hasSelectSequentialConsistency();
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-select_sequential_consistency).
     * </pre>
     *
     * <code>.google.protobuf.BoolValue select_sequential_consistency = 5;</code>
     */
    com.google.protobuf.BoolValue getSelectSequentialConsistency();
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-select_sequential_consistency).
     * </pre>
     *
     * <code>.google.protobuf.BoolValue select_sequential_consistency = 5;</code>
     */
    com.google.protobuf.BoolValueOrBuilder getSelectSequentialConsistencyOrBuilder();

    /**
     * <pre>
     * Max replica delay in milliseconds. If a replica lags more than the set value, this replica is not used. Default value: 300000.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_replica_delay_for_distributed_queries).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_replica_delay_for_distributed_queries = 6 [(.yandex.cloud.value) = "&gt;=1000"];</code>
     */
    boolean hasMaxReplicaDelayForDistributedQueries();
    /**
     * <pre>
     * Max replica delay in milliseconds. If a replica lags more than the set value, this replica is not used. Default value: 300000.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_replica_delay_for_distributed_queries).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_replica_delay_for_distributed_queries = 6 [(.yandex.cloud.value) = "&gt;=1000"];</code>
     */
    com.google.protobuf.Int64Value getMaxReplicaDelayForDistributedQueries();
    /**
     * <pre>
     * Max replica delay in milliseconds. If a replica lags more than the set value, this replica is not used. Default value: 300000.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_replica_delay_for_distributed_queries).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_replica_delay_for_distributed_queries = 6 [(.yandex.cloud.value) = "&gt;=1000"];</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getMaxReplicaDelayForDistributedQueriesOrBuilder();

    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-fallback_to_stale_replicas_for_distributed_queries).
     * </pre>
     *
     * <code>.google.protobuf.BoolValue fallback_to_stale_replicas_for_distributed_queries = 7;</code>
     */
    boolean hasFallbackToStaleReplicasForDistributedQueries();
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-fallback_to_stale_replicas_for_distributed_queries).
     * </pre>
     *
     * <code>.google.protobuf.BoolValue fallback_to_stale_replicas_for_distributed_queries = 7;</code>
     */
    com.google.protobuf.BoolValue getFallbackToStaleReplicasForDistributedQueries();
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-fallback_to_stale_replicas_for_distributed_queries).
     * </pre>
     *
     * <code>.google.protobuf.BoolValue fallback_to_stale_replicas_for_distributed_queries = 7;</code>
     */
    com.google.protobuf.BoolValueOrBuilder getFallbackToStaleReplicasForDistributedQueriesOrBuilder();

    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/query_language/alter/#synchronicity-of-alter-queries).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value replication_alter_partitions_sync = 42 [(.yandex.cloud.value) = "0-2"];</code>
     */
    boolean hasReplicationAlterPartitionsSync();
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/query_language/alter/#synchronicity-of-alter-queries).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value replication_alter_partitions_sync = 42 [(.yandex.cloud.value) = "0-2"];</code>
     */
    com.google.protobuf.Int64Value getReplicationAlterPartitionsSync();
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/query_language/alter/#synchronicity-of-alter-queries).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value replication_alter_partitions_sync = 42 [(.yandex.cloud.value) = "0-2"];</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getReplicationAlterPartitionsSyncOrBuilder();

    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#distributed-product-mode).
     * </pre>
     *
     * <code>.yandex.cloud.mdb.clickhouse.v1.UserSettings.DistributedProductMode distributed_product_mode = 43;</code>
     */
    int getDistributedProductModeValue();
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#distributed-product-mode).
     * </pre>
     *
     * <code>.yandex.cloud.mdb.clickhouse.v1.UserSettings.DistributedProductMode distributed_product_mode = 43;</code>
     */
    yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.DistributedProductMode getDistributedProductMode();

    /**
     * <pre>
     * Whether the memory-saving mode of distributed aggregation is enabled.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue distributed_aggregation_memory_efficient = 72;</code>
     */
    boolean hasDistributedAggregationMemoryEfficient();
    /**
     * <pre>
     * Whether the memory-saving mode of distributed aggregation is enabled.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue distributed_aggregation_memory_efficient = 72;</code>
     */
    com.google.protobuf.BoolValue getDistributedAggregationMemoryEfficient();
    /**
     * <pre>
     * Whether the memory-saving mode of distributed aggregation is enabled.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue distributed_aggregation_memory_efficient = 72;</code>
     */
    com.google.protobuf.BoolValueOrBuilder getDistributedAggregationMemoryEfficientOrBuilder();

    /**
     * <pre>
     * Timeout for DDL queries, in milliseconds.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value distributed_ddl_task_timeout = 73;</code>
     */
    boolean hasDistributedDdlTaskTimeout();
    /**
     * <pre>
     * Timeout for DDL queries, in milliseconds.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value distributed_ddl_task_timeout = 73;</code>
     */
    com.google.protobuf.Int64Value getDistributedDdlTaskTimeout();
    /**
     * <pre>
     * Timeout for DDL queries, in milliseconds.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value distributed_ddl_task_timeout = 73;</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getDistributedDdlTaskTimeoutOrBuilder();

    /**
     * <pre>
     * Whether query compilation is enabled.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#compile).
     * </pre>
     *
     * <code>.google.protobuf.BoolValue compile = 44;</code>
     */
    boolean hasCompile();
    /**
     * <pre>
     * Whether query compilation is enabled.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#compile).
     * </pre>
     *
     * <code>.google.protobuf.BoolValue compile = 44;</code>
     */
    com.google.protobuf.BoolValue getCompile();
    /**
     * <pre>
     * Whether query compilation is enabled.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#compile).
     * </pre>
     *
     * <code>.google.protobuf.BoolValue compile = 44;</code>
     */
    com.google.protobuf.BoolValueOrBuilder getCompileOrBuilder();

    /**
     * <pre>
     * The number of structurally identical queries before they are compiled.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#min-count-to-compile).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value min_count_to_compile = 45 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    boolean hasMinCountToCompile();
    /**
     * <pre>
     * The number of structurally identical queries before they are compiled.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#min-count-to-compile).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value min_count_to_compile = 45 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    com.google.protobuf.Int64Value getMinCountToCompile();
    /**
     * <pre>
     * The number of structurally identical queries before they are compiled.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#min-count-to-compile).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value min_count_to_compile = 45 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getMinCountToCompileOrBuilder();

    /**
     * <pre>
     * Whether expression compilation is enabled.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue compile_expressions = 46;</code>
     */
    boolean hasCompileExpressions();
    /**
     * <pre>
     * Whether expression compilation is enabled.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue compile_expressions = 46;</code>
     */
    com.google.protobuf.BoolValue getCompileExpressions();
    /**
     * <pre>
     * Whether expression compilation is enabled.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue compile_expressions = 46;</code>
     */
    com.google.protobuf.BoolValueOrBuilder getCompileExpressionsOrBuilder();

    /**
     * <pre>
     * The number of identical expressions before they are compiled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value min_count_to_compile_expression = 47 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    boolean hasMinCountToCompileExpression();
    /**
     * <pre>
     * The number of identical expressions before they are compiled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value min_count_to_compile_expression = 47 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    com.google.protobuf.Int64Value getMinCountToCompileExpression();
    /**
     * <pre>
     * The number of identical expressions before they are compiled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value min_count_to_compile_expression = 47 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getMinCountToCompileExpressionOrBuilder();

    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#max-block-size).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_block_size = 9 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    boolean hasMaxBlockSize();
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#max-block-size).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_block_size = 9 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    com.google.protobuf.Int64Value getMaxBlockSize();
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#max-block-size).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_block_size = 9 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getMaxBlockSizeOrBuilder();

    /**
     * <pre>
     * Squash blocks passed to INSERT query to specified size in rows, if blocks are not big enough. If set to `0`,
     * blocks will never be squashed.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value min_insert_block_size_rows = 48 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    boolean hasMinInsertBlockSizeRows();
    /**
     * <pre>
     * Squash blocks passed to INSERT query to specified size in rows, if blocks are not big enough. If set to `0`,
     * blocks will never be squashed.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value min_insert_block_size_rows = 48 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    com.google.protobuf.Int64Value getMinInsertBlockSizeRows();
    /**
     * <pre>
     * Squash blocks passed to INSERT query to specified size in rows, if blocks are not big enough. If set to `0`,
     * blocks will never be squashed.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value min_insert_block_size_rows = 48 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getMinInsertBlockSizeRowsOrBuilder();

    /**
     * <pre>
     * Squash blocks passed to INSERT query to specified size in bytes, if blocks are not big enough.  If set to `0`,
     * blocks will never be squashed.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value min_insert_block_size_bytes = 49 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    boolean hasMinInsertBlockSizeBytes();
    /**
     * <pre>
     * Squash blocks passed to INSERT query to specified size in bytes, if blocks are not big enough.  If set to `0`,
     * blocks will never be squashed.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value min_insert_block_size_bytes = 49 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    com.google.protobuf.Int64Value getMinInsertBlockSizeBytes();
    /**
     * <pre>
     * Squash blocks passed to INSERT query to specified size in bytes, if blocks are not big enough.  If set to `0`,
     * blocks will never be squashed.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value min_insert_block_size_bytes = 49 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getMinInsertBlockSizeBytesOrBuilder();

    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_insert_block_size).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_insert_block_size = 10 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    boolean hasMaxInsertBlockSize();
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_insert_block_size).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_insert_block_size = 10 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    com.google.protobuf.Int64Value getMaxInsertBlockSize();
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_insert_block_size).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_insert_block_size = 10 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getMaxInsertBlockSizeOrBuilder();

    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-min_bytes_to_use_direct_io).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value min_bytes_to_use_direct_io = 50 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    boolean hasMinBytesToUseDirectIo();
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-min_bytes_to_use_direct_io).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value min_bytes_to_use_direct_io = 50 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    com.google.protobuf.Int64Value getMinBytesToUseDirectIo();
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-min_bytes_to_use_direct_io).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value min_bytes_to_use_direct_io = 50 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getMinBytesToUseDirectIoOrBuilder();

    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#setting-use_uncompressed_cache).
     * </pre>
     *
     * <code>.google.protobuf.BoolValue use_uncompressed_cache = 51;</code>
     */
    boolean hasUseUncompressedCache();
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#setting-use_uncompressed_cache).
     * </pre>
     *
     * <code>.google.protobuf.BoolValue use_uncompressed_cache = 51;</code>
     */
    com.google.protobuf.BoolValue getUseUncompressedCache();
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#setting-use_uncompressed_cache).
     * </pre>
     *
     * <code>.google.protobuf.BoolValue use_uncompressed_cache = 51;</code>
     */
    com.google.protobuf.BoolValueOrBuilder getUseUncompressedCacheOrBuilder();

    /**
     * <pre>
     * The maximum request size in rows to use the cache of uncompressed data. The cache is not used for requests larger
     * than the specified value.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#setting-merge_tree_max_rows_to_use_cache).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value merge_tree_max_rows_to_use_cache = 52 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    boolean hasMergeTreeMaxRowsToUseCache();
    /**
     * <pre>
     * The maximum request size in rows to use the cache of uncompressed data. The cache is not used for requests larger
     * than the specified value.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#setting-merge_tree_max_rows_to_use_cache).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value merge_tree_max_rows_to_use_cache = 52 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    com.google.protobuf.Int64Value getMergeTreeMaxRowsToUseCache();
    /**
     * <pre>
     * The maximum request size in rows to use the cache of uncompressed data. The cache is not used for requests larger
     * than the specified value.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#setting-merge_tree_max_rows_to_use_cache).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value merge_tree_max_rows_to_use_cache = 52 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getMergeTreeMaxRowsToUseCacheOrBuilder();

    /**
     * <pre>
     * The maximum request size in bytes to use the cache of uncompressed data. The cache is not used for requests larger
     * than the specified value.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value merge_tree_max_bytes_to_use_cache = 53 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    boolean hasMergeTreeMaxBytesToUseCache();
    /**
     * <pre>
     * The maximum request size in bytes to use the cache of uncompressed data. The cache is not used for requests larger
     * than the specified value.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value merge_tree_max_bytes_to_use_cache = 53 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    com.google.protobuf.Int64Value getMergeTreeMaxBytesToUseCache();
    /**
     * <pre>
     * The maximum request size in bytes to use the cache of uncompressed data. The cache is not used for requests larger
     * than the specified value.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value merge_tree_max_bytes_to_use_cache = 53 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getMergeTreeMaxBytesToUseCacheOrBuilder();

    /**
     * <pre>
     * The minimum number of rows to be read from a file to enable concurrent read.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#setting-merge_tree_min_rows_for_concurrent_read).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value merge_tree_min_rows_for_concurrent_read = 54 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    boolean hasMergeTreeMinRowsForConcurrentRead();
    /**
     * <pre>
     * The minimum number of rows to be read from a file to enable concurrent read.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#setting-merge_tree_min_rows_for_concurrent_read).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value merge_tree_min_rows_for_concurrent_read = 54 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    com.google.protobuf.Int64Value getMergeTreeMinRowsForConcurrentRead();
    /**
     * <pre>
     * The minimum number of rows to be read from a file to enable concurrent read.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#setting-merge_tree_min_rows_for_concurrent_read).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value merge_tree_min_rows_for_concurrent_read = 54 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getMergeTreeMinRowsForConcurrentReadOrBuilder();

    /**
     * <pre>
     * The minimum number of bytes to be read from a file to enable concurrent read.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value merge_tree_min_bytes_for_concurrent_read = 55 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    boolean hasMergeTreeMinBytesForConcurrentRead();
    /**
     * <pre>
     * The minimum number of bytes to be read from a file to enable concurrent read.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value merge_tree_min_bytes_for_concurrent_read = 55 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    com.google.protobuf.Int64Value getMergeTreeMinBytesForConcurrentRead();
    /**
     * <pre>
     * The minimum number of bytes to be read from a file to enable concurrent read.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value merge_tree_min_bytes_for_concurrent_read = 55 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getMergeTreeMinBytesForConcurrentReadOrBuilder();

    /**
     * <code>.google.protobuf.Int64Value max_bytes_before_external_group_by = 74;</code>
     */
    boolean hasMaxBytesBeforeExternalGroupBy();
    /**
     * <code>.google.protobuf.Int64Value max_bytes_before_external_group_by = 74;</code>
     */
    com.google.protobuf.Int64Value getMaxBytesBeforeExternalGroupBy();
    /**
     * <code>.google.protobuf.Int64Value max_bytes_before_external_group_by = 74;</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getMaxBytesBeforeExternalGroupByOrBuilder();

    /**
     * <code>.google.protobuf.Int64Value max_bytes_before_external_sort = 75;</code>
     */
    boolean hasMaxBytesBeforeExternalSort();
    /**
     * <code>.google.protobuf.Int64Value max_bytes_before_external_sort = 75;</code>
     */
    com.google.protobuf.Int64Value getMaxBytesBeforeExternalSort();
    /**
     * <code>.google.protobuf.Int64Value max_bytes_before_external_sort = 75;</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getMaxBytesBeforeExternalSortOrBuilder();

    /**
     * <code>.google.protobuf.Int64Value group_by_two_level_threshold = 76;</code>
     */
    boolean hasGroupByTwoLevelThreshold();
    /**
     * <code>.google.protobuf.Int64Value group_by_two_level_threshold = 76;</code>
     */
    com.google.protobuf.Int64Value getGroupByTwoLevelThreshold();
    /**
     * <code>.google.protobuf.Int64Value group_by_two_level_threshold = 76;</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getGroupByTwoLevelThresholdOrBuilder();

    /**
     * <code>.google.protobuf.Int64Value group_by_two_level_threshold_bytes = 77;</code>
     */
    boolean hasGroupByTwoLevelThresholdBytes();
    /**
     * <code>.google.protobuf.Int64Value group_by_two_level_threshold_bytes = 77;</code>
     */
    com.google.protobuf.Int64Value getGroupByTwoLevelThresholdBytes();
    /**
     * <code>.google.protobuf.Int64Value group_by_two_level_threshold_bytes = 77;</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getGroupByTwoLevelThresholdBytesOrBuilder();

    /**
     * <pre>
     * Priority of the query.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value priority = 56 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    boolean hasPriority();
    /**
     * <pre>
     * Priority of the query.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value priority = 56 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    com.google.protobuf.Int64Value getPriority();
    /**
     * <pre>
     * Priority of the query.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value priority = 56 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getPriorityOrBuilder();

    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_threads).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_threads = 8 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    boolean hasMaxThreads();
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_threads).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_threads = 8 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    com.google.protobuf.Int64Value getMaxThreads();
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_threads).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_threads = 8 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getMaxThreadsOrBuilder();

    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#settings_max_memory_usage).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_memory_usage = 11 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    boolean hasMaxMemoryUsage();
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#settings_max_memory_usage).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_memory_usage = 11 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    com.google.protobuf.Int64Value getMaxMemoryUsage();
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#settings_max_memory_usage).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_memory_usage = 11 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getMaxMemoryUsageOrBuilder();

    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-memory-usage-for-user).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_memory_usage_for_user = 12 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    boolean hasMaxMemoryUsageForUser();
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-memory-usage-for-user).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_memory_usage_for_user = 12 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    com.google.protobuf.Int64Value getMaxMemoryUsageForUser();
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-memory-usage-for-user).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_memory_usage_for_user = 12 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getMaxMemoryUsageForUserOrBuilder();

    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_network_bandwidth).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_network_bandwidth = 57;</code>
     */
    boolean hasMaxNetworkBandwidth();
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_network_bandwidth).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_network_bandwidth = 57;</code>
     */
    com.google.protobuf.Int64Value getMaxNetworkBandwidth();
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_network_bandwidth).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_network_bandwidth = 57;</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getMaxNetworkBandwidthOrBuilder();

    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_network_bandwidth_for_user).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_network_bandwidth_for_user = 58;</code>
     */
    boolean hasMaxNetworkBandwidthForUser();
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_network_bandwidth_for_user).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_network_bandwidth_for_user = 58;</code>
     */
    com.google.protobuf.Int64Value getMaxNetworkBandwidthForUser();
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_network_bandwidth_for_user).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_network_bandwidth_for_user = 58;</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getMaxNetworkBandwidthForUserOrBuilder();

    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-force_index_by_date).
     * </pre>
     *
     * <code>.google.protobuf.BoolValue force_index_by_date = 59;</code>
     */
    boolean hasForceIndexByDate();
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-force_index_by_date).
     * </pre>
     *
     * <code>.google.protobuf.BoolValue force_index_by_date = 59;</code>
     */
    com.google.protobuf.BoolValue getForceIndexByDate();
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-force_index_by_date).
     * </pre>
     *
     * <code>.google.protobuf.BoolValue force_index_by_date = 59;</code>
     */
    com.google.protobuf.BoolValueOrBuilder getForceIndexByDateOrBuilder();

    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#force-primary-key).
     * </pre>
     *
     * <code>.google.protobuf.BoolValue force_primary_key = 60;</code>
     */
    boolean hasForcePrimaryKey();
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#force-primary-key).
     * </pre>
     *
     * <code>.google.protobuf.BoolValue force_primary_key = 60;</code>
     */
    com.google.protobuf.BoolValue getForcePrimaryKey();
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#force-primary-key).
     * </pre>
     *
     * <code>.google.protobuf.BoolValue force_primary_key = 60;</code>
     */
    com.google.protobuf.BoolValueOrBuilder getForcePrimaryKeyOrBuilder();

    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-rows-to-read).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_rows_to_read = 13 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    boolean hasMaxRowsToRead();
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-rows-to-read).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_rows_to_read = 13 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    com.google.protobuf.Int64Value getMaxRowsToRead();
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-rows-to-read).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_rows_to_read = 13 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getMaxRowsToReadOrBuilder();

    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-bytes-to-read).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_bytes_to_read = 14 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    boolean hasMaxBytesToRead();
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-bytes-to-read).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_bytes_to_read = 14 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    com.google.protobuf.Int64Value getMaxBytesToRead();
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-bytes-to-read).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_bytes_to_read = 14 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getMaxBytesToReadOrBuilder();

    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#read-overflow-mode).
     * </pre>
     *
     * <code>.yandex.cloud.mdb.clickhouse.v1.UserSettings.OverflowMode read_overflow_mode = 15;</code>
     */
    int getReadOverflowModeValue();
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#read-overflow-mode).
     * </pre>
     *
     * <code>.yandex.cloud.mdb.clickhouse.v1.UserSettings.OverflowMode read_overflow_mode = 15;</code>
     */
    yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.OverflowMode getReadOverflowMode();

    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-rows-to-group-by).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_rows_to_group_by = 16 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    boolean hasMaxRowsToGroupBy();
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-rows-to-group-by).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_rows_to_group_by = 16 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    com.google.protobuf.Int64Value getMaxRowsToGroupBy();
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-rows-to-group-by).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_rows_to_group_by = 16 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getMaxRowsToGroupByOrBuilder();

    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#group-by-overflow-mode).
     * </pre>
     *
     * <code>.yandex.cloud.mdb.clickhouse.v1.UserSettings.GroupByOverflowMode group_by_overflow_mode = 17;</code>
     */
    int getGroupByOverflowModeValue();
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#group-by-overflow-mode).
     * </pre>
     *
     * <code>.yandex.cloud.mdb.clickhouse.v1.UserSettings.GroupByOverflowMode group_by_overflow_mode = 17;</code>
     */
    yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.GroupByOverflowMode getGroupByOverflowMode();

    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-rows-to-sort).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_rows_to_sort = 18 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    boolean hasMaxRowsToSort();
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-rows-to-sort).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_rows_to_sort = 18 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    com.google.protobuf.Int64Value getMaxRowsToSort();
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-rows-to-sort).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_rows_to_sort = 18 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getMaxRowsToSortOrBuilder();

    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-bytes-to-sort).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_bytes_to_sort = 19 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    boolean hasMaxBytesToSort();
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-bytes-to-sort).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_bytes_to_sort = 19 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    com.google.protobuf.Int64Value getMaxBytesToSort();
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-bytes-to-sort).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_bytes_to_sort = 19 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getMaxBytesToSortOrBuilder();

    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#sort-overflow-mode).
     * </pre>
     *
     * <code>.yandex.cloud.mdb.clickhouse.v1.UserSettings.OverflowMode sort_overflow_mode = 20;</code>
     */
    int getSortOverflowModeValue();
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#sort-overflow-mode).
     * </pre>
     *
     * <code>.yandex.cloud.mdb.clickhouse.v1.UserSettings.OverflowMode sort_overflow_mode = 20;</code>
     */
    yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.OverflowMode getSortOverflowMode();

    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-result-rows).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_result_rows = 21 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    boolean hasMaxResultRows();
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-result-rows).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_result_rows = 21 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    com.google.protobuf.Int64Value getMaxResultRows();
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-result-rows).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_result_rows = 21 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getMaxResultRowsOrBuilder();

    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-result-bytes).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_result_bytes = 22 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    boolean hasMaxResultBytes();
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-result-bytes).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_result_bytes = 22 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    com.google.protobuf.Int64Value getMaxResultBytes();
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-result-bytes).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_result_bytes = 22 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getMaxResultBytesOrBuilder();

    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#result-overflow-mode).
     * </pre>
     *
     * <code>.yandex.cloud.mdb.clickhouse.v1.UserSettings.OverflowMode result_overflow_mode = 23;</code>
     */
    int getResultOverflowModeValue();
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#result-overflow-mode).
     * </pre>
     *
     * <code>.yandex.cloud.mdb.clickhouse.v1.UserSettings.OverflowMode result_overflow_mode = 23;</code>
     */
    yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.OverflowMode getResultOverflowMode();

    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-rows-in-distinct).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_rows_in_distinct = 24 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    boolean hasMaxRowsInDistinct();
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-rows-in-distinct).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_rows_in_distinct = 24 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    com.google.protobuf.Int64Value getMaxRowsInDistinct();
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-rows-in-distinct).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_rows_in_distinct = 24 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getMaxRowsInDistinctOrBuilder();

    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-bytes-in-distinct).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_bytes_in_distinct = 25 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    boolean hasMaxBytesInDistinct();
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-bytes-in-distinct).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_bytes_in_distinct = 25 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    com.google.protobuf.Int64Value getMaxBytesInDistinct();
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-bytes-in-distinct).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_bytes_in_distinct = 25 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getMaxBytesInDistinctOrBuilder();

    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#distinct-overflow-mode).
     * </pre>
     *
     * <code>.yandex.cloud.mdb.clickhouse.v1.UserSettings.OverflowMode distinct_overflow_mode = 26;</code>
     */
    int getDistinctOverflowModeValue();
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#distinct-overflow-mode).
     * </pre>
     *
     * <code>.yandex.cloud.mdb.clickhouse.v1.UserSettings.OverflowMode distinct_overflow_mode = 26;</code>
     */
    yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.OverflowMode getDistinctOverflowMode();

    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-rows-to-transfer).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_rows_to_transfer = 27 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    boolean hasMaxRowsToTransfer();
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-rows-to-transfer).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_rows_to_transfer = 27 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    com.google.protobuf.Int64Value getMaxRowsToTransfer();
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-rows-to-transfer).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_rows_to_transfer = 27 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getMaxRowsToTransferOrBuilder();

    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-bytes-to-transfer).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_bytes_to_transfer = 28 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    boolean hasMaxBytesToTransfer();
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-bytes-to-transfer).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_bytes_to_transfer = 28 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    com.google.protobuf.Int64Value getMaxBytesToTransfer();
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-bytes-to-transfer).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_bytes_to_transfer = 28 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getMaxBytesToTransferOrBuilder();

    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#transfer-overflow-mode).
     * </pre>
     *
     * <code>.yandex.cloud.mdb.clickhouse.v1.UserSettings.OverflowMode transfer_overflow_mode = 29;</code>
     */
    int getTransferOverflowModeValue();
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#transfer-overflow-mode).
     * </pre>
     *
     * <code>.yandex.cloud.mdb.clickhouse.v1.UserSettings.OverflowMode transfer_overflow_mode = 29;</code>
     */
    yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.OverflowMode getTransferOverflowMode();

    /**
     * <pre>
     * Maximum query execution time in milliseconds.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-execution-time).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_execution_time = 30 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    boolean hasMaxExecutionTime();
    /**
     * <pre>
     * Maximum query execution time in milliseconds.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-execution-time).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_execution_time = 30 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    com.google.protobuf.Int64Value getMaxExecutionTime();
    /**
     * <pre>
     * Maximum query execution time in milliseconds.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-execution-time).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_execution_time = 30 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getMaxExecutionTimeOrBuilder();

    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#timeout-overflow-mode).
     * </pre>
     *
     * <code>.yandex.cloud.mdb.clickhouse.v1.UserSettings.OverflowMode timeout_overflow_mode = 31;</code>
     */
    int getTimeoutOverflowModeValue();
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#timeout-overflow-mode).
     * </pre>
     *
     * <code>.yandex.cloud.mdb.clickhouse.v1.UserSettings.OverflowMode timeout_overflow_mode = 31;</code>
     */
    yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.OverflowMode getTimeoutOverflowMode();

    /**
     * <pre>
     * Maximum number of columns that can be read from a table in a single query.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-columns-to-read).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_columns_to_read = 32 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    boolean hasMaxColumnsToRead();
    /**
     * <pre>
     * Maximum number of columns that can be read from a table in a single query.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-columns-to-read).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_columns_to_read = 32 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    com.google.protobuf.Int64Value getMaxColumnsToRead();
    /**
     * <pre>
     * Maximum number of columns that can be read from a table in a single query.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-columns-to-read).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_columns_to_read = 32 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getMaxColumnsToReadOrBuilder();

    /**
     * <pre>
     * Maximum number of temporary columns that must be kept in RAM at the same time when running a query, including constant columns.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-temporary-columns).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_temporary_columns = 33 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    boolean hasMaxTemporaryColumns();
    /**
     * <pre>
     * Maximum number of temporary columns that must be kept in RAM at the same time when running a query, including constant columns.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-temporary-columns).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_temporary_columns = 33 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    com.google.protobuf.Int64Value getMaxTemporaryColumns();
    /**
     * <pre>
     * Maximum number of temporary columns that must be kept in RAM at the same time when running a query, including constant columns.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-temporary-columns).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_temporary_columns = 33 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getMaxTemporaryColumnsOrBuilder();

    /**
     * <pre>
     * Maximum number of temporary columns that must be kept in RAM at the same time when running a query, excluding constant columns.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-temporary-non-const-columns).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_temporary_non_const_columns = 34 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    boolean hasMaxTemporaryNonConstColumns();
    /**
     * <pre>
     * Maximum number of temporary columns that must be kept in RAM at the same time when running a query, excluding constant columns.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-temporary-non-const-columns).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_temporary_non_const_columns = 34 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    com.google.protobuf.Int64Value getMaxTemporaryNonConstColumns();
    /**
     * <pre>
     * Maximum number of temporary columns that must be kept in RAM at the same time when running a query, excluding constant columns.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-temporary-non-const-columns).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_temporary_non_const_columns = 34 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getMaxTemporaryNonConstColumnsOrBuilder();

    /**
     * <pre>
     * The maximum part of a query that can be taken to RAM for parsing with the SQL parser, in bytes. Default value: 262144.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_query_size).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_query_size = 35 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    boolean hasMaxQuerySize();
    /**
     * <pre>
     * The maximum part of a query that can be taken to RAM for parsing with the SQL parser, in bytes. Default value: 262144.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_query_size).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_query_size = 35 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    com.google.protobuf.Int64Value getMaxQuerySize();
    /**
     * <pre>
     * The maximum part of a query that can be taken to RAM for parsing with the SQL parser, in bytes. Default value: 262144.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_query_size).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_query_size = 35 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getMaxQuerySizeOrBuilder();

    /**
     * <pre>
     * Maximum depth of query syntax tree. Default value: 1000.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-ast-depth).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_ast_depth = 36 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    boolean hasMaxAstDepth();
    /**
     * <pre>
     * Maximum depth of query syntax tree. Default value: 1000.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-ast-depth).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_ast_depth = 36 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    com.google.protobuf.Int64Value getMaxAstDepth();
    /**
     * <pre>
     * Maximum depth of query syntax tree. Default value: 1000.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-ast-depth).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_ast_depth = 36 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getMaxAstDepthOrBuilder();

    /**
     * <pre>
     * Maximum size of query syntax tree in number of nodes. Default value: 50000.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-ast-elements).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_ast_elements = 37 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    boolean hasMaxAstElements();
    /**
     * <pre>
     * Maximum size of query syntax tree in number of nodes. Default value: 50000.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-ast-elements).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_ast_elements = 37 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    com.google.protobuf.Int64Value getMaxAstElements();
    /**
     * <pre>
     * Maximum size of query syntax tree in number of nodes. Default value: 50000.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-ast-elements).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_ast_elements = 37 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getMaxAstElementsOrBuilder();

    /**
     * <pre>
     * Maximum size of query syntax tree in number of nodes after expansion of aliases and the asterisk. Default value: 500000.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_expanded_ast_elements = 38 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    boolean hasMaxExpandedAstElements();
    /**
     * <pre>
     * Maximum size of query syntax tree in number of nodes after expansion of aliases and the asterisk. Default value: 500000.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_expanded_ast_elements = 38 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    com.google.protobuf.Int64Value getMaxExpandedAstElements();
    /**
     * <pre>
     * Maximum size of query syntax tree in number of nodes after expansion of aliases and the asterisk. Default value: 500000.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_expanded_ast_elements = 38 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getMaxExpandedAstElementsOrBuilder();

    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-input_format_values_interpret_expressions).
     * </pre>
     *
     * <code>.google.protobuf.BoolValue input_format_values_interpret_expressions = 61;</code>
     */
    boolean hasInputFormatValuesInterpretExpressions();
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-input_format_values_interpret_expressions).
     * </pre>
     *
     * <code>.google.protobuf.BoolValue input_format_values_interpret_expressions = 61;</code>
     */
    com.google.protobuf.BoolValue getInputFormatValuesInterpretExpressions();
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-input_format_values_interpret_expressions).
     * </pre>
     *
     * <code>.google.protobuf.BoolValue input_format_values_interpret_expressions = 61;</code>
     */
    com.google.protobuf.BoolValueOrBuilder getInputFormatValuesInterpretExpressionsOrBuilder();

    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#session_settings-input_format_defaults_for_omitted_fields).
     * </pre>
     *
     * <code>.google.protobuf.BoolValue input_format_defaults_for_omitted_fields = 62;</code>
     */
    boolean hasInputFormatDefaultsForOmittedFields();
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#session_settings-input_format_defaults_for_omitted_fields).
     * </pre>
     *
     * <code>.google.protobuf.BoolValue input_format_defaults_for_omitted_fields = 62;</code>
     */
    com.google.protobuf.BoolValue getInputFormatDefaultsForOmittedFields();
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#session_settings-input_format_defaults_for_omitted_fields).
     * </pre>
     *
     * <code>.google.protobuf.BoolValue input_format_defaults_for_omitted_fields = 62;</code>
     */
    com.google.protobuf.BoolValueOrBuilder getInputFormatDefaultsForOmittedFieldsOrBuilder();

    /**
     * <pre>
     * Whether quoting of 64-bit integers is enabled in JSON output format.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#session_settings-output_format_json_quote_64bit_integers).
     * </pre>
     *
     * <code>.google.protobuf.BoolValue output_format_json_quote_64bit_integers = 63;</code>
     */
    boolean hasOutputFormatJsonQuote64BitIntegers();
    /**
     * <pre>
     * Whether quoting of 64-bit integers is enabled in JSON output format.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#session_settings-output_format_json_quote_64bit_integers).
     * </pre>
     *
     * <code>.google.protobuf.BoolValue output_format_json_quote_64bit_integers = 63;</code>
     */
    com.google.protobuf.BoolValue getOutputFormatJsonQuote64BitIntegers();
    /**
     * <pre>
     * Whether quoting of 64-bit integers is enabled in JSON output format.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#session_settings-output_format_json_quote_64bit_integers).
     * </pre>
     *
     * <code>.google.protobuf.BoolValue output_format_json_quote_64bit_integers = 63;</code>
     */
    com.google.protobuf.BoolValueOrBuilder getOutputFormatJsonQuote64BitIntegersOrBuilder();

    /**
     * <pre>
     * Whether output of special floating-point values (`+nan`, `-nan`, `+inf` and `-inf`) is enabled in JSON output format.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue output_format_json_quote_denormals = 64;</code>
     */
    boolean hasOutputFormatJsonQuoteDenormals();
    /**
     * <pre>
     * Whether output of special floating-point values (`+nan`, `-nan`, `+inf` and `-inf`) is enabled in JSON output format.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue output_format_json_quote_denormals = 64;</code>
     */
    com.google.protobuf.BoolValue getOutputFormatJsonQuoteDenormals();
    /**
     * <pre>
     * Whether output of special floating-point values (`+nan`, `-nan`, `+inf` and `-inf`) is enabled in JSON output format.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue output_format_json_quote_denormals = 64;</code>
     */
    com.google.protobuf.BoolValueOrBuilder getOutputFormatJsonQuoteDenormalsOrBuilder();

    /**
     * <code>.google.protobuf.BoolValue low_cardinality_allow_in_native_format = 78;</code>
     */
    boolean hasLowCardinalityAllowInNativeFormat();
    /**
     * <code>.google.protobuf.BoolValue low_cardinality_allow_in_native_format = 78;</code>
     */
    com.google.protobuf.BoolValue getLowCardinalityAllowInNativeFormat();
    /**
     * <code>.google.protobuf.BoolValue low_cardinality_allow_in_native_format = 78;</code>
     */
    com.google.protobuf.BoolValueOrBuilder getLowCardinalityAllowInNativeFormatOrBuilder();

    /**
     * <code>.google.protobuf.BoolValue empty_result_for_aggregation_by_empty_set = 79;</code>
     */
    boolean hasEmptyResultForAggregationByEmptySet();
    /**
     * <code>.google.protobuf.BoolValue empty_result_for_aggregation_by_empty_set = 79;</code>
     */
    com.google.protobuf.BoolValue getEmptyResultForAggregationByEmptySet();
    /**
     * <code>.google.protobuf.BoolValue empty_result_for_aggregation_by_empty_set = 79;</code>
     */
    com.google.protobuf.BoolValueOrBuilder getEmptyResultForAggregationByEmptySetOrBuilder();

    /**
     * <pre>
     * HTTP connection timeout, in milliseconds.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value http_connection_timeout = 65;</code>
     */
    boolean hasHttpConnectionTimeout();
    /**
     * <pre>
     * HTTP connection timeout, in milliseconds.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value http_connection_timeout = 65;</code>
     */
    com.google.protobuf.Int64Value getHttpConnectionTimeout();
    /**
     * <pre>
     * HTTP connection timeout, in milliseconds.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value http_connection_timeout = 65;</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getHttpConnectionTimeoutOrBuilder();

    /**
     * <pre>
     * HTTP receive timeout, in milliseconds.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value http_receive_timeout = 66;</code>
     */
    boolean hasHttpReceiveTimeout();
    /**
     * <pre>
     * HTTP receive timeout, in milliseconds.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value http_receive_timeout = 66;</code>
     */
    com.google.protobuf.Int64Value getHttpReceiveTimeout();
    /**
     * <pre>
     * HTTP receive timeout, in milliseconds.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value http_receive_timeout = 66;</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getHttpReceiveTimeoutOrBuilder();

    /**
     * <pre>
     * HTTP send timeout, in milliseconds.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value http_send_timeout = 67;</code>
     */
    boolean hasHttpSendTimeout();
    /**
     * <pre>
     * HTTP send timeout, in milliseconds.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value http_send_timeout = 67;</code>
     */
    com.google.protobuf.Int64Value getHttpSendTimeout();
    /**
     * <pre>
     * HTTP send timeout, in milliseconds.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value http_send_timeout = 67;</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getHttpSendTimeoutOrBuilder();

    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-enable_http_compression).
     * </pre>
     *
     * <code>.google.protobuf.BoolValue enable_http_compression = 68;</code>
     */
    boolean hasEnableHttpCompression();
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-enable_http_compression).
     * </pre>
     *
     * <code>.google.protobuf.BoolValue enable_http_compression = 68;</code>
     */
    com.google.protobuf.BoolValue getEnableHttpCompression();
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-enable_http_compression).
     * </pre>
     *
     * <code>.google.protobuf.BoolValue enable_http_compression = 68;</code>
     */
    com.google.protobuf.BoolValueOrBuilder getEnableHttpCompressionOrBuilder();

    /**
     * <pre>
     * Whether progress notifications using X-ClickHouse-Progress headers are enabled. Default value: `false`.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-send_progress_in_http_headers).
     * </pre>
     *
     * <code>.google.protobuf.BoolValue send_progress_in_http_headers = 69;</code>
     */
    boolean hasSendProgressInHttpHeaders();
    /**
     * <pre>
     * Whether progress notifications using X-ClickHouse-Progress headers are enabled. Default value: `false`.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-send_progress_in_http_headers).
     * </pre>
     *
     * <code>.google.protobuf.BoolValue send_progress_in_http_headers = 69;</code>
     */
    com.google.protobuf.BoolValue getSendProgressInHttpHeaders();
    /**
     * <pre>
     * Whether progress notifications using X-ClickHouse-Progress headers are enabled. Default value: `false`.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-send_progress_in_http_headers).
     * </pre>
     *
     * <code>.google.protobuf.BoolValue send_progress_in_http_headers = 69;</code>
     */
    com.google.protobuf.BoolValueOrBuilder getSendProgressInHttpHeadersOrBuilder();

    /**
     * <pre>
     * Minimum interval between progress notifications, in milliseconds. Default value: 100.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value http_headers_progress_interval = 70;</code>
     */
    boolean hasHttpHeadersProgressInterval();
    /**
     * <pre>
     * Minimum interval between progress notifications, in milliseconds. Default value: 100.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value http_headers_progress_interval = 70;</code>
     */
    com.google.protobuf.Int64Value getHttpHeadersProgressInterval();
    /**
     * <pre>
     * Minimum interval between progress notifications, in milliseconds. Default value: 100.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value http_headers_progress_interval = 70;</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getHttpHeadersProgressIntervalOrBuilder();

    /**
     * <pre>
     * Whether CORS header in HTTP responses is enabled. Default value: `false`.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue add_http_cors_header = 71;</code>
     */
    boolean hasAddHttpCorsHeader();
    /**
     * <pre>
     * Whether CORS header in HTTP responses is enabled. Default value: `false`.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue add_http_cors_header = 71;</code>
     */
    com.google.protobuf.BoolValue getAddHttpCorsHeader();
    /**
     * <pre>
     * Whether CORS header in HTTP responses is enabled. Default value: `false`.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue add_http_cors_header = 71;</code>
     */
    com.google.protobuf.BoolValueOrBuilder getAddHttpCorsHeaderOrBuilder();
  }
  /**
   * <pre>
   * ClickHouse user settings. Supported settings are a limited subset of all settings
   * described in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/).
   * </pre>
   *
   * Protobuf type {@code yandex.cloud.mdb.clickhouse.v1.UserSettings}
   */
  public  static final class UserSettings extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:yandex.cloud.mdb.clickhouse.v1.UserSettings)
      UserSettingsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use UserSettings.newBuilder() to construct.
    private UserSettings(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private UserSettings() {
      distributedProductMode_ = 0;
      readOverflowMode_ = 0;
      groupByOverflowMode_ = 0;
      sortOverflowMode_ = 0;
      resultOverflowMode_ = 0;
      distinctOverflowMode_ = 0;
      transferOverflowMode_ = 0;
      timeoutOverflowMode_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private UserSettings(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      int mutable_bitField1_ = 0;
      int mutable_bitField2_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (readonly_ != null) {
                subBuilder = readonly_.toBuilder();
              }
              readonly_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(readonly_);
                readonly_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              com.google.protobuf.BoolValue.Builder subBuilder = null;
              if (allowDdl_ != null) {
                subBuilder = allowDdl_.toBuilder();
              }
              allowDdl_ = input.readMessage(com.google.protobuf.BoolValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(allowDdl_);
                allowDdl_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (insertQuorum_ != null) {
                subBuilder = insertQuorum_.toBuilder();
              }
              insertQuorum_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(insertQuorum_);
                insertQuorum_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (insertQuorumTimeout_ != null) {
                subBuilder = insertQuorumTimeout_.toBuilder();
              }
              insertQuorumTimeout_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(insertQuorumTimeout_);
                insertQuorumTimeout_ = subBuilder.buildPartial();
              }

              break;
            }
            case 42: {
              com.google.protobuf.BoolValue.Builder subBuilder = null;
              if (selectSequentialConsistency_ != null) {
                subBuilder = selectSequentialConsistency_.toBuilder();
              }
              selectSequentialConsistency_ = input.readMessage(com.google.protobuf.BoolValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(selectSequentialConsistency_);
                selectSequentialConsistency_ = subBuilder.buildPartial();
              }

              break;
            }
            case 50: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (maxReplicaDelayForDistributedQueries_ != null) {
                subBuilder = maxReplicaDelayForDistributedQueries_.toBuilder();
              }
              maxReplicaDelayForDistributedQueries_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(maxReplicaDelayForDistributedQueries_);
                maxReplicaDelayForDistributedQueries_ = subBuilder.buildPartial();
              }

              break;
            }
            case 58: {
              com.google.protobuf.BoolValue.Builder subBuilder = null;
              if (fallbackToStaleReplicasForDistributedQueries_ != null) {
                subBuilder = fallbackToStaleReplicasForDistributedQueries_.toBuilder();
              }
              fallbackToStaleReplicasForDistributedQueries_ = input.readMessage(com.google.protobuf.BoolValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(fallbackToStaleReplicasForDistributedQueries_);
                fallbackToStaleReplicasForDistributedQueries_ = subBuilder.buildPartial();
              }

              break;
            }
            case 66: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (maxThreads_ != null) {
                subBuilder = maxThreads_.toBuilder();
              }
              maxThreads_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(maxThreads_);
                maxThreads_ = subBuilder.buildPartial();
              }

              break;
            }
            case 74: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (maxBlockSize_ != null) {
                subBuilder = maxBlockSize_.toBuilder();
              }
              maxBlockSize_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(maxBlockSize_);
                maxBlockSize_ = subBuilder.buildPartial();
              }

              break;
            }
            case 82: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (maxInsertBlockSize_ != null) {
                subBuilder = maxInsertBlockSize_.toBuilder();
              }
              maxInsertBlockSize_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(maxInsertBlockSize_);
                maxInsertBlockSize_ = subBuilder.buildPartial();
              }

              break;
            }
            case 90: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (maxMemoryUsage_ != null) {
                subBuilder = maxMemoryUsage_.toBuilder();
              }
              maxMemoryUsage_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(maxMemoryUsage_);
                maxMemoryUsage_ = subBuilder.buildPartial();
              }

              break;
            }
            case 98: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (maxMemoryUsageForUser_ != null) {
                subBuilder = maxMemoryUsageForUser_.toBuilder();
              }
              maxMemoryUsageForUser_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(maxMemoryUsageForUser_);
                maxMemoryUsageForUser_ = subBuilder.buildPartial();
              }

              break;
            }
            case 106: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (maxRowsToRead_ != null) {
                subBuilder = maxRowsToRead_.toBuilder();
              }
              maxRowsToRead_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(maxRowsToRead_);
                maxRowsToRead_ = subBuilder.buildPartial();
              }

              break;
            }
            case 114: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (maxBytesToRead_ != null) {
                subBuilder = maxBytesToRead_.toBuilder();
              }
              maxBytesToRead_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(maxBytesToRead_);
                maxBytesToRead_ = subBuilder.buildPartial();
              }

              break;
            }
            case 120: {
              int rawValue = input.readEnum();

              readOverflowMode_ = rawValue;
              break;
            }
            case 130: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (maxRowsToGroupBy_ != null) {
                subBuilder = maxRowsToGroupBy_.toBuilder();
              }
              maxRowsToGroupBy_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(maxRowsToGroupBy_);
                maxRowsToGroupBy_ = subBuilder.buildPartial();
              }

              break;
            }
            case 136: {
              int rawValue = input.readEnum();

              groupByOverflowMode_ = rawValue;
              break;
            }
            case 146: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (maxRowsToSort_ != null) {
                subBuilder = maxRowsToSort_.toBuilder();
              }
              maxRowsToSort_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(maxRowsToSort_);
                maxRowsToSort_ = subBuilder.buildPartial();
              }

              break;
            }
            case 154: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (maxBytesToSort_ != null) {
                subBuilder = maxBytesToSort_.toBuilder();
              }
              maxBytesToSort_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(maxBytesToSort_);
                maxBytesToSort_ = subBuilder.buildPartial();
              }

              break;
            }
            case 160: {
              int rawValue = input.readEnum();

              sortOverflowMode_ = rawValue;
              break;
            }
            case 170: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (maxResultRows_ != null) {
                subBuilder = maxResultRows_.toBuilder();
              }
              maxResultRows_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(maxResultRows_);
                maxResultRows_ = subBuilder.buildPartial();
              }

              break;
            }
            case 178: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (maxResultBytes_ != null) {
                subBuilder = maxResultBytes_.toBuilder();
              }
              maxResultBytes_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(maxResultBytes_);
                maxResultBytes_ = subBuilder.buildPartial();
              }

              break;
            }
            case 184: {
              int rawValue = input.readEnum();

              resultOverflowMode_ = rawValue;
              break;
            }
            case 194: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (maxRowsInDistinct_ != null) {
                subBuilder = maxRowsInDistinct_.toBuilder();
              }
              maxRowsInDistinct_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(maxRowsInDistinct_);
                maxRowsInDistinct_ = subBuilder.buildPartial();
              }

              break;
            }
            case 202: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (maxBytesInDistinct_ != null) {
                subBuilder = maxBytesInDistinct_.toBuilder();
              }
              maxBytesInDistinct_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(maxBytesInDistinct_);
                maxBytesInDistinct_ = subBuilder.buildPartial();
              }

              break;
            }
            case 208: {
              int rawValue = input.readEnum();

              distinctOverflowMode_ = rawValue;
              break;
            }
            case 218: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (maxRowsToTransfer_ != null) {
                subBuilder = maxRowsToTransfer_.toBuilder();
              }
              maxRowsToTransfer_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(maxRowsToTransfer_);
                maxRowsToTransfer_ = subBuilder.buildPartial();
              }

              break;
            }
            case 226: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (maxBytesToTransfer_ != null) {
                subBuilder = maxBytesToTransfer_.toBuilder();
              }
              maxBytesToTransfer_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(maxBytesToTransfer_);
                maxBytesToTransfer_ = subBuilder.buildPartial();
              }

              break;
            }
            case 232: {
              int rawValue = input.readEnum();

              transferOverflowMode_ = rawValue;
              break;
            }
            case 242: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (maxExecutionTime_ != null) {
                subBuilder = maxExecutionTime_.toBuilder();
              }
              maxExecutionTime_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(maxExecutionTime_);
                maxExecutionTime_ = subBuilder.buildPartial();
              }

              break;
            }
            case 248: {
              int rawValue = input.readEnum();

              timeoutOverflowMode_ = rawValue;
              break;
            }
            case 258: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (maxColumnsToRead_ != null) {
                subBuilder = maxColumnsToRead_.toBuilder();
              }
              maxColumnsToRead_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(maxColumnsToRead_);
                maxColumnsToRead_ = subBuilder.buildPartial();
              }

              break;
            }
            case 266: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (maxTemporaryColumns_ != null) {
                subBuilder = maxTemporaryColumns_.toBuilder();
              }
              maxTemporaryColumns_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(maxTemporaryColumns_);
                maxTemporaryColumns_ = subBuilder.buildPartial();
              }

              break;
            }
            case 274: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (maxTemporaryNonConstColumns_ != null) {
                subBuilder = maxTemporaryNonConstColumns_.toBuilder();
              }
              maxTemporaryNonConstColumns_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(maxTemporaryNonConstColumns_);
                maxTemporaryNonConstColumns_ = subBuilder.buildPartial();
              }

              break;
            }
            case 282: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (maxQuerySize_ != null) {
                subBuilder = maxQuerySize_.toBuilder();
              }
              maxQuerySize_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(maxQuerySize_);
                maxQuerySize_ = subBuilder.buildPartial();
              }

              break;
            }
            case 290: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (maxAstDepth_ != null) {
                subBuilder = maxAstDepth_.toBuilder();
              }
              maxAstDepth_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(maxAstDepth_);
                maxAstDepth_ = subBuilder.buildPartial();
              }

              break;
            }
            case 298: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (maxAstElements_ != null) {
                subBuilder = maxAstElements_.toBuilder();
              }
              maxAstElements_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(maxAstElements_);
                maxAstElements_ = subBuilder.buildPartial();
              }

              break;
            }
            case 306: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (maxExpandedAstElements_ != null) {
                subBuilder = maxExpandedAstElements_.toBuilder();
              }
              maxExpandedAstElements_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(maxExpandedAstElements_);
                maxExpandedAstElements_ = subBuilder.buildPartial();
              }

              break;
            }
            case 314: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (connectTimeout_ != null) {
                subBuilder = connectTimeout_.toBuilder();
              }
              connectTimeout_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(connectTimeout_);
                connectTimeout_ = subBuilder.buildPartial();
              }

              break;
            }
            case 322: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (receiveTimeout_ != null) {
                subBuilder = receiveTimeout_.toBuilder();
              }
              receiveTimeout_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(receiveTimeout_);
                receiveTimeout_ = subBuilder.buildPartial();
              }

              break;
            }
            case 330: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (sendTimeout_ != null) {
                subBuilder = sendTimeout_.toBuilder();
              }
              sendTimeout_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(sendTimeout_);
                sendTimeout_ = subBuilder.buildPartial();
              }

              break;
            }
            case 338: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (replicationAlterPartitionsSync_ != null) {
                subBuilder = replicationAlterPartitionsSync_.toBuilder();
              }
              replicationAlterPartitionsSync_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(replicationAlterPartitionsSync_);
                replicationAlterPartitionsSync_ = subBuilder.buildPartial();
              }

              break;
            }
            case 344: {
              int rawValue = input.readEnum();

              distributedProductMode_ = rawValue;
              break;
            }
            case 354: {
              com.google.protobuf.BoolValue.Builder subBuilder = null;
              if (compile_ != null) {
                subBuilder = compile_.toBuilder();
              }
              compile_ = input.readMessage(com.google.protobuf.BoolValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(compile_);
                compile_ = subBuilder.buildPartial();
              }

              break;
            }
            case 362: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (minCountToCompile_ != null) {
                subBuilder = minCountToCompile_.toBuilder();
              }
              minCountToCompile_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(minCountToCompile_);
                minCountToCompile_ = subBuilder.buildPartial();
              }

              break;
            }
            case 370: {
              com.google.protobuf.BoolValue.Builder subBuilder = null;
              if (compileExpressions_ != null) {
                subBuilder = compileExpressions_.toBuilder();
              }
              compileExpressions_ = input.readMessage(com.google.protobuf.BoolValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(compileExpressions_);
                compileExpressions_ = subBuilder.buildPartial();
              }

              break;
            }
            case 378: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (minCountToCompileExpression_ != null) {
                subBuilder = minCountToCompileExpression_.toBuilder();
              }
              minCountToCompileExpression_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(minCountToCompileExpression_);
                minCountToCompileExpression_ = subBuilder.buildPartial();
              }

              break;
            }
            case 386: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (minInsertBlockSizeRows_ != null) {
                subBuilder = minInsertBlockSizeRows_.toBuilder();
              }
              minInsertBlockSizeRows_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(minInsertBlockSizeRows_);
                minInsertBlockSizeRows_ = subBuilder.buildPartial();
              }

              break;
            }
            case 394: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (minInsertBlockSizeBytes_ != null) {
                subBuilder = minInsertBlockSizeBytes_.toBuilder();
              }
              minInsertBlockSizeBytes_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(minInsertBlockSizeBytes_);
                minInsertBlockSizeBytes_ = subBuilder.buildPartial();
              }

              break;
            }
            case 402: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (minBytesToUseDirectIo_ != null) {
                subBuilder = minBytesToUseDirectIo_.toBuilder();
              }
              minBytesToUseDirectIo_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(minBytesToUseDirectIo_);
                minBytesToUseDirectIo_ = subBuilder.buildPartial();
              }

              break;
            }
            case 410: {
              com.google.protobuf.BoolValue.Builder subBuilder = null;
              if (useUncompressedCache_ != null) {
                subBuilder = useUncompressedCache_.toBuilder();
              }
              useUncompressedCache_ = input.readMessage(com.google.protobuf.BoolValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(useUncompressedCache_);
                useUncompressedCache_ = subBuilder.buildPartial();
              }

              break;
            }
            case 418: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (mergeTreeMaxRowsToUseCache_ != null) {
                subBuilder = mergeTreeMaxRowsToUseCache_.toBuilder();
              }
              mergeTreeMaxRowsToUseCache_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(mergeTreeMaxRowsToUseCache_);
                mergeTreeMaxRowsToUseCache_ = subBuilder.buildPartial();
              }

              break;
            }
            case 426: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (mergeTreeMaxBytesToUseCache_ != null) {
                subBuilder = mergeTreeMaxBytesToUseCache_.toBuilder();
              }
              mergeTreeMaxBytesToUseCache_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(mergeTreeMaxBytesToUseCache_);
                mergeTreeMaxBytesToUseCache_ = subBuilder.buildPartial();
              }

              break;
            }
            case 434: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (mergeTreeMinRowsForConcurrentRead_ != null) {
                subBuilder = mergeTreeMinRowsForConcurrentRead_.toBuilder();
              }
              mergeTreeMinRowsForConcurrentRead_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(mergeTreeMinRowsForConcurrentRead_);
                mergeTreeMinRowsForConcurrentRead_ = subBuilder.buildPartial();
              }

              break;
            }
            case 442: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (mergeTreeMinBytesForConcurrentRead_ != null) {
                subBuilder = mergeTreeMinBytesForConcurrentRead_.toBuilder();
              }
              mergeTreeMinBytesForConcurrentRead_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(mergeTreeMinBytesForConcurrentRead_);
                mergeTreeMinBytesForConcurrentRead_ = subBuilder.buildPartial();
              }

              break;
            }
            case 450: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (priority_ != null) {
                subBuilder = priority_.toBuilder();
              }
              priority_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(priority_);
                priority_ = subBuilder.buildPartial();
              }

              break;
            }
            case 458: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (maxNetworkBandwidth_ != null) {
                subBuilder = maxNetworkBandwidth_.toBuilder();
              }
              maxNetworkBandwidth_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(maxNetworkBandwidth_);
                maxNetworkBandwidth_ = subBuilder.buildPartial();
              }

              break;
            }
            case 466: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (maxNetworkBandwidthForUser_ != null) {
                subBuilder = maxNetworkBandwidthForUser_.toBuilder();
              }
              maxNetworkBandwidthForUser_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(maxNetworkBandwidthForUser_);
                maxNetworkBandwidthForUser_ = subBuilder.buildPartial();
              }

              break;
            }
            case 474: {
              com.google.protobuf.BoolValue.Builder subBuilder = null;
              if (forceIndexByDate_ != null) {
                subBuilder = forceIndexByDate_.toBuilder();
              }
              forceIndexByDate_ = input.readMessage(com.google.protobuf.BoolValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(forceIndexByDate_);
                forceIndexByDate_ = subBuilder.buildPartial();
              }

              break;
            }
            case 482: {
              com.google.protobuf.BoolValue.Builder subBuilder = null;
              if (forcePrimaryKey_ != null) {
                subBuilder = forcePrimaryKey_.toBuilder();
              }
              forcePrimaryKey_ = input.readMessage(com.google.protobuf.BoolValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(forcePrimaryKey_);
                forcePrimaryKey_ = subBuilder.buildPartial();
              }

              break;
            }
            case 490: {
              com.google.protobuf.BoolValue.Builder subBuilder = null;
              if (inputFormatValuesInterpretExpressions_ != null) {
                subBuilder = inputFormatValuesInterpretExpressions_.toBuilder();
              }
              inputFormatValuesInterpretExpressions_ = input.readMessage(com.google.protobuf.BoolValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(inputFormatValuesInterpretExpressions_);
                inputFormatValuesInterpretExpressions_ = subBuilder.buildPartial();
              }

              break;
            }
            case 498: {
              com.google.protobuf.BoolValue.Builder subBuilder = null;
              if (inputFormatDefaultsForOmittedFields_ != null) {
                subBuilder = inputFormatDefaultsForOmittedFields_.toBuilder();
              }
              inputFormatDefaultsForOmittedFields_ = input.readMessage(com.google.protobuf.BoolValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(inputFormatDefaultsForOmittedFields_);
                inputFormatDefaultsForOmittedFields_ = subBuilder.buildPartial();
              }

              break;
            }
            case 506: {
              com.google.protobuf.BoolValue.Builder subBuilder = null;
              if (outputFormatJsonQuote64BitIntegers_ != null) {
                subBuilder = outputFormatJsonQuote64BitIntegers_.toBuilder();
              }
              outputFormatJsonQuote64BitIntegers_ = input.readMessage(com.google.protobuf.BoolValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(outputFormatJsonQuote64BitIntegers_);
                outputFormatJsonQuote64BitIntegers_ = subBuilder.buildPartial();
              }

              break;
            }
            case 514: {
              com.google.protobuf.BoolValue.Builder subBuilder = null;
              if (outputFormatJsonQuoteDenormals_ != null) {
                subBuilder = outputFormatJsonQuoteDenormals_.toBuilder();
              }
              outputFormatJsonQuoteDenormals_ = input.readMessage(com.google.protobuf.BoolValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(outputFormatJsonQuoteDenormals_);
                outputFormatJsonQuoteDenormals_ = subBuilder.buildPartial();
              }

              break;
            }
            case 522: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (httpConnectionTimeout_ != null) {
                subBuilder = httpConnectionTimeout_.toBuilder();
              }
              httpConnectionTimeout_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(httpConnectionTimeout_);
                httpConnectionTimeout_ = subBuilder.buildPartial();
              }

              break;
            }
            case 530: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (httpReceiveTimeout_ != null) {
                subBuilder = httpReceiveTimeout_.toBuilder();
              }
              httpReceiveTimeout_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(httpReceiveTimeout_);
                httpReceiveTimeout_ = subBuilder.buildPartial();
              }

              break;
            }
            case 538: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (httpSendTimeout_ != null) {
                subBuilder = httpSendTimeout_.toBuilder();
              }
              httpSendTimeout_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(httpSendTimeout_);
                httpSendTimeout_ = subBuilder.buildPartial();
              }

              break;
            }
            case 546: {
              com.google.protobuf.BoolValue.Builder subBuilder = null;
              if (enableHttpCompression_ != null) {
                subBuilder = enableHttpCompression_.toBuilder();
              }
              enableHttpCompression_ = input.readMessage(com.google.protobuf.BoolValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(enableHttpCompression_);
                enableHttpCompression_ = subBuilder.buildPartial();
              }

              break;
            }
            case 554: {
              com.google.protobuf.BoolValue.Builder subBuilder = null;
              if (sendProgressInHttpHeaders_ != null) {
                subBuilder = sendProgressInHttpHeaders_.toBuilder();
              }
              sendProgressInHttpHeaders_ = input.readMessage(com.google.protobuf.BoolValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(sendProgressInHttpHeaders_);
                sendProgressInHttpHeaders_ = subBuilder.buildPartial();
              }

              break;
            }
            case 562: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (httpHeadersProgressInterval_ != null) {
                subBuilder = httpHeadersProgressInterval_.toBuilder();
              }
              httpHeadersProgressInterval_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(httpHeadersProgressInterval_);
                httpHeadersProgressInterval_ = subBuilder.buildPartial();
              }

              break;
            }
            case 570: {
              com.google.protobuf.BoolValue.Builder subBuilder = null;
              if (addHttpCorsHeader_ != null) {
                subBuilder = addHttpCorsHeader_.toBuilder();
              }
              addHttpCorsHeader_ = input.readMessage(com.google.protobuf.BoolValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(addHttpCorsHeader_);
                addHttpCorsHeader_ = subBuilder.buildPartial();
              }

              break;
            }
            case 578: {
              com.google.protobuf.BoolValue.Builder subBuilder = null;
              if (distributedAggregationMemoryEfficient_ != null) {
                subBuilder = distributedAggregationMemoryEfficient_.toBuilder();
              }
              distributedAggregationMemoryEfficient_ = input.readMessage(com.google.protobuf.BoolValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(distributedAggregationMemoryEfficient_);
                distributedAggregationMemoryEfficient_ = subBuilder.buildPartial();
              }

              break;
            }
            case 586: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (distributedDdlTaskTimeout_ != null) {
                subBuilder = distributedDdlTaskTimeout_.toBuilder();
              }
              distributedDdlTaskTimeout_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(distributedDdlTaskTimeout_);
                distributedDdlTaskTimeout_ = subBuilder.buildPartial();
              }

              break;
            }
            case 594: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (maxBytesBeforeExternalGroupBy_ != null) {
                subBuilder = maxBytesBeforeExternalGroupBy_.toBuilder();
              }
              maxBytesBeforeExternalGroupBy_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(maxBytesBeforeExternalGroupBy_);
                maxBytesBeforeExternalGroupBy_ = subBuilder.buildPartial();
              }

              break;
            }
            case 602: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (maxBytesBeforeExternalSort_ != null) {
                subBuilder = maxBytesBeforeExternalSort_.toBuilder();
              }
              maxBytesBeforeExternalSort_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(maxBytesBeforeExternalSort_);
                maxBytesBeforeExternalSort_ = subBuilder.buildPartial();
              }

              break;
            }
            case 610: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (groupByTwoLevelThreshold_ != null) {
                subBuilder = groupByTwoLevelThreshold_.toBuilder();
              }
              groupByTwoLevelThreshold_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(groupByTwoLevelThreshold_);
                groupByTwoLevelThreshold_ = subBuilder.buildPartial();
              }

              break;
            }
            case 618: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (groupByTwoLevelThresholdBytes_ != null) {
                subBuilder = groupByTwoLevelThresholdBytes_.toBuilder();
              }
              groupByTwoLevelThresholdBytes_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(groupByTwoLevelThresholdBytes_);
                groupByTwoLevelThresholdBytes_ = subBuilder.buildPartial();
              }

              break;
            }
            case 626: {
              com.google.protobuf.BoolValue.Builder subBuilder = null;
              if (lowCardinalityAllowInNativeFormat_ != null) {
                subBuilder = lowCardinalityAllowInNativeFormat_.toBuilder();
              }
              lowCardinalityAllowInNativeFormat_ = input.readMessage(com.google.protobuf.BoolValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(lowCardinalityAllowInNativeFormat_);
                lowCardinalityAllowInNativeFormat_ = subBuilder.buildPartial();
              }

              break;
            }
            case 634: {
              com.google.protobuf.BoolValue.Builder subBuilder = null;
              if (emptyResultForAggregationByEmptySet_ != null) {
                subBuilder = emptyResultForAggregationByEmptySet_.toBuilder();
              }
              emptyResultForAggregationByEmptySet_ = input.readMessage(com.google.protobuf.BoolValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(emptyResultForAggregationByEmptySet_);
                emptyResultForAggregationByEmptySet_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.internal_static_yandex_cloud_mdb_clickhouse_v1_UserSettings_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.internal_static_yandex_cloud_mdb_clickhouse_v1_UserSettings_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.class, yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.Builder.class);
    }

    /**
     * Protobuf enum {@code yandex.cloud.mdb.clickhouse.v1.UserSettings.OverflowMode}
     */
    public enum OverflowMode
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>OVERFLOW_MODE_UNSPECIFIED = 0;</code>
       */
      OVERFLOW_MODE_UNSPECIFIED(0),
      /**
       * <code>OVERFLOW_MODE_THROW = 1;</code>
       */
      OVERFLOW_MODE_THROW(1),
      /**
       * <code>OVERFLOW_MODE_BREAK = 2;</code>
       */
      OVERFLOW_MODE_BREAK(2),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>OVERFLOW_MODE_UNSPECIFIED = 0;</code>
       */
      public static final int OVERFLOW_MODE_UNSPECIFIED_VALUE = 0;
      /**
       * <code>OVERFLOW_MODE_THROW = 1;</code>
       */
      public static final int OVERFLOW_MODE_THROW_VALUE = 1;
      /**
       * <code>OVERFLOW_MODE_BREAK = 2;</code>
       */
      public static final int OVERFLOW_MODE_BREAK_VALUE = 2;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static OverflowMode valueOf(int value) {
        return forNumber(value);
      }

      public static OverflowMode forNumber(int value) {
        switch (value) {
          case 0: return OVERFLOW_MODE_UNSPECIFIED;
          case 1: return OVERFLOW_MODE_THROW;
          case 2: return OVERFLOW_MODE_BREAK;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<OverflowMode>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          OverflowMode> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<OverflowMode>() {
              public OverflowMode findValueByNumber(int number) {
                return OverflowMode.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.getDescriptor().getEnumTypes().get(0);
      }

      private static final OverflowMode[] VALUES = values();

      public static OverflowMode valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private OverflowMode(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:yandex.cloud.mdb.clickhouse.v1.UserSettings.OverflowMode)
    }

    /**
     * Protobuf enum {@code yandex.cloud.mdb.clickhouse.v1.UserSettings.GroupByOverflowMode}
     */
    public enum GroupByOverflowMode
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>GROUP_BY_OVERFLOW_MODE_UNSPECIFIED = 0;</code>
       */
      GROUP_BY_OVERFLOW_MODE_UNSPECIFIED(0),
      /**
       * <code>GROUP_BY_OVERFLOW_MODE_THROW = 1;</code>
       */
      GROUP_BY_OVERFLOW_MODE_THROW(1),
      /**
       * <code>GROUP_BY_OVERFLOW_MODE_BREAK = 2;</code>
       */
      GROUP_BY_OVERFLOW_MODE_BREAK(2),
      /**
       * <code>GROUP_BY_OVERFLOW_MODE_ANY = 3;</code>
       */
      GROUP_BY_OVERFLOW_MODE_ANY(3),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>GROUP_BY_OVERFLOW_MODE_UNSPECIFIED = 0;</code>
       */
      public static final int GROUP_BY_OVERFLOW_MODE_UNSPECIFIED_VALUE = 0;
      /**
       * <code>GROUP_BY_OVERFLOW_MODE_THROW = 1;</code>
       */
      public static final int GROUP_BY_OVERFLOW_MODE_THROW_VALUE = 1;
      /**
       * <code>GROUP_BY_OVERFLOW_MODE_BREAK = 2;</code>
       */
      public static final int GROUP_BY_OVERFLOW_MODE_BREAK_VALUE = 2;
      /**
       * <code>GROUP_BY_OVERFLOW_MODE_ANY = 3;</code>
       */
      public static final int GROUP_BY_OVERFLOW_MODE_ANY_VALUE = 3;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static GroupByOverflowMode valueOf(int value) {
        return forNumber(value);
      }

      public static GroupByOverflowMode forNumber(int value) {
        switch (value) {
          case 0: return GROUP_BY_OVERFLOW_MODE_UNSPECIFIED;
          case 1: return GROUP_BY_OVERFLOW_MODE_THROW;
          case 2: return GROUP_BY_OVERFLOW_MODE_BREAK;
          case 3: return GROUP_BY_OVERFLOW_MODE_ANY;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<GroupByOverflowMode>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          GroupByOverflowMode> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<GroupByOverflowMode>() {
              public GroupByOverflowMode findValueByNumber(int number) {
                return GroupByOverflowMode.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.getDescriptor().getEnumTypes().get(1);
      }

      private static final GroupByOverflowMode[] VALUES = values();

      public static GroupByOverflowMode valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private GroupByOverflowMode(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:yandex.cloud.mdb.clickhouse.v1.UserSettings.GroupByOverflowMode)
    }

    /**
     * Protobuf enum {@code yandex.cloud.mdb.clickhouse.v1.UserSettings.DistributedProductMode}
     */
    public enum DistributedProductMode
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>DISTRIBUTED_PRODUCT_MODE_UNSPECIFIED = 0;</code>
       */
      DISTRIBUTED_PRODUCT_MODE_UNSPECIFIED(0),
      /**
       * <code>DISTRIBUTED_PRODUCT_MODE_DENY = 1;</code>
       */
      DISTRIBUTED_PRODUCT_MODE_DENY(1),
      /**
       * <code>DISTRIBUTED_PRODUCT_MODE_LOCAL = 2;</code>
       */
      DISTRIBUTED_PRODUCT_MODE_LOCAL(2),
      /**
       * <code>DISTRIBUTED_PRODUCT_MODE_GLOBAL = 3;</code>
       */
      DISTRIBUTED_PRODUCT_MODE_GLOBAL(3),
      /**
       * <code>DISTRIBUTED_PRODUCT_MODE_ALLOW = 4;</code>
       */
      DISTRIBUTED_PRODUCT_MODE_ALLOW(4),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>DISTRIBUTED_PRODUCT_MODE_UNSPECIFIED = 0;</code>
       */
      public static final int DISTRIBUTED_PRODUCT_MODE_UNSPECIFIED_VALUE = 0;
      /**
       * <code>DISTRIBUTED_PRODUCT_MODE_DENY = 1;</code>
       */
      public static final int DISTRIBUTED_PRODUCT_MODE_DENY_VALUE = 1;
      /**
       * <code>DISTRIBUTED_PRODUCT_MODE_LOCAL = 2;</code>
       */
      public static final int DISTRIBUTED_PRODUCT_MODE_LOCAL_VALUE = 2;
      /**
       * <code>DISTRIBUTED_PRODUCT_MODE_GLOBAL = 3;</code>
       */
      public static final int DISTRIBUTED_PRODUCT_MODE_GLOBAL_VALUE = 3;
      /**
       * <code>DISTRIBUTED_PRODUCT_MODE_ALLOW = 4;</code>
       */
      public static final int DISTRIBUTED_PRODUCT_MODE_ALLOW_VALUE = 4;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static DistributedProductMode valueOf(int value) {
        return forNumber(value);
      }

      public static DistributedProductMode forNumber(int value) {
        switch (value) {
          case 0: return DISTRIBUTED_PRODUCT_MODE_UNSPECIFIED;
          case 1: return DISTRIBUTED_PRODUCT_MODE_DENY;
          case 2: return DISTRIBUTED_PRODUCT_MODE_LOCAL;
          case 3: return DISTRIBUTED_PRODUCT_MODE_GLOBAL;
          case 4: return DISTRIBUTED_PRODUCT_MODE_ALLOW;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<DistributedProductMode>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          DistributedProductMode> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<DistributedProductMode>() {
              public DistributedProductMode findValueByNumber(int number) {
                return DistributedProductMode.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.getDescriptor().getEnumTypes().get(2);
      }

      private static final DistributedProductMode[] VALUES = values();

      public static DistributedProductMode valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private DistributedProductMode(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:yandex.cloud.mdb.clickhouse.v1.UserSettings.DistributedProductMode)
    }

    public static final int READONLY_FIELD_NUMBER = 1;
    private com.google.protobuf.Int64Value readonly_;
    /**
     * <pre>
     * Restricts permissions for non-DDL queries.
     * Possible values:
     * * 0 (default) —  no restrictions.
     * * 1 — only read data queries are allowed.
     * * 2 — read data and change settings queries are allowed.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/permissions_for_queries/#settings_readonly).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value readonly = 1 [(.yandex.cloud.value) = "0-2"];</code>
     */
    public boolean hasReadonly() {
      return readonly_ != null;
    }
    /**
     * <pre>
     * Restricts permissions for non-DDL queries.
     * Possible values:
     * * 0 (default) —  no restrictions.
     * * 1 — only read data queries are allowed.
     * * 2 — read data and change settings queries are allowed.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/permissions_for_queries/#settings_readonly).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value readonly = 1 [(.yandex.cloud.value) = "0-2"];</code>
     */
    public com.google.protobuf.Int64Value getReadonly() {
      return readonly_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : readonly_;
    }
    /**
     * <pre>
     * Restricts permissions for non-DDL queries.
     * Possible values:
     * * 0 (default) —  no restrictions.
     * * 1 — only read data queries are allowed.
     * * 2 — read data and change settings queries are allowed.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/permissions_for_queries/#settings_readonly).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value readonly = 1 [(.yandex.cloud.value) = "0-2"];</code>
     */
    public com.google.protobuf.Int64ValueOrBuilder getReadonlyOrBuilder() {
      return getReadonly();
    }

    public static final int ALLOW_DDL_FIELD_NUMBER = 2;
    private com.google.protobuf.BoolValue allowDdl_;
    /**
     * <pre>
     * Whether DDL queries are allowed. Default value: `false`.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/permissions_for_queries/#settings_allow_ddl).
     * </pre>
     *
     * <code>.google.protobuf.BoolValue allow_ddl = 2;</code>
     */
    public boolean hasAllowDdl() {
      return allowDdl_ != null;
    }
    /**
     * <pre>
     * Whether DDL queries are allowed. Default value: `false`.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/permissions_for_queries/#settings_allow_ddl).
     * </pre>
     *
     * <code>.google.protobuf.BoolValue allow_ddl = 2;</code>
     */
    public com.google.protobuf.BoolValue getAllowDdl() {
      return allowDdl_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : allowDdl_;
    }
    /**
     * <pre>
     * Whether DDL queries are allowed. Default value: `false`.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/permissions_for_queries/#settings_allow_ddl).
     * </pre>
     *
     * <code>.google.protobuf.BoolValue allow_ddl = 2;</code>
     */
    public com.google.protobuf.BoolValueOrBuilder getAllowDdlOrBuilder() {
      return getAllowDdl();
    }

    public static final int INSERT_QUORUM_FIELD_NUMBER = 3;
    private com.google.protobuf.Int64Value insertQuorum_;
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-insert_quorum).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value insert_quorum = 3 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    public boolean hasInsertQuorum() {
      return insertQuorum_ != null;
    }
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-insert_quorum).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value insert_quorum = 3 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    public com.google.protobuf.Int64Value getInsertQuorum() {
      return insertQuorum_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : insertQuorum_;
    }
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-insert_quorum).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value insert_quorum = 3 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    public com.google.protobuf.Int64ValueOrBuilder getInsertQuorumOrBuilder() {
      return getInsertQuorum();
    }

    public static final int CONNECT_TIMEOUT_FIELD_NUMBER = 39;
    private com.google.protobuf.Int64Value connectTimeout_;
    /**
     * <pre>
     * Connection timeout in milliseconds.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#connect-timeout-receive-timeout-send-timeout).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value connect_timeout = 39 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    public boolean hasConnectTimeout() {
      return connectTimeout_ != null;
    }
    /**
     * <pre>
     * Connection timeout in milliseconds.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#connect-timeout-receive-timeout-send-timeout).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value connect_timeout = 39 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    public com.google.protobuf.Int64Value getConnectTimeout() {
      return connectTimeout_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : connectTimeout_;
    }
    /**
     * <pre>
     * Connection timeout in milliseconds.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#connect-timeout-receive-timeout-send-timeout).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value connect_timeout = 39 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    public com.google.protobuf.Int64ValueOrBuilder getConnectTimeoutOrBuilder() {
      return getConnectTimeout();
    }

    public static final int RECEIVE_TIMEOUT_FIELD_NUMBER = 40;
    private com.google.protobuf.Int64Value receiveTimeout_;
    /**
     * <pre>
     * Receive timeout in milliseconds.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#connect-timeout-receive-timeout-send-timeout).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value receive_timeout = 40 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    public boolean hasReceiveTimeout() {
      return receiveTimeout_ != null;
    }
    /**
     * <pre>
     * Receive timeout in milliseconds.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#connect-timeout-receive-timeout-send-timeout).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value receive_timeout = 40 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    public com.google.protobuf.Int64Value getReceiveTimeout() {
      return receiveTimeout_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : receiveTimeout_;
    }
    /**
     * <pre>
     * Receive timeout in milliseconds.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#connect-timeout-receive-timeout-send-timeout).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value receive_timeout = 40 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    public com.google.protobuf.Int64ValueOrBuilder getReceiveTimeoutOrBuilder() {
      return getReceiveTimeout();
    }

    public static final int SEND_TIMEOUT_FIELD_NUMBER = 41;
    private com.google.protobuf.Int64Value sendTimeout_;
    /**
     * <pre>
     * Send timeout in milliseconds.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#connect-timeout-receive-timeout-send-timeout).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value send_timeout = 41 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    public boolean hasSendTimeout() {
      return sendTimeout_ != null;
    }
    /**
     * <pre>
     * Send timeout in milliseconds.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#connect-timeout-receive-timeout-send-timeout).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value send_timeout = 41 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    public com.google.protobuf.Int64Value getSendTimeout() {
      return sendTimeout_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : sendTimeout_;
    }
    /**
     * <pre>
     * Send timeout in milliseconds.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#connect-timeout-receive-timeout-send-timeout).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value send_timeout = 41 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    public com.google.protobuf.Int64ValueOrBuilder getSendTimeoutOrBuilder() {
      return getSendTimeout();
    }

    public static final int INSERT_QUORUM_TIMEOUT_FIELD_NUMBER = 4;
    private com.google.protobuf.Int64Value insertQuorumTimeout_;
    /**
     * <pre>
     * Quorum write timeout in milliseconds. Default value: 60000.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-insert_quorum_timeout).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value insert_quorum_timeout = 4 [(.yandex.cloud.value) = "&gt;=1000"];</code>
     */
    public boolean hasInsertQuorumTimeout() {
      return insertQuorumTimeout_ != null;
    }
    /**
     * <pre>
     * Quorum write timeout in milliseconds. Default value: 60000.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-insert_quorum_timeout).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value insert_quorum_timeout = 4 [(.yandex.cloud.value) = "&gt;=1000"];</code>
     */
    public com.google.protobuf.Int64Value getInsertQuorumTimeout() {
      return insertQuorumTimeout_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : insertQuorumTimeout_;
    }
    /**
     * <pre>
     * Quorum write timeout in milliseconds. Default value: 60000.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-insert_quorum_timeout).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value insert_quorum_timeout = 4 [(.yandex.cloud.value) = "&gt;=1000"];</code>
     */
    public com.google.protobuf.Int64ValueOrBuilder getInsertQuorumTimeoutOrBuilder() {
      return getInsertQuorumTimeout();
    }

    public static final int SELECT_SEQUENTIAL_CONSISTENCY_FIELD_NUMBER = 5;
    private com.google.protobuf.BoolValue selectSequentialConsistency_;
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-select_sequential_consistency).
     * </pre>
     *
     * <code>.google.protobuf.BoolValue select_sequential_consistency = 5;</code>
     */
    public boolean hasSelectSequentialConsistency() {
      return selectSequentialConsistency_ != null;
    }
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-select_sequential_consistency).
     * </pre>
     *
     * <code>.google.protobuf.BoolValue select_sequential_consistency = 5;</code>
     */
    public com.google.protobuf.BoolValue getSelectSequentialConsistency() {
      return selectSequentialConsistency_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : selectSequentialConsistency_;
    }
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-select_sequential_consistency).
     * </pre>
     *
     * <code>.google.protobuf.BoolValue select_sequential_consistency = 5;</code>
     */
    public com.google.protobuf.BoolValueOrBuilder getSelectSequentialConsistencyOrBuilder() {
      return getSelectSequentialConsistency();
    }

    public static final int MAX_REPLICA_DELAY_FOR_DISTRIBUTED_QUERIES_FIELD_NUMBER = 6;
    private com.google.protobuf.Int64Value maxReplicaDelayForDistributedQueries_;
    /**
     * <pre>
     * Max replica delay in milliseconds. If a replica lags more than the set value, this replica is not used. Default value: 300000.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_replica_delay_for_distributed_queries).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_replica_delay_for_distributed_queries = 6 [(.yandex.cloud.value) = "&gt;=1000"];</code>
     */
    public boolean hasMaxReplicaDelayForDistributedQueries() {
      return maxReplicaDelayForDistributedQueries_ != null;
    }
    /**
     * <pre>
     * Max replica delay in milliseconds. If a replica lags more than the set value, this replica is not used. Default value: 300000.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_replica_delay_for_distributed_queries).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_replica_delay_for_distributed_queries = 6 [(.yandex.cloud.value) = "&gt;=1000"];</code>
     */
    public com.google.protobuf.Int64Value getMaxReplicaDelayForDistributedQueries() {
      return maxReplicaDelayForDistributedQueries_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : maxReplicaDelayForDistributedQueries_;
    }
    /**
     * <pre>
     * Max replica delay in milliseconds. If a replica lags more than the set value, this replica is not used. Default value: 300000.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_replica_delay_for_distributed_queries).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_replica_delay_for_distributed_queries = 6 [(.yandex.cloud.value) = "&gt;=1000"];</code>
     */
    public com.google.protobuf.Int64ValueOrBuilder getMaxReplicaDelayForDistributedQueriesOrBuilder() {
      return getMaxReplicaDelayForDistributedQueries();
    }

    public static final int FALLBACK_TO_STALE_REPLICAS_FOR_DISTRIBUTED_QUERIES_FIELD_NUMBER = 7;
    private com.google.protobuf.BoolValue fallbackToStaleReplicasForDistributedQueries_;
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-fallback_to_stale_replicas_for_distributed_queries).
     * </pre>
     *
     * <code>.google.protobuf.BoolValue fallback_to_stale_replicas_for_distributed_queries = 7;</code>
     */
    public boolean hasFallbackToStaleReplicasForDistributedQueries() {
      return fallbackToStaleReplicasForDistributedQueries_ != null;
    }
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-fallback_to_stale_replicas_for_distributed_queries).
     * </pre>
     *
     * <code>.google.protobuf.BoolValue fallback_to_stale_replicas_for_distributed_queries = 7;</code>
     */
    public com.google.protobuf.BoolValue getFallbackToStaleReplicasForDistributedQueries() {
      return fallbackToStaleReplicasForDistributedQueries_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : fallbackToStaleReplicasForDistributedQueries_;
    }
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-fallback_to_stale_replicas_for_distributed_queries).
     * </pre>
     *
     * <code>.google.protobuf.BoolValue fallback_to_stale_replicas_for_distributed_queries = 7;</code>
     */
    public com.google.protobuf.BoolValueOrBuilder getFallbackToStaleReplicasForDistributedQueriesOrBuilder() {
      return getFallbackToStaleReplicasForDistributedQueries();
    }

    public static final int REPLICATION_ALTER_PARTITIONS_SYNC_FIELD_NUMBER = 42;
    private com.google.protobuf.Int64Value replicationAlterPartitionsSync_;
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/query_language/alter/#synchronicity-of-alter-queries).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value replication_alter_partitions_sync = 42 [(.yandex.cloud.value) = "0-2"];</code>
     */
    public boolean hasReplicationAlterPartitionsSync() {
      return replicationAlterPartitionsSync_ != null;
    }
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/query_language/alter/#synchronicity-of-alter-queries).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value replication_alter_partitions_sync = 42 [(.yandex.cloud.value) = "0-2"];</code>
     */
    public com.google.protobuf.Int64Value getReplicationAlterPartitionsSync() {
      return replicationAlterPartitionsSync_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : replicationAlterPartitionsSync_;
    }
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/query_language/alter/#synchronicity-of-alter-queries).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value replication_alter_partitions_sync = 42 [(.yandex.cloud.value) = "0-2"];</code>
     */
    public com.google.protobuf.Int64ValueOrBuilder getReplicationAlterPartitionsSyncOrBuilder() {
      return getReplicationAlterPartitionsSync();
    }

    public static final int DISTRIBUTED_PRODUCT_MODE_FIELD_NUMBER = 43;
    private int distributedProductMode_;
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#distributed-product-mode).
     * </pre>
     *
     * <code>.yandex.cloud.mdb.clickhouse.v1.UserSettings.DistributedProductMode distributed_product_mode = 43;</code>
     */
    public int getDistributedProductModeValue() {
      return distributedProductMode_;
    }
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#distributed-product-mode).
     * </pre>
     *
     * <code>.yandex.cloud.mdb.clickhouse.v1.UserSettings.DistributedProductMode distributed_product_mode = 43;</code>
     */
    public yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.DistributedProductMode getDistributedProductMode() {
      @SuppressWarnings("deprecation")
      yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.DistributedProductMode result = yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.DistributedProductMode.valueOf(distributedProductMode_);
      return result == null ? yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.DistributedProductMode.UNRECOGNIZED : result;
    }

    public static final int DISTRIBUTED_AGGREGATION_MEMORY_EFFICIENT_FIELD_NUMBER = 72;
    private com.google.protobuf.BoolValue distributedAggregationMemoryEfficient_;
    /**
     * <pre>
     * Whether the memory-saving mode of distributed aggregation is enabled.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue distributed_aggregation_memory_efficient = 72;</code>
     */
    public boolean hasDistributedAggregationMemoryEfficient() {
      return distributedAggregationMemoryEfficient_ != null;
    }
    /**
     * <pre>
     * Whether the memory-saving mode of distributed aggregation is enabled.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue distributed_aggregation_memory_efficient = 72;</code>
     */
    public com.google.protobuf.BoolValue getDistributedAggregationMemoryEfficient() {
      return distributedAggregationMemoryEfficient_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : distributedAggregationMemoryEfficient_;
    }
    /**
     * <pre>
     * Whether the memory-saving mode of distributed aggregation is enabled.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue distributed_aggregation_memory_efficient = 72;</code>
     */
    public com.google.protobuf.BoolValueOrBuilder getDistributedAggregationMemoryEfficientOrBuilder() {
      return getDistributedAggregationMemoryEfficient();
    }

    public static final int DISTRIBUTED_DDL_TASK_TIMEOUT_FIELD_NUMBER = 73;
    private com.google.protobuf.Int64Value distributedDdlTaskTimeout_;
    /**
     * <pre>
     * Timeout for DDL queries, in milliseconds.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value distributed_ddl_task_timeout = 73;</code>
     */
    public boolean hasDistributedDdlTaskTimeout() {
      return distributedDdlTaskTimeout_ != null;
    }
    /**
     * <pre>
     * Timeout for DDL queries, in milliseconds.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value distributed_ddl_task_timeout = 73;</code>
     */
    public com.google.protobuf.Int64Value getDistributedDdlTaskTimeout() {
      return distributedDdlTaskTimeout_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : distributedDdlTaskTimeout_;
    }
    /**
     * <pre>
     * Timeout for DDL queries, in milliseconds.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value distributed_ddl_task_timeout = 73;</code>
     */
    public com.google.protobuf.Int64ValueOrBuilder getDistributedDdlTaskTimeoutOrBuilder() {
      return getDistributedDdlTaskTimeout();
    }

    public static final int COMPILE_FIELD_NUMBER = 44;
    private com.google.protobuf.BoolValue compile_;
    /**
     * <pre>
     * Whether query compilation is enabled.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#compile).
     * </pre>
     *
     * <code>.google.protobuf.BoolValue compile = 44;</code>
     */
    public boolean hasCompile() {
      return compile_ != null;
    }
    /**
     * <pre>
     * Whether query compilation is enabled.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#compile).
     * </pre>
     *
     * <code>.google.protobuf.BoolValue compile = 44;</code>
     */
    public com.google.protobuf.BoolValue getCompile() {
      return compile_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : compile_;
    }
    /**
     * <pre>
     * Whether query compilation is enabled.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#compile).
     * </pre>
     *
     * <code>.google.protobuf.BoolValue compile = 44;</code>
     */
    public com.google.protobuf.BoolValueOrBuilder getCompileOrBuilder() {
      return getCompile();
    }

    public static final int MIN_COUNT_TO_COMPILE_FIELD_NUMBER = 45;
    private com.google.protobuf.Int64Value minCountToCompile_;
    /**
     * <pre>
     * The number of structurally identical queries before they are compiled.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#min-count-to-compile).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value min_count_to_compile = 45 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    public boolean hasMinCountToCompile() {
      return minCountToCompile_ != null;
    }
    /**
     * <pre>
     * The number of structurally identical queries before they are compiled.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#min-count-to-compile).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value min_count_to_compile = 45 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    public com.google.protobuf.Int64Value getMinCountToCompile() {
      return minCountToCompile_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : minCountToCompile_;
    }
    /**
     * <pre>
     * The number of structurally identical queries before they are compiled.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#min-count-to-compile).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value min_count_to_compile = 45 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    public com.google.protobuf.Int64ValueOrBuilder getMinCountToCompileOrBuilder() {
      return getMinCountToCompile();
    }

    public static final int COMPILE_EXPRESSIONS_FIELD_NUMBER = 46;
    private com.google.protobuf.BoolValue compileExpressions_;
    /**
     * <pre>
     * Whether expression compilation is enabled.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue compile_expressions = 46;</code>
     */
    public boolean hasCompileExpressions() {
      return compileExpressions_ != null;
    }
    /**
     * <pre>
     * Whether expression compilation is enabled.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue compile_expressions = 46;</code>
     */
    public com.google.protobuf.BoolValue getCompileExpressions() {
      return compileExpressions_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : compileExpressions_;
    }
    /**
     * <pre>
     * Whether expression compilation is enabled.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue compile_expressions = 46;</code>
     */
    public com.google.protobuf.BoolValueOrBuilder getCompileExpressionsOrBuilder() {
      return getCompileExpressions();
    }

    public static final int MIN_COUNT_TO_COMPILE_EXPRESSION_FIELD_NUMBER = 47;
    private com.google.protobuf.Int64Value minCountToCompileExpression_;
    /**
     * <pre>
     * The number of identical expressions before they are compiled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value min_count_to_compile_expression = 47 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    public boolean hasMinCountToCompileExpression() {
      return minCountToCompileExpression_ != null;
    }
    /**
     * <pre>
     * The number of identical expressions before they are compiled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value min_count_to_compile_expression = 47 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    public com.google.protobuf.Int64Value getMinCountToCompileExpression() {
      return minCountToCompileExpression_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : minCountToCompileExpression_;
    }
    /**
     * <pre>
     * The number of identical expressions before they are compiled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value min_count_to_compile_expression = 47 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    public com.google.protobuf.Int64ValueOrBuilder getMinCountToCompileExpressionOrBuilder() {
      return getMinCountToCompileExpression();
    }

    public static final int MAX_BLOCK_SIZE_FIELD_NUMBER = 9;
    private com.google.protobuf.Int64Value maxBlockSize_;
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#max-block-size).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_block_size = 9 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    public boolean hasMaxBlockSize() {
      return maxBlockSize_ != null;
    }
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#max-block-size).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_block_size = 9 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    public com.google.protobuf.Int64Value getMaxBlockSize() {
      return maxBlockSize_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : maxBlockSize_;
    }
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#max-block-size).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_block_size = 9 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    public com.google.protobuf.Int64ValueOrBuilder getMaxBlockSizeOrBuilder() {
      return getMaxBlockSize();
    }

    public static final int MIN_INSERT_BLOCK_SIZE_ROWS_FIELD_NUMBER = 48;
    private com.google.protobuf.Int64Value minInsertBlockSizeRows_;
    /**
     * <pre>
     * Squash blocks passed to INSERT query to specified size in rows, if blocks are not big enough. If set to `0`,
     * blocks will never be squashed.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value min_insert_block_size_rows = 48 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    public boolean hasMinInsertBlockSizeRows() {
      return minInsertBlockSizeRows_ != null;
    }
    /**
     * <pre>
     * Squash blocks passed to INSERT query to specified size in rows, if blocks are not big enough. If set to `0`,
     * blocks will never be squashed.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value min_insert_block_size_rows = 48 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    public com.google.protobuf.Int64Value getMinInsertBlockSizeRows() {
      return minInsertBlockSizeRows_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : minInsertBlockSizeRows_;
    }
    /**
     * <pre>
     * Squash blocks passed to INSERT query to specified size in rows, if blocks are not big enough. If set to `0`,
     * blocks will never be squashed.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value min_insert_block_size_rows = 48 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    public com.google.protobuf.Int64ValueOrBuilder getMinInsertBlockSizeRowsOrBuilder() {
      return getMinInsertBlockSizeRows();
    }

    public static final int MIN_INSERT_BLOCK_SIZE_BYTES_FIELD_NUMBER = 49;
    private com.google.protobuf.Int64Value minInsertBlockSizeBytes_;
    /**
     * <pre>
     * Squash blocks passed to INSERT query to specified size in bytes, if blocks are not big enough.  If set to `0`,
     * blocks will never be squashed.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value min_insert_block_size_bytes = 49 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    public boolean hasMinInsertBlockSizeBytes() {
      return minInsertBlockSizeBytes_ != null;
    }
    /**
     * <pre>
     * Squash blocks passed to INSERT query to specified size in bytes, if blocks are not big enough.  If set to `0`,
     * blocks will never be squashed.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value min_insert_block_size_bytes = 49 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    public com.google.protobuf.Int64Value getMinInsertBlockSizeBytes() {
      return minInsertBlockSizeBytes_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : minInsertBlockSizeBytes_;
    }
    /**
     * <pre>
     * Squash blocks passed to INSERT query to specified size in bytes, if blocks are not big enough.  If set to `0`,
     * blocks will never be squashed.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value min_insert_block_size_bytes = 49 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    public com.google.protobuf.Int64ValueOrBuilder getMinInsertBlockSizeBytesOrBuilder() {
      return getMinInsertBlockSizeBytes();
    }

    public static final int MAX_INSERT_BLOCK_SIZE_FIELD_NUMBER = 10;
    private com.google.protobuf.Int64Value maxInsertBlockSize_;
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_insert_block_size).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_insert_block_size = 10 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    public boolean hasMaxInsertBlockSize() {
      return maxInsertBlockSize_ != null;
    }
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_insert_block_size).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_insert_block_size = 10 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    public com.google.protobuf.Int64Value getMaxInsertBlockSize() {
      return maxInsertBlockSize_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : maxInsertBlockSize_;
    }
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_insert_block_size).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_insert_block_size = 10 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    public com.google.protobuf.Int64ValueOrBuilder getMaxInsertBlockSizeOrBuilder() {
      return getMaxInsertBlockSize();
    }

    public static final int MIN_BYTES_TO_USE_DIRECT_IO_FIELD_NUMBER = 50;
    private com.google.protobuf.Int64Value minBytesToUseDirectIo_;
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-min_bytes_to_use_direct_io).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value min_bytes_to_use_direct_io = 50 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    public boolean hasMinBytesToUseDirectIo() {
      return minBytesToUseDirectIo_ != null;
    }
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-min_bytes_to_use_direct_io).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value min_bytes_to_use_direct_io = 50 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    public com.google.protobuf.Int64Value getMinBytesToUseDirectIo() {
      return minBytesToUseDirectIo_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : minBytesToUseDirectIo_;
    }
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-min_bytes_to_use_direct_io).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value min_bytes_to_use_direct_io = 50 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    public com.google.protobuf.Int64ValueOrBuilder getMinBytesToUseDirectIoOrBuilder() {
      return getMinBytesToUseDirectIo();
    }

    public static final int USE_UNCOMPRESSED_CACHE_FIELD_NUMBER = 51;
    private com.google.protobuf.BoolValue useUncompressedCache_;
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#setting-use_uncompressed_cache).
     * </pre>
     *
     * <code>.google.protobuf.BoolValue use_uncompressed_cache = 51;</code>
     */
    public boolean hasUseUncompressedCache() {
      return useUncompressedCache_ != null;
    }
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#setting-use_uncompressed_cache).
     * </pre>
     *
     * <code>.google.protobuf.BoolValue use_uncompressed_cache = 51;</code>
     */
    public com.google.protobuf.BoolValue getUseUncompressedCache() {
      return useUncompressedCache_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : useUncompressedCache_;
    }
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#setting-use_uncompressed_cache).
     * </pre>
     *
     * <code>.google.protobuf.BoolValue use_uncompressed_cache = 51;</code>
     */
    public com.google.protobuf.BoolValueOrBuilder getUseUncompressedCacheOrBuilder() {
      return getUseUncompressedCache();
    }

    public static final int MERGE_TREE_MAX_ROWS_TO_USE_CACHE_FIELD_NUMBER = 52;
    private com.google.protobuf.Int64Value mergeTreeMaxRowsToUseCache_;
    /**
     * <pre>
     * The maximum request size in rows to use the cache of uncompressed data. The cache is not used for requests larger
     * than the specified value.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#setting-merge_tree_max_rows_to_use_cache).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value merge_tree_max_rows_to_use_cache = 52 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    public boolean hasMergeTreeMaxRowsToUseCache() {
      return mergeTreeMaxRowsToUseCache_ != null;
    }
    /**
     * <pre>
     * The maximum request size in rows to use the cache of uncompressed data. The cache is not used for requests larger
     * than the specified value.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#setting-merge_tree_max_rows_to_use_cache).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value merge_tree_max_rows_to_use_cache = 52 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    public com.google.protobuf.Int64Value getMergeTreeMaxRowsToUseCache() {
      return mergeTreeMaxRowsToUseCache_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : mergeTreeMaxRowsToUseCache_;
    }
    /**
     * <pre>
     * The maximum request size in rows to use the cache of uncompressed data. The cache is not used for requests larger
     * than the specified value.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#setting-merge_tree_max_rows_to_use_cache).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value merge_tree_max_rows_to_use_cache = 52 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    public com.google.protobuf.Int64ValueOrBuilder getMergeTreeMaxRowsToUseCacheOrBuilder() {
      return getMergeTreeMaxRowsToUseCache();
    }

    public static final int MERGE_TREE_MAX_BYTES_TO_USE_CACHE_FIELD_NUMBER = 53;
    private com.google.protobuf.Int64Value mergeTreeMaxBytesToUseCache_;
    /**
     * <pre>
     * The maximum request size in bytes to use the cache of uncompressed data. The cache is not used for requests larger
     * than the specified value.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value merge_tree_max_bytes_to_use_cache = 53 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    public boolean hasMergeTreeMaxBytesToUseCache() {
      return mergeTreeMaxBytesToUseCache_ != null;
    }
    /**
     * <pre>
     * The maximum request size in bytes to use the cache of uncompressed data. The cache is not used for requests larger
     * than the specified value.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value merge_tree_max_bytes_to_use_cache = 53 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    public com.google.protobuf.Int64Value getMergeTreeMaxBytesToUseCache() {
      return mergeTreeMaxBytesToUseCache_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : mergeTreeMaxBytesToUseCache_;
    }
    /**
     * <pre>
     * The maximum request size in bytes to use the cache of uncompressed data. The cache is not used for requests larger
     * than the specified value.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value merge_tree_max_bytes_to_use_cache = 53 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    public com.google.protobuf.Int64ValueOrBuilder getMergeTreeMaxBytesToUseCacheOrBuilder() {
      return getMergeTreeMaxBytesToUseCache();
    }

    public static final int MERGE_TREE_MIN_ROWS_FOR_CONCURRENT_READ_FIELD_NUMBER = 54;
    private com.google.protobuf.Int64Value mergeTreeMinRowsForConcurrentRead_;
    /**
     * <pre>
     * The minimum number of rows to be read from a file to enable concurrent read.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#setting-merge_tree_min_rows_for_concurrent_read).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value merge_tree_min_rows_for_concurrent_read = 54 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    public boolean hasMergeTreeMinRowsForConcurrentRead() {
      return mergeTreeMinRowsForConcurrentRead_ != null;
    }
    /**
     * <pre>
     * The minimum number of rows to be read from a file to enable concurrent read.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#setting-merge_tree_min_rows_for_concurrent_read).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value merge_tree_min_rows_for_concurrent_read = 54 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    public com.google.protobuf.Int64Value getMergeTreeMinRowsForConcurrentRead() {
      return mergeTreeMinRowsForConcurrentRead_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : mergeTreeMinRowsForConcurrentRead_;
    }
    /**
     * <pre>
     * The minimum number of rows to be read from a file to enable concurrent read.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#setting-merge_tree_min_rows_for_concurrent_read).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value merge_tree_min_rows_for_concurrent_read = 54 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    public com.google.protobuf.Int64ValueOrBuilder getMergeTreeMinRowsForConcurrentReadOrBuilder() {
      return getMergeTreeMinRowsForConcurrentRead();
    }

    public static final int MERGE_TREE_MIN_BYTES_FOR_CONCURRENT_READ_FIELD_NUMBER = 55;
    private com.google.protobuf.Int64Value mergeTreeMinBytesForConcurrentRead_;
    /**
     * <pre>
     * The minimum number of bytes to be read from a file to enable concurrent read.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value merge_tree_min_bytes_for_concurrent_read = 55 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    public boolean hasMergeTreeMinBytesForConcurrentRead() {
      return mergeTreeMinBytesForConcurrentRead_ != null;
    }
    /**
     * <pre>
     * The minimum number of bytes to be read from a file to enable concurrent read.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value merge_tree_min_bytes_for_concurrent_read = 55 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    public com.google.protobuf.Int64Value getMergeTreeMinBytesForConcurrentRead() {
      return mergeTreeMinBytesForConcurrentRead_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : mergeTreeMinBytesForConcurrentRead_;
    }
    /**
     * <pre>
     * The minimum number of bytes to be read from a file to enable concurrent read.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value merge_tree_min_bytes_for_concurrent_read = 55 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    public com.google.protobuf.Int64ValueOrBuilder getMergeTreeMinBytesForConcurrentReadOrBuilder() {
      return getMergeTreeMinBytesForConcurrentRead();
    }

    public static final int MAX_BYTES_BEFORE_EXTERNAL_GROUP_BY_FIELD_NUMBER = 74;
    private com.google.protobuf.Int64Value maxBytesBeforeExternalGroupBy_;
    /**
     * <code>.google.protobuf.Int64Value max_bytes_before_external_group_by = 74;</code>
     */
    public boolean hasMaxBytesBeforeExternalGroupBy() {
      return maxBytesBeforeExternalGroupBy_ != null;
    }
    /**
     * <code>.google.protobuf.Int64Value max_bytes_before_external_group_by = 74;</code>
     */
    public com.google.protobuf.Int64Value getMaxBytesBeforeExternalGroupBy() {
      return maxBytesBeforeExternalGroupBy_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : maxBytesBeforeExternalGroupBy_;
    }
    /**
     * <code>.google.protobuf.Int64Value max_bytes_before_external_group_by = 74;</code>
     */
    public com.google.protobuf.Int64ValueOrBuilder getMaxBytesBeforeExternalGroupByOrBuilder() {
      return getMaxBytesBeforeExternalGroupBy();
    }

    public static final int MAX_BYTES_BEFORE_EXTERNAL_SORT_FIELD_NUMBER = 75;
    private com.google.protobuf.Int64Value maxBytesBeforeExternalSort_;
    /**
     * <code>.google.protobuf.Int64Value max_bytes_before_external_sort = 75;</code>
     */
    public boolean hasMaxBytesBeforeExternalSort() {
      return maxBytesBeforeExternalSort_ != null;
    }
    /**
     * <code>.google.protobuf.Int64Value max_bytes_before_external_sort = 75;</code>
     */
    public com.google.protobuf.Int64Value getMaxBytesBeforeExternalSort() {
      return maxBytesBeforeExternalSort_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : maxBytesBeforeExternalSort_;
    }
    /**
     * <code>.google.protobuf.Int64Value max_bytes_before_external_sort = 75;</code>
     */
    public com.google.protobuf.Int64ValueOrBuilder getMaxBytesBeforeExternalSortOrBuilder() {
      return getMaxBytesBeforeExternalSort();
    }

    public static final int GROUP_BY_TWO_LEVEL_THRESHOLD_FIELD_NUMBER = 76;
    private com.google.protobuf.Int64Value groupByTwoLevelThreshold_;
    /**
     * <code>.google.protobuf.Int64Value group_by_two_level_threshold = 76;</code>
     */
    public boolean hasGroupByTwoLevelThreshold() {
      return groupByTwoLevelThreshold_ != null;
    }
    /**
     * <code>.google.protobuf.Int64Value group_by_two_level_threshold = 76;</code>
     */
    public com.google.protobuf.Int64Value getGroupByTwoLevelThreshold() {
      return groupByTwoLevelThreshold_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : groupByTwoLevelThreshold_;
    }
    /**
     * <code>.google.protobuf.Int64Value group_by_two_level_threshold = 76;</code>
     */
    public com.google.protobuf.Int64ValueOrBuilder getGroupByTwoLevelThresholdOrBuilder() {
      return getGroupByTwoLevelThreshold();
    }

    public static final int GROUP_BY_TWO_LEVEL_THRESHOLD_BYTES_FIELD_NUMBER = 77;
    private com.google.protobuf.Int64Value groupByTwoLevelThresholdBytes_;
    /**
     * <code>.google.protobuf.Int64Value group_by_two_level_threshold_bytes = 77;</code>
     */
    public boolean hasGroupByTwoLevelThresholdBytes() {
      return groupByTwoLevelThresholdBytes_ != null;
    }
    /**
     * <code>.google.protobuf.Int64Value group_by_two_level_threshold_bytes = 77;</code>
     */
    public com.google.protobuf.Int64Value getGroupByTwoLevelThresholdBytes() {
      return groupByTwoLevelThresholdBytes_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : groupByTwoLevelThresholdBytes_;
    }
    /**
     * <code>.google.protobuf.Int64Value group_by_two_level_threshold_bytes = 77;</code>
     */
    public com.google.protobuf.Int64ValueOrBuilder getGroupByTwoLevelThresholdBytesOrBuilder() {
      return getGroupByTwoLevelThresholdBytes();
    }

    public static final int PRIORITY_FIELD_NUMBER = 56;
    private com.google.protobuf.Int64Value priority_;
    /**
     * <pre>
     * Priority of the query.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value priority = 56 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    public boolean hasPriority() {
      return priority_ != null;
    }
    /**
     * <pre>
     * Priority of the query.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value priority = 56 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    public com.google.protobuf.Int64Value getPriority() {
      return priority_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : priority_;
    }
    /**
     * <pre>
     * Priority of the query.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value priority = 56 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    public com.google.protobuf.Int64ValueOrBuilder getPriorityOrBuilder() {
      return getPriority();
    }

    public static final int MAX_THREADS_FIELD_NUMBER = 8;
    private com.google.protobuf.Int64Value maxThreads_;
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_threads).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_threads = 8 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    public boolean hasMaxThreads() {
      return maxThreads_ != null;
    }
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_threads).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_threads = 8 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    public com.google.protobuf.Int64Value getMaxThreads() {
      return maxThreads_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : maxThreads_;
    }
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_threads).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_threads = 8 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    public com.google.protobuf.Int64ValueOrBuilder getMaxThreadsOrBuilder() {
      return getMaxThreads();
    }

    public static final int MAX_MEMORY_USAGE_FIELD_NUMBER = 11;
    private com.google.protobuf.Int64Value maxMemoryUsage_;
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#settings_max_memory_usage).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_memory_usage = 11 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    public boolean hasMaxMemoryUsage() {
      return maxMemoryUsage_ != null;
    }
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#settings_max_memory_usage).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_memory_usage = 11 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    public com.google.protobuf.Int64Value getMaxMemoryUsage() {
      return maxMemoryUsage_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : maxMemoryUsage_;
    }
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#settings_max_memory_usage).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_memory_usage = 11 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    public com.google.protobuf.Int64ValueOrBuilder getMaxMemoryUsageOrBuilder() {
      return getMaxMemoryUsage();
    }

    public static final int MAX_MEMORY_USAGE_FOR_USER_FIELD_NUMBER = 12;
    private com.google.protobuf.Int64Value maxMemoryUsageForUser_;
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-memory-usage-for-user).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_memory_usage_for_user = 12 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    public boolean hasMaxMemoryUsageForUser() {
      return maxMemoryUsageForUser_ != null;
    }
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-memory-usage-for-user).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_memory_usage_for_user = 12 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    public com.google.protobuf.Int64Value getMaxMemoryUsageForUser() {
      return maxMemoryUsageForUser_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : maxMemoryUsageForUser_;
    }
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-memory-usage-for-user).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_memory_usage_for_user = 12 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    public com.google.protobuf.Int64ValueOrBuilder getMaxMemoryUsageForUserOrBuilder() {
      return getMaxMemoryUsageForUser();
    }

    public static final int MAX_NETWORK_BANDWIDTH_FIELD_NUMBER = 57;
    private com.google.protobuf.Int64Value maxNetworkBandwidth_;
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_network_bandwidth).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_network_bandwidth = 57;</code>
     */
    public boolean hasMaxNetworkBandwidth() {
      return maxNetworkBandwidth_ != null;
    }
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_network_bandwidth).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_network_bandwidth = 57;</code>
     */
    public com.google.protobuf.Int64Value getMaxNetworkBandwidth() {
      return maxNetworkBandwidth_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : maxNetworkBandwidth_;
    }
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_network_bandwidth).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_network_bandwidth = 57;</code>
     */
    public com.google.protobuf.Int64ValueOrBuilder getMaxNetworkBandwidthOrBuilder() {
      return getMaxNetworkBandwidth();
    }

    public static final int MAX_NETWORK_BANDWIDTH_FOR_USER_FIELD_NUMBER = 58;
    private com.google.protobuf.Int64Value maxNetworkBandwidthForUser_;
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_network_bandwidth_for_user).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_network_bandwidth_for_user = 58;</code>
     */
    public boolean hasMaxNetworkBandwidthForUser() {
      return maxNetworkBandwidthForUser_ != null;
    }
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_network_bandwidth_for_user).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_network_bandwidth_for_user = 58;</code>
     */
    public com.google.protobuf.Int64Value getMaxNetworkBandwidthForUser() {
      return maxNetworkBandwidthForUser_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : maxNetworkBandwidthForUser_;
    }
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_network_bandwidth_for_user).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_network_bandwidth_for_user = 58;</code>
     */
    public com.google.protobuf.Int64ValueOrBuilder getMaxNetworkBandwidthForUserOrBuilder() {
      return getMaxNetworkBandwidthForUser();
    }

    public static final int FORCE_INDEX_BY_DATE_FIELD_NUMBER = 59;
    private com.google.protobuf.BoolValue forceIndexByDate_;
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-force_index_by_date).
     * </pre>
     *
     * <code>.google.protobuf.BoolValue force_index_by_date = 59;</code>
     */
    public boolean hasForceIndexByDate() {
      return forceIndexByDate_ != null;
    }
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-force_index_by_date).
     * </pre>
     *
     * <code>.google.protobuf.BoolValue force_index_by_date = 59;</code>
     */
    public com.google.protobuf.BoolValue getForceIndexByDate() {
      return forceIndexByDate_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : forceIndexByDate_;
    }
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-force_index_by_date).
     * </pre>
     *
     * <code>.google.protobuf.BoolValue force_index_by_date = 59;</code>
     */
    public com.google.protobuf.BoolValueOrBuilder getForceIndexByDateOrBuilder() {
      return getForceIndexByDate();
    }

    public static final int FORCE_PRIMARY_KEY_FIELD_NUMBER = 60;
    private com.google.protobuf.BoolValue forcePrimaryKey_;
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#force-primary-key).
     * </pre>
     *
     * <code>.google.protobuf.BoolValue force_primary_key = 60;</code>
     */
    public boolean hasForcePrimaryKey() {
      return forcePrimaryKey_ != null;
    }
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#force-primary-key).
     * </pre>
     *
     * <code>.google.protobuf.BoolValue force_primary_key = 60;</code>
     */
    public com.google.protobuf.BoolValue getForcePrimaryKey() {
      return forcePrimaryKey_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : forcePrimaryKey_;
    }
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#force-primary-key).
     * </pre>
     *
     * <code>.google.protobuf.BoolValue force_primary_key = 60;</code>
     */
    public com.google.protobuf.BoolValueOrBuilder getForcePrimaryKeyOrBuilder() {
      return getForcePrimaryKey();
    }

    public static final int MAX_ROWS_TO_READ_FIELD_NUMBER = 13;
    private com.google.protobuf.Int64Value maxRowsToRead_;
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-rows-to-read).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_rows_to_read = 13 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    public boolean hasMaxRowsToRead() {
      return maxRowsToRead_ != null;
    }
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-rows-to-read).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_rows_to_read = 13 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    public com.google.protobuf.Int64Value getMaxRowsToRead() {
      return maxRowsToRead_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : maxRowsToRead_;
    }
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-rows-to-read).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_rows_to_read = 13 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    public com.google.protobuf.Int64ValueOrBuilder getMaxRowsToReadOrBuilder() {
      return getMaxRowsToRead();
    }

    public static final int MAX_BYTES_TO_READ_FIELD_NUMBER = 14;
    private com.google.protobuf.Int64Value maxBytesToRead_;
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-bytes-to-read).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_bytes_to_read = 14 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    public boolean hasMaxBytesToRead() {
      return maxBytesToRead_ != null;
    }
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-bytes-to-read).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_bytes_to_read = 14 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    public com.google.protobuf.Int64Value getMaxBytesToRead() {
      return maxBytesToRead_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : maxBytesToRead_;
    }
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-bytes-to-read).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_bytes_to_read = 14 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    public com.google.protobuf.Int64ValueOrBuilder getMaxBytesToReadOrBuilder() {
      return getMaxBytesToRead();
    }

    public static final int READ_OVERFLOW_MODE_FIELD_NUMBER = 15;
    private int readOverflowMode_;
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#read-overflow-mode).
     * </pre>
     *
     * <code>.yandex.cloud.mdb.clickhouse.v1.UserSettings.OverflowMode read_overflow_mode = 15;</code>
     */
    public int getReadOverflowModeValue() {
      return readOverflowMode_;
    }
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#read-overflow-mode).
     * </pre>
     *
     * <code>.yandex.cloud.mdb.clickhouse.v1.UserSettings.OverflowMode read_overflow_mode = 15;</code>
     */
    public yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.OverflowMode getReadOverflowMode() {
      @SuppressWarnings("deprecation")
      yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.OverflowMode result = yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.OverflowMode.valueOf(readOverflowMode_);
      return result == null ? yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.OverflowMode.UNRECOGNIZED : result;
    }

    public static final int MAX_ROWS_TO_GROUP_BY_FIELD_NUMBER = 16;
    private com.google.protobuf.Int64Value maxRowsToGroupBy_;
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-rows-to-group-by).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_rows_to_group_by = 16 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    public boolean hasMaxRowsToGroupBy() {
      return maxRowsToGroupBy_ != null;
    }
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-rows-to-group-by).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_rows_to_group_by = 16 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    public com.google.protobuf.Int64Value getMaxRowsToGroupBy() {
      return maxRowsToGroupBy_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : maxRowsToGroupBy_;
    }
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-rows-to-group-by).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_rows_to_group_by = 16 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    public com.google.protobuf.Int64ValueOrBuilder getMaxRowsToGroupByOrBuilder() {
      return getMaxRowsToGroupBy();
    }

    public static final int GROUP_BY_OVERFLOW_MODE_FIELD_NUMBER = 17;
    private int groupByOverflowMode_;
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#group-by-overflow-mode).
     * </pre>
     *
     * <code>.yandex.cloud.mdb.clickhouse.v1.UserSettings.GroupByOverflowMode group_by_overflow_mode = 17;</code>
     */
    public int getGroupByOverflowModeValue() {
      return groupByOverflowMode_;
    }
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#group-by-overflow-mode).
     * </pre>
     *
     * <code>.yandex.cloud.mdb.clickhouse.v1.UserSettings.GroupByOverflowMode group_by_overflow_mode = 17;</code>
     */
    public yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.GroupByOverflowMode getGroupByOverflowMode() {
      @SuppressWarnings("deprecation")
      yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.GroupByOverflowMode result = yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.GroupByOverflowMode.valueOf(groupByOverflowMode_);
      return result == null ? yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.GroupByOverflowMode.UNRECOGNIZED : result;
    }

    public static final int MAX_ROWS_TO_SORT_FIELD_NUMBER = 18;
    private com.google.protobuf.Int64Value maxRowsToSort_;
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-rows-to-sort).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_rows_to_sort = 18 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    public boolean hasMaxRowsToSort() {
      return maxRowsToSort_ != null;
    }
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-rows-to-sort).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_rows_to_sort = 18 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    public com.google.protobuf.Int64Value getMaxRowsToSort() {
      return maxRowsToSort_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : maxRowsToSort_;
    }
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-rows-to-sort).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_rows_to_sort = 18 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    public com.google.protobuf.Int64ValueOrBuilder getMaxRowsToSortOrBuilder() {
      return getMaxRowsToSort();
    }

    public static final int MAX_BYTES_TO_SORT_FIELD_NUMBER = 19;
    private com.google.protobuf.Int64Value maxBytesToSort_;
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-bytes-to-sort).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_bytes_to_sort = 19 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    public boolean hasMaxBytesToSort() {
      return maxBytesToSort_ != null;
    }
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-bytes-to-sort).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_bytes_to_sort = 19 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    public com.google.protobuf.Int64Value getMaxBytesToSort() {
      return maxBytesToSort_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : maxBytesToSort_;
    }
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-bytes-to-sort).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_bytes_to_sort = 19 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    public com.google.protobuf.Int64ValueOrBuilder getMaxBytesToSortOrBuilder() {
      return getMaxBytesToSort();
    }

    public static final int SORT_OVERFLOW_MODE_FIELD_NUMBER = 20;
    private int sortOverflowMode_;
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#sort-overflow-mode).
     * </pre>
     *
     * <code>.yandex.cloud.mdb.clickhouse.v1.UserSettings.OverflowMode sort_overflow_mode = 20;</code>
     */
    public int getSortOverflowModeValue() {
      return sortOverflowMode_;
    }
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#sort-overflow-mode).
     * </pre>
     *
     * <code>.yandex.cloud.mdb.clickhouse.v1.UserSettings.OverflowMode sort_overflow_mode = 20;</code>
     */
    public yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.OverflowMode getSortOverflowMode() {
      @SuppressWarnings("deprecation")
      yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.OverflowMode result = yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.OverflowMode.valueOf(sortOverflowMode_);
      return result == null ? yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.OverflowMode.UNRECOGNIZED : result;
    }

    public static final int MAX_RESULT_ROWS_FIELD_NUMBER = 21;
    private com.google.protobuf.Int64Value maxResultRows_;
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-result-rows).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_result_rows = 21 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    public boolean hasMaxResultRows() {
      return maxResultRows_ != null;
    }
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-result-rows).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_result_rows = 21 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    public com.google.protobuf.Int64Value getMaxResultRows() {
      return maxResultRows_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : maxResultRows_;
    }
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-result-rows).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_result_rows = 21 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    public com.google.protobuf.Int64ValueOrBuilder getMaxResultRowsOrBuilder() {
      return getMaxResultRows();
    }

    public static final int MAX_RESULT_BYTES_FIELD_NUMBER = 22;
    private com.google.protobuf.Int64Value maxResultBytes_;
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-result-bytes).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_result_bytes = 22 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    public boolean hasMaxResultBytes() {
      return maxResultBytes_ != null;
    }
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-result-bytes).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_result_bytes = 22 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    public com.google.protobuf.Int64Value getMaxResultBytes() {
      return maxResultBytes_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : maxResultBytes_;
    }
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-result-bytes).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_result_bytes = 22 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    public com.google.protobuf.Int64ValueOrBuilder getMaxResultBytesOrBuilder() {
      return getMaxResultBytes();
    }

    public static final int RESULT_OVERFLOW_MODE_FIELD_NUMBER = 23;
    private int resultOverflowMode_;
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#result-overflow-mode).
     * </pre>
     *
     * <code>.yandex.cloud.mdb.clickhouse.v1.UserSettings.OverflowMode result_overflow_mode = 23;</code>
     */
    public int getResultOverflowModeValue() {
      return resultOverflowMode_;
    }
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#result-overflow-mode).
     * </pre>
     *
     * <code>.yandex.cloud.mdb.clickhouse.v1.UserSettings.OverflowMode result_overflow_mode = 23;</code>
     */
    public yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.OverflowMode getResultOverflowMode() {
      @SuppressWarnings("deprecation")
      yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.OverflowMode result = yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.OverflowMode.valueOf(resultOverflowMode_);
      return result == null ? yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.OverflowMode.UNRECOGNIZED : result;
    }

    public static final int MAX_ROWS_IN_DISTINCT_FIELD_NUMBER = 24;
    private com.google.protobuf.Int64Value maxRowsInDistinct_;
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-rows-in-distinct).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_rows_in_distinct = 24 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    public boolean hasMaxRowsInDistinct() {
      return maxRowsInDistinct_ != null;
    }
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-rows-in-distinct).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_rows_in_distinct = 24 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    public com.google.protobuf.Int64Value getMaxRowsInDistinct() {
      return maxRowsInDistinct_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : maxRowsInDistinct_;
    }
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-rows-in-distinct).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_rows_in_distinct = 24 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    public com.google.protobuf.Int64ValueOrBuilder getMaxRowsInDistinctOrBuilder() {
      return getMaxRowsInDistinct();
    }

    public static final int MAX_BYTES_IN_DISTINCT_FIELD_NUMBER = 25;
    private com.google.protobuf.Int64Value maxBytesInDistinct_;
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-bytes-in-distinct).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_bytes_in_distinct = 25 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    public boolean hasMaxBytesInDistinct() {
      return maxBytesInDistinct_ != null;
    }
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-bytes-in-distinct).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_bytes_in_distinct = 25 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    public com.google.protobuf.Int64Value getMaxBytesInDistinct() {
      return maxBytesInDistinct_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : maxBytesInDistinct_;
    }
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-bytes-in-distinct).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_bytes_in_distinct = 25 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    public com.google.protobuf.Int64ValueOrBuilder getMaxBytesInDistinctOrBuilder() {
      return getMaxBytesInDistinct();
    }

    public static final int DISTINCT_OVERFLOW_MODE_FIELD_NUMBER = 26;
    private int distinctOverflowMode_;
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#distinct-overflow-mode).
     * </pre>
     *
     * <code>.yandex.cloud.mdb.clickhouse.v1.UserSettings.OverflowMode distinct_overflow_mode = 26;</code>
     */
    public int getDistinctOverflowModeValue() {
      return distinctOverflowMode_;
    }
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#distinct-overflow-mode).
     * </pre>
     *
     * <code>.yandex.cloud.mdb.clickhouse.v1.UserSettings.OverflowMode distinct_overflow_mode = 26;</code>
     */
    public yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.OverflowMode getDistinctOverflowMode() {
      @SuppressWarnings("deprecation")
      yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.OverflowMode result = yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.OverflowMode.valueOf(distinctOverflowMode_);
      return result == null ? yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.OverflowMode.UNRECOGNIZED : result;
    }

    public static final int MAX_ROWS_TO_TRANSFER_FIELD_NUMBER = 27;
    private com.google.protobuf.Int64Value maxRowsToTransfer_;
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-rows-to-transfer).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_rows_to_transfer = 27 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    public boolean hasMaxRowsToTransfer() {
      return maxRowsToTransfer_ != null;
    }
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-rows-to-transfer).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_rows_to_transfer = 27 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    public com.google.protobuf.Int64Value getMaxRowsToTransfer() {
      return maxRowsToTransfer_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : maxRowsToTransfer_;
    }
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-rows-to-transfer).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_rows_to_transfer = 27 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    public com.google.protobuf.Int64ValueOrBuilder getMaxRowsToTransferOrBuilder() {
      return getMaxRowsToTransfer();
    }

    public static final int MAX_BYTES_TO_TRANSFER_FIELD_NUMBER = 28;
    private com.google.protobuf.Int64Value maxBytesToTransfer_;
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-bytes-to-transfer).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_bytes_to_transfer = 28 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    public boolean hasMaxBytesToTransfer() {
      return maxBytesToTransfer_ != null;
    }
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-bytes-to-transfer).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_bytes_to_transfer = 28 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    public com.google.protobuf.Int64Value getMaxBytesToTransfer() {
      return maxBytesToTransfer_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : maxBytesToTransfer_;
    }
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-bytes-to-transfer).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_bytes_to_transfer = 28 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    public com.google.protobuf.Int64ValueOrBuilder getMaxBytesToTransferOrBuilder() {
      return getMaxBytesToTransfer();
    }

    public static final int TRANSFER_OVERFLOW_MODE_FIELD_NUMBER = 29;
    private int transferOverflowMode_;
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#transfer-overflow-mode).
     * </pre>
     *
     * <code>.yandex.cloud.mdb.clickhouse.v1.UserSettings.OverflowMode transfer_overflow_mode = 29;</code>
     */
    public int getTransferOverflowModeValue() {
      return transferOverflowMode_;
    }
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#transfer-overflow-mode).
     * </pre>
     *
     * <code>.yandex.cloud.mdb.clickhouse.v1.UserSettings.OverflowMode transfer_overflow_mode = 29;</code>
     */
    public yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.OverflowMode getTransferOverflowMode() {
      @SuppressWarnings("deprecation")
      yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.OverflowMode result = yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.OverflowMode.valueOf(transferOverflowMode_);
      return result == null ? yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.OverflowMode.UNRECOGNIZED : result;
    }

    public static final int MAX_EXECUTION_TIME_FIELD_NUMBER = 30;
    private com.google.protobuf.Int64Value maxExecutionTime_;
    /**
     * <pre>
     * Maximum query execution time in milliseconds.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-execution-time).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_execution_time = 30 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    public boolean hasMaxExecutionTime() {
      return maxExecutionTime_ != null;
    }
    /**
     * <pre>
     * Maximum query execution time in milliseconds.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-execution-time).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_execution_time = 30 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    public com.google.protobuf.Int64Value getMaxExecutionTime() {
      return maxExecutionTime_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : maxExecutionTime_;
    }
    /**
     * <pre>
     * Maximum query execution time in milliseconds.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-execution-time).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_execution_time = 30 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    public com.google.protobuf.Int64ValueOrBuilder getMaxExecutionTimeOrBuilder() {
      return getMaxExecutionTime();
    }

    public static final int TIMEOUT_OVERFLOW_MODE_FIELD_NUMBER = 31;
    private int timeoutOverflowMode_;
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#timeout-overflow-mode).
     * </pre>
     *
     * <code>.yandex.cloud.mdb.clickhouse.v1.UserSettings.OverflowMode timeout_overflow_mode = 31;</code>
     */
    public int getTimeoutOverflowModeValue() {
      return timeoutOverflowMode_;
    }
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#timeout-overflow-mode).
     * </pre>
     *
     * <code>.yandex.cloud.mdb.clickhouse.v1.UserSettings.OverflowMode timeout_overflow_mode = 31;</code>
     */
    public yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.OverflowMode getTimeoutOverflowMode() {
      @SuppressWarnings("deprecation")
      yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.OverflowMode result = yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.OverflowMode.valueOf(timeoutOverflowMode_);
      return result == null ? yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.OverflowMode.UNRECOGNIZED : result;
    }

    public static final int MAX_COLUMNS_TO_READ_FIELD_NUMBER = 32;
    private com.google.protobuf.Int64Value maxColumnsToRead_;
    /**
     * <pre>
     * Maximum number of columns that can be read from a table in a single query.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-columns-to-read).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_columns_to_read = 32 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    public boolean hasMaxColumnsToRead() {
      return maxColumnsToRead_ != null;
    }
    /**
     * <pre>
     * Maximum number of columns that can be read from a table in a single query.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-columns-to-read).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_columns_to_read = 32 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    public com.google.protobuf.Int64Value getMaxColumnsToRead() {
      return maxColumnsToRead_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : maxColumnsToRead_;
    }
    /**
     * <pre>
     * Maximum number of columns that can be read from a table in a single query.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-columns-to-read).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_columns_to_read = 32 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    public com.google.protobuf.Int64ValueOrBuilder getMaxColumnsToReadOrBuilder() {
      return getMaxColumnsToRead();
    }

    public static final int MAX_TEMPORARY_COLUMNS_FIELD_NUMBER = 33;
    private com.google.protobuf.Int64Value maxTemporaryColumns_;
    /**
     * <pre>
     * Maximum number of temporary columns that must be kept in RAM at the same time when running a query, including constant columns.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-temporary-columns).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_temporary_columns = 33 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    public boolean hasMaxTemporaryColumns() {
      return maxTemporaryColumns_ != null;
    }
    /**
     * <pre>
     * Maximum number of temporary columns that must be kept in RAM at the same time when running a query, including constant columns.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-temporary-columns).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_temporary_columns = 33 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    public com.google.protobuf.Int64Value getMaxTemporaryColumns() {
      return maxTemporaryColumns_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : maxTemporaryColumns_;
    }
    /**
     * <pre>
     * Maximum number of temporary columns that must be kept in RAM at the same time when running a query, including constant columns.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-temporary-columns).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_temporary_columns = 33 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    public com.google.protobuf.Int64ValueOrBuilder getMaxTemporaryColumnsOrBuilder() {
      return getMaxTemporaryColumns();
    }

    public static final int MAX_TEMPORARY_NON_CONST_COLUMNS_FIELD_NUMBER = 34;
    private com.google.protobuf.Int64Value maxTemporaryNonConstColumns_;
    /**
     * <pre>
     * Maximum number of temporary columns that must be kept in RAM at the same time when running a query, excluding constant columns.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-temporary-non-const-columns).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_temporary_non_const_columns = 34 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    public boolean hasMaxTemporaryNonConstColumns() {
      return maxTemporaryNonConstColumns_ != null;
    }
    /**
     * <pre>
     * Maximum number of temporary columns that must be kept in RAM at the same time when running a query, excluding constant columns.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-temporary-non-const-columns).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_temporary_non_const_columns = 34 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    public com.google.protobuf.Int64Value getMaxTemporaryNonConstColumns() {
      return maxTemporaryNonConstColumns_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : maxTemporaryNonConstColumns_;
    }
    /**
     * <pre>
     * Maximum number of temporary columns that must be kept in RAM at the same time when running a query, excluding constant columns.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-temporary-non-const-columns).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_temporary_non_const_columns = 34 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    public com.google.protobuf.Int64ValueOrBuilder getMaxTemporaryNonConstColumnsOrBuilder() {
      return getMaxTemporaryNonConstColumns();
    }

    public static final int MAX_QUERY_SIZE_FIELD_NUMBER = 35;
    private com.google.protobuf.Int64Value maxQuerySize_;
    /**
     * <pre>
     * The maximum part of a query that can be taken to RAM for parsing with the SQL parser, in bytes. Default value: 262144.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_query_size).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_query_size = 35 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    public boolean hasMaxQuerySize() {
      return maxQuerySize_ != null;
    }
    /**
     * <pre>
     * The maximum part of a query that can be taken to RAM for parsing with the SQL parser, in bytes. Default value: 262144.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_query_size).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_query_size = 35 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    public com.google.protobuf.Int64Value getMaxQuerySize() {
      return maxQuerySize_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : maxQuerySize_;
    }
    /**
     * <pre>
     * The maximum part of a query that can be taken to RAM for parsing with the SQL parser, in bytes. Default value: 262144.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_query_size).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_query_size = 35 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    public com.google.protobuf.Int64ValueOrBuilder getMaxQuerySizeOrBuilder() {
      return getMaxQuerySize();
    }

    public static final int MAX_AST_DEPTH_FIELD_NUMBER = 36;
    private com.google.protobuf.Int64Value maxAstDepth_;
    /**
     * <pre>
     * Maximum depth of query syntax tree. Default value: 1000.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-ast-depth).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_ast_depth = 36 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    public boolean hasMaxAstDepth() {
      return maxAstDepth_ != null;
    }
    /**
     * <pre>
     * Maximum depth of query syntax tree. Default value: 1000.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-ast-depth).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_ast_depth = 36 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    public com.google.protobuf.Int64Value getMaxAstDepth() {
      return maxAstDepth_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : maxAstDepth_;
    }
    /**
     * <pre>
     * Maximum depth of query syntax tree. Default value: 1000.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-ast-depth).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_ast_depth = 36 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    public com.google.protobuf.Int64ValueOrBuilder getMaxAstDepthOrBuilder() {
      return getMaxAstDepth();
    }

    public static final int MAX_AST_ELEMENTS_FIELD_NUMBER = 37;
    private com.google.protobuf.Int64Value maxAstElements_;
    /**
     * <pre>
     * Maximum size of query syntax tree in number of nodes. Default value: 50000.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-ast-elements).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_ast_elements = 37 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    public boolean hasMaxAstElements() {
      return maxAstElements_ != null;
    }
    /**
     * <pre>
     * Maximum size of query syntax tree in number of nodes. Default value: 50000.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-ast-elements).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_ast_elements = 37 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    public com.google.protobuf.Int64Value getMaxAstElements() {
      return maxAstElements_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : maxAstElements_;
    }
    /**
     * <pre>
     * Maximum size of query syntax tree in number of nodes. Default value: 50000.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-ast-elements).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_ast_elements = 37 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    public com.google.protobuf.Int64ValueOrBuilder getMaxAstElementsOrBuilder() {
      return getMaxAstElements();
    }

    public static final int MAX_EXPANDED_AST_ELEMENTS_FIELD_NUMBER = 38;
    private com.google.protobuf.Int64Value maxExpandedAstElements_;
    /**
     * <pre>
     * Maximum size of query syntax tree in number of nodes after expansion of aliases and the asterisk. Default value: 500000.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_expanded_ast_elements = 38 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    public boolean hasMaxExpandedAstElements() {
      return maxExpandedAstElements_ != null;
    }
    /**
     * <pre>
     * Maximum size of query syntax tree in number of nodes after expansion of aliases and the asterisk. Default value: 500000.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_expanded_ast_elements = 38 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    public com.google.protobuf.Int64Value getMaxExpandedAstElements() {
      return maxExpandedAstElements_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : maxExpandedAstElements_;
    }
    /**
     * <pre>
     * Maximum size of query syntax tree in number of nodes after expansion of aliases and the asterisk. Default value: 500000.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_expanded_ast_elements = 38 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    public com.google.protobuf.Int64ValueOrBuilder getMaxExpandedAstElementsOrBuilder() {
      return getMaxExpandedAstElements();
    }

    public static final int INPUT_FORMAT_VALUES_INTERPRET_EXPRESSIONS_FIELD_NUMBER = 61;
    private com.google.protobuf.BoolValue inputFormatValuesInterpretExpressions_;
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-input_format_values_interpret_expressions).
     * </pre>
     *
     * <code>.google.protobuf.BoolValue input_format_values_interpret_expressions = 61;</code>
     */
    public boolean hasInputFormatValuesInterpretExpressions() {
      return inputFormatValuesInterpretExpressions_ != null;
    }
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-input_format_values_interpret_expressions).
     * </pre>
     *
     * <code>.google.protobuf.BoolValue input_format_values_interpret_expressions = 61;</code>
     */
    public com.google.protobuf.BoolValue getInputFormatValuesInterpretExpressions() {
      return inputFormatValuesInterpretExpressions_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : inputFormatValuesInterpretExpressions_;
    }
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-input_format_values_interpret_expressions).
     * </pre>
     *
     * <code>.google.protobuf.BoolValue input_format_values_interpret_expressions = 61;</code>
     */
    public com.google.protobuf.BoolValueOrBuilder getInputFormatValuesInterpretExpressionsOrBuilder() {
      return getInputFormatValuesInterpretExpressions();
    }

    public static final int INPUT_FORMAT_DEFAULTS_FOR_OMITTED_FIELDS_FIELD_NUMBER = 62;
    private com.google.protobuf.BoolValue inputFormatDefaultsForOmittedFields_;
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#session_settings-input_format_defaults_for_omitted_fields).
     * </pre>
     *
     * <code>.google.protobuf.BoolValue input_format_defaults_for_omitted_fields = 62;</code>
     */
    public boolean hasInputFormatDefaultsForOmittedFields() {
      return inputFormatDefaultsForOmittedFields_ != null;
    }
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#session_settings-input_format_defaults_for_omitted_fields).
     * </pre>
     *
     * <code>.google.protobuf.BoolValue input_format_defaults_for_omitted_fields = 62;</code>
     */
    public com.google.protobuf.BoolValue getInputFormatDefaultsForOmittedFields() {
      return inputFormatDefaultsForOmittedFields_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : inputFormatDefaultsForOmittedFields_;
    }
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#session_settings-input_format_defaults_for_omitted_fields).
     * </pre>
     *
     * <code>.google.protobuf.BoolValue input_format_defaults_for_omitted_fields = 62;</code>
     */
    public com.google.protobuf.BoolValueOrBuilder getInputFormatDefaultsForOmittedFieldsOrBuilder() {
      return getInputFormatDefaultsForOmittedFields();
    }

    public static final int OUTPUT_FORMAT_JSON_QUOTE_64BIT_INTEGERS_FIELD_NUMBER = 63;
    private com.google.protobuf.BoolValue outputFormatJsonQuote64BitIntegers_;
    /**
     * <pre>
     * Whether quoting of 64-bit integers is enabled in JSON output format.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#session_settings-output_format_json_quote_64bit_integers).
     * </pre>
     *
     * <code>.google.protobuf.BoolValue output_format_json_quote_64bit_integers = 63;</code>
     */
    public boolean hasOutputFormatJsonQuote64BitIntegers() {
      return outputFormatJsonQuote64BitIntegers_ != null;
    }
    /**
     * <pre>
     * Whether quoting of 64-bit integers is enabled in JSON output format.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#session_settings-output_format_json_quote_64bit_integers).
     * </pre>
     *
     * <code>.google.protobuf.BoolValue output_format_json_quote_64bit_integers = 63;</code>
     */
    public com.google.protobuf.BoolValue getOutputFormatJsonQuote64BitIntegers() {
      return outputFormatJsonQuote64BitIntegers_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : outputFormatJsonQuote64BitIntegers_;
    }
    /**
     * <pre>
     * Whether quoting of 64-bit integers is enabled in JSON output format.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#session_settings-output_format_json_quote_64bit_integers).
     * </pre>
     *
     * <code>.google.protobuf.BoolValue output_format_json_quote_64bit_integers = 63;</code>
     */
    public com.google.protobuf.BoolValueOrBuilder getOutputFormatJsonQuote64BitIntegersOrBuilder() {
      return getOutputFormatJsonQuote64BitIntegers();
    }

    public static final int OUTPUT_FORMAT_JSON_QUOTE_DENORMALS_FIELD_NUMBER = 64;
    private com.google.protobuf.BoolValue outputFormatJsonQuoteDenormals_;
    /**
     * <pre>
     * Whether output of special floating-point values (`+nan`, `-nan`, `+inf` and `-inf`) is enabled in JSON output format.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue output_format_json_quote_denormals = 64;</code>
     */
    public boolean hasOutputFormatJsonQuoteDenormals() {
      return outputFormatJsonQuoteDenormals_ != null;
    }
    /**
     * <pre>
     * Whether output of special floating-point values (`+nan`, `-nan`, `+inf` and `-inf`) is enabled in JSON output format.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue output_format_json_quote_denormals = 64;</code>
     */
    public com.google.protobuf.BoolValue getOutputFormatJsonQuoteDenormals() {
      return outputFormatJsonQuoteDenormals_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : outputFormatJsonQuoteDenormals_;
    }
    /**
     * <pre>
     * Whether output of special floating-point values (`+nan`, `-nan`, `+inf` and `-inf`) is enabled in JSON output format.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue output_format_json_quote_denormals = 64;</code>
     */
    public com.google.protobuf.BoolValueOrBuilder getOutputFormatJsonQuoteDenormalsOrBuilder() {
      return getOutputFormatJsonQuoteDenormals();
    }

    public static final int LOW_CARDINALITY_ALLOW_IN_NATIVE_FORMAT_FIELD_NUMBER = 78;
    private com.google.protobuf.BoolValue lowCardinalityAllowInNativeFormat_;
    /**
     * <code>.google.protobuf.BoolValue low_cardinality_allow_in_native_format = 78;</code>
     */
    public boolean hasLowCardinalityAllowInNativeFormat() {
      return lowCardinalityAllowInNativeFormat_ != null;
    }
    /**
     * <code>.google.protobuf.BoolValue low_cardinality_allow_in_native_format = 78;</code>
     */
    public com.google.protobuf.BoolValue getLowCardinalityAllowInNativeFormat() {
      return lowCardinalityAllowInNativeFormat_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : lowCardinalityAllowInNativeFormat_;
    }
    /**
     * <code>.google.protobuf.BoolValue low_cardinality_allow_in_native_format = 78;</code>
     */
    public com.google.protobuf.BoolValueOrBuilder getLowCardinalityAllowInNativeFormatOrBuilder() {
      return getLowCardinalityAllowInNativeFormat();
    }

    public static final int EMPTY_RESULT_FOR_AGGREGATION_BY_EMPTY_SET_FIELD_NUMBER = 79;
    private com.google.protobuf.BoolValue emptyResultForAggregationByEmptySet_;
    /**
     * <code>.google.protobuf.BoolValue empty_result_for_aggregation_by_empty_set = 79;</code>
     */
    public boolean hasEmptyResultForAggregationByEmptySet() {
      return emptyResultForAggregationByEmptySet_ != null;
    }
    /**
     * <code>.google.protobuf.BoolValue empty_result_for_aggregation_by_empty_set = 79;</code>
     */
    public com.google.protobuf.BoolValue getEmptyResultForAggregationByEmptySet() {
      return emptyResultForAggregationByEmptySet_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : emptyResultForAggregationByEmptySet_;
    }
    /**
     * <code>.google.protobuf.BoolValue empty_result_for_aggregation_by_empty_set = 79;</code>
     */
    public com.google.protobuf.BoolValueOrBuilder getEmptyResultForAggregationByEmptySetOrBuilder() {
      return getEmptyResultForAggregationByEmptySet();
    }

    public static final int HTTP_CONNECTION_TIMEOUT_FIELD_NUMBER = 65;
    private com.google.protobuf.Int64Value httpConnectionTimeout_;
    /**
     * <pre>
     * HTTP connection timeout, in milliseconds.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value http_connection_timeout = 65;</code>
     */
    public boolean hasHttpConnectionTimeout() {
      return httpConnectionTimeout_ != null;
    }
    /**
     * <pre>
     * HTTP connection timeout, in milliseconds.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value http_connection_timeout = 65;</code>
     */
    public com.google.protobuf.Int64Value getHttpConnectionTimeout() {
      return httpConnectionTimeout_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : httpConnectionTimeout_;
    }
    /**
     * <pre>
     * HTTP connection timeout, in milliseconds.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value http_connection_timeout = 65;</code>
     */
    public com.google.protobuf.Int64ValueOrBuilder getHttpConnectionTimeoutOrBuilder() {
      return getHttpConnectionTimeout();
    }

    public static final int HTTP_RECEIVE_TIMEOUT_FIELD_NUMBER = 66;
    private com.google.protobuf.Int64Value httpReceiveTimeout_;
    /**
     * <pre>
     * HTTP receive timeout, in milliseconds.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value http_receive_timeout = 66;</code>
     */
    public boolean hasHttpReceiveTimeout() {
      return httpReceiveTimeout_ != null;
    }
    /**
     * <pre>
     * HTTP receive timeout, in milliseconds.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value http_receive_timeout = 66;</code>
     */
    public com.google.protobuf.Int64Value getHttpReceiveTimeout() {
      return httpReceiveTimeout_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : httpReceiveTimeout_;
    }
    /**
     * <pre>
     * HTTP receive timeout, in milliseconds.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value http_receive_timeout = 66;</code>
     */
    public com.google.protobuf.Int64ValueOrBuilder getHttpReceiveTimeoutOrBuilder() {
      return getHttpReceiveTimeout();
    }

    public static final int HTTP_SEND_TIMEOUT_FIELD_NUMBER = 67;
    private com.google.protobuf.Int64Value httpSendTimeout_;
    /**
     * <pre>
     * HTTP send timeout, in milliseconds.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value http_send_timeout = 67;</code>
     */
    public boolean hasHttpSendTimeout() {
      return httpSendTimeout_ != null;
    }
    /**
     * <pre>
     * HTTP send timeout, in milliseconds.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value http_send_timeout = 67;</code>
     */
    public com.google.protobuf.Int64Value getHttpSendTimeout() {
      return httpSendTimeout_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : httpSendTimeout_;
    }
    /**
     * <pre>
     * HTTP send timeout, in milliseconds.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value http_send_timeout = 67;</code>
     */
    public com.google.protobuf.Int64ValueOrBuilder getHttpSendTimeoutOrBuilder() {
      return getHttpSendTimeout();
    }

    public static final int ENABLE_HTTP_COMPRESSION_FIELD_NUMBER = 68;
    private com.google.protobuf.BoolValue enableHttpCompression_;
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-enable_http_compression).
     * </pre>
     *
     * <code>.google.protobuf.BoolValue enable_http_compression = 68;</code>
     */
    public boolean hasEnableHttpCompression() {
      return enableHttpCompression_ != null;
    }
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-enable_http_compression).
     * </pre>
     *
     * <code>.google.protobuf.BoolValue enable_http_compression = 68;</code>
     */
    public com.google.protobuf.BoolValue getEnableHttpCompression() {
      return enableHttpCompression_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : enableHttpCompression_;
    }
    /**
     * <pre>
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-enable_http_compression).
     * </pre>
     *
     * <code>.google.protobuf.BoolValue enable_http_compression = 68;</code>
     */
    public com.google.protobuf.BoolValueOrBuilder getEnableHttpCompressionOrBuilder() {
      return getEnableHttpCompression();
    }

    public static final int SEND_PROGRESS_IN_HTTP_HEADERS_FIELD_NUMBER = 69;
    private com.google.protobuf.BoolValue sendProgressInHttpHeaders_;
    /**
     * <pre>
     * Whether progress notifications using X-ClickHouse-Progress headers are enabled. Default value: `false`.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-send_progress_in_http_headers).
     * </pre>
     *
     * <code>.google.protobuf.BoolValue send_progress_in_http_headers = 69;</code>
     */
    public boolean hasSendProgressInHttpHeaders() {
      return sendProgressInHttpHeaders_ != null;
    }
    /**
     * <pre>
     * Whether progress notifications using X-ClickHouse-Progress headers are enabled. Default value: `false`.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-send_progress_in_http_headers).
     * </pre>
     *
     * <code>.google.protobuf.BoolValue send_progress_in_http_headers = 69;</code>
     */
    public com.google.protobuf.BoolValue getSendProgressInHttpHeaders() {
      return sendProgressInHttpHeaders_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : sendProgressInHttpHeaders_;
    }
    /**
     * <pre>
     * Whether progress notifications using X-ClickHouse-Progress headers are enabled. Default value: `false`.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-send_progress_in_http_headers).
     * </pre>
     *
     * <code>.google.protobuf.BoolValue send_progress_in_http_headers = 69;</code>
     */
    public com.google.protobuf.BoolValueOrBuilder getSendProgressInHttpHeadersOrBuilder() {
      return getSendProgressInHttpHeaders();
    }

    public static final int HTTP_HEADERS_PROGRESS_INTERVAL_FIELD_NUMBER = 70;
    private com.google.protobuf.Int64Value httpHeadersProgressInterval_;
    /**
     * <pre>
     * Minimum interval between progress notifications, in milliseconds. Default value: 100.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value http_headers_progress_interval = 70;</code>
     */
    public boolean hasHttpHeadersProgressInterval() {
      return httpHeadersProgressInterval_ != null;
    }
    /**
     * <pre>
     * Minimum interval between progress notifications, in milliseconds. Default value: 100.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value http_headers_progress_interval = 70;</code>
     */
    public com.google.protobuf.Int64Value getHttpHeadersProgressInterval() {
      return httpHeadersProgressInterval_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : httpHeadersProgressInterval_;
    }
    /**
     * <pre>
     * Minimum interval between progress notifications, in milliseconds. Default value: 100.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value http_headers_progress_interval = 70;</code>
     */
    public com.google.protobuf.Int64ValueOrBuilder getHttpHeadersProgressIntervalOrBuilder() {
      return getHttpHeadersProgressInterval();
    }

    public static final int ADD_HTTP_CORS_HEADER_FIELD_NUMBER = 71;
    private com.google.protobuf.BoolValue addHttpCorsHeader_;
    /**
     * <pre>
     * Whether CORS header in HTTP responses is enabled. Default value: `false`.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue add_http_cors_header = 71;</code>
     */
    public boolean hasAddHttpCorsHeader() {
      return addHttpCorsHeader_ != null;
    }
    /**
     * <pre>
     * Whether CORS header in HTTP responses is enabled. Default value: `false`.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue add_http_cors_header = 71;</code>
     */
    public com.google.protobuf.BoolValue getAddHttpCorsHeader() {
      return addHttpCorsHeader_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : addHttpCorsHeader_;
    }
    /**
     * <pre>
     * Whether CORS header in HTTP responses is enabled. Default value: `false`.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue add_http_cors_header = 71;</code>
     */
    public com.google.protobuf.BoolValueOrBuilder getAddHttpCorsHeaderOrBuilder() {
      return getAddHttpCorsHeader();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (readonly_ != null) {
        output.writeMessage(1, getReadonly());
      }
      if (allowDdl_ != null) {
        output.writeMessage(2, getAllowDdl());
      }
      if (insertQuorum_ != null) {
        output.writeMessage(3, getInsertQuorum());
      }
      if (insertQuorumTimeout_ != null) {
        output.writeMessage(4, getInsertQuorumTimeout());
      }
      if (selectSequentialConsistency_ != null) {
        output.writeMessage(5, getSelectSequentialConsistency());
      }
      if (maxReplicaDelayForDistributedQueries_ != null) {
        output.writeMessage(6, getMaxReplicaDelayForDistributedQueries());
      }
      if (fallbackToStaleReplicasForDistributedQueries_ != null) {
        output.writeMessage(7, getFallbackToStaleReplicasForDistributedQueries());
      }
      if (maxThreads_ != null) {
        output.writeMessage(8, getMaxThreads());
      }
      if (maxBlockSize_ != null) {
        output.writeMessage(9, getMaxBlockSize());
      }
      if (maxInsertBlockSize_ != null) {
        output.writeMessage(10, getMaxInsertBlockSize());
      }
      if (maxMemoryUsage_ != null) {
        output.writeMessage(11, getMaxMemoryUsage());
      }
      if (maxMemoryUsageForUser_ != null) {
        output.writeMessage(12, getMaxMemoryUsageForUser());
      }
      if (maxRowsToRead_ != null) {
        output.writeMessage(13, getMaxRowsToRead());
      }
      if (maxBytesToRead_ != null) {
        output.writeMessage(14, getMaxBytesToRead());
      }
      if (readOverflowMode_ != yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.OverflowMode.OVERFLOW_MODE_UNSPECIFIED.getNumber()) {
        output.writeEnum(15, readOverflowMode_);
      }
      if (maxRowsToGroupBy_ != null) {
        output.writeMessage(16, getMaxRowsToGroupBy());
      }
      if (groupByOverflowMode_ != yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.GroupByOverflowMode.GROUP_BY_OVERFLOW_MODE_UNSPECIFIED.getNumber()) {
        output.writeEnum(17, groupByOverflowMode_);
      }
      if (maxRowsToSort_ != null) {
        output.writeMessage(18, getMaxRowsToSort());
      }
      if (maxBytesToSort_ != null) {
        output.writeMessage(19, getMaxBytesToSort());
      }
      if (sortOverflowMode_ != yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.OverflowMode.OVERFLOW_MODE_UNSPECIFIED.getNumber()) {
        output.writeEnum(20, sortOverflowMode_);
      }
      if (maxResultRows_ != null) {
        output.writeMessage(21, getMaxResultRows());
      }
      if (maxResultBytes_ != null) {
        output.writeMessage(22, getMaxResultBytes());
      }
      if (resultOverflowMode_ != yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.OverflowMode.OVERFLOW_MODE_UNSPECIFIED.getNumber()) {
        output.writeEnum(23, resultOverflowMode_);
      }
      if (maxRowsInDistinct_ != null) {
        output.writeMessage(24, getMaxRowsInDistinct());
      }
      if (maxBytesInDistinct_ != null) {
        output.writeMessage(25, getMaxBytesInDistinct());
      }
      if (distinctOverflowMode_ != yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.OverflowMode.OVERFLOW_MODE_UNSPECIFIED.getNumber()) {
        output.writeEnum(26, distinctOverflowMode_);
      }
      if (maxRowsToTransfer_ != null) {
        output.writeMessage(27, getMaxRowsToTransfer());
      }
      if (maxBytesToTransfer_ != null) {
        output.writeMessage(28, getMaxBytesToTransfer());
      }
      if (transferOverflowMode_ != yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.OverflowMode.OVERFLOW_MODE_UNSPECIFIED.getNumber()) {
        output.writeEnum(29, transferOverflowMode_);
      }
      if (maxExecutionTime_ != null) {
        output.writeMessage(30, getMaxExecutionTime());
      }
      if (timeoutOverflowMode_ != yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.OverflowMode.OVERFLOW_MODE_UNSPECIFIED.getNumber()) {
        output.writeEnum(31, timeoutOverflowMode_);
      }
      if (maxColumnsToRead_ != null) {
        output.writeMessage(32, getMaxColumnsToRead());
      }
      if (maxTemporaryColumns_ != null) {
        output.writeMessage(33, getMaxTemporaryColumns());
      }
      if (maxTemporaryNonConstColumns_ != null) {
        output.writeMessage(34, getMaxTemporaryNonConstColumns());
      }
      if (maxQuerySize_ != null) {
        output.writeMessage(35, getMaxQuerySize());
      }
      if (maxAstDepth_ != null) {
        output.writeMessage(36, getMaxAstDepth());
      }
      if (maxAstElements_ != null) {
        output.writeMessage(37, getMaxAstElements());
      }
      if (maxExpandedAstElements_ != null) {
        output.writeMessage(38, getMaxExpandedAstElements());
      }
      if (connectTimeout_ != null) {
        output.writeMessage(39, getConnectTimeout());
      }
      if (receiveTimeout_ != null) {
        output.writeMessage(40, getReceiveTimeout());
      }
      if (sendTimeout_ != null) {
        output.writeMessage(41, getSendTimeout());
      }
      if (replicationAlterPartitionsSync_ != null) {
        output.writeMessage(42, getReplicationAlterPartitionsSync());
      }
      if (distributedProductMode_ != yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.DistributedProductMode.DISTRIBUTED_PRODUCT_MODE_UNSPECIFIED.getNumber()) {
        output.writeEnum(43, distributedProductMode_);
      }
      if (compile_ != null) {
        output.writeMessage(44, getCompile());
      }
      if (minCountToCompile_ != null) {
        output.writeMessage(45, getMinCountToCompile());
      }
      if (compileExpressions_ != null) {
        output.writeMessage(46, getCompileExpressions());
      }
      if (minCountToCompileExpression_ != null) {
        output.writeMessage(47, getMinCountToCompileExpression());
      }
      if (minInsertBlockSizeRows_ != null) {
        output.writeMessage(48, getMinInsertBlockSizeRows());
      }
      if (minInsertBlockSizeBytes_ != null) {
        output.writeMessage(49, getMinInsertBlockSizeBytes());
      }
      if (minBytesToUseDirectIo_ != null) {
        output.writeMessage(50, getMinBytesToUseDirectIo());
      }
      if (useUncompressedCache_ != null) {
        output.writeMessage(51, getUseUncompressedCache());
      }
      if (mergeTreeMaxRowsToUseCache_ != null) {
        output.writeMessage(52, getMergeTreeMaxRowsToUseCache());
      }
      if (mergeTreeMaxBytesToUseCache_ != null) {
        output.writeMessage(53, getMergeTreeMaxBytesToUseCache());
      }
      if (mergeTreeMinRowsForConcurrentRead_ != null) {
        output.writeMessage(54, getMergeTreeMinRowsForConcurrentRead());
      }
      if (mergeTreeMinBytesForConcurrentRead_ != null) {
        output.writeMessage(55, getMergeTreeMinBytesForConcurrentRead());
      }
      if (priority_ != null) {
        output.writeMessage(56, getPriority());
      }
      if (maxNetworkBandwidth_ != null) {
        output.writeMessage(57, getMaxNetworkBandwidth());
      }
      if (maxNetworkBandwidthForUser_ != null) {
        output.writeMessage(58, getMaxNetworkBandwidthForUser());
      }
      if (forceIndexByDate_ != null) {
        output.writeMessage(59, getForceIndexByDate());
      }
      if (forcePrimaryKey_ != null) {
        output.writeMessage(60, getForcePrimaryKey());
      }
      if (inputFormatValuesInterpretExpressions_ != null) {
        output.writeMessage(61, getInputFormatValuesInterpretExpressions());
      }
      if (inputFormatDefaultsForOmittedFields_ != null) {
        output.writeMessage(62, getInputFormatDefaultsForOmittedFields());
      }
      if (outputFormatJsonQuote64BitIntegers_ != null) {
        output.writeMessage(63, getOutputFormatJsonQuote64BitIntegers());
      }
      if (outputFormatJsonQuoteDenormals_ != null) {
        output.writeMessage(64, getOutputFormatJsonQuoteDenormals());
      }
      if (httpConnectionTimeout_ != null) {
        output.writeMessage(65, getHttpConnectionTimeout());
      }
      if (httpReceiveTimeout_ != null) {
        output.writeMessage(66, getHttpReceiveTimeout());
      }
      if (httpSendTimeout_ != null) {
        output.writeMessage(67, getHttpSendTimeout());
      }
      if (enableHttpCompression_ != null) {
        output.writeMessage(68, getEnableHttpCompression());
      }
      if (sendProgressInHttpHeaders_ != null) {
        output.writeMessage(69, getSendProgressInHttpHeaders());
      }
      if (httpHeadersProgressInterval_ != null) {
        output.writeMessage(70, getHttpHeadersProgressInterval());
      }
      if (addHttpCorsHeader_ != null) {
        output.writeMessage(71, getAddHttpCorsHeader());
      }
      if (distributedAggregationMemoryEfficient_ != null) {
        output.writeMessage(72, getDistributedAggregationMemoryEfficient());
      }
      if (distributedDdlTaskTimeout_ != null) {
        output.writeMessage(73, getDistributedDdlTaskTimeout());
      }
      if (maxBytesBeforeExternalGroupBy_ != null) {
        output.writeMessage(74, getMaxBytesBeforeExternalGroupBy());
      }
      if (maxBytesBeforeExternalSort_ != null) {
        output.writeMessage(75, getMaxBytesBeforeExternalSort());
      }
      if (groupByTwoLevelThreshold_ != null) {
        output.writeMessage(76, getGroupByTwoLevelThreshold());
      }
      if (groupByTwoLevelThresholdBytes_ != null) {
        output.writeMessage(77, getGroupByTwoLevelThresholdBytes());
      }
      if (lowCardinalityAllowInNativeFormat_ != null) {
        output.writeMessage(78, getLowCardinalityAllowInNativeFormat());
      }
      if (emptyResultForAggregationByEmptySet_ != null) {
        output.writeMessage(79, getEmptyResultForAggregationByEmptySet());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (readonly_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getReadonly());
      }
      if (allowDdl_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getAllowDdl());
      }
      if (insertQuorum_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getInsertQuorum());
      }
      if (insertQuorumTimeout_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getInsertQuorumTimeout());
      }
      if (selectSequentialConsistency_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getSelectSequentialConsistency());
      }
      if (maxReplicaDelayForDistributedQueries_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getMaxReplicaDelayForDistributedQueries());
      }
      if (fallbackToStaleReplicasForDistributedQueries_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getFallbackToStaleReplicasForDistributedQueries());
      }
      if (maxThreads_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getMaxThreads());
      }
      if (maxBlockSize_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, getMaxBlockSize());
      }
      if (maxInsertBlockSize_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, getMaxInsertBlockSize());
      }
      if (maxMemoryUsage_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, getMaxMemoryUsage());
      }
      if (maxMemoryUsageForUser_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, getMaxMemoryUsageForUser());
      }
      if (maxRowsToRead_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(13, getMaxRowsToRead());
      }
      if (maxBytesToRead_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(14, getMaxBytesToRead());
      }
      if (readOverflowMode_ != yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.OverflowMode.OVERFLOW_MODE_UNSPECIFIED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(15, readOverflowMode_);
      }
      if (maxRowsToGroupBy_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(16, getMaxRowsToGroupBy());
      }
      if (groupByOverflowMode_ != yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.GroupByOverflowMode.GROUP_BY_OVERFLOW_MODE_UNSPECIFIED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(17, groupByOverflowMode_);
      }
      if (maxRowsToSort_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(18, getMaxRowsToSort());
      }
      if (maxBytesToSort_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(19, getMaxBytesToSort());
      }
      if (sortOverflowMode_ != yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.OverflowMode.OVERFLOW_MODE_UNSPECIFIED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(20, sortOverflowMode_);
      }
      if (maxResultRows_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(21, getMaxResultRows());
      }
      if (maxResultBytes_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(22, getMaxResultBytes());
      }
      if (resultOverflowMode_ != yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.OverflowMode.OVERFLOW_MODE_UNSPECIFIED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(23, resultOverflowMode_);
      }
      if (maxRowsInDistinct_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(24, getMaxRowsInDistinct());
      }
      if (maxBytesInDistinct_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(25, getMaxBytesInDistinct());
      }
      if (distinctOverflowMode_ != yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.OverflowMode.OVERFLOW_MODE_UNSPECIFIED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(26, distinctOverflowMode_);
      }
      if (maxRowsToTransfer_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(27, getMaxRowsToTransfer());
      }
      if (maxBytesToTransfer_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(28, getMaxBytesToTransfer());
      }
      if (transferOverflowMode_ != yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.OverflowMode.OVERFLOW_MODE_UNSPECIFIED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(29, transferOverflowMode_);
      }
      if (maxExecutionTime_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(30, getMaxExecutionTime());
      }
      if (timeoutOverflowMode_ != yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.OverflowMode.OVERFLOW_MODE_UNSPECIFIED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(31, timeoutOverflowMode_);
      }
      if (maxColumnsToRead_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(32, getMaxColumnsToRead());
      }
      if (maxTemporaryColumns_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(33, getMaxTemporaryColumns());
      }
      if (maxTemporaryNonConstColumns_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(34, getMaxTemporaryNonConstColumns());
      }
      if (maxQuerySize_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(35, getMaxQuerySize());
      }
      if (maxAstDepth_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(36, getMaxAstDepth());
      }
      if (maxAstElements_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(37, getMaxAstElements());
      }
      if (maxExpandedAstElements_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(38, getMaxExpandedAstElements());
      }
      if (connectTimeout_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(39, getConnectTimeout());
      }
      if (receiveTimeout_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(40, getReceiveTimeout());
      }
      if (sendTimeout_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(41, getSendTimeout());
      }
      if (replicationAlterPartitionsSync_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(42, getReplicationAlterPartitionsSync());
      }
      if (distributedProductMode_ != yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.DistributedProductMode.DISTRIBUTED_PRODUCT_MODE_UNSPECIFIED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(43, distributedProductMode_);
      }
      if (compile_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(44, getCompile());
      }
      if (minCountToCompile_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(45, getMinCountToCompile());
      }
      if (compileExpressions_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(46, getCompileExpressions());
      }
      if (minCountToCompileExpression_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(47, getMinCountToCompileExpression());
      }
      if (minInsertBlockSizeRows_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(48, getMinInsertBlockSizeRows());
      }
      if (minInsertBlockSizeBytes_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(49, getMinInsertBlockSizeBytes());
      }
      if (minBytesToUseDirectIo_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(50, getMinBytesToUseDirectIo());
      }
      if (useUncompressedCache_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(51, getUseUncompressedCache());
      }
      if (mergeTreeMaxRowsToUseCache_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(52, getMergeTreeMaxRowsToUseCache());
      }
      if (mergeTreeMaxBytesToUseCache_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(53, getMergeTreeMaxBytesToUseCache());
      }
      if (mergeTreeMinRowsForConcurrentRead_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(54, getMergeTreeMinRowsForConcurrentRead());
      }
      if (mergeTreeMinBytesForConcurrentRead_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(55, getMergeTreeMinBytesForConcurrentRead());
      }
      if (priority_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(56, getPriority());
      }
      if (maxNetworkBandwidth_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(57, getMaxNetworkBandwidth());
      }
      if (maxNetworkBandwidthForUser_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(58, getMaxNetworkBandwidthForUser());
      }
      if (forceIndexByDate_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(59, getForceIndexByDate());
      }
      if (forcePrimaryKey_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(60, getForcePrimaryKey());
      }
      if (inputFormatValuesInterpretExpressions_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(61, getInputFormatValuesInterpretExpressions());
      }
      if (inputFormatDefaultsForOmittedFields_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(62, getInputFormatDefaultsForOmittedFields());
      }
      if (outputFormatJsonQuote64BitIntegers_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(63, getOutputFormatJsonQuote64BitIntegers());
      }
      if (outputFormatJsonQuoteDenormals_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(64, getOutputFormatJsonQuoteDenormals());
      }
      if (httpConnectionTimeout_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(65, getHttpConnectionTimeout());
      }
      if (httpReceiveTimeout_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(66, getHttpReceiveTimeout());
      }
      if (httpSendTimeout_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(67, getHttpSendTimeout());
      }
      if (enableHttpCompression_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(68, getEnableHttpCompression());
      }
      if (sendProgressInHttpHeaders_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(69, getSendProgressInHttpHeaders());
      }
      if (httpHeadersProgressInterval_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(70, getHttpHeadersProgressInterval());
      }
      if (addHttpCorsHeader_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(71, getAddHttpCorsHeader());
      }
      if (distributedAggregationMemoryEfficient_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(72, getDistributedAggregationMemoryEfficient());
      }
      if (distributedDdlTaskTimeout_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(73, getDistributedDdlTaskTimeout());
      }
      if (maxBytesBeforeExternalGroupBy_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(74, getMaxBytesBeforeExternalGroupBy());
      }
      if (maxBytesBeforeExternalSort_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(75, getMaxBytesBeforeExternalSort());
      }
      if (groupByTwoLevelThreshold_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(76, getGroupByTwoLevelThreshold());
      }
      if (groupByTwoLevelThresholdBytes_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(77, getGroupByTwoLevelThresholdBytes());
      }
      if (lowCardinalityAllowInNativeFormat_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(78, getLowCardinalityAllowInNativeFormat());
      }
      if (emptyResultForAggregationByEmptySet_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(79, getEmptyResultForAggregationByEmptySet());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings)) {
        return super.equals(obj);
      }
      yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings other = (yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings) obj;

      boolean result = true;
      result = result && (hasReadonly() == other.hasReadonly());
      if (hasReadonly()) {
        result = result && getReadonly()
            .equals(other.getReadonly());
      }
      result = result && (hasAllowDdl() == other.hasAllowDdl());
      if (hasAllowDdl()) {
        result = result && getAllowDdl()
            .equals(other.getAllowDdl());
      }
      result = result && (hasInsertQuorum() == other.hasInsertQuorum());
      if (hasInsertQuorum()) {
        result = result && getInsertQuorum()
            .equals(other.getInsertQuorum());
      }
      result = result && (hasConnectTimeout() == other.hasConnectTimeout());
      if (hasConnectTimeout()) {
        result = result && getConnectTimeout()
            .equals(other.getConnectTimeout());
      }
      result = result && (hasReceiveTimeout() == other.hasReceiveTimeout());
      if (hasReceiveTimeout()) {
        result = result && getReceiveTimeout()
            .equals(other.getReceiveTimeout());
      }
      result = result && (hasSendTimeout() == other.hasSendTimeout());
      if (hasSendTimeout()) {
        result = result && getSendTimeout()
            .equals(other.getSendTimeout());
      }
      result = result && (hasInsertQuorumTimeout() == other.hasInsertQuorumTimeout());
      if (hasInsertQuorumTimeout()) {
        result = result && getInsertQuorumTimeout()
            .equals(other.getInsertQuorumTimeout());
      }
      result = result && (hasSelectSequentialConsistency() == other.hasSelectSequentialConsistency());
      if (hasSelectSequentialConsistency()) {
        result = result && getSelectSequentialConsistency()
            .equals(other.getSelectSequentialConsistency());
      }
      result = result && (hasMaxReplicaDelayForDistributedQueries() == other.hasMaxReplicaDelayForDistributedQueries());
      if (hasMaxReplicaDelayForDistributedQueries()) {
        result = result && getMaxReplicaDelayForDistributedQueries()
            .equals(other.getMaxReplicaDelayForDistributedQueries());
      }
      result = result && (hasFallbackToStaleReplicasForDistributedQueries() == other.hasFallbackToStaleReplicasForDistributedQueries());
      if (hasFallbackToStaleReplicasForDistributedQueries()) {
        result = result && getFallbackToStaleReplicasForDistributedQueries()
            .equals(other.getFallbackToStaleReplicasForDistributedQueries());
      }
      result = result && (hasReplicationAlterPartitionsSync() == other.hasReplicationAlterPartitionsSync());
      if (hasReplicationAlterPartitionsSync()) {
        result = result && getReplicationAlterPartitionsSync()
            .equals(other.getReplicationAlterPartitionsSync());
      }
      result = result && distributedProductMode_ == other.distributedProductMode_;
      result = result && (hasDistributedAggregationMemoryEfficient() == other.hasDistributedAggregationMemoryEfficient());
      if (hasDistributedAggregationMemoryEfficient()) {
        result = result && getDistributedAggregationMemoryEfficient()
            .equals(other.getDistributedAggregationMemoryEfficient());
      }
      result = result && (hasDistributedDdlTaskTimeout() == other.hasDistributedDdlTaskTimeout());
      if (hasDistributedDdlTaskTimeout()) {
        result = result && getDistributedDdlTaskTimeout()
            .equals(other.getDistributedDdlTaskTimeout());
      }
      result = result && (hasCompile() == other.hasCompile());
      if (hasCompile()) {
        result = result && getCompile()
            .equals(other.getCompile());
      }
      result = result && (hasMinCountToCompile() == other.hasMinCountToCompile());
      if (hasMinCountToCompile()) {
        result = result && getMinCountToCompile()
            .equals(other.getMinCountToCompile());
      }
      result = result && (hasCompileExpressions() == other.hasCompileExpressions());
      if (hasCompileExpressions()) {
        result = result && getCompileExpressions()
            .equals(other.getCompileExpressions());
      }
      result = result && (hasMinCountToCompileExpression() == other.hasMinCountToCompileExpression());
      if (hasMinCountToCompileExpression()) {
        result = result && getMinCountToCompileExpression()
            .equals(other.getMinCountToCompileExpression());
      }
      result = result && (hasMaxBlockSize() == other.hasMaxBlockSize());
      if (hasMaxBlockSize()) {
        result = result && getMaxBlockSize()
            .equals(other.getMaxBlockSize());
      }
      result = result && (hasMinInsertBlockSizeRows() == other.hasMinInsertBlockSizeRows());
      if (hasMinInsertBlockSizeRows()) {
        result = result && getMinInsertBlockSizeRows()
            .equals(other.getMinInsertBlockSizeRows());
      }
      result = result && (hasMinInsertBlockSizeBytes() == other.hasMinInsertBlockSizeBytes());
      if (hasMinInsertBlockSizeBytes()) {
        result = result && getMinInsertBlockSizeBytes()
            .equals(other.getMinInsertBlockSizeBytes());
      }
      result = result && (hasMaxInsertBlockSize() == other.hasMaxInsertBlockSize());
      if (hasMaxInsertBlockSize()) {
        result = result && getMaxInsertBlockSize()
            .equals(other.getMaxInsertBlockSize());
      }
      result = result && (hasMinBytesToUseDirectIo() == other.hasMinBytesToUseDirectIo());
      if (hasMinBytesToUseDirectIo()) {
        result = result && getMinBytesToUseDirectIo()
            .equals(other.getMinBytesToUseDirectIo());
      }
      result = result && (hasUseUncompressedCache() == other.hasUseUncompressedCache());
      if (hasUseUncompressedCache()) {
        result = result && getUseUncompressedCache()
            .equals(other.getUseUncompressedCache());
      }
      result = result && (hasMergeTreeMaxRowsToUseCache() == other.hasMergeTreeMaxRowsToUseCache());
      if (hasMergeTreeMaxRowsToUseCache()) {
        result = result && getMergeTreeMaxRowsToUseCache()
            .equals(other.getMergeTreeMaxRowsToUseCache());
      }
      result = result && (hasMergeTreeMaxBytesToUseCache() == other.hasMergeTreeMaxBytesToUseCache());
      if (hasMergeTreeMaxBytesToUseCache()) {
        result = result && getMergeTreeMaxBytesToUseCache()
            .equals(other.getMergeTreeMaxBytesToUseCache());
      }
      result = result && (hasMergeTreeMinRowsForConcurrentRead() == other.hasMergeTreeMinRowsForConcurrentRead());
      if (hasMergeTreeMinRowsForConcurrentRead()) {
        result = result && getMergeTreeMinRowsForConcurrentRead()
            .equals(other.getMergeTreeMinRowsForConcurrentRead());
      }
      result = result && (hasMergeTreeMinBytesForConcurrentRead() == other.hasMergeTreeMinBytesForConcurrentRead());
      if (hasMergeTreeMinBytesForConcurrentRead()) {
        result = result && getMergeTreeMinBytesForConcurrentRead()
            .equals(other.getMergeTreeMinBytesForConcurrentRead());
      }
      result = result && (hasMaxBytesBeforeExternalGroupBy() == other.hasMaxBytesBeforeExternalGroupBy());
      if (hasMaxBytesBeforeExternalGroupBy()) {
        result = result && getMaxBytesBeforeExternalGroupBy()
            .equals(other.getMaxBytesBeforeExternalGroupBy());
      }
      result = result && (hasMaxBytesBeforeExternalSort() == other.hasMaxBytesBeforeExternalSort());
      if (hasMaxBytesBeforeExternalSort()) {
        result = result && getMaxBytesBeforeExternalSort()
            .equals(other.getMaxBytesBeforeExternalSort());
      }
      result = result && (hasGroupByTwoLevelThreshold() == other.hasGroupByTwoLevelThreshold());
      if (hasGroupByTwoLevelThreshold()) {
        result = result && getGroupByTwoLevelThreshold()
            .equals(other.getGroupByTwoLevelThreshold());
      }
      result = result && (hasGroupByTwoLevelThresholdBytes() == other.hasGroupByTwoLevelThresholdBytes());
      if (hasGroupByTwoLevelThresholdBytes()) {
        result = result && getGroupByTwoLevelThresholdBytes()
            .equals(other.getGroupByTwoLevelThresholdBytes());
      }
      result = result && (hasPriority() == other.hasPriority());
      if (hasPriority()) {
        result = result && getPriority()
            .equals(other.getPriority());
      }
      result = result && (hasMaxThreads() == other.hasMaxThreads());
      if (hasMaxThreads()) {
        result = result && getMaxThreads()
            .equals(other.getMaxThreads());
      }
      result = result && (hasMaxMemoryUsage() == other.hasMaxMemoryUsage());
      if (hasMaxMemoryUsage()) {
        result = result && getMaxMemoryUsage()
            .equals(other.getMaxMemoryUsage());
      }
      result = result && (hasMaxMemoryUsageForUser() == other.hasMaxMemoryUsageForUser());
      if (hasMaxMemoryUsageForUser()) {
        result = result && getMaxMemoryUsageForUser()
            .equals(other.getMaxMemoryUsageForUser());
      }
      result = result && (hasMaxNetworkBandwidth() == other.hasMaxNetworkBandwidth());
      if (hasMaxNetworkBandwidth()) {
        result = result && getMaxNetworkBandwidth()
            .equals(other.getMaxNetworkBandwidth());
      }
      result = result && (hasMaxNetworkBandwidthForUser() == other.hasMaxNetworkBandwidthForUser());
      if (hasMaxNetworkBandwidthForUser()) {
        result = result && getMaxNetworkBandwidthForUser()
            .equals(other.getMaxNetworkBandwidthForUser());
      }
      result = result && (hasForceIndexByDate() == other.hasForceIndexByDate());
      if (hasForceIndexByDate()) {
        result = result && getForceIndexByDate()
            .equals(other.getForceIndexByDate());
      }
      result = result && (hasForcePrimaryKey() == other.hasForcePrimaryKey());
      if (hasForcePrimaryKey()) {
        result = result && getForcePrimaryKey()
            .equals(other.getForcePrimaryKey());
      }
      result = result && (hasMaxRowsToRead() == other.hasMaxRowsToRead());
      if (hasMaxRowsToRead()) {
        result = result && getMaxRowsToRead()
            .equals(other.getMaxRowsToRead());
      }
      result = result && (hasMaxBytesToRead() == other.hasMaxBytesToRead());
      if (hasMaxBytesToRead()) {
        result = result && getMaxBytesToRead()
            .equals(other.getMaxBytesToRead());
      }
      result = result && readOverflowMode_ == other.readOverflowMode_;
      result = result && (hasMaxRowsToGroupBy() == other.hasMaxRowsToGroupBy());
      if (hasMaxRowsToGroupBy()) {
        result = result && getMaxRowsToGroupBy()
            .equals(other.getMaxRowsToGroupBy());
      }
      result = result && groupByOverflowMode_ == other.groupByOverflowMode_;
      result = result && (hasMaxRowsToSort() == other.hasMaxRowsToSort());
      if (hasMaxRowsToSort()) {
        result = result && getMaxRowsToSort()
            .equals(other.getMaxRowsToSort());
      }
      result = result && (hasMaxBytesToSort() == other.hasMaxBytesToSort());
      if (hasMaxBytesToSort()) {
        result = result && getMaxBytesToSort()
            .equals(other.getMaxBytesToSort());
      }
      result = result && sortOverflowMode_ == other.sortOverflowMode_;
      result = result && (hasMaxResultRows() == other.hasMaxResultRows());
      if (hasMaxResultRows()) {
        result = result && getMaxResultRows()
            .equals(other.getMaxResultRows());
      }
      result = result && (hasMaxResultBytes() == other.hasMaxResultBytes());
      if (hasMaxResultBytes()) {
        result = result && getMaxResultBytes()
            .equals(other.getMaxResultBytes());
      }
      result = result && resultOverflowMode_ == other.resultOverflowMode_;
      result = result && (hasMaxRowsInDistinct() == other.hasMaxRowsInDistinct());
      if (hasMaxRowsInDistinct()) {
        result = result && getMaxRowsInDistinct()
            .equals(other.getMaxRowsInDistinct());
      }
      result = result && (hasMaxBytesInDistinct() == other.hasMaxBytesInDistinct());
      if (hasMaxBytesInDistinct()) {
        result = result && getMaxBytesInDistinct()
            .equals(other.getMaxBytesInDistinct());
      }
      result = result && distinctOverflowMode_ == other.distinctOverflowMode_;
      result = result && (hasMaxRowsToTransfer() == other.hasMaxRowsToTransfer());
      if (hasMaxRowsToTransfer()) {
        result = result && getMaxRowsToTransfer()
            .equals(other.getMaxRowsToTransfer());
      }
      result = result && (hasMaxBytesToTransfer() == other.hasMaxBytesToTransfer());
      if (hasMaxBytesToTransfer()) {
        result = result && getMaxBytesToTransfer()
            .equals(other.getMaxBytesToTransfer());
      }
      result = result && transferOverflowMode_ == other.transferOverflowMode_;
      result = result && (hasMaxExecutionTime() == other.hasMaxExecutionTime());
      if (hasMaxExecutionTime()) {
        result = result && getMaxExecutionTime()
            .equals(other.getMaxExecutionTime());
      }
      result = result && timeoutOverflowMode_ == other.timeoutOverflowMode_;
      result = result && (hasMaxColumnsToRead() == other.hasMaxColumnsToRead());
      if (hasMaxColumnsToRead()) {
        result = result && getMaxColumnsToRead()
            .equals(other.getMaxColumnsToRead());
      }
      result = result && (hasMaxTemporaryColumns() == other.hasMaxTemporaryColumns());
      if (hasMaxTemporaryColumns()) {
        result = result && getMaxTemporaryColumns()
            .equals(other.getMaxTemporaryColumns());
      }
      result = result && (hasMaxTemporaryNonConstColumns() == other.hasMaxTemporaryNonConstColumns());
      if (hasMaxTemporaryNonConstColumns()) {
        result = result && getMaxTemporaryNonConstColumns()
            .equals(other.getMaxTemporaryNonConstColumns());
      }
      result = result && (hasMaxQuerySize() == other.hasMaxQuerySize());
      if (hasMaxQuerySize()) {
        result = result && getMaxQuerySize()
            .equals(other.getMaxQuerySize());
      }
      result = result && (hasMaxAstDepth() == other.hasMaxAstDepth());
      if (hasMaxAstDepth()) {
        result = result && getMaxAstDepth()
            .equals(other.getMaxAstDepth());
      }
      result = result && (hasMaxAstElements() == other.hasMaxAstElements());
      if (hasMaxAstElements()) {
        result = result && getMaxAstElements()
            .equals(other.getMaxAstElements());
      }
      result = result && (hasMaxExpandedAstElements() == other.hasMaxExpandedAstElements());
      if (hasMaxExpandedAstElements()) {
        result = result && getMaxExpandedAstElements()
            .equals(other.getMaxExpandedAstElements());
      }
      result = result && (hasInputFormatValuesInterpretExpressions() == other.hasInputFormatValuesInterpretExpressions());
      if (hasInputFormatValuesInterpretExpressions()) {
        result = result && getInputFormatValuesInterpretExpressions()
            .equals(other.getInputFormatValuesInterpretExpressions());
      }
      result = result && (hasInputFormatDefaultsForOmittedFields() == other.hasInputFormatDefaultsForOmittedFields());
      if (hasInputFormatDefaultsForOmittedFields()) {
        result = result && getInputFormatDefaultsForOmittedFields()
            .equals(other.getInputFormatDefaultsForOmittedFields());
      }
      result = result && (hasOutputFormatJsonQuote64BitIntegers() == other.hasOutputFormatJsonQuote64BitIntegers());
      if (hasOutputFormatJsonQuote64BitIntegers()) {
        result = result && getOutputFormatJsonQuote64BitIntegers()
            .equals(other.getOutputFormatJsonQuote64BitIntegers());
      }
      result = result && (hasOutputFormatJsonQuoteDenormals() == other.hasOutputFormatJsonQuoteDenormals());
      if (hasOutputFormatJsonQuoteDenormals()) {
        result = result && getOutputFormatJsonQuoteDenormals()
            .equals(other.getOutputFormatJsonQuoteDenormals());
      }
      result = result && (hasLowCardinalityAllowInNativeFormat() == other.hasLowCardinalityAllowInNativeFormat());
      if (hasLowCardinalityAllowInNativeFormat()) {
        result = result && getLowCardinalityAllowInNativeFormat()
            .equals(other.getLowCardinalityAllowInNativeFormat());
      }
      result = result && (hasEmptyResultForAggregationByEmptySet() == other.hasEmptyResultForAggregationByEmptySet());
      if (hasEmptyResultForAggregationByEmptySet()) {
        result = result && getEmptyResultForAggregationByEmptySet()
            .equals(other.getEmptyResultForAggregationByEmptySet());
      }
      result = result && (hasHttpConnectionTimeout() == other.hasHttpConnectionTimeout());
      if (hasHttpConnectionTimeout()) {
        result = result && getHttpConnectionTimeout()
            .equals(other.getHttpConnectionTimeout());
      }
      result = result && (hasHttpReceiveTimeout() == other.hasHttpReceiveTimeout());
      if (hasHttpReceiveTimeout()) {
        result = result && getHttpReceiveTimeout()
            .equals(other.getHttpReceiveTimeout());
      }
      result = result && (hasHttpSendTimeout() == other.hasHttpSendTimeout());
      if (hasHttpSendTimeout()) {
        result = result && getHttpSendTimeout()
            .equals(other.getHttpSendTimeout());
      }
      result = result && (hasEnableHttpCompression() == other.hasEnableHttpCompression());
      if (hasEnableHttpCompression()) {
        result = result && getEnableHttpCompression()
            .equals(other.getEnableHttpCompression());
      }
      result = result && (hasSendProgressInHttpHeaders() == other.hasSendProgressInHttpHeaders());
      if (hasSendProgressInHttpHeaders()) {
        result = result && getSendProgressInHttpHeaders()
            .equals(other.getSendProgressInHttpHeaders());
      }
      result = result && (hasHttpHeadersProgressInterval() == other.hasHttpHeadersProgressInterval());
      if (hasHttpHeadersProgressInterval()) {
        result = result && getHttpHeadersProgressInterval()
            .equals(other.getHttpHeadersProgressInterval());
      }
      result = result && (hasAddHttpCorsHeader() == other.hasAddHttpCorsHeader());
      if (hasAddHttpCorsHeader()) {
        result = result && getAddHttpCorsHeader()
            .equals(other.getAddHttpCorsHeader());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasReadonly()) {
        hash = (37 * hash) + READONLY_FIELD_NUMBER;
        hash = (53 * hash) + getReadonly().hashCode();
      }
      if (hasAllowDdl()) {
        hash = (37 * hash) + ALLOW_DDL_FIELD_NUMBER;
        hash = (53 * hash) + getAllowDdl().hashCode();
      }
      if (hasInsertQuorum()) {
        hash = (37 * hash) + INSERT_QUORUM_FIELD_NUMBER;
        hash = (53 * hash) + getInsertQuorum().hashCode();
      }
      if (hasConnectTimeout()) {
        hash = (37 * hash) + CONNECT_TIMEOUT_FIELD_NUMBER;
        hash = (53 * hash) + getConnectTimeout().hashCode();
      }
      if (hasReceiveTimeout()) {
        hash = (37 * hash) + RECEIVE_TIMEOUT_FIELD_NUMBER;
        hash = (53 * hash) + getReceiveTimeout().hashCode();
      }
      if (hasSendTimeout()) {
        hash = (37 * hash) + SEND_TIMEOUT_FIELD_NUMBER;
        hash = (53 * hash) + getSendTimeout().hashCode();
      }
      if (hasInsertQuorumTimeout()) {
        hash = (37 * hash) + INSERT_QUORUM_TIMEOUT_FIELD_NUMBER;
        hash = (53 * hash) + getInsertQuorumTimeout().hashCode();
      }
      if (hasSelectSequentialConsistency()) {
        hash = (37 * hash) + SELECT_SEQUENTIAL_CONSISTENCY_FIELD_NUMBER;
        hash = (53 * hash) + getSelectSequentialConsistency().hashCode();
      }
      if (hasMaxReplicaDelayForDistributedQueries()) {
        hash = (37 * hash) + MAX_REPLICA_DELAY_FOR_DISTRIBUTED_QUERIES_FIELD_NUMBER;
        hash = (53 * hash) + getMaxReplicaDelayForDistributedQueries().hashCode();
      }
      if (hasFallbackToStaleReplicasForDistributedQueries()) {
        hash = (37 * hash) + FALLBACK_TO_STALE_REPLICAS_FOR_DISTRIBUTED_QUERIES_FIELD_NUMBER;
        hash = (53 * hash) + getFallbackToStaleReplicasForDistributedQueries().hashCode();
      }
      if (hasReplicationAlterPartitionsSync()) {
        hash = (37 * hash) + REPLICATION_ALTER_PARTITIONS_SYNC_FIELD_NUMBER;
        hash = (53 * hash) + getReplicationAlterPartitionsSync().hashCode();
      }
      hash = (37 * hash) + DISTRIBUTED_PRODUCT_MODE_FIELD_NUMBER;
      hash = (53 * hash) + distributedProductMode_;
      if (hasDistributedAggregationMemoryEfficient()) {
        hash = (37 * hash) + DISTRIBUTED_AGGREGATION_MEMORY_EFFICIENT_FIELD_NUMBER;
        hash = (53 * hash) + getDistributedAggregationMemoryEfficient().hashCode();
      }
      if (hasDistributedDdlTaskTimeout()) {
        hash = (37 * hash) + DISTRIBUTED_DDL_TASK_TIMEOUT_FIELD_NUMBER;
        hash = (53 * hash) + getDistributedDdlTaskTimeout().hashCode();
      }
      if (hasCompile()) {
        hash = (37 * hash) + COMPILE_FIELD_NUMBER;
        hash = (53 * hash) + getCompile().hashCode();
      }
      if (hasMinCountToCompile()) {
        hash = (37 * hash) + MIN_COUNT_TO_COMPILE_FIELD_NUMBER;
        hash = (53 * hash) + getMinCountToCompile().hashCode();
      }
      if (hasCompileExpressions()) {
        hash = (37 * hash) + COMPILE_EXPRESSIONS_FIELD_NUMBER;
        hash = (53 * hash) + getCompileExpressions().hashCode();
      }
      if (hasMinCountToCompileExpression()) {
        hash = (37 * hash) + MIN_COUNT_TO_COMPILE_EXPRESSION_FIELD_NUMBER;
        hash = (53 * hash) + getMinCountToCompileExpression().hashCode();
      }
      if (hasMaxBlockSize()) {
        hash = (37 * hash) + MAX_BLOCK_SIZE_FIELD_NUMBER;
        hash = (53 * hash) + getMaxBlockSize().hashCode();
      }
      if (hasMinInsertBlockSizeRows()) {
        hash = (37 * hash) + MIN_INSERT_BLOCK_SIZE_ROWS_FIELD_NUMBER;
        hash = (53 * hash) + getMinInsertBlockSizeRows().hashCode();
      }
      if (hasMinInsertBlockSizeBytes()) {
        hash = (37 * hash) + MIN_INSERT_BLOCK_SIZE_BYTES_FIELD_NUMBER;
        hash = (53 * hash) + getMinInsertBlockSizeBytes().hashCode();
      }
      if (hasMaxInsertBlockSize()) {
        hash = (37 * hash) + MAX_INSERT_BLOCK_SIZE_FIELD_NUMBER;
        hash = (53 * hash) + getMaxInsertBlockSize().hashCode();
      }
      if (hasMinBytesToUseDirectIo()) {
        hash = (37 * hash) + MIN_BYTES_TO_USE_DIRECT_IO_FIELD_NUMBER;
        hash = (53 * hash) + getMinBytesToUseDirectIo().hashCode();
      }
      if (hasUseUncompressedCache()) {
        hash = (37 * hash) + USE_UNCOMPRESSED_CACHE_FIELD_NUMBER;
        hash = (53 * hash) + getUseUncompressedCache().hashCode();
      }
      if (hasMergeTreeMaxRowsToUseCache()) {
        hash = (37 * hash) + MERGE_TREE_MAX_ROWS_TO_USE_CACHE_FIELD_NUMBER;
        hash = (53 * hash) + getMergeTreeMaxRowsToUseCache().hashCode();
      }
      if (hasMergeTreeMaxBytesToUseCache()) {
        hash = (37 * hash) + MERGE_TREE_MAX_BYTES_TO_USE_CACHE_FIELD_NUMBER;
        hash = (53 * hash) + getMergeTreeMaxBytesToUseCache().hashCode();
      }
      if (hasMergeTreeMinRowsForConcurrentRead()) {
        hash = (37 * hash) + MERGE_TREE_MIN_ROWS_FOR_CONCURRENT_READ_FIELD_NUMBER;
        hash = (53 * hash) + getMergeTreeMinRowsForConcurrentRead().hashCode();
      }
      if (hasMergeTreeMinBytesForConcurrentRead()) {
        hash = (37 * hash) + MERGE_TREE_MIN_BYTES_FOR_CONCURRENT_READ_FIELD_NUMBER;
        hash = (53 * hash) + getMergeTreeMinBytesForConcurrentRead().hashCode();
      }
      if (hasMaxBytesBeforeExternalGroupBy()) {
        hash = (37 * hash) + MAX_BYTES_BEFORE_EXTERNAL_GROUP_BY_FIELD_NUMBER;
        hash = (53 * hash) + getMaxBytesBeforeExternalGroupBy().hashCode();
      }
      if (hasMaxBytesBeforeExternalSort()) {
        hash = (37 * hash) + MAX_BYTES_BEFORE_EXTERNAL_SORT_FIELD_NUMBER;
        hash = (53 * hash) + getMaxBytesBeforeExternalSort().hashCode();
      }
      if (hasGroupByTwoLevelThreshold()) {
        hash = (37 * hash) + GROUP_BY_TWO_LEVEL_THRESHOLD_FIELD_NUMBER;
        hash = (53 * hash) + getGroupByTwoLevelThreshold().hashCode();
      }
      if (hasGroupByTwoLevelThresholdBytes()) {
        hash = (37 * hash) + GROUP_BY_TWO_LEVEL_THRESHOLD_BYTES_FIELD_NUMBER;
        hash = (53 * hash) + getGroupByTwoLevelThresholdBytes().hashCode();
      }
      if (hasPriority()) {
        hash = (37 * hash) + PRIORITY_FIELD_NUMBER;
        hash = (53 * hash) + getPriority().hashCode();
      }
      if (hasMaxThreads()) {
        hash = (37 * hash) + MAX_THREADS_FIELD_NUMBER;
        hash = (53 * hash) + getMaxThreads().hashCode();
      }
      if (hasMaxMemoryUsage()) {
        hash = (37 * hash) + MAX_MEMORY_USAGE_FIELD_NUMBER;
        hash = (53 * hash) + getMaxMemoryUsage().hashCode();
      }
      if (hasMaxMemoryUsageForUser()) {
        hash = (37 * hash) + MAX_MEMORY_USAGE_FOR_USER_FIELD_NUMBER;
        hash = (53 * hash) + getMaxMemoryUsageForUser().hashCode();
      }
      if (hasMaxNetworkBandwidth()) {
        hash = (37 * hash) + MAX_NETWORK_BANDWIDTH_FIELD_NUMBER;
        hash = (53 * hash) + getMaxNetworkBandwidth().hashCode();
      }
      if (hasMaxNetworkBandwidthForUser()) {
        hash = (37 * hash) + MAX_NETWORK_BANDWIDTH_FOR_USER_FIELD_NUMBER;
        hash = (53 * hash) + getMaxNetworkBandwidthForUser().hashCode();
      }
      if (hasForceIndexByDate()) {
        hash = (37 * hash) + FORCE_INDEX_BY_DATE_FIELD_NUMBER;
        hash = (53 * hash) + getForceIndexByDate().hashCode();
      }
      if (hasForcePrimaryKey()) {
        hash = (37 * hash) + FORCE_PRIMARY_KEY_FIELD_NUMBER;
        hash = (53 * hash) + getForcePrimaryKey().hashCode();
      }
      if (hasMaxRowsToRead()) {
        hash = (37 * hash) + MAX_ROWS_TO_READ_FIELD_NUMBER;
        hash = (53 * hash) + getMaxRowsToRead().hashCode();
      }
      if (hasMaxBytesToRead()) {
        hash = (37 * hash) + MAX_BYTES_TO_READ_FIELD_NUMBER;
        hash = (53 * hash) + getMaxBytesToRead().hashCode();
      }
      hash = (37 * hash) + READ_OVERFLOW_MODE_FIELD_NUMBER;
      hash = (53 * hash) + readOverflowMode_;
      if (hasMaxRowsToGroupBy()) {
        hash = (37 * hash) + MAX_ROWS_TO_GROUP_BY_FIELD_NUMBER;
        hash = (53 * hash) + getMaxRowsToGroupBy().hashCode();
      }
      hash = (37 * hash) + GROUP_BY_OVERFLOW_MODE_FIELD_NUMBER;
      hash = (53 * hash) + groupByOverflowMode_;
      if (hasMaxRowsToSort()) {
        hash = (37 * hash) + MAX_ROWS_TO_SORT_FIELD_NUMBER;
        hash = (53 * hash) + getMaxRowsToSort().hashCode();
      }
      if (hasMaxBytesToSort()) {
        hash = (37 * hash) + MAX_BYTES_TO_SORT_FIELD_NUMBER;
        hash = (53 * hash) + getMaxBytesToSort().hashCode();
      }
      hash = (37 * hash) + SORT_OVERFLOW_MODE_FIELD_NUMBER;
      hash = (53 * hash) + sortOverflowMode_;
      if (hasMaxResultRows()) {
        hash = (37 * hash) + MAX_RESULT_ROWS_FIELD_NUMBER;
        hash = (53 * hash) + getMaxResultRows().hashCode();
      }
      if (hasMaxResultBytes()) {
        hash = (37 * hash) + MAX_RESULT_BYTES_FIELD_NUMBER;
        hash = (53 * hash) + getMaxResultBytes().hashCode();
      }
      hash = (37 * hash) + RESULT_OVERFLOW_MODE_FIELD_NUMBER;
      hash = (53 * hash) + resultOverflowMode_;
      if (hasMaxRowsInDistinct()) {
        hash = (37 * hash) + MAX_ROWS_IN_DISTINCT_FIELD_NUMBER;
        hash = (53 * hash) + getMaxRowsInDistinct().hashCode();
      }
      if (hasMaxBytesInDistinct()) {
        hash = (37 * hash) + MAX_BYTES_IN_DISTINCT_FIELD_NUMBER;
        hash = (53 * hash) + getMaxBytesInDistinct().hashCode();
      }
      hash = (37 * hash) + DISTINCT_OVERFLOW_MODE_FIELD_NUMBER;
      hash = (53 * hash) + distinctOverflowMode_;
      if (hasMaxRowsToTransfer()) {
        hash = (37 * hash) + MAX_ROWS_TO_TRANSFER_FIELD_NUMBER;
        hash = (53 * hash) + getMaxRowsToTransfer().hashCode();
      }
      if (hasMaxBytesToTransfer()) {
        hash = (37 * hash) + MAX_BYTES_TO_TRANSFER_FIELD_NUMBER;
        hash = (53 * hash) + getMaxBytesToTransfer().hashCode();
      }
      hash = (37 * hash) + TRANSFER_OVERFLOW_MODE_FIELD_NUMBER;
      hash = (53 * hash) + transferOverflowMode_;
      if (hasMaxExecutionTime()) {
        hash = (37 * hash) + MAX_EXECUTION_TIME_FIELD_NUMBER;
        hash = (53 * hash) + getMaxExecutionTime().hashCode();
      }
      hash = (37 * hash) + TIMEOUT_OVERFLOW_MODE_FIELD_NUMBER;
      hash = (53 * hash) + timeoutOverflowMode_;
      if (hasMaxColumnsToRead()) {
        hash = (37 * hash) + MAX_COLUMNS_TO_READ_FIELD_NUMBER;
        hash = (53 * hash) + getMaxColumnsToRead().hashCode();
      }
      if (hasMaxTemporaryColumns()) {
        hash = (37 * hash) + MAX_TEMPORARY_COLUMNS_FIELD_NUMBER;
        hash = (53 * hash) + getMaxTemporaryColumns().hashCode();
      }
      if (hasMaxTemporaryNonConstColumns()) {
        hash = (37 * hash) + MAX_TEMPORARY_NON_CONST_COLUMNS_FIELD_NUMBER;
        hash = (53 * hash) + getMaxTemporaryNonConstColumns().hashCode();
      }
      if (hasMaxQuerySize()) {
        hash = (37 * hash) + MAX_QUERY_SIZE_FIELD_NUMBER;
        hash = (53 * hash) + getMaxQuerySize().hashCode();
      }
      if (hasMaxAstDepth()) {
        hash = (37 * hash) + MAX_AST_DEPTH_FIELD_NUMBER;
        hash = (53 * hash) + getMaxAstDepth().hashCode();
      }
      if (hasMaxAstElements()) {
        hash = (37 * hash) + MAX_AST_ELEMENTS_FIELD_NUMBER;
        hash = (53 * hash) + getMaxAstElements().hashCode();
      }
      if (hasMaxExpandedAstElements()) {
        hash = (37 * hash) + MAX_EXPANDED_AST_ELEMENTS_FIELD_NUMBER;
        hash = (53 * hash) + getMaxExpandedAstElements().hashCode();
      }
      if (hasInputFormatValuesInterpretExpressions()) {
        hash = (37 * hash) + INPUT_FORMAT_VALUES_INTERPRET_EXPRESSIONS_FIELD_NUMBER;
        hash = (53 * hash) + getInputFormatValuesInterpretExpressions().hashCode();
      }
      if (hasInputFormatDefaultsForOmittedFields()) {
        hash = (37 * hash) + INPUT_FORMAT_DEFAULTS_FOR_OMITTED_FIELDS_FIELD_NUMBER;
        hash = (53 * hash) + getInputFormatDefaultsForOmittedFields().hashCode();
      }
      if (hasOutputFormatJsonQuote64BitIntegers()) {
        hash = (37 * hash) + OUTPUT_FORMAT_JSON_QUOTE_64BIT_INTEGERS_FIELD_NUMBER;
        hash = (53 * hash) + getOutputFormatJsonQuote64BitIntegers().hashCode();
      }
      if (hasOutputFormatJsonQuoteDenormals()) {
        hash = (37 * hash) + OUTPUT_FORMAT_JSON_QUOTE_DENORMALS_FIELD_NUMBER;
        hash = (53 * hash) + getOutputFormatJsonQuoteDenormals().hashCode();
      }
      if (hasLowCardinalityAllowInNativeFormat()) {
        hash = (37 * hash) + LOW_CARDINALITY_ALLOW_IN_NATIVE_FORMAT_FIELD_NUMBER;
        hash = (53 * hash) + getLowCardinalityAllowInNativeFormat().hashCode();
      }
      if (hasEmptyResultForAggregationByEmptySet()) {
        hash = (37 * hash) + EMPTY_RESULT_FOR_AGGREGATION_BY_EMPTY_SET_FIELD_NUMBER;
        hash = (53 * hash) + getEmptyResultForAggregationByEmptySet().hashCode();
      }
      if (hasHttpConnectionTimeout()) {
        hash = (37 * hash) + HTTP_CONNECTION_TIMEOUT_FIELD_NUMBER;
        hash = (53 * hash) + getHttpConnectionTimeout().hashCode();
      }
      if (hasHttpReceiveTimeout()) {
        hash = (37 * hash) + HTTP_RECEIVE_TIMEOUT_FIELD_NUMBER;
        hash = (53 * hash) + getHttpReceiveTimeout().hashCode();
      }
      if (hasHttpSendTimeout()) {
        hash = (37 * hash) + HTTP_SEND_TIMEOUT_FIELD_NUMBER;
        hash = (53 * hash) + getHttpSendTimeout().hashCode();
      }
      if (hasEnableHttpCompression()) {
        hash = (37 * hash) + ENABLE_HTTP_COMPRESSION_FIELD_NUMBER;
        hash = (53 * hash) + getEnableHttpCompression().hashCode();
      }
      if (hasSendProgressInHttpHeaders()) {
        hash = (37 * hash) + SEND_PROGRESS_IN_HTTP_HEADERS_FIELD_NUMBER;
        hash = (53 * hash) + getSendProgressInHttpHeaders().hashCode();
      }
      if (hasHttpHeadersProgressInterval()) {
        hash = (37 * hash) + HTTP_HEADERS_PROGRESS_INTERVAL_FIELD_NUMBER;
        hash = (53 * hash) + getHttpHeadersProgressInterval().hashCode();
      }
      if (hasAddHttpCorsHeader()) {
        hash = (37 * hash) + ADD_HTTP_CORS_HEADER_FIELD_NUMBER;
        hash = (53 * hash) + getAddHttpCorsHeader().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * ClickHouse user settings. Supported settings are a limited subset of all settings
     * described in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/).
     * </pre>
     *
     * Protobuf type {@code yandex.cloud.mdb.clickhouse.v1.UserSettings}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:yandex.cloud.mdb.clickhouse.v1.UserSettings)
        yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettingsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.internal_static_yandex_cloud_mdb_clickhouse_v1_UserSettings_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.internal_static_yandex_cloud_mdb_clickhouse_v1_UserSettings_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.class, yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.Builder.class);
      }

      // Construct using yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (readonlyBuilder_ == null) {
          readonly_ = null;
        } else {
          readonly_ = null;
          readonlyBuilder_ = null;
        }
        if (allowDdlBuilder_ == null) {
          allowDdl_ = null;
        } else {
          allowDdl_ = null;
          allowDdlBuilder_ = null;
        }
        if (insertQuorumBuilder_ == null) {
          insertQuorum_ = null;
        } else {
          insertQuorum_ = null;
          insertQuorumBuilder_ = null;
        }
        if (connectTimeoutBuilder_ == null) {
          connectTimeout_ = null;
        } else {
          connectTimeout_ = null;
          connectTimeoutBuilder_ = null;
        }
        if (receiveTimeoutBuilder_ == null) {
          receiveTimeout_ = null;
        } else {
          receiveTimeout_ = null;
          receiveTimeoutBuilder_ = null;
        }
        if (sendTimeoutBuilder_ == null) {
          sendTimeout_ = null;
        } else {
          sendTimeout_ = null;
          sendTimeoutBuilder_ = null;
        }
        if (insertQuorumTimeoutBuilder_ == null) {
          insertQuorumTimeout_ = null;
        } else {
          insertQuorumTimeout_ = null;
          insertQuorumTimeoutBuilder_ = null;
        }
        if (selectSequentialConsistencyBuilder_ == null) {
          selectSequentialConsistency_ = null;
        } else {
          selectSequentialConsistency_ = null;
          selectSequentialConsistencyBuilder_ = null;
        }
        if (maxReplicaDelayForDistributedQueriesBuilder_ == null) {
          maxReplicaDelayForDistributedQueries_ = null;
        } else {
          maxReplicaDelayForDistributedQueries_ = null;
          maxReplicaDelayForDistributedQueriesBuilder_ = null;
        }
        if (fallbackToStaleReplicasForDistributedQueriesBuilder_ == null) {
          fallbackToStaleReplicasForDistributedQueries_ = null;
        } else {
          fallbackToStaleReplicasForDistributedQueries_ = null;
          fallbackToStaleReplicasForDistributedQueriesBuilder_ = null;
        }
        if (replicationAlterPartitionsSyncBuilder_ == null) {
          replicationAlterPartitionsSync_ = null;
        } else {
          replicationAlterPartitionsSync_ = null;
          replicationAlterPartitionsSyncBuilder_ = null;
        }
        distributedProductMode_ = 0;

        if (distributedAggregationMemoryEfficientBuilder_ == null) {
          distributedAggregationMemoryEfficient_ = null;
        } else {
          distributedAggregationMemoryEfficient_ = null;
          distributedAggregationMemoryEfficientBuilder_ = null;
        }
        if (distributedDdlTaskTimeoutBuilder_ == null) {
          distributedDdlTaskTimeout_ = null;
        } else {
          distributedDdlTaskTimeout_ = null;
          distributedDdlTaskTimeoutBuilder_ = null;
        }
        if (compileBuilder_ == null) {
          compile_ = null;
        } else {
          compile_ = null;
          compileBuilder_ = null;
        }
        if (minCountToCompileBuilder_ == null) {
          minCountToCompile_ = null;
        } else {
          minCountToCompile_ = null;
          minCountToCompileBuilder_ = null;
        }
        if (compileExpressionsBuilder_ == null) {
          compileExpressions_ = null;
        } else {
          compileExpressions_ = null;
          compileExpressionsBuilder_ = null;
        }
        if (minCountToCompileExpressionBuilder_ == null) {
          minCountToCompileExpression_ = null;
        } else {
          minCountToCompileExpression_ = null;
          minCountToCompileExpressionBuilder_ = null;
        }
        if (maxBlockSizeBuilder_ == null) {
          maxBlockSize_ = null;
        } else {
          maxBlockSize_ = null;
          maxBlockSizeBuilder_ = null;
        }
        if (minInsertBlockSizeRowsBuilder_ == null) {
          minInsertBlockSizeRows_ = null;
        } else {
          minInsertBlockSizeRows_ = null;
          minInsertBlockSizeRowsBuilder_ = null;
        }
        if (minInsertBlockSizeBytesBuilder_ == null) {
          minInsertBlockSizeBytes_ = null;
        } else {
          minInsertBlockSizeBytes_ = null;
          minInsertBlockSizeBytesBuilder_ = null;
        }
        if (maxInsertBlockSizeBuilder_ == null) {
          maxInsertBlockSize_ = null;
        } else {
          maxInsertBlockSize_ = null;
          maxInsertBlockSizeBuilder_ = null;
        }
        if (minBytesToUseDirectIoBuilder_ == null) {
          minBytesToUseDirectIo_ = null;
        } else {
          minBytesToUseDirectIo_ = null;
          minBytesToUseDirectIoBuilder_ = null;
        }
        if (useUncompressedCacheBuilder_ == null) {
          useUncompressedCache_ = null;
        } else {
          useUncompressedCache_ = null;
          useUncompressedCacheBuilder_ = null;
        }
        if (mergeTreeMaxRowsToUseCacheBuilder_ == null) {
          mergeTreeMaxRowsToUseCache_ = null;
        } else {
          mergeTreeMaxRowsToUseCache_ = null;
          mergeTreeMaxRowsToUseCacheBuilder_ = null;
        }
        if (mergeTreeMaxBytesToUseCacheBuilder_ == null) {
          mergeTreeMaxBytesToUseCache_ = null;
        } else {
          mergeTreeMaxBytesToUseCache_ = null;
          mergeTreeMaxBytesToUseCacheBuilder_ = null;
        }
        if (mergeTreeMinRowsForConcurrentReadBuilder_ == null) {
          mergeTreeMinRowsForConcurrentRead_ = null;
        } else {
          mergeTreeMinRowsForConcurrentRead_ = null;
          mergeTreeMinRowsForConcurrentReadBuilder_ = null;
        }
        if (mergeTreeMinBytesForConcurrentReadBuilder_ == null) {
          mergeTreeMinBytesForConcurrentRead_ = null;
        } else {
          mergeTreeMinBytesForConcurrentRead_ = null;
          mergeTreeMinBytesForConcurrentReadBuilder_ = null;
        }
        if (maxBytesBeforeExternalGroupByBuilder_ == null) {
          maxBytesBeforeExternalGroupBy_ = null;
        } else {
          maxBytesBeforeExternalGroupBy_ = null;
          maxBytesBeforeExternalGroupByBuilder_ = null;
        }
        if (maxBytesBeforeExternalSortBuilder_ == null) {
          maxBytesBeforeExternalSort_ = null;
        } else {
          maxBytesBeforeExternalSort_ = null;
          maxBytesBeforeExternalSortBuilder_ = null;
        }
        if (groupByTwoLevelThresholdBuilder_ == null) {
          groupByTwoLevelThreshold_ = null;
        } else {
          groupByTwoLevelThreshold_ = null;
          groupByTwoLevelThresholdBuilder_ = null;
        }
        if (groupByTwoLevelThresholdBytesBuilder_ == null) {
          groupByTwoLevelThresholdBytes_ = null;
        } else {
          groupByTwoLevelThresholdBytes_ = null;
          groupByTwoLevelThresholdBytesBuilder_ = null;
        }
        if (priorityBuilder_ == null) {
          priority_ = null;
        } else {
          priority_ = null;
          priorityBuilder_ = null;
        }
        if (maxThreadsBuilder_ == null) {
          maxThreads_ = null;
        } else {
          maxThreads_ = null;
          maxThreadsBuilder_ = null;
        }
        if (maxMemoryUsageBuilder_ == null) {
          maxMemoryUsage_ = null;
        } else {
          maxMemoryUsage_ = null;
          maxMemoryUsageBuilder_ = null;
        }
        if (maxMemoryUsageForUserBuilder_ == null) {
          maxMemoryUsageForUser_ = null;
        } else {
          maxMemoryUsageForUser_ = null;
          maxMemoryUsageForUserBuilder_ = null;
        }
        if (maxNetworkBandwidthBuilder_ == null) {
          maxNetworkBandwidth_ = null;
        } else {
          maxNetworkBandwidth_ = null;
          maxNetworkBandwidthBuilder_ = null;
        }
        if (maxNetworkBandwidthForUserBuilder_ == null) {
          maxNetworkBandwidthForUser_ = null;
        } else {
          maxNetworkBandwidthForUser_ = null;
          maxNetworkBandwidthForUserBuilder_ = null;
        }
        if (forceIndexByDateBuilder_ == null) {
          forceIndexByDate_ = null;
        } else {
          forceIndexByDate_ = null;
          forceIndexByDateBuilder_ = null;
        }
        if (forcePrimaryKeyBuilder_ == null) {
          forcePrimaryKey_ = null;
        } else {
          forcePrimaryKey_ = null;
          forcePrimaryKeyBuilder_ = null;
        }
        if (maxRowsToReadBuilder_ == null) {
          maxRowsToRead_ = null;
        } else {
          maxRowsToRead_ = null;
          maxRowsToReadBuilder_ = null;
        }
        if (maxBytesToReadBuilder_ == null) {
          maxBytesToRead_ = null;
        } else {
          maxBytesToRead_ = null;
          maxBytesToReadBuilder_ = null;
        }
        readOverflowMode_ = 0;

        if (maxRowsToGroupByBuilder_ == null) {
          maxRowsToGroupBy_ = null;
        } else {
          maxRowsToGroupBy_ = null;
          maxRowsToGroupByBuilder_ = null;
        }
        groupByOverflowMode_ = 0;

        if (maxRowsToSortBuilder_ == null) {
          maxRowsToSort_ = null;
        } else {
          maxRowsToSort_ = null;
          maxRowsToSortBuilder_ = null;
        }
        if (maxBytesToSortBuilder_ == null) {
          maxBytesToSort_ = null;
        } else {
          maxBytesToSort_ = null;
          maxBytesToSortBuilder_ = null;
        }
        sortOverflowMode_ = 0;

        if (maxResultRowsBuilder_ == null) {
          maxResultRows_ = null;
        } else {
          maxResultRows_ = null;
          maxResultRowsBuilder_ = null;
        }
        if (maxResultBytesBuilder_ == null) {
          maxResultBytes_ = null;
        } else {
          maxResultBytes_ = null;
          maxResultBytesBuilder_ = null;
        }
        resultOverflowMode_ = 0;

        if (maxRowsInDistinctBuilder_ == null) {
          maxRowsInDistinct_ = null;
        } else {
          maxRowsInDistinct_ = null;
          maxRowsInDistinctBuilder_ = null;
        }
        if (maxBytesInDistinctBuilder_ == null) {
          maxBytesInDistinct_ = null;
        } else {
          maxBytesInDistinct_ = null;
          maxBytesInDistinctBuilder_ = null;
        }
        distinctOverflowMode_ = 0;

        if (maxRowsToTransferBuilder_ == null) {
          maxRowsToTransfer_ = null;
        } else {
          maxRowsToTransfer_ = null;
          maxRowsToTransferBuilder_ = null;
        }
        if (maxBytesToTransferBuilder_ == null) {
          maxBytesToTransfer_ = null;
        } else {
          maxBytesToTransfer_ = null;
          maxBytesToTransferBuilder_ = null;
        }
        transferOverflowMode_ = 0;

        if (maxExecutionTimeBuilder_ == null) {
          maxExecutionTime_ = null;
        } else {
          maxExecutionTime_ = null;
          maxExecutionTimeBuilder_ = null;
        }
        timeoutOverflowMode_ = 0;

        if (maxColumnsToReadBuilder_ == null) {
          maxColumnsToRead_ = null;
        } else {
          maxColumnsToRead_ = null;
          maxColumnsToReadBuilder_ = null;
        }
        if (maxTemporaryColumnsBuilder_ == null) {
          maxTemporaryColumns_ = null;
        } else {
          maxTemporaryColumns_ = null;
          maxTemporaryColumnsBuilder_ = null;
        }
        if (maxTemporaryNonConstColumnsBuilder_ == null) {
          maxTemporaryNonConstColumns_ = null;
        } else {
          maxTemporaryNonConstColumns_ = null;
          maxTemporaryNonConstColumnsBuilder_ = null;
        }
        if (maxQuerySizeBuilder_ == null) {
          maxQuerySize_ = null;
        } else {
          maxQuerySize_ = null;
          maxQuerySizeBuilder_ = null;
        }
        if (maxAstDepthBuilder_ == null) {
          maxAstDepth_ = null;
        } else {
          maxAstDepth_ = null;
          maxAstDepthBuilder_ = null;
        }
        if (maxAstElementsBuilder_ == null) {
          maxAstElements_ = null;
        } else {
          maxAstElements_ = null;
          maxAstElementsBuilder_ = null;
        }
        if (maxExpandedAstElementsBuilder_ == null) {
          maxExpandedAstElements_ = null;
        } else {
          maxExpandedAstElements_ = null;
          maxExpandedAstElementsBuilder_ = null;
        }
        if (inputFormatValuesInterpretExpressionsBuilder_ == null) {
          inputFormatValuesInterpretExpressions_ = null;
        } else {
          inputFormatValuesInterpretExpressions_ = null;
          inputFormatValuesInterpretExpressionsBuilder_ = null;
        }
        if (inputFormatDefaultsForOmittedFieldsBuilder_ == null) {
          inputFormatDefaultsForOmittedFields_ = null;
        } else {
          inputFormatDefaultsForOmittedFields_ = null;
          inputFormatDefaultsForOmittedFieldsBuilder_ = null;
        }
        if (outputFormatJsonQuote64BitIntegersBuilder_ == null) {
          outputFormatJsonQuote64BitIntegers_ = null;
        } else {
          outputFormatJsonQuote64BitIntegers_ = null;
          outputFormatJsonQuote64BitIntegersBuilder_ = null;
        }
        if (outputFormatJsonQuoteDenormalsBuilder_ == null) {
          outputFormatJsonQuoteDenormals_ = null;
        } else {
          outputFormatJsonQuoteDenormals_ = null;
          outputFormatJsonQuoteDenormalsBuilder_ = null;
        }
        if (lowCardinalityAllowInNativeFormatBuilder_ == null) {
          lowCardinalityAllowInNativeFormat_ = null;
        } else {
          lowCardinalityAllowInNativeFormat_ = null;
          lowCardinalityAllowInNativeFormatBuilder_ = null;
        }
        if (emptyResultForAggregationByEmptySetBuilder_ == null) {
          emptyResultForAggregationByEmptySet_ = null;
        } else {
          emptyResultForAggregationByEmptySet_ = null;
          emptyResultForAggregationByEmptySetBuilder_ = null;
        }
        if (httpConnectionTimeoutBuilder_ == null) {
          httpConnectionTimeout_ = null;
        } else {
          httpConnectionTimeout_ = null;
          httpConnectionTimeoutBuilder_ = null;
        }
        if (httpReceiveTimeoutBuilder_ == null) {
          httpReceiveTimeout_ = null;
        } else {
          httpReceiveTimeout_ = null;
          httpReceiveTimeoutBuilder_ = null;
        }
        if (httpSendTimeoutBuilder_ == null) {
          httpSendTimeout_ = null;
        } else {
          httpSendTimeout_ = null;
          httpSendTimeoutBuilder_ = null;
        }
        if (enableHttpCompressionBuilder_ == null) {
          enableHttpCompression_ = null;
        } else {
          enableHttpCompression_ = null;
          enableHttpCompressionBuilder_ = null;
        }
        if (sendProgressInHttpHeadersBuilder_ == null) {
          sendProgressInHttpHeaders_ = null;
        } else {
          sendProgressInHttpHeaders_ = null;
          sendProgressInHttpHeadersBuilder_ = null;
        }
        if (httpHeadersProgressIntervalBuilder_ == null) {
          httpHeadersProgressInterval_ = null;
        } else {
          httpHeadersProgressInterval_ = null;
          httpHeadersProgressIntervalBuilder_ = null;
        }
        if (addHttpCorsHeaderBuilder_ == null) {
          addHttpCorsHeader_ = null;
        } else {
          addHttpCorsHeader_ = null;
          addHttpCorsHeaderBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.internal_static_yandex_cloud_mdb_clickhouse_v1_UserSettings_descriptor;
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings getDefaultInstanceForType() {
        return yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.getDefaultInstance();
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings build() {
        yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings buildPartial() {
        yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings result = new yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings(this);
        if (readonlyBuilder_ == null) {
          result.readonly_ = readonly_;
        } else {
          result.readonly_ = readonlyBuilder_.build();
        }
        if (allowDdlBuilder_ == null) {
          result.allowDdl_ = allowDdl_;
        } else {
          result.allowDdl_ = allowDdlBuilder_.build();
        }
        if (insertQuorumBuilder_ == null) {
          result.insertQuorum_ = insertQuorum_;
        } else {
          result.insertQuorum_ = insertQuorumBuilder_.build();
        }
        if (connectTimeoutBuilder_ == null) {
          result.connectTimeout_ = connectTimeout_;
        } else {
          result.connectTimeout_ = connectTimeoutBuilder_.build();
        }
        if (receiveTimeoutBuilder_ == null) {
          result.receiveTimeout_ = receiveTimeout_;
        } else {
          result.receiveTimeout_ = receiveTimeoutBuilder_.build();
        }
        if (sendTimeoutBuilder_ == null) {
          result.sendTimeout_ = sendTimeout_;
        } else {
          result.sendTimeout_ = sendTimeoutBuilder_.build();
        }
        if (insertQuorumTimeoutBuilder_ == null) {
          result.insertQuorumTimeout_ = insertQuorumTimeout_;
        } else {
          result.insertQuorumTimeout_ = insertQuorumTimeoutBuilder_.build();
        }
        if (selectSequentialConsistencyBuilder_ == null) {
          result.selectSequentialConsistency_ = selectSequentialConsistency_;
        } else {
          result.selectSequentialConsistency_ = selectSequentialConsistencyBuilder_.build();
        }
        if (maxReplicaDelayForDistributedQueriesBuilder_ == null) {
          result.maxReplicaDelayForDistributedQueries_ = maxReplicaDelayForDistributedQueries_;
        } else {
          result.maxReplicaDelayForDistributedQueries_ = maxReplicaDelayForDistributedQueriesBuilder_.build();
        }
        if (fallbackToStaleReplicasForDistributedQueriesBuilder_ == null) {
          result.fallbackToStaleReplicasForDistributedQueries_ = fallbackToStaleReplicasForDistributedQueries_;
        } else {
          result.fallbackToStaleReplicasForDistributedQueries_ = fallbackToStaleReplicasForDistributedQueriesBuilder_.build();
        }
        if (replicationAlterPartitionsSyncBuilder_ == null) {
          result.replicationAlterPartitionsSync_ = replicationAlterPartitionsSync_;
        } else {
          result.replicationAlterPartitionsSync_ = replicationAlterPartitionsSyncBuilder_.build();
        }
        result.distributedProductMode_ = distributedProductMode_;
        if (distributedAggregationMemoryEfficientBuilder_ == null) {
          result.distributedAggregationMemoryEfficient_ = distributedAggregationMemoryEfficient_;
        } else {
          result.distributedAggregationMemoryEfficient_ = distributedAggregationMemoryEfficientBuilder_.build();
        }
        if (distributedDdlTaskTimeoutBuilder_ == null) {
          result.distributedDdlTaskTimeout_ = distributedDdlTaskTimeout_;
        } else {
          result.distributedDdlTaskTimeout_ = distributedDdlTaskTimeoutBuilder_.build();
        }
        if (compileBuilder_ == null) {
          result.compile_ = compile_;
        } else {
          result.compile_ = compileBuilder_.build();
        }
        if (minCountToCompileBuilder_ == null) {
          result.minCountToCompile_ = minCountToCompile_;
        } else {
          result.minCountToCompile_ = minCountToCompileBuilder_.build();
        }
        if (compileExpressionsBuilder_ == null) {
          result.compileExpressions_ = compileExpressions_;
        } else {
          result.compileExpressions_ = compileExpressionsBuilder_.build();
        }
        if (minCountToCompileExpressionBuilder_ == null) {
          result.minCountToCompileExpression_ = minCountToCompileExpression_;
        } else {
          result.minCountToCompileExpression_ = minCountToCompileExpressionBuilder_.build();
        }
        if (maxBlockSizeBuilder_ == null) {
          result.maxBlockSize_ = maxBlockSize_;
        } else {
          result.maxBlockSize_ = maxBlockSizeBuilder_.build();
        }
        if (minInsertBlockSizeRowsBuilder_ == null) {
          result.minInsertBlockSizeRows_ = minInsertBlockSizeRows_;
        } else {
          result.minInsertBlockSizeRows_ = minInsertBlockSizeRowsBuilder_.build();
        }
        if (minInsertBlockSizeBytesBuilder_ == null) {
          result.minInsertBlockSizeBytes_ = minInsertBlockSizeBytes_;
        } else {
          result.minInsertBlockSizeBytes_ = minInsertBlockSizeBytesBuilder_.build();
        }
        if (maxInsertBlockSizeBuilder_ == null) {
          result.maxInsertBlockSize_ = maxInsertBlockSize_;
        } else {
          result.maxInsertBlockSize_ = maxInsertBlockSizeBuilder_.build();
        }
        if (minBytesToUseDirectIoBuilder_ == null) {
          result.minBytesToUseDirectIo_ = minBytesToUseDirectIo_;
        } else {
          result.minBytesToUseDirectIo_ = minBytesToUseDirectIoBuilder_.build();
        }
        if (useUncompressedCacheBuilder_ == null) {
          result.useUncompressedCache_ = useUncompressedCache_;
        } else {
          result.useUncompressedCache_ = useUncompressedCacheBuilder_.build();
        }
        if (mergeTreeMaxRowsToUseCacheBuilder_ == null) {
          result.mergeTreeMaxRowsToUseCache_ = mergeTreeMaxRowsToUseCache_;
        } else {
          result.mergeTreeMaxRowsToUseCache_ = mergeTreeMaxRowsToUseCacheBuilder_.build();
        }
        if (mergeTreeMaxBytesToUseCacheBuilder_ == null) {
          result.mergeTreeMaxBytesToUseCache_ = mergeTreeMaxBytesToUseCache_;
        } else {
          result.mergeTreeMaxBytesToUseCache_ = mergeTreeMaxBytesToUseCacheBuilder_.build();
        }
        if (mergeTreeMinRowsForConcurrentReadBuilder_ == null) {
          result.mergeTreeMinRowsForConcurrentRead_ = mergeTreeMinRowsForConcurrentRead_;
        } else {
          result.mergeTreeMinRowsForConcurrentRead_ = mergeTreeMinRowsForConcurrentReadBuilder_.build();
        }
        if (mergeTreeMinBytesForConcurrentReadBuilder_ == null) {
          result.mergeTreeMinBytesForConcurrentRead_ = mergeTreeMinBytesForConcurrentRead_;
        } else {
          result.mergeTreeMinBytesForConcurrentRead_ = mergeTreeMinBytesForConcurrentReadBuilder_.build();
        }
        if (maxBytesBeforeExternalGroupByBuilder_ == null) {
          result.maxBytesBeforeExternalGroupBy_ = maxBytesBeforeExternalGroupBy_;
        } else {
          result.maxBytesBeforeExternalGroupBy_ = maxBytesBeforeExternalGroupByBuilder_.build();
        }
        if (maxBytesBeforeExternalSortBuilder_ == null) {
          result.maxBytesBeforeExternalSort_ = maxBytesBeforeExternalSort_;
        } else {
          result.maxBytesBeforeExternalSort_ = maxBytesBeforeExternalSortBuilder_.build();
        }
        if (groupByTwoLevelThresholdBuilder_ == null) {
          result.groupByTwoLevelThreshold_ = groupByTwoLevelThreshold_;
        } else {
          result.groupByTwoLevelThreshold_ = groupByTwoLevelThresholdBuilder_.build();
        }
        if (groupByTwoLevelThresholdBytesBuilder_ == null) {
          result.groupByTwoLevelThresholdBytes_ = groupByTwoLevelThresholdBytes_;
        } else {
          result.groupByTwoLevelThresholdBytes_ = groupByTwoLevelThresholdBytesBuilder_.build();
        }
        if (priorityBuilder_ == null) {
          result.priority_ = priority_;
        } else {
          result.priority_ = priorityBuilder_.build();
        }
        if (maxThreadsBuilder_ == null) {
          result.maxThreads_ = maxThreads_;
        } else {
          result.maxThreads_ = maxThreadsBuilder_.build();
        }
        if (maxMemoryUsageBuilder_ == null) {
          result.maxMemoryUsage_ = maxMemoryUsage_;
        } else {
          result.maxMemoryUsage_ = maxMemoryUsageBuilder_.build();
        }
        if (maxMemoryUsageForUserBuilder_ == null) {
          result.maxMemoryUsageForUser_ = maxMemoryUsageForUser_;
        } else {
          result.maxMemoryUsageForUser_ = maxMemoryUsageForUserBuilder_.build();
        }
        if (maxNetworkBandwidthBuilder_ == null) {
          result.maxNetworkBandwidth_ = maxNetworkBandwidth_;
        } else {
          result.maxNetworkBandwidth_ = maxNetworkBandwidthBuilder_.build();
        }
        if (maxNetworkBandwidthForUserBuilder_ == null) {
          result.maxNetworkBandwidthForUser_ = maxNetworkBandwidthForUser_;
        } else {
          result.maxNetworkBandwidthForUser_ = maxNetworkBandwidthForUserBuilder_.build();
        }
        if (forceIndexByDateBuilder_ == null) {
          result.forceIndexByDate_ = forceIndexByDate_;
        } else {
          result.forceIndexByDate_ = forceIndexByDateBuilder_.build();
        }
        if (forcePrimaryKeyBuilder_ == null) {
          result.forcePrimaryKey_ = forcePrimaryKey_;
        } else {
          result.forcePrimaryKey_ = forcePrimaryKeyBuilder_.build();
        }
        if (maxRowsToReadBuilder_ == null) {
          result.maxRowsToRead_ = maxRowsToRead_;
        } else {
          result.maxRowsToRead_ = maxRowsToReadBuilder_.build();
        }
        if (maxBytesToReadBuilder_ == null) {
          result.maxBytesToRead_ = maxBytesToRead_;
        } else {
          result.maxBytesToRead_ = maxBytesToReadBuilder_.build();
        }
        result.readOverflowMode_ = readOverflowMode_;
        if (maxRowsToGroupByBuilder_ == null) {
          result.maxRowsToGroupBy_ = maxRowsToGroupBy_;
        } else {
          result.maxRowsToGroupBy_ = maxRowsToGroupByBuilder_.build();
        }
        result.groupByOverflowMode_ = groupByOverflowMode_;
        if (maxRowsToSortBuilder_ == null) {
          result.maxRowsToSort_ = maxRowsToSort_;
        } else {
          result.maxRowsToSort_ = maxRowsToSortBuilder_.build();
        }
        if (maxBytesToSortBuilder_ == null) {
          result.maxBytesToSort_ = maxBytesToSort_;
        } else {
          result.maxBytesToSort_ = maxBytesToSortBuilder_.build();
        }
        result.sortOverflowMode_ = sortOverflowMode_;
        if (maxResultRowsBuilder_ == null) {
          result.maxResultRows_ = maxResultRows_;
        } else {
          result.maxResultRows_ = maxResultRowsBuilder_.build();
        }
        if (maxResultBytesBuilder_ == null) {
          result.maxResultBytes_ = maxResultBytes_;
        } else {
          result.maxResultBytes_ = maxResultBytesBuilder_.build();
        }
        result.resultOverflowMode_ = resultOverflowMode_;
        if (maxRowsInDistinctBuilder_ == null) {
          result.maxRowsInDistinct_ = maxRowsInDistinct_;
        } else {
          result.maxRowsInDistinct_ = maxRowsInDistinctBuilder_.build();
        }
        if (maxBytesInDistinctBuilder_ == null) {
          result.maxBytesInDistinct_ = maxBytesInDistinct_;
        } else {
          result.maxBytesInDistinct_ = maxBytesInDistinctBuilder_.build();
        }
        result.distinctOverflowMode_ = distinctOverflowMode_;
        if (maxRowsToTransferBuilder_ == null) {
          result.maxRowsToTransfer_ = maxRowsToTransfer_;
        } else {
          result.maxRowsToTransfer_ = maxRowsToTransferBuilder_.build();
        }
        if (maxBytesToTransferBuilder_ == null) {
          result.maxBytesToTransfer_ = maxBytesToTransfer_;
        } else {
          result.maxBytesToTransfer_ = maxBytesToTransferBuilder_.build();
        }
        result.transferOverflowMode_ = transferOverflowMode_;
        if (maxExecutionTimeBuilder_ == null) {
          result.maxExecutionTime_ = maxExecutionTime_;
        } else {
          result.maxExecutionTime_ = maxExecutionTimeBuilder_.build();
        }
        result.timeoutOverflowMode_ = timeoutOverflowMode_;
        if (maxColumnsToReadBuilder_ == null) {
          result.maxColumnsToRead_ = maxColumnsToRead_;
        } else {
          result.maxColumnsToRead_ = maxColumnsToReadBuilder_.build();
        }
        if (maxTemporaryColumnsBuilder_ == null) {
          result.maxTemporaryColumns_ = maxTemporaryColumns_;
        } else {
          result.maxTemporaryColumns_ = maxTemporaryColumnsBuilder_.build();
        }
        if (maxTemporaryNonConstColumnsBuilder_ == null) {
          result.maxTemporaryNonConstColumns_ = maxTemporaryNonConstColumns_;
        } else {
          result.maxTemporaryNonConstColumns_ = maxTemporaryNonConstColumnsBuilder_.build();
        }
        if (maxQuerySizeBuilder_ == null) {
          result.maxQuerySize_ = maxQuerySize_;
        } else {
          result.maxQuerySize_ = maxQuerySizeBuilder_.build();
        }
        if (maxAstDepthBuilder_ == null) {
          result.maxAstDepth_ = maxAstDepth_;
        } else {
          result.maxAstDepth_ = maxAstDepthBuilder_.build();
        }
        if (maxAstElementsBuilder_ == null) {
          result.maxAstElements_ = maxAstElements_;
        } else {
          result.maxAstElements_ = maxAstElementsBuilder_.build();
        }
        if (maxExpandedAstElementsBuilder_ == null) {
          result.maxExpandedAstElements_ = maxExpandedAstElements_;
        } else {
          result.maxExpandedAstElements_ = maxExpandedAstElementsBuilder_.build();
        }
        if (inputFormatValuesInterpretExpressionsBuilder_ == null) {
          result.inputFormatValuesInterpretExpressions_ = inputFormatValuesInterpretExpressions_;
        } else {
          result.inputFormatValuesInterpretExpressions_ = inputFormatValuesInterpretExpressionsBuilder_.build();
        }
        if (inputFormatDefaultsForOmittedFieldsBuilder_ == null) {
          result.inputFormatDefaultsForOmittedFields_ = inputFormatDefaultsForOmittedFields_;
        } else {
          result.inputFormatDefaultsForOmittedFields_ = inputFormatDefaultsForOmittedFieldsBuilder_.build();
        }
        if (outputFormatJsonQuote64BitIntegersBuilder_ == null) {
          result.outputFormatJsonQuote64BitIntegers_ = outputFormatJsonQuote64BitIntegers_;
        } else {
          result.outputFormatJsonQuote64BitIntegers_ = outputFormatJsonQuote64BitIntegersBuilder_.build();
        }
        if (outputFormatJsonQuoteDenormalsBuilder_ == null) {
          result.outputFormatJsonQuoteDenormals_ = outputFormatJsonQuoteDenormals_;
        } else {
          result.outputFormatJsonQuoteDenormals_ = outputFormatJsonQuoteDenormalsBuilder_.build();
        }
        if (lowCardinalityAllowInNativeFormatBuilder_ == null) {
          result.lowCardinalityAllowInNativeFormat_ = lowCardinalityAllowInNativeFormat_;
        } else {
          result.lowCardinalityAllowInNativeFormat_ = lowCardinalityAllowInNativeFormatBuilder_.build();
        }
        if (emptyResultForAggregationByEmptySetBuilder_ == null) {
          result.emptyResultForAggregationByEmptySet_ = emptyResultForAggregationByEmptySet_;
        } else {
          result.emptyResultForAggregationByEmptySet_ = emptyResultForAggregationByEmptySetBuilder_.build();
        }
        if (httpConnectionTimeoutBuilder_ == null) {
          result.httpConnectionTimeout_ = httpConnectionTimeout_;
        } else {
          result.httpConnectionTimeout_ = httpConnectionTimeoutBuilder_.build();
        }
        if (httpReceiveTimeoutBuilder_ == null) {
          result.httpReceiveTimeout_ = httpReceiveTimeout_;
        } else {
          result.httpReceiveTimeout_ = httpReceiveTimeoutBuilder_.build();
        }
        if (httpSendTimeoutBuilder_ == null) {
          result.httpSendTimeout_ = httpSendTimeout_;
        } else {
          result.httpSendTimeout_ = httpSendTimeoutBuilder_.build();
        }
        if (enableHttpCompressionBuilder_ == null) {
          result.enableHttpCompression_ = enableHttpCompression_;
        } else {
          result.enableHttpCompression_ = enableHttpCompressionBuilder_.build();
        }
        if (sendProgressInHttpHeadersBuilder_ == null) {
          result.sendProgressInHttpHeaders_ = sendProgressInHttpHeaders_;
        } else {
          result.sendProgressInHttpHeaders_ = sendProgressInHttpHeadersBuilder_.build();
        }
        if (httpHeadersProgressIntervalBuilder_ == null) {
          result.httpHeadersProgressInterval_ = httpHeadersProgressInterval_;
        } else {
          result.httpHeadersProgressInterval_ = httpHeadersProgressIntervalBuilder_.build();
        }
        if (addHttpCorsHeaderBuilder_ == null) {
          result.addHttpCorsHeader_ = addHttpCorsHeader_;
        } else {
          result.addHttpCorsHeader_ = addHttpCorsHeaderBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings) {
          return mergeFrom((yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings other) {
        if (other == yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.getDefaultInstance()) return this;
        if (other.hasReadonly()) {
          mergeReadonly(other.getReadonly());
        }
        if (other.hasAllowDdl()) {
          mergeAllowDdl(other.getAllowDdl());
        }
        if (other.hasInsertQuorum()) {
          mergeInsertQuorum(other.getInsertQuorum());
        }
        if (other.hasConnectTimeout()) {
          mergeConnectTimeout(other.getConnectTimeout());
        }
        if (other.hasReceiveTimeout()) {
          mergeReceiveTimeout(other.getReceiveTimeout());
        }
        if (other.hasSendTimeout()) {
          mergeSendTimeout(other.getSendTimeout());
        }
        if (other.hasInsertQuorumTimeout()) {
          mergeInsertQuorumTimeout(other.getInsertQuorumTimeout());
        }
        if (other.hasSelectSequentialConsistency()) {
          mergeSelectSequentialConsistency(other.getSelectSequentialConsistency());
        }
        if (other.hasMaxReplicaDelayForDistributedQueries()) {
          mergeMaxReplicaDelayForDistributedQueries(other.getMaxReplicaDelayForDistributedQueries());
        }
        if (other.hasFallbackToStaleReplicasForDistributedQueries()) {
          mergeFallbackToStaleReplicasForDistributedQueries(other.getFallbackToStaleReplicasForDistributedQueries());
        }
        if (other.hasReplicationAlterPartitionsSync()) {
          mergeReplicationAlterPartitionsSync(other.getReplicationAlterPartitionsSync());
        }
        if (other.distributedProductMode_ != 0) {
          setDistributedProductModeValue(other.getDistributedProductModeValue());
        }
        if (other.hasDistributedAggregationMemoryEfficient()) {
          mergeDistributedAggregationMemoryEfficient(other.getDistributedAggregationMemoryEfficient());
        }
        if (other.hasDistributedDdlTaskTimeout()) {
          mergeDistributedDdlTaskTimeout(other.getDistributedDdlTaskTimeout());
        }
        if (other.hasCompile()) {
          mergeCompile(other.getCompile());
        }
        if (other.hasMinCountToCompile()) {
          mergeMinCountToCompile(other.getMinCountToCompile());
        }
        if (other.hasCompileExpressions()) {
          mergeCompileExpressions(other.getCompileExpressions());
        }
        if (other.hasMinCountToCompileExpression()) {
          mergeMinCountToCompileExpression(other.getMinCountToCompileExpression());
        }
        if (other.hasMaxBlockSize()) {
          mergeMaxBlockSize(other.getMaxBlockSize());
        }
        if (other.hasMinInsertBlockSizeRows()) {
          mergeMinInsertBlockSizeRows(other.getMinInsertBlockSizeRows());
        }
        if (other.hasMinInsertBlockSizeBytes()) {
          mergeMinInsertBlockSizeBytes(other.getMinInsertBlockSizeBytes());
        }
        if (other.hasMaxInsertBlockSize()) {
          mergeMaxInsertBlockSize(other.getMaxInsertBlockSize());
        }
        if (other.hasMinBytesToUseDirectIo()) {
          mergeMinBytesToUseDirectIo(other.getMinBytesToUseDirectIo());
        }
        if (other.hasUseUncompressedCache()) {
          mergeUseUncompressedCache(other.getUseUncompressedCache());
        }
        if (other.hasMergeTreeMaxRowsToUseCache()) {
          mergeMergeTreeMaxRowsToUseCache(other.getMergeTreeMaxRowsToUseCache());
        }
        if (other.hasMergeTreeMaxBytesToUseCache()) {
          mergeMergeTreeMaxBytesToUseCache(other.getMergeTreeMaxBytesToUseCache());
        }
        if (other.hasMergeTreeMinRowsForConcurrentRead()) {
          mergeMergeTreeMinRowsForConcurrentRead(other.getMergeTreeMinRowsForConcurrentRead());
        }
        if (other.hasMergeTreeMinBytesForConcurrentRead()) {
          mergeMergeTreeMinBytesForConcurrentRead(other.getMergeTreeMinBytesForConcurrentRead());
        }
        if (other.hasMaxBytesBeforeExternalGroupBy()) {
          mergeMaxBytesBeforeExternalGroupBy(other.getMaxBytesBeforeExternalGroupBy());
        }
        if (other.hasMaxBytesBeforeExternalSort()) {
          mergeMaxBytesBeforeExternalSort(other.getMaxBytesBeforeExternalSort());
        }
        if (other.hasGroupByTwoLevelThreshold()) {
          mergeGroupByTwoLevelThreshold(other.getGroupByTwoLevelThreshold());
        }
        if (other.hasGroupByTwoLevelThresholdBytes()) {
          mergeGroupByTwoLevelThresholdBytes(other.getGroupByTwoLevelThresholdBytes());
        }
        if (other.hasPriority()) {
          mergePriority(other.getPriority());
        }
        if (other.hasMaxThreads()) {
          mergeMaxThreads(other.getMaxThreads());
        }
        if (other.hasMaxMemoryUsage()) {
          mergeMaxMemoryUsage(other.getMaxMemoryUsage());
        }
        if (other.hasMaxMemoryUsageForUser()) {
          mergeMaxMemoryUsageForUser(other.getMaxMemoryUsageForUser());
        }
        if (other.hasMaxNetworkBandwidth()) {
          mergeMaxNetworkBandwidth(other.getMaxNetworkBandwidth());
        }
        if (other.hasMaxNetworkBandwidthForUser()) {
          mergeMaxNetworkBandwidthForUser(other.getMaxNetworkBandwidthForUser());
        }
        if (other.hasForceIndexByDate()) {
          mergeForceIndexByDate(other.getForceIndexByDate());
        }
        if (other.hasForcePrimaryKey()) {
          mergeForcePrimaryKey(other.getForcePrimaryKey());
        }
        if (other.hasMaxRowsToRead()) {
          mergeMaxRowsToRead(other.getMaxRowsToRead());
        }
        if (other.hasMaxBytesToRead()) {
          mergeMaxBytesToRead(other.getMaxBytesToRead());
        }
        if (other.readOverflowMode_ != 0) {
          setReadOverflowModeValue(other.getReadOverflowModeValue());
        }
        if (other.hasMaxRowsToGroupBy()) {
          mergeMaxRowsToGroupBy(other.getMaxRowsToGroupBy());
        }
        if (other.groupByOverflowMode_ != 0) {
          setGroupByOverflowModeValue(other.getGroupByOverflowModeValue());
        }
        if (other.hasMaxRowsToSort()) {
          mergeMaxRowsToSort(other.getMaxRowsToSort());
        }
        if (other.hasMaxBytesToSort()) {
          mergeMaxBytesToSort(other.getMaxBytesToSort());
        }
        if (other.sortOverflowMode_ != 0) {
          setSortOverflowModeValue(other.getSortOverflowModeValue());
        }
        if (other.hasMaxResultRows()) {
          mergeMaxResultRows(other.getMaxResultRows());
        }
        if (other.hasMaxResultBytes()) {
          mergeMaxResultBytes(other.getMaxResultBytes());
        }
        if (other.resultOverflowMode_ != 0) {
          setResultOverflowModeValue(other.getResultOverflowModeValue());
        }
        if (other.hasMaxRowsInDistinct()) {
          mergeMaxRowsInDistinct(other.getMaxRowsInDistinct());
        }
        if (other.hasMaxBytesInDistinct()) {
          mergeMaxBytesInDistinct(other.getMaxBytesInDistinct());
        }
        if (other.distinctOverflowMode_ != 0) {
          setDistinctOverflowModeValue(other.getDistinctOverflowModeValue());
        }
        if (other.hasMaxRowsToTransfer()) {
          mergeMaxRowsToTransfer(other.getMaxRowsToTransfer());
        }
        if (other.hasMaxBytesToTransfer()) {
          mergeMaxBytesToTransfer(other.getMaxBytesToTransfer());
        }
        if (other.transferOverflowMode_ != 0) {
          setTransferOverflowModeValue(other.getTransferOverflowModeValue());
        }
        if (other.hasMaxExecutionTime()) {
          mergeMaxExecutionTime(other.getMaxExecutionTime());
        }
        if (other.timeoutOverflowMode_ != 0) {
          setTimeoutOverflowModeValue(other.getTimeoutOverflowModeValue());
        }
        if (other.hasMaxColumnsToRead()) {
          mergeMaxColumnsToRead(other.getMaxColumnsToRead());
        }
        if (other.hasMaxTemporaryColumns()) {
          mergeMaxTemporaryColumns(other.getMaxTemporaryColumns());
        }
        if (other.hasMaxTemporaryNonConstColumns()) {
          mergeMaxTemporaryNonConstColumns(other.getMaxTemporaryNonConstColumns());
        }
        if (other.hasMaxQuerySize()) {
          mergeMaxQuerySize(other.getMaxQuerySize());
        }
        if (other.hasMaxAstDepth()) {
          mergeMaxAstDepth(other.getMaxAstDepth());
        }
        if (other.hasMaxAstElements()) {
          mergeMaxAstElements(other.getMaxAstElements());
        }
        if (other.hasMaxExpandedAstElements()) {
          mergeMaxExpandedAstElements(other.getMaxExpandedAstElements());
        }
        if (other.hasInputFormatValuesInterpretExpressions()) {
          mergeInputFormatValuesInterpretExpressions(other.getInputFormatValuesInterpretExpressions());
        }
        if (other.hasInputFormatDefaultsForOmittedFields()) {
          mergeInputFormatDefaultsForOmittedFields(other.getInputFormatDefaultsForOmittedFields());
        }
        if (other.hasOutputFormatJsonQuote64BitIntegers()) {
          mergeOutputFormatJsonQuote64BitIntegers(other.getOutputFormatJsonQuote64BitIntegers());
        }
        if (other.hasOutputFormatJsonQuoteDenormals()) {
          mergeOutputFormatJsonQuoteDenormals(other.getOutputFormatJsonQuoteDenormals());
        }
        if (other.hasLowCardinalityAllowInNativeFormat()) {
          mergeLowCardinalityAllowInNativeFormat(other.getLowCardinalityAllowInNativeFormat());
        }
        if (other.hasEmptyResultForAggregationByEmptySet()) {
          mergeEmptyResultForAggregationByEmptySet(other.getEmptyResultForAggregationByEmptySet());
        }
        if (other.hasHttpConnectionTimeout()) {
          mergeHttpConnectionTimeout(other.getHttpConnectionTimeout());
        }
        if (other.hasHttpReceiveTimeout()) {
          mergeHttpReceiveTimeout(other.getHttpReceiveTimeout());
        }
        if (other.hasHttpSendTimeout()) {
          mergeHttpSendTimeout(other.getHttpSendTimeout());
        }
        if (other.hasEnableHttpCompression()) {
          mergeEnableHttpCompression(other.getEnableHttpCompression());
        }
        if (other.hasSendProgressInHttpHeaders()) {
          mergeSendProgressInHttpHeaders(other.getSendProgressInHttpHeaders());
        }
        if (other.hasHttpHeadersProgressInterval()) {
          mergeHttpHeadersProgressInterval(other.getHttpHeadersProgressInterval());
        }
        if (other.hasAddHttpCorsHeader()) {
          mergeAddHttpCorsHeader(other.getAddHttpCorsHeader());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.google.protobuf.Int64Value readonly_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> readonlyBuilder_;
      /**
       * <pre>
       * Restricts permissions for non-DDL queries.
       * Possible values:
       * * 0 (default) —  no restrictions.
       * * 1 — only read data queries are allowed.
       * * 2 — read data and change settings queries are allowed.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/permissions_for_queries/#settings_readonly).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value readonly = 1 [(.yandex.cloud.value) = "0-2"];</code>
       */
      public boolean hasReadonly() {
        return readonlyBuilder_ != null || readonly_ != null;
      }
      /**
       * <pre>
       * Restricts permissions for non-DDL queries.
       * Possible values:
       * * 0 (default) —  no restrictions.
       * * 1 — only read data queries are allowed.
       * * 2 — read data and change settings queries are allowed.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/permissions_for_queries/#settings_readonly).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value readonly = 1 [(.yandex.cloud.value) = "0-2"];</code>
       */
      public com.google.protobuf.Int64Value getReadonly() {
        if (readonlyBuilder_ == null) {
          return readonly_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : readonly_;
        } else {
          return readonlyBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Restricts permissions for non-DDL queries.
       * Possible values:
       * * 0 (default) —  no restrictions.
       * * 1 — only read data queries are allowed.
       * * 2 — read data and change settings queries are allowed.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/permissions_for_queries/#settings_readonly).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value readonly = 1 [(.yandex.cloud.value) = "0-2"];</code>
       */
      public Builder setReadonly(com.google.protobuf.Int64Value value) {
        if (readonlyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          readonly_ = value;
          onChanged();
        } else {
          readonlyBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Restricts permissions for non-DDL queries.
       * Possible values:
       * * 0 (default) —  no restrictions.
       * * 1 — only read data queries are allowed.
       * * 2 — read data and change settings queries are allowed.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/permissions_for_queries/#settings_readonly).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value readonly = 1 [(.yandex.cloud.value) = "0-2"];</code>
       */
      public Builder setReadonly(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (readonlyBuilder_ == null) {
          readonly_ = builderForValue.build();
          onChanged();
        } else {
          readonlyBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Restricts permissions for non-DDL queries.
       * Possible values:
       * * 0 (default) —  no restrictions.
       * * 1 — only read data queries are allowed.
       * * 2 — read data and change settings queries are allowed.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/permissions_for_queries/#settings_readonly).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value readonly = 1 [(.yandex.cloud.value) = "0-2"];</code>
       */
      public Builder mergeReadonly(com.google.protobuf.Int64Value value) {
        if (readonlyBuilder_ == null) {
          if (readonly_ != null) {
            readonly_ =
              com.google.protobuf.Int64Value.newBuilder(readonly_).mergeFrom(value).buildPartial();
          } else {
            readonly_ = value;
          }
          onChanged();
        } else {
          readonlyBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Restricts permissions for non-DDL queries.
       * Possible values:
       * * 0 (default) —  no restrictions.
       * * 1 — only read data queries are allowed.
       * * 2 — read data and change settings queries are allowed.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/permissions_for_queries/#settings_readonly).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value readonly = 1 [(.yandex.cloud.value) = "0-2"];</code>
       */
      public Builder clearReadonly() {
        if (readonlyBuilder_ == null) {
          readonly_ = null;
          onChanged();
        } else {
          readonly_ = null;
          readonlyBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Restricts permissions for non-DDL queries.
       * Possible values:
       * * 0 (default) —  no restrictions.
       * * 1 — only read data queries are allowed.
       * * 2 — read data and change settings queries are allowed.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/permissions_for_queries/#settings_readonly).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value readonly = 1 [(.yandex.cloud.value) = "0-2"];</code>
       */
      public com.google.protobuf.Int64Value.Builder getReadonlyBuilder() {
        
        onChanged();
        return getReadonlyFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Restricts permissions for non-DDL queries.
       * Possible values:
       * * 0 (default) —  no restrictions.
       * * 1 — only read data queries are allowed.
       * * 2 — read data and change settings queries are allowed.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/permissions_for_queries/#settings_readonly).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value readonly = 1 [(.yandex.cloud.value) = "0-2"];</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getReadonlyOrBuilder() {
        if (readonlyBuilder_ != null) {
          return readonlyBuilder_.getMessageOrBuilder();
        } else {
          return readonly_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : readonly_;
        }
      }
      /**
       * <pre>
       * Restricts permissions for non-DDL queries.
       * Possible values:
       * * 0 (default) —  no restrictions.
       * * 1 — only read data queries are allowed.
       * * 2 — read data and change settings queries are allowed.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/permissions_for_queries/#settings_readonly).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value readonly = 1 [(.yandex.cloud.value) = "0-2"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getReadonlyFieldBuilder() {
        if (readonlyBuilder_ == null) {
          readonlyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getReadonly(),
                  getParentForChildren(),
                  isClean());
          readonly_ = null;
        }
        return readonlyBuilder_;
      }

      private com.google.protobuf.BoolValue allowDdl_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> allowDdlBuilder_;
      /**
       * <pre>
       * Whether DDL queries are allowed. Default value: `false`.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/permissions_for_queries/#settings_allow_ddl).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue allow_ddl = 2;</code>
       */
      public boolean hasAllowDdl() {
        return allowDdlBuilder_ != null || allowDdl_ != null;
      }
      /**
       * <pre>
       * Whether DDL queries are allowed. Default value: `false`.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/permissions_for_queries/#settings_allow_ddl).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue allow_ddl = 2;</code>
       */
      public com.google.protobuf.BoolValue getAllowDdl() {
        if (allowDdlBuilder_ == null) {
          return allowDdl_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : allowDdl_;
        } else {
          return allowDdlBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Whether DDL queries are allowed. Default value: `false`.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/permissions_for_queries/#settings_allow_ddl).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue allow_ddl = 2;</code>
       */
      public Builder setAllowDdl(com.google.protobuf.BoolValue value) {
        if (allowDdlBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          allowDdl_ = value;
          onChanged();
        } else {
          allowDdlBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Whether DDL queries are allowed. Default value: `false`.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/permissions_for_queries/#settings_allow_ddl).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue allow_ddl = 2;</code>
       */
      public Builder setAllowDdl(
          com.google.protobuf.BoolValue.Builder builderForValue) {
        if (allowDdlBuilder_ == null) {
          allowDdl_ = builderForValue.build();
          onChanged();
        } else {
          allowDdlBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Whether DDL queries are allowed. Default value: `false`.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/permissions_for_queries/#settings_allow_ddl).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue allow_ddl = 2;</code>
       */
      public Builder mergeAllowDdl(com.google.protobuf.BoolValue value) {
        if (allowDdlBuilder_ == null) {
          if (allowDdl_ != null) {
            allowDdl_ =
              com.google.protobuf.BoolValue.newBuilder(allowDdl_).mergeFrom(value).buildPartial();
          } else {
            allowDdl_ = value;
          }
          onChanged();
        } else {
          allowDdlBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Whether DDL queries are allowed. Default value: `false`.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/permissions_for_queries/#settings_allow_ddl).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue allow_ddl = 2;</code>
       */
      public Builder clearAllowDdl() {
        if (allowDdlBuilder_ == null) {
          allowDdl_ = null;
          onChanged();
        } else {
          allowDdl_ = null;
          allowDdlBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Whether DDL queries are allowed. Default value: `false`.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/permissions_for_queries/#settings_allow_ddl).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue allow_ddl = 2;</code>
       */
      public com.google.protobuf.BoolValue.Builder getAllowDdlBuilder() {
        
        onChanged();
        return getAllowDdlFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Whether DDL queries are allowed. Default value: `false`.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/permissions_for_queries/#settings_allow_ddl).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue allow_ddl = 2;</code>
       */
      public com.google.protobuf.BoolValueOrBuilder getAllowDdlOrBuilder() {
        if (allowDdlBuilder_ != null) {
          return allowDdlBuilder_.getMessageOrBuilder();
        } else {
          return allowDdl_ == null ?
              com.google.protobuf.BoolValue.getDefaultInstance() : allowDdl_;
        }
      }
      /**
       * <pre>
       * Whether DDL queries are allowed. Default value: `false`.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/permissions_for_queries/#settings_allow_ddl).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue allow_ddl = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> 
          getAllowDdlFieldBuilder() {
        if (allowDdlBuilder_ == null) {
          allowDdlBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder>(
                  getAllowDdl(),
                  getParentForChildren(),
                  isClean());
          allowDdl_ = null;
        }
        return allowDdlBuilder_;
      }

      private com.google.protobuf.Int64Value insertQuorum_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> insertQuorumBuilder_;
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-insert_quorum).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value insert_quorum = 3 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public boolean hasInsertQuorum() {
        return insertQuorumBuilder_ != null || insertQuorum_ != null;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-insert_quorum).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value insert_quorum = 3 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64Value getInsertQuorum() {
        if (insertQuorumBuilder_ == null) {
          return insertQuorum_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : insertQuorum_;
        } else {
          return insertQuorumBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-insert_quorum).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value insert_quorum = 3 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder setInsertQuorum(com.google.protobuf.Int64Value value) {
        if (insertQuorumBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          insertQuorum_ = value;
          onChanged();
        } else {
          insertQuorumBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-insert_quorum).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value insert_quorum = 3 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder setInsertQuorum(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (insertQuorumBuilder_ == null) {
          insertQuorum_ = builderForValue.build();
          onChanged();
        } else {
          insertQuorumBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-insert_quorum).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value insert_quorum = 3 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder mergeInsertQuorum(com.google.protobuf.Int64Value value) {
        if (insertQuorumBuilder_ == null) {
          if (insertQuorum_ != null) {
            insertQuorum_ =
              com.google.protobuf.Int64Value.newBuilder(insertQuorum_).mergeFrom(value).buildPartial();
          } else {
            insertQuorum_ = value;
          }
          onChanged();
        } else {
          insertQuorumBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-insert_quorum).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value insert_quorum = 3 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder clearInsertQuorum() {
        if (insertQuorumBuilder_ == null) {
          insertQuorum_ = null;
          onChanged();
        } else {
          insertQuorum_ = null;
          insertQuorumBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-insert_quorum).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value insert_quorum = 3 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64Value.Builder getInsertQuorumBuilder() {
        
        onChanged();
        return getInsertQuorumFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-insert_quorum).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value insert_quorum = 3 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getInsertQuorumOrBuilder() {
        if (insertQuorumBuilder_ != null) {
          return insertQuorumBuilder_.getMessageOrBuilder();
        } else {
          return insertQuorum_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : insertQuorum_;
        }
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-insert_quorum).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value insert_quorum = 3 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getInsertQuorumFieldBuilder() {
        if (insertQuorumBuilder_ == null) {
          insertQuorumBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getInsertQuorum(),
                  getParentForChildren(),
                  isClean());
          insertQuorum_ = null;
        }
        return insertQuorumBuilder_;
      }

      private com.google.protobuf.Int64Value connectTimeout_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> connectTimeoutBuilder_;
      /**
       * <pre>
       * Connection timeout in milliseconds.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#connect-timeout-receive-timeout-send-timeout).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value connect_timeout = 39 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public boolean hasConnectTimeout() {
        return connectTimeoutBuilder_ != null || connectTimeout_ != null;
      }
      /**
       * <pre>
       * Connection timeout in milliseconds.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#connect-timeout-receive-timeout-send-timeout).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value connect_timeout = 39 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public com.google.protobuf.Int64Value getConnectTimeout() {
        if (connectTimeoutBuilder_ == null) {
          return connectTimeout_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : connectTimeout_;
        } else {
          return connectTimeoutBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Connection timeout in milliseconds.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#connect-timeout-receive-timeout-send-timeout).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value connect_timeout = 39 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public Builder setConnectTimeout(com.google.protobuf.Int64Value value) {
        if (connectTimeoutBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          connectTimeout_ = value;
          onChanged();
        } else {
          connectTimeoutBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Connection timeout in milliseconds.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#connect-timeout-receive-timeout-send-timeout).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value connect_timeout = 39 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public Builder setConnectTimeout(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (connectTimeoutBuilder_ == null) {
          connectTimeout_ = builderForValue.build();
          onChanged();
        } else {
          connectTimeoutBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Connection timeout in milliseconds.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#connect-timeout-receive-timeout-send-timeout).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value connect_timeout = 39 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public Builder mergeConnectTimeout(com.google.protobuf.Int64Value value) {
        if (connectTimeoutBuilder_ == null) {
          if (connectTimeout_ != null) {
            connectTimeout_ =
              com.google.protobuf.Int64Value.newBuilder(connectTimeout_).mergeFrom(value).buildPartial();
          } else {
            connectTimeout_ = value;
          }
          onChanged();
        } else {
          connectTimeoutBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Connection timeout in milliseconds.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#connect-timeout-receive-timeout-send-timeout).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value connect_timeout = 39 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public Builder clearConnectTimeout() {
        if (connectTimeoutBuilder_ == null) {
          connectTimeout_ = null;
          onChanged();
        } else {
          connectTimeout_ = null;
          connectTimeoutBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Connection timeout in milliseconds.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#connect-timeout-receive-timeout-send-timeout).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value connect_timeout = 39 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public com.google.protobuf.Int64Value.Builder getConnectTimeoutBuilder() {
        
        onChanged();
        return getConnectTimeoutFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Connection timeout in milliseconds.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#connect-timeout-receive-timeout-send-timeout).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value connect_timeout = 39 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getConnectTimeoutOrBuilder() {
        if (connectTimeoutBuilder_ != null) {
          return connectTimeoutBuilder_.getMessageOrBuilder();
        } else {
          return connectTimeout_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : connectTimeout_;
        }
      }
      /**
       * <pre>
       * Connection timeout in milliseconds.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#connect-timeout-receive-timeout-send-timeout).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value connect_timeout = 39 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getConnectTimeoutFieldBuilder() {
        if (connectTimeoutBuilder_ == null) {
          connectTimeoutBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getConnectTimeout(),
                  getParentForChildren(),
                  isClean());
          connectTimeout_ = null;
        }
        return connectTimeoutBuilder_;
      }

      private com.google.protobuf.Int64Value receiveTimeout_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> receiveTimeoutBuilder_;
      /**
       * <pre>
       * Receive timeout in milliseconds.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#connect-timeout-receive-timeout-send-timeout).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value receive_timeout = 40 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public boolean hasReceiveTimeout() {
        return receiveTimeoutBuilder_ != null || receiveTimeout_ != null;
      }
      /**
       * <pre>
       * Receive timeout in milliseconds.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#connect-timeout-receive-timeout-send-timeout).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value receive_timeout = 40 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public com.google.protobuf.Int64Value getReceiveTimeout() {
        if (receiveTimeoutBuilder_ == null) {
          return receiveTimeout_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : receiveTimeout_;
        } else {
          return receiveTimeoutBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Receive timeout in milliseconds.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#connect-timeout-receive-timeout-send-timeout).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value receive_timeout = 40 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public Builder setReceiveTimeout(com.google.protobuf.Int64Value value) {
        if (receiveTimeoutBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          receiveTimeout_ = value;
          onChanged();
        } else {
          receiveTimeoutBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Receive timeout in milliseconds.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#connect-timeout-receive-timeout-send-timeout).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value receive_timeout = 40 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public Builder setReceiveTimeout(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (receiveTimeoutBuilder_ == null) {
          receiveTimeout_ = builderForValue.build();
          onChanged();
        } else {
          receiveTimeoutBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Receive timeout in milliseconds.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#connect-timeout-receive-timeout-send-timeout).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value receive_timeout = 40 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public Builder mergeReceiveTimeout(com.google.protobuf.Int64Value value) {
        if (receiveTimeoutBuilder_ == null) {
          if (receiveTimeout_ != null) {
            receiveTimeout_ =
              com.google.protobuf.Int64Value.newBuilder(receiveTimeout_).mergeFrom(value).buildPartial();
          } else {
            receiveTimeout_ = value;
          }
          onChanged();
        } else {
          receiveTimeoutBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Receive timeout in milliseconds.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#connect-timeout-receive-timeout-send-timeout).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value receive_timeout = 40 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public Builder clearReceiveTimeout() {
        if (receiveTimeoutBuilder_ == null) {
          receiveTimeout_ = null;
          onChanged();
        } else {
          receiveTimeout_ = null;
          receiveTimeoutBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Receive timeout in milliseconds.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#connect-timeout-receive-timeout-send-timeout).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value receive_timeout = 40 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public com.google.protobuf.Int64Value.Builder getReceiveTimeoutBuilder() {
        
        onChanged();
        return getReceiveTimeoutFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Receive timeout in milliseconds.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#connect-timeout-receive-timeout-send-timeout).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value receive_timeout = 40 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getReceiveTimeoutOrBuilder() {
        if (receiveTimeoutBuilder_ != null) {
          return receiveTimeoutBuilder_.getMessageOrBuilder();
        } else {
          return receiveTimeout_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : receiveTimeout_;
        }
      }
      /**
       * <pre>
       * Receive timeout in milliseconds.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#connect-timeout-receive-timeout-send-timeout).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value receive_timeout = 40 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getReceiveTimeoutFieldBuilder() {
        if (receiveTimeoutBuilder_ == null) {
          receiveTimeoutBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getReceiveTimeout(),
                  getParentForChildren(),
                  isClean());
          receiveTimeout_ = null;
        }
        return receiveTimeoutBuilder_;
      }

      private com.google.protobuf.Int64Value sendTimeout_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> sendTimeoutBuilder_;
      /**
       * <pre>
       * Send timeout in milliseconds.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#connect-timeout-receive-timeout-send-timeout).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value send_timeout = 41 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public boolean hasSendTimeout() {
        return sendTimeoutBuilder_ != null || sendTimeout_ != null;
      }
      /**
       * <pre>
       * Send timeout in milliseconds.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#connect-timeout-receive-timeout-send-timeout).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value send_timeout = 41 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public com.google.protobuf.Int64Value getSendTimeout() {
        if (sendTimeoutBuilder_ == null) {
          return sendTimeout_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : sendTimeout_;
        } else {
          return sendTimeoutBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Send timeout in milliseconds.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#connect-timeout-receive-timeout-send-timeout).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value send_timeout = 41 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public Builder setSendTimeout(com.google.protobuf.Int64Value value) {
        if (sendTimeoutBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          sendTimeout_ = value;
          onChanged();
        } else {
          sendTimeoutBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Send timeout in milliseconds.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#connect-timeout-receive-timeout-send-timeout).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value send_timeout = 41 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public Builder setSendTimeout(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (sendTimeoutBuilder_ == null) {
          sendTimeout_ = builderForValue.build();
          onChanged();
        } else {
          sendTimeoutBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Send timeout in milliseconds.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#connect-timeout-receive-timeout-send-timeout).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value send_timeout = 41 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public Builder mergeSendTimeout(com.google.protobuf.Int64Value value) {
        if (sendTimeoutBuilder_ == null) {
          if (sendTimeout_ != null) {
            sendTimeout_ =
              com.google.protobuf.Int64Value.newBuilder(sendTimeout_).mergeFrom(value).buildPartial();
          } else {
            sendTimeout_ = value;
          }
          onChanged();
        } else {
          sendTimeoutBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Send timeout in milliseconds.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#connect-timeout-receive-timeout-send-timeout).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value send_timeout = 41 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public Builder clearSendTimeout() {
        if (sendTimeoutBuilder_ == null) {
          sendTimeout_ = null;
          onChanged();
        } else {
          sendTimeout_ = null;
          sendTimeoutBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Send timeout in milliseconds.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#connect-timeout-receive-timeout-send-timeout).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value send_timeout = 41 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public com.google.protobuf.Int64Value.Builder getSendTimeoutBuilder() {
        
        onChanged();
        return getSendTimeoutFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Send timeout in milliseconds.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#connect-timeout-receive-timeout-send-timeout).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value send_timeout = 41 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getSendTimeoutOrBuilder() {
        if (sendTimeoutBuilder_ != null) {
          return sendTimeoutBuilder_.getMessageOrBuilder();
        } else {
          return sendTimeout_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : sendTimeout_;
        }
      }
      /**
       * <pre>
       * Send timeout in milliseconds.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#connect-timeout-receive-timeout-send-timeout).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value send_timeout = 41 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getSendTimeoutFieldBuilder() {
        if (sendTimeoutBuilder_ == null) {
          sendTimeoutBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getSendTimeout(),
                  getParentForChildren(),
                  isClean());
          sendTimeout_ = null;
        }
        return sendTimeoutBuilder_;
      }

      private com.google.protobuf.Int64Value insertQuorumTimeout_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> insertQuorumTimeoutBuilder_;
      /**
       * <pre>
       * Quorum write timeout in milliseconds. Default value: 60000.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-insert_quorum_timeout).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value insert_quorum_timeout = 4 [(.yandex.cloud.value) = "&gt;=1000"];</code>
       */
      public boolean hasInsertQuorumTimeout() {
        return insertQuorumTimeoutBuilder_ != null || insertQuorumTimeout_ != null;
      }
      /**
       * <pre>
       * Quorum write timeout in milliseconds. Default value: 60000.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-insert_quorum_timeout).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value insert_quorum_timeout = 4 [(.yandex.cloud.value) = "&gt;=1000"];</code>
       */
      public com.google.protobuf.Int64Value getInsertQuorumTimeout() {
        if (insertQuorumTimeoutBuilder_ == null) {
          return insertQuorumTimeout_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : insertQuorumTimeout_;
        } else {
          return insertQuorumTimeoutBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Quorum write timeout in milliseconds. Default value: 60000.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-insert_quorum_timeout).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value insert_quorum_timeout = 4 [(.yandex.cloud.value) = "&gt;=1000"];</code>
       */
      public Builder setInsertQuorumTimeout(com.google.protobuf.Int64Value value) {
        if (insertQuorumTimeoutBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          insertQuorumTimeout_ = value;
          onChanged();
        } else {
          insertQuorumTimeoutBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Quorum write timeout in milliseconds. Default value: 60000.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-insert_quorum_timeout).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value insert_quorum_timeout = 4 [(.yandex.cloud.value) = "&gt;=1000"];</code>
       */
      public Builder setInsertQuorumTimeout(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (insertQuorumTimeoutBuilder_ == null) {
          insertQuorumTimeout_ = builderForValue.build();
          onChanged();
        } else {
          insertQuorumTimeoutBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Quorum write timeout in milliseconds. Default value: 60000.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-insert_quorum_timeout).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value insert_quorum_timeout = 4 [(.yandex.cloud.value) = "&gt;=1000"];</code>
       */
      public Builder mergeInsertQuorumTimeout(com.google.protobuf.Int64Value value) {
        if (insertQuorumTimeoutBuilder_ == null) {
          if (insertQuorumTimeout_ != null) {
            insertQuorumTimeout_ =
              com.google.protobuf.Int64Value.newBuilder(insertQuorumTimeout_).mergeFrom(value).buildPartial();
          } else {
            insertQuorumTimeout_ = value;
          }
          onChanged();
        } else {
          insertQuorumTimeoutBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Quorum write timeout in milliseconds. Default value: 60000.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-insert_quorum_timeout).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value insert_quorum_timeout = 4 [(.yandex.cloud.value) = "&gt;=1000"];</code>
       */
      public Builder clearInsertQuorumTimeout() {
        if (insertQuorumTimeoutBuilder_ == null) {
          insertQuorumTimeout_ = null;
          onChanged();
        } else {
          insertQuorumTimeout_ = null;
          insertQuorumTimeoutBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Quorum write timeout in milliseconds. Default value: 60000.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-insert_quorum_timeout).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value insert_quorum_timeout = 4 [(.yandex.cloud.value) = "&gt;=1000"];</code>
       */
      public com.google.protobuf.Int64Value.Builder getInsertQuorumTimeoutBuilder() {
        
        onChanged();
        return getInsertQuorumTimeoutFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Quorum write timeout in milliseconds. Default value: 60000.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-insert_quorum_timeout).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value insert_quorum_timeout = 4 [(.yandex.cloud.value) = "&gt;=1000"];</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getInsertQuorumTimeoutOrBuilder() {
        if (insertQuorumTimeoutBuilder_ != null) {
          return insertQuorumTimeoutBuilder_.getMessageOrBuilder();
        } else {
          return insertQuorumTimeout_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : insertQuorumTimeout_;
        }
      }
      /**
       * <pre>
       * Quorum write timeout in milliseconds. Default value: 60000.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-insert_quorum_timeout).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value insert_quorum_timeout = 4 [(.yandex.cloud.value) = "&gt;=1000"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getInsertQuorumTimeoutFieldBuilder() {
        if (insertQuorumTimeoutBuilder_ == null) {
          insertQuorumTimeoutBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getInsertQuorumTimeout(),
                  getParentForChildren(),
                  isClean());
          insertQuorumTimeout_ = null;
        }
        return insertQuorumTimeoutBuilder_;
      }

      private com.google.protobuf.BoolValue selectSequentialConsistency_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> selectSequentialConsistencyBuilder_;
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-select_sequential_consistency).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue select_sequential_consistency = 5;</code>
       */
      public boolean hasSelectSequentialConsistency() {
        return selectSequentialConsistencyBuilder_ != null || selectSequentialConsistency_ != null;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-select_sequential_consistency).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue select_sequential_consistency = 5;</code>
       */
      public com.google.protobuf.BoolValue getSelectSequentialConsistency() {
        if (selectSequentialConsistencyBuilder_ == null) {
          return selectSequentialConsistency_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : selectSequentialConsistency_;
        } else {
          return selectSequentialConsistencyBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-select_sequential_consistency).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue select_sequential_consistency = 5;</code>
       */
      public Builder setSelectSequentialConsistency(com.google.protobuf.BoolValue value) {
        if (selectSequentialConsistencyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          selectSequentialConsistency_ = value;
          onChanged();
        } else {
          selectSequentialConsistencyBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-select_sequential_consistency).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue select_sequential_consistency = 5;</code>
       */
      public Builder setSelectSequentialConsistency(
          com.google.protobuf.BoolValue.Builder builderForValue) {
        if (selectSequentialConsistencyBuilder_ == null) {
          selectSequentialConsistency_ = builderForValue.build();
          onChanged();
        } else {
          selectSequentialConsistencyBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-select_sequential_consistency).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue select_sequential_consistency = 5;</code>
       */
      public Builder mergeSelectSequentialConsistency(com.google.protobuf.BoolValue value) {
        if (selectSequentialConsistencyBuilder_ == null) {
          if (selectSequentialConsistency_ != null) {
            selectSequentialConsistency_ =
              com.google.protobuf.BoolValue.newBuilder(selectSequentialConsistency_).mergeFrom(value).buildPartial();
          } else {
            selectSequentialConsistency_ = value;
          }
          onChanged();
        } else {
          selectSequentialConsistencyBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-select_sequential_consistency).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue select_sequential_consistency = 5;</code>
       */
      public Builder clearSelectSequentialConsistency() {
        if (selectSequentialConsistencyBuilder_ == null) {
          selectSequentialConsistency_ = null;
          onChanged();
        } else {
          selectSequentialConsistency_ = null;
          selectSequentialConsistencyBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-select_sequential_consistency).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue select_sequential_consistency = 5;</code>
       */
      public com.google.protobuf.BoolValue.Builder getSelectSequentialConsistencyBuilder() {
        
        onChanged();
        return getSelectSequentialConsistencyFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-select_sequential_consistency).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue select_sequential_consistency = 5;</code>
       */
      public com.google.protobuf.BoolValueOrBuilder getSelectSequentialConsistencyOrBuilder() {
        if (selectSequentialConsistencyBuilder_ != null) {
          return selectSequentialConsistencyBuilder_.getMessageOrBuilder();
        } else {
          return selectSequentialConsistency_ == null ?
              com.google.protobuf.BoolValue.getDefaultInstance() : selectSequentialConsistency_;
        }
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-select_sequential_consistency).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue select_sequential_consistency = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> 
          getSelectSequentialConsistencyFieldBuilder() {
        if (selectSequentialConsistencyBuilder_ == null) {
          selectSequentialConsistencyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder>(
                  getSelectSequentialConsistency(),
                  getParentForChildren(),
                  isClean());
          selectSequentialConsistency_ = null;
        }
        return selectSequentialConsistencyBuilder_;
      }

      private com.google.protobuf.Int64Value maxReplicaDelayForDistributedQueries_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> maxReplicaDelayForDistributedQueriesBuilder_;
      /**
       * <pre>
       * Max replica delay in milliseconds. If a replica lags more than the set value, this replica is not used. Default value: 300000.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_replica_delay_for_distributed_queries).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_replica_delay_for_distributed_queries = 6 [(.yandex.cloud.value) = "&gt;=1000"];</code>
       */
      public boolean hasMaxReplicaDelayForDistributedQueries() {
        return maxReplicaDelayForDistributedQueriesBuilder_ != null || maxReplicaDelayForDistributedQueries_ != null;
      }
      /**
       * <pre>
       * Max replica delay in milliseconds. If a replica lags more than the set value, this replica is not used. Default value: 300000.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_replica_delay_for_distributed_queries).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_replica_delay_for_distributed_queries = 6 [(.yandex.cloud.value) = "&gt;=1000"];</code>
       */
      public com.google.protobuf.Int64Value getMaxReplicaDelayForDistributedQueries() {
        if (maxReplicaDelayForDistributedQueriesBuilder_ == null) {
          return maxReplicaDelayForDistributedQueries_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : maxReplicaDelayForDistributedQueries_;
        } else {
          return maxReplicaDelayForDistributedQueriesBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Max replica delay in milliseconds. If a replica lags more than the set value, this replica is not used. Default value: 300000.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_replica_delay_for_distributed_queries).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_replica_delay_for_distributed_queries = 6 [(.yandex.cloud.value) = "&gt;=1000"];</code>
       */
      public Builder setMaxReplicaDelayForDistributedQueries(com.google.protobuf.Int64Value value) {
        if (maxReplicaDelayForDistributedQueriesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          maxReplicaDelayForDistributedQueries_ = value;
          onChanged();
        } else {
          maxReplicaDelayForDistributedQueriesBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Max replica delay in milliseconds. If a replica lags more than the set value, this replica is not used. Default value: 300000.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_replica_delay_for_distributed_queries).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_replica_delay_for_distributed_queries = 6 [(.yandex.cloud.value) = "&gt;=1000"];</code>
       */
      public Builder setMaxReplicaDelayForDistributedQueries(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (maxReplicaDelayForDistributedQueriesBuilder_ == null) {
          maxReplicaDelayForDistributedQueries_ = builderForValue.build();
          onChanged();
        } else {
          maxReplicaDelayForDistributedQueriesBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Max replica delay in milliseconds. If a replica lags more than the set value, this replica is not used. Default value: 300000.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_replica_delay_for_distributed_queries).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_replica_delay_for_distributed_queries = 6 [(.yandex.cloud.value) = "&gt;=1000"];</code>
       */
      public Builder mergeMaxReplicaDelayForDistributedQueries(com.google.protobuf.Int64Value value) {
        if (maxReplicaDelayForDistributedQueriesBuilder_ == null) {
          if (maxReplicaDelayForDistributedQueries_ != null) {
            maxReplicaDelayForDistributedQueries_ =
              com.google.protobuf.Int64Value.newBuilder(maxReplicaDelayForDistributedQueries_).mergeFrom(value).buildPartial();
          } else {
            maxReplicaDelayForDistributedQueries_ = value;
          }
          onChanged();
        } else {
          maxReplicaDelayForDistributedQueriesBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Max replica delay in milliseconds. If a replica lags more than the set value, this replica is not used. Default value: 300000.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_replica_delay_for_distributed_queries).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_replica_delay_for_distributed_queries = 6 [(.yandex.cloud.value) = "&gt;=1000"];</code>
       */
      public Builder clearMaxReplicaDelayForDistributedQueries() {
        if (maxReplicaDelayForDistributedQueriesBuilder_ == null) {
          maxReplicaDelayForDistributedQueries_ = null;
          onChanged();
        } else {
          maxReplicaDelayForDistributedQueries_ = null;
          maxReplicaDelayForDistributedQueriesBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Max replica delay in milliseconds. If a replica lags more than the set value, this replica is not used. Default value: 300000.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_replica_delay_for_distributed_queries).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_replica_delay_for_distributed_queries = 6 [(.yandex.cloud.value) = "&gt;=1000"];</code>
       */
      public com.google.protobuf.Int64Value.Builder getMaxReplicaDelayForDistributedQueriesBuilder() {
        
        onChanged();
        return getMaxReplicaDelayForDistributedQueriesFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Max replica delay in milliseconds. If a replica lags more than the set value, this replica is not used. Default value: 300000.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_replica_delay_for_distributed_queries).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_replica_delay_for_distributed_queries = 6 [(.yandex.cloud.value) = "&gt;=1000"];</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getMaxReplicaDelayForDistributedQueriesOrBuilder() {
        if (maxReplicaDelayForDistributedQueriesBuilder_ != null) {
          return maxReplicaDelayForDistributedQueriesBuilder_.getMessageOrBuilder();
        } else {
          return maxReplicaDelayForDistributedQueries_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : maxReplicaDelayForDistributedQueries_;
        }
      }
      /**
       * <pre>
       * Max replica delay in milliseconds. If a replica lags more than the set value, this replica is not used. Default value: 300000.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_replica_delay_for_distributed_queries).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_replica_delay_for_distributed_queries = 6 [(.yandex.cloud.value) = "&gt;=1000"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getMaxReplicaDelayForDistributedQueriesFieldBuilder() {
        if (maxReplicaDelayForDistributedQueriesBuilder_ == null) {
          maxReplicaDelayForDistributedQueriesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getMaxReplicaDelayForDistributedQueries(),
                  getParentForChildren(),
                  isClean());
          maxReplicaDelayForDistributedQueries_ = null;
        }
        return maxReplicaDelayForDistributedQueriesBuilder_;
      }

      private com.google.protobuf.BoolValue fallbackToStaleReplicasForDistributedQueries_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> fallbackToStaleReplicasForDistributedQueriesBuilder_;
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-fallback_to_stale_replicas_for_distributed_queries).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue fallback_to_stale_replicas_for_distributed_queries = 7;</code>
       */
      public boolean hasFallbackToStaleReplicasForDistributedQueries() {
        return fallbackToStaleReplicasForDistributedQueriesBuilder_ != null || fallbackToStaleReplicasForDistributedQueries_ != null;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-fallback_to_stale_replicas_for_distributed_queries).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue fallback_to_stale_replicas_for_distributed_queries = 7;</code>
       */
      public com.google.protobuf.BoolValue getFallbackToStaleReplicasForDistributedQueries() {
        if (fallbackToStaleReplicasForDistributedQueriesBuilder_ == null) {
          return fallbackToStaleReplicasForDistributedQueries_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : fallbackToStaleReplicasForDistributedQueries_;
        } else {
          return fallbackToStaleReplicasForDistributedQueriesBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-fallback_to_stale_replicas_for_distributed_queries).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue fallback_to_stale_replicas_for_distributed_queries = 7;</code>
       */
      public Builder setFallbackToStaleReplicasForDistributedQueries(com.google.protobuf.BoolValue value) {
        if (fallbackToStaleReplicasForDistributedQueriesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          fallbackToStaleReplicasForDistributedQueries_ = value;
          onChanged();
        } else {
          fallbackToStaleReplicasForDistributedQueriesBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-fallback_to_stale_replicas_for_distributed_queries).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue fallback_to_stale_replicas_for_distributed_queries = 7;</code>
       */
      public Builder setFallbackToStaleReplicasForDistributedQueries(
          com.google.protobuf.BoolValue.Builder builderForValue) {
        if (fallbackToStaleReplicasForDistributedQueriesBuilder_ == null) {
          fallbackToStaleReplicasForDistributedQueries_ = builderForValue.build();
          onChanged();
        } else {
          fallbackToStaleReplicasForDistributedQueriesBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-fallback_to_stale_replicas_for_distributed_queries).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue fallback_to_stale_replicas_for_distributed_queries = 7;</code>
       */
      public Builder mergeFallbackToStaleReplicasForDistributedQueries(com.google.protobuf.BoolValue value) {
        if (fallbackToStaleReplicasForDistributedQueriesBuilder_ == null) {
          if (fallbackToStaleReplicasForDistributedQueries_ != null) {
            fallbackToStaleReplicasForDistributedQueries_ =
              com.google.protobuf.BoolValue.newBuilder(fallbackToStaleReplicasForDistributedQueries_).mergeFrom(value).buildPartial();
          } else {
            fallbackToStaleReplicasForDistributedQueries_ = value;
          }
          onChanged();
        } else {
          fallbackToStaleReplicasForDistributedQueriesBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-fallback_to_stale_replicas_for_distributed_queries).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue fallback_to_stale_replicas_for_distributed_queries = 7;</code>
       */
      public Builder clearFallbackToStaleReplicasForDistributedQueries() {
        if (fallbackToStaleReplicasForDistributedQueriesBuilder_ == null) {
          fallbackToStaleReplicasForDistributedQueries_ = null;
          onChanged();
        } else {
          fallbackToStaleReplicasForDistributedQueries_ = null;
          fallbackToStaleReplicasForDistributedQueriesBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-fallback_to_stale_replicas_for_distributed_queries).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue fallback_to_stale_replicas_for_distributed_queries = 7;</code>
       */
      public com.google.protobuf.BoolValue.Builder getFallbackToStaleReplicasForDistributedQueriesBuilder() {
        
        onChanged();
        return getFallbackToStaleReplicasForDistributedQueriesFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-fallback_to_stale_replicas_for_distributed_queries).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue fallback_to_stale_replicas_for_distributed_queries = 7;</code>
       */
      public com.google.protobuf.BoolValueOrBuilder getFallbackToStaleReplicasForDistributedQueriesOrBuilder() {
        if (fallbackToStaleReplicasForDistributedQueriesBuilder_ != null) {
          return fallbackToStaleReplicasForDistributedQueriesBuilder_.getMessageOrBuilder();
        } else {
          return fallbackToStaleReplicasForDistributedQueries_ == null ?
              com.google.protobuf.BoolValue.getDefaultInstance() : fallbackToStaleReplicasForDistributedQueries_;
        }
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-fallback_to_stale_replicas_for_distributed_queries).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue fallback_to_stale_replicas_for_distributed_queries = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> 
          getFallbackToStaleReplicasForDistributedQueriesFieldBuilder() {
        if (fallbackToStaleReplicasForDistributedQueriesBuilder_ == null) {
          fallbackToStaleReplicasForDistributedQueriesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder>(
                  getFallbackToStaleReplicasForDistributedQueries(),
                  getParentForChildren(),
                  isClean());
          fallbackToStaleReplicasForDistributedQueries_ = null;
        }
        return fallbackToStaleReplicasForDistributedQueriesBuilder_;
      }

      private com.google.protobuf.Int64Value replicationAlterPartitionsSync_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> replicationAlterPartitionsSyncBuilder_;
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/query_language/alter/#synchronicity-of-alter-queries).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value replication_alter_partitions_sync = 42 [(.yandex.cloud.value) = "0-2"];</code>
       */
      public boolean hasReplicationAlterPartitionsSync() {
        return replicationAlterPartitionsSyncBuilder_ != null || replicationAlterPartitionsSync_ != null;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/query_language/alter/#synchronicity-of-alter-queries).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value replication_alter_partitions_sync = 42 [(.yandex.cloud.value) = "0-2"];</code>
       */
      public com.google.protobuf.Int64Value getReplicationAlterPartitionsSync() {
        if (replicationAlterPartitionsSyncBuilder_ == null) {
          return replicationAlterPartitionsSync_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : replicationAlterPartitionsSync_;
        } else {
          return replicationAlterPartitionsSyncBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/query_language/alter/#synchronicity-of-alter-queries).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value replication_alter_partitions_sync = 42 [(.yandex.cloud.value) = "0-2"];</code>
       */
      public Builder setReplicationAlterPartitionsSync(com.google.protobuf.Int64Value value) {
        if (replicationAlterPartitionsSyncBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          replicationAlterPartitionsSync_ = value;
          onChanged();
        } else {
          replicationAlterPartitionsSyncBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/query_language/alter/#synchronicity-of-alter-queries).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value replication_alter_partitions_sync = 42 [(.yandex.cloud.value) = "0-2"];</code>
       */
      public Builder setReplicationAlterPartitionsSync(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (replicationAlterPartitionsSyncBuilder_ == null) {
          replicationAlterPartitionsSync_ = builderForValue.build();
          onChanged();
        } else {
          replicationAlterPartitionsSyncBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/query_language/alter/#synchronicity-of-alter-queries).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value replication_alter_partitions_sync = 42 [(.yandex.cloud.value) = "0-2"];</code>
       */
      public Builder mergeReplicationAlterPartitionsSync(com.google.protobuf.Int64Value value) {
        if (replicationAlterPartitionsSyncBuilder_ == null) {
          if (replicationAlterPartitionsSync_ != null) {
            replicationAlterPartitionsSync_ =
              com.google.protobuf.Int64Value.newBuilder(replicationAlterPartitionsSync_).mergeFrom(value).buildPartial();
          } else {
            replicationAlterPartitionsSync_ = value;
          }
          onChanged();
        } else {
          replicationAlterPartitionsSyncBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/query_language/alter/#synchronicity-of-alter-queries).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value replication_alter_partitions_sync = 42 [(.yandex.cloud.value) = "0-2"];</code>
       */
      public Builder clearReplicationAlterPartitionsSync() {
        if (replicationAlterPartitionsSyncBuilder_ == null) {
          replicationAlterPartitionsSync_ = null;
          onChanged();
        } else {
          replicationAlterPartitionsSync_ = null;
          replicationAlterPartitionsSyncBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/query_language/alter/#synchronicity-of-alter-queries).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value replication_alter_partitions_sync = 42 [(.yandex.cloud.value) = "0-2"];</code>
       */
      public com.google.protobuf.Int64Value.Builder getReplicationAlterPartitionsSyncBuilder() {
        
        onChanged();
        return getReplicationAlterPartitionsSyncFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/query_language/alter/#synchronicity-of-alter-queries).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value replication_alter_partitions_sync = 42 [(.yandex.cloud.value) = "0-2"];</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getReplicationAlterPartitionsSyncOrBuilder() {
        if (replicationAlterPartitionsSyncBuilder_ != null) {
          return replicationAlterPartitionsSyncBuilder_.getMessageOrBuilder();
        } else {
          return replicationAlterPartitionsSync_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : replicationAlterPartitionsSync_;
        }
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/query_language/alter/#synchronicity-of-alter-queries).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value replication_alter_partitions_sync = 42 [(.yandex.cloud.value) = "0-2"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getReplicationAlterPartitionsSyncFieldBuilder() {
        if (replicationAlterPartitionsSyncBuilder_ == null) {
          replicationAlterPartitionsSyncBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getReplicationAlterPartitionsSync(),
                  getParentForChildren(),
                  isClean());
          replicationAlterPartitionsSync_ = null;
        }
        return replicationAlterPartitionsSyncBuilder_;
      }

      private int distributedProductMode_ = 0;
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#distributed-product-mode).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.UserSettings.DistributedProductMode distributed_product_mode = 43;</code>
       */
      public int getDistributedProductModeValue() {
        return distributedProductMode_;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#distributed-product-mode).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.UserSettings.DistributedProductMode distributed_product_mode = 43;</code>
       */
      public Builder setDistributedProductModeValue(int value) {
        distributedProductMode_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#distributed-product-mode).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.UserSettings.DistributedProductMode distributed_product_mode = 43;</code>
       */
      public yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.DistributedProductMode getDistributedProductMode() {
        @SuppressWarnings("deprecation")
        yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.DistributedProductMode result = yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.DistributedProductMode.valueOf(distributedProductMode_);
        return result == null ? yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.DistributedProductMode.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#distributed-product-mode).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.UserSettings.DistributedProductMode distributed_product_mode = 43;</code>
       */
      public Builder setDistributedProductMode(yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.DistributedProductMode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        distributedProductMode_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#distributed-product-mode).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.UserSettings.DistributedProductMode distributed_product_mode = 43;</code>
       */
      public Builder clearDistributedProductMode() {
        
        distributedProductMode_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.BoolValue distributedAggregationMemoryEfficient_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> distributedAggregationMemoryEfficientBuilder_;
      /**
       * <pre>
       * Whether the memory-saving mode of distributed aggregation is enabled.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue distributed_aggregation_memory_efficient = 72;</code>
       */
      public boolean hasDistributedAggregationMemoryEfficient() {
        return distributedAggregationMemoryEfficientBuilder_ != null || distributedAggregationMemoryEfficient_ != null;
      }
      /**
       * <pre>
       * Whether the memory-saving mode of distributed aggregation is enabled.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue distributed_aggregation_memory_efficient = 72;</code>
       */
      public com.google.protobuf.BoolValue getDistributedAggregationMemoryEfficient() {
        if (distributedAggregationMemoryEfficientBuilder_ == null) {
          return distributedAggregationMemoryEfficient_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : distributedAggregationMemoryEfficient_;
        } else {
          return distributedAggregationMemoryEfficientBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Whether the memory-saving mode of distributed aggregation is enabled.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue distributed_aggregation_memory_efficient = 72;</code>
       */
      public Builder setDistributedAggregationMemoryEfficient(com.google.protobuf.BoolValue value) {
        if (distributedAggregationMemoryEfficientBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          distributedAggregationMemoryEfficient_ = value;
          onChanged();
        } else {
          distributedAggregationMemoryEfficientBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Whether the memory-saving mode of distributed aggregation is enabled.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue distributed_aggregation_memory_efficient = 72;</code>
       */
      public Builder setDistributedAggregationMemoryEfficient(
          com.google.protobuf.BoolValue.Builder builderForValue) {
        if (distributedAggregationMemoryEfficientBuilder_ == null) {
          distributedAggregationMemoryEfficient_ = builderForValue.build();
          onChanged();
        } else {
          distributedAggregationMemoryEfficientBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Whether the memory-saving mode of distributed aggregation is enabled.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue distributed_aggregation_memory_efficient = 72;</code>
       */
      public Builder mergeDistributedAggregationMemoryEfficient(com.google.protobuf.BoolValue value) {
        if (distributedAggregationMemoryEfficientBuilder_ == null) {
          if (distributedAggregationMemoryEfficient_ != null) {
            distributedAggregationMemoryEfficient_ =
              com.google.protobuf.BoolValue.newBuilder(distributedAggregationMemoryEfficient_).mergeFrom(value).buildPartial();
          } else {
            distributedAggregationMemoryEfficient_ = value;
          }
          onChanged();
        } else {
          distributedAggregationMemoryEfficientBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Whether the memory-saving mode of distributed aggregation is enabled.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue distributed_aggregation_memory_efficient = 72;</code>
       */
      public Builder clearDistributedAggregationMemoryEfficient() {
        if (distributedAggregationMemoryEfficientBuilder_ == null) {
          distributedAggregationMemoryEfficient_ = null;
          onChanged();
        } else {
          distributedAggregationMemoryEfficient_ = null;
          distributedAggregationMemoryEfficientBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Whether the memory-saving mode of distributed aggregation is enabled.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue distributed_aggregation_memory_efficient = 72;</code>
       */
      public com.google.protobuf.BoolValue.Builder getDistributedAggregationMemoryEfficientBuilder() {
        
        onChanged();
        return getDistributedAggregationMemoryEfficientFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Whether the memory-saving mode of distributed aggregation is enabled.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue distributed_aggregation_memory_efficient = 72;</code>
       */
      public com.google.protobuf.BoolValueOrBuilder getDistributedAggregationMemoryEfficientOrBuilder() {
        if (distributedAggregationMemoryEfficientBuilder_ != null) {
          return distributedAggregationMemoryEfficientBuilder_.getMessageOrBuilder();
        } else {
          return distributedAggregationMemoryEfficient_ == null ?
              com.google.protobuf.BoolValue.getDefaultInstance() : distributedAggregationMemoryEfficient_;
        }
      }
      /**
       * <pre>
       * Whether the memory-saving mode of distributed aggregation is enabled.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue distributed_aggregation_memory_efficient = 72;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> 
          getDistributedAggregationMemoryEfficientFieldBuilder() {
        if (distributedAggregationMemoryEfficientBuilder_ == null) {
          distributedAggregationMemoryEfficientBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder>(
                  getDistributedAggregationMemoryEfficient(),
                  getParentForChildren(),
                  isClean());
          distributedAggregationMemoryEfficient_ = null;
        }
        return distributedAggregationMemoryEfficientBuilder_;
      }

      private com.google.protobuf.Int64Value distributedDdlTaskTimeout_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> distributedDdlTaskTimeoutBuilder_;
      /**
       * <pre>
       * Timeout for DDL queries, in milliseconds.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value distributed_ddl_task_timeout = 73;</code>
       */
      public boolean hasDistributedDdlTaskTimeout() {
        return distributedDdlTaskTimeoutBuilder_ != null || distributedDdlTaskTimeout_ != null;
      }
      /**
       * <pre>
       * Timeout for DDL queries, in milliseconds.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value distributed_ddl_task_timeout = 73;</code>
       */
      public com.google.protobuf.Int64Value getDistributedDdlTaskTimeout() {
        if (distributedDdlTaskTimeoutBuilder_ == null) {
          return distributedDdlTaskTimeout_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : distributedDdlTaskTimeout_;
        } else {
          return distributedDdlTaskTimeoutBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Timeout for DDL queries, in milliseconds.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value distributed_ddl_task_timeout = 73;</code>
       */
      public Builder setDistributedDdlTaskTimeout(com.google.protobuf.Int64Value value) {
        if (distributedDdlTaskTimeoutBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          distributedDdlTaskTimeout_ = value;
          onChanged();
        } else {
          distributedDdlTaskTimeoutBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Timeout for DDL queries, in milliseconds.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value distributed_ddl_task_timeout = 73;</code>
       */
      public Builder setDistributedDdlTaskTimeout(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (distributedDdlTaskTimeoutBuilder_ == null) {
          distributedDdlTaskTimeout_ = builderForValue.build();
          onChanged();
        } else {
          distributedDdlTaskTimeoutBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Timeout for DDL queries, in milliseconds.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value distributed_ddl_task_timeout = 73;</code>
       */
      public Builder mergeDistributedDdlTaskTimeout(com.google.protobuf.Int64Value value) {
        if (distributedDdlTaskTimeoutBuilder_ == null) {
          if (distributedDdlTaskTimeout_ != null) {
            distributedDdlTaskTimeout_ =
              com.google.protobuf.Int64Value.newBuilder(distributedDdlTaskTimeout_).mergeFrom(value).buildPartial();
          } else {
            distributedDdlTaskTimeout_ = value;
          }
          onChanged();
        } else {
          distributedDdlTaskTimeoutBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Timeout for DDL queries, in milliseconds.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value distributed_ddl_task_timeout = 73;</code>
       */
      public Builder clearDistributedDdlTaskTimeout() {
        if (distributedDdlTaskTimeoutBuilder_ == null) {
          distributedDdlTaskTimeout_ = null;
          onChanged();
        } else {
          distributedDdlTaskTimeout_ = null;
          distributedDdlTaskTimeoutBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Timeout for DDL queries, in milliseconds.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value distributed_ddl_task_timeout = 73;</code>
       */
      public com.google.protobuf.Int64Value.Builder getDistributedDdlTaskTimeoutBuilder() {
        
        onChanged();
        return getDistributedDdlTaskTimeoutFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Timeout for DDL queries, in milliseconds.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value distributed_ddl_task_timeout = 73;</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getDistributedDdlTaskTimeoutOrBuilder() {
        if (distributedDdlTaskTimeoutBuilder_ != null) {
          return distributedDdlTaskTimeoutBuilder_.getMessageOrBuilder();
        } else {
          return distributedDdlTaskTimeout_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : distributedDdlTaskTimeout_;
        }
      }
      /**
       * <pre>
       * Timeout for DDL queries, in milliseconds.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value distributed_ddl_task_timeout = 73;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getDistributedDdlTaskTimeoutFieldBuilder() {
        if (distributedDdlTaskTimeoutBuilder_ == null) {
          distributedDdlTaskTimeoutBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getDistributedDdlTaskTimeout(),
                  getParentForChildren(),
                  isClean());
          distributedDdlTaskTimeout_ = null;
        }
        return distributedDdlTaskTimeoutBuilder_;
      }

      private com.google.protobuf.BoolValue compile_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> compileBuilder_;
      /**
       * <pre>
       * Whether query compilation is enabled.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#compile).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue compile = 44;</code>
       */
      public boolean hasCompile() {
        return compileBuilder_ != null || compile_ != null;
      }
      /**
       * <pre>
       * Whether query compilation is enabled.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#compile).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue compile = 44;</code>
       */
      public com.google.protobuf.BoolValue getCompile() {
        if (compileBuilder_ == null) {
          return compile_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : compile_;
        } else {
          return compileBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Whether query compilation is enabled.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#compile).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue compile = 44;</code>
       */
      public Builder setCompile(com.google.protobuf.BoolValue value) {
        if (compileBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          compile_ = value;
          onChanged();
        } else {
          compileBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Whether query compilation is enabled.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#compile).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue compile = 44;</code>
       */
      public Builder setCompile(
          com.google.protobuf.BoolValue.Builder builderForValue) {
        if (compileBuilder_ == null) {
          compile_ = builderForValue.build();
          onChanged();
        } else {
          compileBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Whether query compilation is enabled.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#compile).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue compile = 44;</code>
       */
      public Builder mergeCompile(com.google.protobuf.BoolValue value) {
        if (compileBuilder_ == null) {
          if (compile_ != null) {
            compile_ =
              com.google.protobuf.BoolValue.newBuilder(compile_).mergeFrom(value).buildPartial();
          } else {
            compile_ = value;
          }
          onChanged();
        } else {
          compileBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Whether query compilation is enabled.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#compile).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue compile = 44;</code>
       */
      public Builder clearCompile() {
        if (compileBuilder_ == null) {
          compile_ = null;
          onChanged();
        } else {
          compile_ = null;
          compileBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Whether query compilation is enabled.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#compile).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue compile = 44;</code>
       */
      public com.google.protobuf.BoolValue.Builder getCompileBuilder() {
        
        onChanged();
        return getCompileFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Whether query compilation is enabled.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#compile).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue compile = 44;</code>
       */
      public com.google.protobuf.BoolValueOrBuilder getCompileOrBuilder() {
        if (compileBuilder_ != null) {
          return compileBuilder_.getMessageOrBuilder();
        } else {
          return compile_ == null ?
              com.google.protobuf.BoolValue.getDefaultInstance() : compile_;
        }
      }
      /**
       * <pre>
       * Whether query compilation is enabled.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#compile).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue compile = 44;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> 
          getCompileFieldBuilder() {
        if (compileBuilder_ == null) {
          compileBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder>(
                  getCompile(),
                  getParentForChildren(),
                  isClean());
          compile_ = null;
        }
        return compileBuilder_;
      }

      private com.google.protobuf.Int64Value minCountToCompile_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> minCountToCompileBuilder_;
      /**
       * <pre>
       * The number of structurally identical queries before they are compiled.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#min-count-to-compile).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value min_count_to_compile = 45 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public boolean hasMinCountToCompile() {
        return minCountToCompileBuilder_ != null || minCountToCompile_ != null;
      }
      /**
       * <pre>
       * The number of structurally identical queries before they are compiled.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#min-count-to-compile).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value min_count_to_compile = 45 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64Value getMinCountToCompile() {
        if (minCountToCompileBuilder_ == null) {
          return minCountToCompile_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : minCountToCompile_;
        } else {
          return minCountToCompileBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The number of structurally identical queries before they are compiled.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#min-count-to-compile).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value min_count_to_compile = 45 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder setMinCountToCompile(com.google.protobuf.Int64Value value) {
        if (minCountToCompileBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          minCountToCompile_ = value;
          onChanged();
        } else {
          minCountToCompileBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The number of structurally identical queries before they are compiled.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#min-count-to-compile).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value min_count_to_compile = 45 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder setMinCountToCompile(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (minCountToCompileBuilder_ == null) {
          minCountToCompile_ = builderForValue.build();
          onChanged();
        } else {
          minCountToCompileBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The number of structurally identical queries before they are compiled.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#min-count-to-compile).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value min_count_to_compile = 45 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder mergeMinCountToCompile(com.google.protobuf.Int64Value value) {
        if (minCountToCompileBuilder_ == null) {
          if (minCountToCompile_ != null) {
            minCountToCompile_ =
              com.google.protobuf.Int64Value.newBuilder(minCountToCompile_).mergeFrom(value).buildPartial();
          } else {
            minCountToCompile_ = value;
          }
          onChanged();
        } else {
          minCountToCompileBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The number of structurally identical queries before they are compiled.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#min-count-to-compile).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value min_count_to_compile = 45 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder clearMinCountToCompile() {
        if (minCountToCompileBuilder_ == null) {
          minCountToCompile_ = null;
          onChanged();
        } else {
          minCountToCompile_ = null;
          minCountToCompileBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The number of structurally identical queries before they are compiled.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#min-count-to-compile).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value min_count_to_compile = 45 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64Value.Builder getMinCountToCompileBuilder() {
        
        onChanged();
        return getMinCountToCompileFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The number of structurally identical queries before they are compiled.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#min-count-to-compile).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value min_count_to_compile = 45 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getMinCountToCompileOrBuilder() {
        if (minCountToCompileBuilder_ != null) {
          return minCountToCompileBuilder_.getMessageOrBuilder();
        } else {
          return minCountToCompile_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : minCountToCompile_;
        }
      }
      /**
       * <pre>
       * The number of structurally identical queries before they are compiled.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#min-count-to-compile).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value min_count_to_compile = 45 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getMinCountToCompileFieldBuilder() {
        if (minCountToCompileBuilder_ == null) {
          minCountToCompileBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getMinCountToCompile(),
                  getParentForChildren(),
                  isClean());
          minCountToCompile_ = null;
        }
        return minCountToCompileBuilder_;
      }

      private com.google.protobuf.BoolValue compileExpressions_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> compileExpressionsBuilder_;
      /**
       * <pre>
       * Whether expression compilation is enabled.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue compile_expressions = 46;</code>
       */
      public boolean hasCompileExpressions() {
        return compileExpressionsBuilder_ != null || compileExpressions_ != null;
      }
      /**
       * <pre>
       * Whether expression compilation is enabled.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue compile_expressions = 46;</code>
       */
      public com.google.protobuf.BoolValue getCompileExpressions() {
        if (compileExpressionsBuilder_ == null) {
          return compileExpressions_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : compileExpressions_;
        } else {
          return compileExpressionsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Whether expression compilation is enabled.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue compile_expressions = 46;</code>
       */
      public Builder setCompileExpressions(com.google.protobuf.BoolValue value) {
        if (compileExpressionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          compileExpressions_ = value;
          onChanged();
        } else {
          compileExpressionsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Whether expression compilation is enabled.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue compile_expressions = 46;</code>
       */
      public Builder setCompileExpressions(
          com.google.protobuf.BoolValue.Builder builderForValue) {
        if (compileExpressionsBuilder_ == null) {
          compileExpressions_ = builderForValue.build();
          onChanged();
        } else {
          compileExpressionsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Whether expression compilation is enabled.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue compile_expressions = 46;</code>
       */
      public Builder mergeCompileExpressions(com.google.protobuf.BoolValue value) {
        if (compileExpressionsBuilder_ == null) {
          if (compileExpressions_ != null) {
            compileExpressions_ =
              com.google.protobuf.BoolValue.newBuilder(compileExpressions_).mergeFrom(value).buildPartial();
          } else {
            compileExpressions_ = value;
          }
          onChanged();
        } else {
          compileExpressionsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Whether expression compilation is enabled.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue compile_expressions = 46;</code>
       */
      public Builder clearCompileExpressions() {
        if (compileExpressionsBuilder_ == null) {
          compileExpressions_ = null;
          onChanged();
        } else {
          compileExpressions_ = null;
          compileExpressionsBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Whether expression compilation is enabled.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue compile_expressions = 46;</code>
       */
      public com.google.protobuf.BoolValue.Builder getCompileExpressionsBuilder() {
        
        onChanged();
        return getCompileExpressionsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Whether expression compilation is enabled.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue compile_expressions = 46;</code>
       */
      public com.google.protobuf.BoolValueOrBuilder getCompileExpressionsOrBuilder() {
        if (compileExpressionsBuilder_ != null) {
          return compileExpressionsBuilder_.getMessageOrBuilder();
        } else {
          return compileExpressions_ == null ?
              com.google.protobuf.BoolValue.getDefaultInstance() : compileExpressions_;
        }
      }
      /**
       * <pre>
       * Whether expression compilation is enabled.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue compile_expressions = 46;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> 
          getCompileExpressionsFieldBuilder() {
        if (compileExpressionsBuilder_ == null) {
          compileExpressionsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder>(
                  getCompileExpressions(),
                  getParentForChildren(),
                  isClean());
          compileExpressions_ = null;
        }
        return compileExpressionsBuilder_;
      }

      private com.google.protobuf.Int64Value minCountToCompileExpression_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> minCountToCompileExpressionBuilder_;
      /**
       * <pre>
       * The number of identical expressions before they are compiled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value min_count_to_compile_expression = 47 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public boolean hasMinCountToCompileExpression() {
        return minCountToCompileExpressionBuilder_ != null || minCountToCompileExpression_ != null;
      }
      /**
       * <pre>
       * The number of identical expressions before they are compiled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value min_count_to_compile_expression = 47 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64Value getMinCountToCompileExpression() {
        if (minCountToCompileExpressionBuilder_ == null) {
          return minCountToCompileExpression_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : minCountToCompileExpression_;
        } else {
          return minCountToCompileExpressionBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The number of identical expressions before they are compiled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value min_count_to_compile_expression = 47 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder setMinCountToCompileExpression(com.google.protobuf.Int64Value value) {
        if (minCountToCompileExpressionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          minCountToCompileExpression_ = value;
          onChanged();
        } else {
          minCountToCompileExpressionBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The number of identical expressions before they are compiled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value min_count_to_compile_expression = 47 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder setMinCountToCompileExpression(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (minCountToCompileExpressionBuilder_ == null) {
          minCountToCompileExpression_ = builderForValue.build();
          onChanged();
        } else {
          minCountToCompileExpressionBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The number of identical expressions before they are compiled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value min_count_to_compile_expression = 47 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder mergeMinCountToCompileExpression(com.google.protobuf.Int64Value value) {
        if (minCountToCompileExpressionBuilder_ == null) {
          if (minCountToCompileExpression_ != null) {
            minCountToCompileExpression_ =
              com.google.protobuf.Int64Value.newBuilder(minCountToCompileExpression_).mergeFrom(value).buildPartial();
          } else {
            minCountToCompileExpression_ = value;
          }
          onChanged();
        } else {
          minCountToCompileExpressionBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The number of identical expressions before they are compiled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value min_count_to_compile_expression = 47 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder clearMinCountToCompileExpression() {
        if (minCountToCompileExpressionBuilder_ == null) {
          minCountToCompileExpression_ = null;
          onChanged();
        } else {
          minCountToCompileExpression_ = null;
          minCountToCompileExpressionBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The number of identical expressions before they are compiled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value min_count_to_compile_expression = 47 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64Value.Builder getMinCountToCompileExpressionBuilder() {
        
        onChanged();
        return getMinCountToCompileExpressionFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The number of identical expressions before they are compiled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value min_count_to_compile_expression = 47 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getMinCountToCompileExpressionOrBuilder() {
        if (minCountToCompileExpressionBuilder_ != null) {
          return minCountToCompileExpressionBuilder_.getMessageOrBuilder();
        } else {
          return minCountToCompileExpression_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : minCountToCompileExpression_;
        }
      }
      /**
       * <pre>
       * The number of identical expressions before they are compiled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value min_count_to_compile_expression = 47 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getMinCountToCompileExpressionFieldBuilder() {
        if (minCountToCompileExpressionBuilder_ == null) {
          minCountToCompileExpressionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getMinCountToCompileExpression(),
                  getParentForChildren(),
                  isClean());
          minCountToCompileExpression_ = null;
        }
        return minCountToCompileExpressionBuilder_;
      }

      private com.google.protobuf.Int64Value maxBlockSize_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> maxBlockSizeBuilder_;
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#max-block-size).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_block_size = 9 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public boolean hasMaxBlockSize() {
        return maxBlockSizeBuilder_ != null || maxBlockSize_ != null;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#max-block-size).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_block_size = 9 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public com.google.protobuf.Int64Value getMaxBlockSize() {
        if (maxBlockSizeBuilder_ == null) {
          return maxBlockSize_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : maxBlockSize_;
        } else {
          return maxBlockSizeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#max-block-size).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_block_size = 9 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public Builder setMaxBlockSize(com.google.protobuf.Int64Value value) {
        if (maxBlockSizeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          maxBlockSize_ = value;
          onChanged();
        } else {
          maxBlockSizeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#max-block-size).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_block_size = 9 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public Builder setMaxBlockSize(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (maxBlockSizeBuilder_ == null) {
          maxBlockSize_ = builderForValue.build();
          onChanged();
        } else {
          maxBlockSizeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#max-block-size).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_block_size = 9 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public Builder mergeMaxBlockSize(com.google.protobuf.Int64Value value) {
        if (maxBlockSizeBuilder_ == null) {
          if (maxBlockSize_ != null) {
            maxBlockSize_ =
              com.google.protobuf.Int64Value.newBuilder(maxBlockSize_).mergeFrom(value).buildPartial();
          } else {
            maxBlockSize_ = value;
          }
          onChanged();
        } else {
          maxBlockSizeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#max-block-size).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_block_size = 9 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public Builder clearMaxBlockSize() {
        if (maxBlockSizeBuilder_ == null) {
          maxBlockSize_ = null;
          onChanged();
        } else {
          maxBlockSize_ = null;
          maxBlockSizeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#max-block-size).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_block_size = 9 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public com.google.protobuf.Int64Value.Builder getMaxBlockSizeBuilder() {
        
        onChanged();
        return getMaxBlockSizeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#max-block-size).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_block_size = 9 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getMaxBlockSizeOrBuilder() {
        if (maxBlockSizeBuilder_ != null) {
          return maxBlockSizeBuilder_.getMessageOrBuilder();
        } else {
          return maxBlockSize_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : maxBlockSize_;
        }
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#max-block-size).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_block_size = 9 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getMaxBlockSizeFieldBuilder() {
        if (maxBlockSizeBuilder_ == null) {
          maxBlockSizeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getMaxBlockSize(),
                  getParentForChildren(),
                  isClean());
          maxBlockSize_ = null;
        }
        return maxBlockSizeBuilder_;
      }

      private com.google.protobuf.Int64Value minInsertBlockSizeRows_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> minInsertBlockSizeRowsBuilder_;
      /**
       * <pre>
       * Squash blocks passed to INSERT query to specified size in rows, if blocks are not big enough. If set to `0`,
       * blocks will never be squashed.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value min_insert_block_size_rows = 48 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public boolean hasMinInsertBlockSizeRows() {
        return minInsertBlockSizeRowsBuilder_ != null || minInsertBlockSizeRows_ != null;
      }
      /**
       * <pre>
       * Squash blocks passed to INSERT query to specified size in rows, if blocks are not big enough. If set to `0`,
       * blocks will never be squashed.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value min_insert_block_size_rows = 48 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64Value getMinInsertBlockSizeRows() {
        if (minInsertBlockSizeRowsBuilder_ == null) {
          return minInsertBlockSizeRows_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : minInsertBlockSizeRows_;
        } else {
          return minInsertBlockSizeRowsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Squash blocks passed to INSERT query to specified size in rows, if blocks are not big enough. If set to `0`,
       * blocks will never be squashed.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value min_insert_block_size_rows = 48 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder setMinInsertBlockSizeRows(com.google.protobuf.Int64Value value) {
        if (minInsertBlockSizeRowsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          minInsertBlockSizeRows_ = value;
          onChanged();
        } else {
          minInsertBlockSizeRowsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Squash blocks passed to INSERT query to specified size in rows, if blocks are not big enough. If set to `0`,
       * blocks will never be squashed.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value min_insert_block_size_rows = 48 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder setMinInsertBlockSizeRows(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (minInsertBlockSizeRowsBuilder_ == null) {
          minInsertBlockSizeRows_ = builderForValue.build();
          onChanged();
        } else {
          minInsertBlockSizeRowsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Squash blocks passed to INSERT query to specified size in rows, if blocks are not big enough. If set to `0`,
       * blocks will never be squashed.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value min_insert_block_size_rows = 48 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder mergeMinInsertBlockSizeRows(com.google.protobuf.Int64Value value) {
        if (minInsertBlockSizeRowsBuilder_ == null) {
          if (minInsertBlockSizeRows_ != null) {
            minInsertBlockSizeRows_ =
              com.google.protobuf.Int64Value.newBuilder(minInsertBlockSizeRows_).mergeFrom(value).buildPartial();
          } else {
            minInsertBlockSizeRows_ = value;
          }
          onChanged();
        } else {
          minInsertBlockSizeRowsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Squash blocks passed to INSERT query to specified size in rows, if blocks are not big enough. If set to `0`,
       * blocks will never be squashed.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value min_insert_block_size_rows = 48 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder clearMinInsertBlockSizeRows() {
        if (minInsertBlockSizeRowsBuilder_ == null) {
          minInsertBlockSizeRows_ = null;
          onChanged();
        } else {
          minInsertBlockSizeRows_ = null;
          minInsertBlockSizeRowsBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Squash blocks passed to INSERT query to specified size in rows, if blocks are not big enough. If set to `0`,
       * blocks will never be squashed.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value min_insert_block_size_rows = 48 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64Value.Builder getMinInsertBlockSizeRowsBuilder() {
        
        onChanged();
        return getMinInsertBlockSizeRowsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Squash blocks passed to INSERT query to specified size in rows, if blocks are not big enough. If set to `0`,
       * blocks will never be squashed.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value min_insert_block_size_rows = 48 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getMinInsertBlockSizeRowsOrBuilder() {
        if (minInsertBlockSizeRowsBuilder_ != null) {
          return minInsertBlockSizeRowsBuilder_.getMessageOrBuilder();
        } else {
          return minInsertBlockSizeRows_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : minInsertBlockSizeRows_;
        }
      }
      /**
       * <pre>
       * Squash blocks passed to INSERT query to specified size in rows, if blocks are not big enough. If set to `0`,
       * blocks will never be squashed.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value min_insert_block_size_rows = 48 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getMinInsertBlockSizeRowsFieldBuilder() {
        if (minInsertBlockSizeRowsBuilder_ == null) {
          minInsertBlockSizeRowsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getMinInsertBlockSizeRows(),
                  getParentForChildren(),
                  isClean());
          minInsertBlockSizeRows_ = null;
        }
        return minInsertBlockSizeRowsBuilder_;
      }

      private com.google.protobuf.Int64Value minInsertBlockSizeBytes_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> minInsertBlockSizeBytesBuilder_;
      /**
       * <pre>
       * Squash blocks passed to INSERT query to specified size in bytes, if blocks are not big enough.  If set to `0`,
       * blocks will never be squashed.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value min_insert_block_size_bytes = 49 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public boolean hasMinInsertBlockSizeBytes() {
        return minInsertBlockSizeBytesBuilder_ != null || minInsertBlockSizeBytes_ != null;
      }
      /**
       * <pre>
       * Squash blocks passed to INSERT query to specified size in bytes, if blocks are not big enough.  If set to `0`,
       * blocks will never be squashed.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value min_insert_block_size_bytes = 49 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64Value getMinInsertBlockSizeBytes() {
        if (minInsertBlockSizeBytesBuilder_ == null) {
          return minInsertBlockSizeBytes_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : minInsertBlockSizeBytes_;
        } else {
          return minInsertBlockSizeBytesBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Squash blocks passed to INSERT query to specified size in bytes, if blocks are not big enough.  If set to `0`,
       * blocks will never be squashed.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value min_insert_block_size_bytes = 49 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder setMinInsertBlockSizeBytes(com.google.protobuf.Int64Value value) {
        if (minInsertBlockSizeBytesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          minInsertBlockSizeBytes_ = value;
          onChanged();
        } else {
          minInsertBlockSizeBytesBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Squash blocks passed to INSERT query to specified size in bytes, if blocks are not big enough.  If set to `0`,
       * blocks will never be squashed.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value min_insert_block_size_bytes = 49 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder setMinInsertBlockSizeBytes(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (minInsertBlockSizeBytesBuilder_ == null) {
          minInsertBlockSizeBytes_ = builderForValue.build();
          onChanged();
        } else {
          minInsertBlockSizeBytesBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Squash blocks passed to INSERT query to specified size in bytes, if blocks are not big enough.  If set to `0`,
       * blocks will never be squashed.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value min_insert_block_size_bytes = 49 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder mergeMinInsertBlockSizeBytes(com.google.protobuf.Int64Value value) {
        if (minInsertBlockSizeBytesBuilder_ == null) {
          if (minInsertBlockSizeBytes_ != null) {
            minInsertBlockSizeBytes_ =
              com.google.protobuf.Int64Value.newBuilder(minInsertBlockSizeBytes_).mergeFrom(value).buildPartial();
          } else {
            minInsertBlockSizeBytes_ = value;
          }
          onChanged();
        } else {
          minInsertBlockSizeBytesBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Squash blocks passed to INSERT query to specified size in bytes, if blocks are not big enough.  If set to `0`,
       * blocks will never be squashed.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value min_insert_block_size_bytes = 49 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder clearMinInsertBlockSizeBytes() {
        if (minInsertBlockSizeBytesBuilder_ == null) {
          minInsertBlockSizeBytes_ = null;
          onChanged();
        } else {
          minInsertBlockSizeBytes_ = null;
          minInsertBlockSizeBytesBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Squash blocks passed to INSERT query to specified size in bytes, if blocks are not big enough.  If set to `0`,
       * blocks will never be squashed.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value min_insert_block_size_bytes = 49 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64Value.Builder getMinInsertBlockSizeBytesBuilder() {
        
        onChanged();
        return getMinInsertBlockSizeBytesFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Squash blocks passed to INSERT query to specified size in bytes, if blocks are not big enough.  If set to `0`,
       * blocks will never be squashed.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value min_insert_block_size_bytes = 49 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getMinInsertBlockSizeBytesOrBuilder() {
        if (minInsertBlockSizeBytesBuilder_ != null) {
          return minInsertBlockSizeBytesBuilder_.getMessageOrBuilder();
        } else {
          return minInsertBlockSizeBytes_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : minInsertBlockSizeBytes_;
        }
      }
      /**
       * <pre>
       * Squash blocks passed to INSERT query to specified size in bytes, if blocks are not big enough.  If set to `0`,
       * blocks will never be squashed.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value min_insert_block_size_bytes = 49 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getMinInsertBlockSizeBytesFieldBuilder() {
        if (minInsertBlockSizeBytesBuilder_ == null) {
          minInsertBlockSizeBytesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getMinInsertBlockSizeBytes(),
                  getParentForChildren(),
                  isClean());
          minInsertBlockSizeBytes_ = null;
        }
        return minInsertBlockSizeBytesBuilder_;
      }

      private com.google.protobuf.Int64Value maxInsertBlockSize_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> maxInsertBlockSizeBuilder_;
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_insert_block_size).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_insert_block_size = 10 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public boolean hasMaxInsertBlockSize() {
        return maxInsertBlockSizeBuilder_ != null || maxInsertBlockSize_ != null;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_insert_block_size).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_insert_block_size = 10 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public com.google.protobuf.Int64Value getMaxInsertBlockSize() {
        if (maxInsertBlockSizeBuilder_ == null) {
          return maxInsertBlockSize_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : maxInsertBlockSize_;
        } else {
          return maxInsertBlockSizeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_insert_block_size).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_insert_block_size = 10 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public Builder setMaxInsertBlockSize(com.google.protobuf.Int64Value value) {
        if (maxInsertBlockSizeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          maxInsertBlockSize_ = value;
          onChanged();
        } else {
          maxInsertBlockSizeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_insert_block_size).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_insert_block_size = 10 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public Builder setMaxInsertBlockSize(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (maxInsertBlockSizeBuilder_ == null) {
          maxInsertBlockSize_ = builderForValue.build();
          onChanged();
        } else {
          maxInsertBlockSizeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_insert_block_size).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_insert_block_size = 10 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public Builder mergeMaxInsertBlockSize(com.google.protobuf.Int64Value value) {
        if (maxInsertBlockSizeBuilder_ == null) {
          if (maxInsertBlockSize_ != null) {
            maxInsertBlockSize_ =
              com.google.protobuf.Int64Value.newBuilder(maxInsertBlockSize_).mergeFrom(value).buildPartial();
          } else {
            maxInsertBlockSize_ = value;
          }
          onChanged();
        } else {
          maxInsertBlockSizeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_insert_block_size).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_insert_block_size = 10 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public Builder clearMaxInsertBlockSize() {
        if (maxInsertBlockSizeBuilder_ == null) {
          maxInsertBlockSize_ = null;
          onChanged();
        } else {
          maxInsertBlockSize_ = null;
          maxInsertBlockSizeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_insert_block_size).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_insert_block_size = 10 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public com.google.protobuf.Int64Value.Builder getMaxInsertBlockSizeBuilder() {
        
        onChanged();
        return getMaxInsertBlockSizeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_insert_block_size).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_insert_block_size = 10 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getMaxInsertBlockSizeOrBuilder() {
        if (maxInsertBlockSizeBuilder_ != null) {
          return maxInsertBlockSizeBuilder_.getMessageOrBuilder();
        } else {
          return maxInsertBlockSize_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : maxInsertBlockSize_;
        }
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_insert_block_size).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_insert_block_size = 10 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getMaxInsertBlockSizeFieldBuilder() {
        if (maxInsertBlockSizeBuilder_ == null) {
          maxInsertBlockSizeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getMaxInsertBlockSize(),
                  getParentForChildren(),
                  isClean());
          maxInsertBlockSize_ = null;
        }
        return maxInsertBlockSizeBuilder_;
      }

      private com.google.protobuf.Int64Value minBytesToUseDirectIo_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> minBytesToUseDirectIoBuilder_;
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-min_bytes_to_use_direct_io).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value min_bytes_to_use_direct_io = 50 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public boolean hasMinBytesToUseDirectIo() {
        return minBytesToUseDirectIoBuilder_ != null || minBytesToUseDirectIo_ != null;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-min_bytes_to_use_direct_io).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value min_bytes_to_use_direct_io = 50 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64Value getMinBytesToUseDirectIo() {
        if (minBytesToUseDirectIoBuilder_ == null) {
          return minBytesToUseDirectIo_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : minBytesToUseDirectIo_;
        } else {
          return minBytesToUseDirectIoBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-min_bytes_to_use_direct_io).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value min_bytes_to_use_direct_io = 50 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder setMinBytesToUseDirectIo(com.google.protobuf.Int64Value value) {
        if (minBytesToUseDirectIoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          minBytesToUseDirectIo_ = value;
          onChanged();
        } else {
          minBytesToUseDirectIoBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-min_bytes_to_use_direct_io).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value min_bytes_to_use_direct_io = 50 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder setMinBytesToUseDirectIo(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (minBytesToUseDirectIoBuilder_ == null) {
          minBytesToUseDirectIo_ = builderForValue.build();
          onChanged();
        } else {
          minBytesToUseDirectIoBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-min_bytes_to_use_direct_io).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value min_bytes_to_use_direct_io = 50 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder mergeMinBytesToUseDirectIo(com.google.protobuf.Int64Value value) {
        if (minBytesToUseDirectIoBuilder_ == null) {
          if (minBytesToUseDirectIo_ != null) {
            minBytesToUseDirectIo_ =
              com.google.protobuf.Int64Value.newBuilder(minBytesToUseDirectIo_).mergeFrom(value).buildPartial();
          } else {
            minBytesToUseDirectIo_ = value;
          }
          onChanged();
        } else {
          minBytesToUseDirectIoBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-min_bytes_to_use_direct_io).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value min_bytes_to_use_direct_io = 50 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder clearMinBytesToUseDirectIo() {
        if (minBytesToUseDirectIoBuilder_ == null) {
          minBytesToUseDirectIo_ = null;
          onChanged();
        } else {
          minBytesToUseDirectIo_ = null;
          minBytesToUseDirectIoBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-min_bytes_to_use_direct_io).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value min_bytes_to_use_direct_io = 50 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64Value.Builder getMinBytesToUseDirectIoBuilder() {
        
        onChanged();
        return getMinBytesToUseDirectIoFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-min_bytes_to_use_direct_io).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value min_bytes_to_use_direct_io = 50 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getMinBytesToUseDirectIoOrBuilder() {
        if (minBytesToUseDirectIoBuilder_ != null) {
          return minBytesToUseDirectIoBuilder_.getMessageOrBuilder();
        } else {
          return minBytesToUseDirectIo_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : minBytesToUseDirectIo_;
        }
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-min_bytes_to_use_direct_io).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value min_bytes_to_use_direct_io = 50 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getMinBytesToUseDirectIoFieldBuilder() {
        if (minBytesToUseDirectIoBuilder_ == null) {
          minBytesToUseDirectIoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getMinBytesToUseDirectIo(),
                  getParentForChildren(),
                  isClean());
          minBytesToUseDirectIo_ = null;
        }
        return minBytesToUseDirectIoBuilder_;
      }

      private com.google.protobuf.BoolValue useUncompressedCache_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> useUncompressedCacheBuilder_;
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#setting-use_uncompressed_cache).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue use_uncompressed_cache = 51;</code>
       */
      public boolean hasUseUncompressedCache() {
        return useUncompressedCacheBuilder_ != null || useUncompressedCache_ != null;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#setting-use_uncompressed_cache).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue use_uncompressed_cache = 51;</code>
       */
      public com.google.protobuf.BoolValue getUseUncompressedCache() {
        if (useUncompressedCacheBuilder_ == null) {
          return useUncompressedCache_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : useUncompressedCache_;
        } else {
          return useUncompressedCacheBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#setting-use_uncompressed_cache).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue use_uncompressed_cache = 51;</code>
       */
      public Builder setUseUncompressedCache(com.google.protobuf.BoolValue value) {
        if (useUncompressedCacheBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          useUncompressedCache_ = value;
          onChanged();
        } else {
          useUncompressedCacheBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#setting-use_uncompressed_cache).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue use_uncompressed_cache = 51;</code>
       */
      public Builder setUseUncompressedCache(
          com.google.protobuf.BoolValue.Builder builderForValue) {
        if (useUncompressedCacheBuilder_ == null) {
          useUncompressedCache_ = builderForValue.build();
          onChanged();
        } else {
          useUncompressedCacheBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#setting-use_uncompressed_cache).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue use_uncompressed_cache = 51;</code>
       */
      public Builder mergeUseUncompressedCache(com.google.protobuf.BoolValue value) {
        if (useUncompressedCacheBuilder_ == null) {
          if (useUncompressedCache_ != null) {
            useUncompressedCache_ =
              com.google.protobuf.BoolValue.newBuilder(useUncompressedCache_).mergeFrom(value).buildPartial();
          } else {
            useUncompressedCache_ = value;
          }
          onChanged();
        } else {
          useUncompressedCacheBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#setting-use_uncompressed_cache).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue use_uncompressed_cache = 51;</code>
       */
      public Builder clearUseUncompressedCache() {
        if (useUncompressedCacheBuilder_ == null) {
          useUncompressedCache_ = null;
          onChanged();
        } else {
          useUncompressedCache_ = null;
          useUncompressedCacheBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#setting-use_uncompressed_cache).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue use_uncompressed_cache = 51;</code>
       */
      public com.google.protobuf.BoolValue.Builder getUseUncompressedCacheBuilder() {
        
        onChanged();
        return getUseUncompressedCacheFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#setting-use_uncompressed_cache).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue use_uncompressed_cache = 51;</code>
       */
      public com.google.protobuf.BoolValueOrBuilder getUseUncompressedCacheOrBuilder() {
        if (useUncompressedCacheBuilder_ != null) {
          return useUncompressedCacheBuilder_.getMessageOrBuilder();
        } else {
          return useUncompressedCache_ == null ?
              com.google.protobuf.BoolValue.getDefaultInstance() : useUncompressedCache_;
        }
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#setting-use_uncompressed_cache).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue use_uncompressed_cache = 51;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> 
          getUseUncompressedCacheFieldBuilder() {
        if (useUncompressedCacheBuilder_ == null) {
          useUncompressedCacheBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder>(
                  getUseUncompressedCache(),
                  getParentForChildren(),
                  isClean());
          useUncompressedCache_ = null;
        }
        return useUncompressedCacheBuilder_;
      }

      private com.google.protobuf.Int64Value mergeTreeMaxRowsToUseCache_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> mergeTreeMaxRowsToUseCacheBuilder_;
      /**
       * <pre>
       * The maximum request size in rows to use the cache of uncompressed data. The cache is not used for requests larger
       * than the specified value.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#setting-merge_tree_max_rows_to_use_cache).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value merge_tree_max_rows_to_use_cache = 52 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public boolean hasMergeTreeMaxRowsToUseCache() {
        return mergeTreeMaxRowsToUseCacheBuilder_ != null || mergeTreeMaxRowsToUseCache_ != null;
      }
      /**
       * <pre>
       * The maximum request size in rows to use the cache of uncompressed data. The cache is not used for requests larger
       * than the specified value.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#setting-merge_tree_max_rows_to_use_cache).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value merge_tree_max_rows_to_use_cache = 52 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public com.google.protobuf.Int64Value getMergeTreeMaxRowsToUseCache() {
        if (mergeTreeMaxRowsToUseCacheBuilder_ == null) {
          return mergeTreeMaxRowsToUseCache_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : mergeTreeMaxRowsToUseCache_;
        } else {
          return mergeTreeMaxRowsToUseCacheBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The maximum request size in rows to use the cache of uncompressed data. The cache is not used for requests larger
       * than the specified value.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#setting-merge_tree_max_rows_to_use_cache).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value merge_tree_max_rows_to_use_cache = 52 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public Builder setMergeTreeMaxRowsToUseCache(com.google.protobuf.Int64Value value) {
        if (mergeTreeMaxRowsToUseCacheBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          mergeTreeMaxRowsToUseCache_ = value;
          onChanged();
        } else {
          mergeTreeMaxRowsToUseCacheBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The maximum request size in rows to use the cache of uncompressed data. The cache is not used for requests larger
       * than the specified value.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#setting-merge_tree_max_rows_to_use_cache).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value merge_tree_max_rows_to_use_cache = 52 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public Builder setMergeTreeMaxRowsToUseCache(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (mergeTreeMaxRowsToUseCacheBuilder_ == null) {
          mergeTreeMaxRowsToUseCache_ = builderForValue.build();
          onChanged();
        } else {
          mergeTreeMaxRowsToUseCacheBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The maximum request size in rows to use the cache of uncompressed data. The cache is not used for requests larger
       * than the specified value.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#setting-merge_tree_max_rows_to_use_cache).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value merge_tree_max_rows_to_use_cache = 52 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public Builder mergeMergeTreeMaxRowsToUseCache(com.google.protobuf.Int64Value value) {
        if (mergeTreeMaxRowsToUseCacheBuilder_ == null) {
          if (mergeTreeMaxRowsToUseCache_ != null) {
            mergeTreeMaxRowsToUseCache_ =
              com.google.protobuf.Int64Value.newBuilder(mergeTreeMaxRowsToUseCache_).mergeFrom(value).buildPartial();
          } else {
            mergeTreeMaxRowsToUseCache_ = value;
          }
          onChanged();
        } else {
          mergeTreeMaxRowsToUseCacheBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The maximum request size in rows to use the cache of uncompressed data. The cache is not used for requests larger
       * than the specified value.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#setting-merge_tree_max_rows_to_use_cache).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value merge_tree_max_rows_to_use_cache = 52 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public Builder clearMergeTreeMaxRowsToUseCache() {
        if (mergeTreeMaxRowsToUseCacheBuilder_ == null) {
          mergeTreeMaxRowsToUseCache_ = null;
          onChanged();
        } else {
          mergeTreeMaxRowsToUseCache_ = null;
          mergeTreeMaxRowsToUseCacheBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The maximum request size in rows to use the cache of uncompressed data. The cache is not used for requests larger
       * than the specified value.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#setting-merge_tree_max_rows_to_use_cache).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value merge_tree_max_rows_to_use_cache = 52 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public com.google.protobuf.Int64Value.Builder getMergeTreeMaxRowsToUseCacheBuilder() {
        
        onChanged();
        return getMergeTreeMaxRowsToUseCacheFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The maximum request size in rows to use the cache of uncompressed data. The cache is not used for requests larger
       * than the specified value.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#setting-merge_tree_max_rows_to_use_cache).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value merge_tree_max_rows_to_use_cache = 52 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getMergeTreeMaxRowsToUseCacheOrBuilder() {
        if (mergeTreeMaxRowsToUseCacheBuilder_ != null) {
          return mergeTreeMaxRowsToUseCacheBuilder_.getMessageOrBuilder();
        } else {
          return mergeTreeMaxRowsToUseCache_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : mergeTreeMaxRowsToUseCache_;
        }
      }
      /**
       * <pre>
       * The maximum request size in rows to use the cache of uncompressed data. The cache is not used for requests larger
       * than the specified value.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#setting-merge_tree_max_rows_to_use_cache).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value merge_tree_max_rows_to_use_cache = 52 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getMergeTreeMaxRowsToUseCacheFieldBuilder() {
        if (mergeTreeMaxRowsToUseCacheBuilder_ == null) {
          mergeTreeMaxRowsToUseCacheBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getMergeTreeMaxRowsToUseCache(),
                  getParentForChildren(),
                  isClean());
          mergeTreeMaxRowsToUseCache_ = null;
        }
        return mergeTreeMaxRowsToUseCacheBuilder_;
      }

      private com.google.protobuf.Int64Value mergeTreeMaxBytesToUseCache_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> mergeTreeMaxBytesToUseCacheBuilder_;
      /**
       * <pre>
       * The maximum request size in bytes to use the cache of uncompressed data. The cache is not used for requests larger
       * than the specified value.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value merge_tree_max_bytes_to_use_cache = 53 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public boolean hasMergeTreeMaxBytesToUseCache() {
        return mergeTreeMaxBytesToUseCacheBuilder_ != null || mergeTreeMaxBytesToUseCache_ != null;
      }
      /**
       * <pre>
       * The maximum request size in bytes to use the cache of uncompressed data. The cache is not used for requests larger
       * than the specified value.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value merge_tree_max_bytes_to_use_cache = 53 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public com.google.protobuf.Int64Value getMergeTreeMaxBytesToUseCache() {
        if (mergeTreeMaxBytesToUseCacheBuilder_ == null) {
          return mergeTreeMaxBytesToUseCache_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : mergeTreeMaxBytesToUseCache_;
        } else {
          return mergeTreeMaxBytesToUseCacheBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The maximum request size in bytes to use the cache of uncompressed data. The cache is not used for requests larger
       * than the specified value.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value merge_tree_max_bytes_to_use_cache = 53 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public Builder setMergeTreeMaxBytesToUseCache(com.google.protobuf.Int64Value value) {
        if (mergeTreeMaxBytesToUseCacheBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          mergeTreeMaxBytesToUseCache_ = value;
          onChanged();
        } else {
          mergeTreeMaxBytesToUseCacheBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The maximum request size in bytes to use the cache of uncompressed data. The cache is not used for requests larger
       * than the specified value.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value merge_tree_max_bytes_to_use_cache = 53 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public Builder setMergeTreeMaxBytesToUseCache(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (mergeTreeMaxBytesToUseCacheBuilder_ == null) {
          mergeTreeMaxBytesToUseCache_ = builderForValue.build();
          onChanged();
        } else {
          mergeTreeMaxBytesToUseCacheBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The maximum request size in bytes to use the cache of uncompressed data. The cache is not used for requests larger
       * than the specified value.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value merge_tree_max_bytes_to_use_cache = 53 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public Builder mergeMergeTreeMaxBytesToUseCache(com.google.protobuf.Int64Value value) {
        if (mergeTreeMaxBytesToUseCacheBuilder_ == null) {
          if (mergeTreeMaxBytesToUseCache_ != null) {
            mergeTreeMaxBytesToUseCache_ =
              com.google.protobuf.Int64Value.newBuilder(mergeTreeMaxBytesToUseCache_).mergeFrom(value).buildPartial();
          } else {
            mergeTreeMaxBytesToUseCache_ = value;
          }
          onChanged();
        } else {
          mergeTreeMaxBytesToUseCacheBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The maximum request size in bytes to use the cache of uncompressed data. The cache is not used for requests larger
       * than the specified value.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value merge_tree_max_bytes_to_use_cache = 53 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public Builder clearMergeTreeMaxBytesToUseCache() {
        if (mergeTreeMaxBytesToUseCacheBuilder_ == null) {
          mergeTreeMaxBytesToUseCache_ = null;
          onChanged();
        } else {
          mergeTreeMaxBytesToUseCache_ = null;
          mergeTreeMaxBytesToUseCacheBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The maximum request size in bytes to use the cache of uncompressed data. The cache is not used for requests larger
       * than the specified value.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value merge_tree_max_bytes_to_use_cache = 53 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public com.google.protobuf.Int64Value.Builder getMergeTreeMaxBytesToUseCacheBuilder() {
        
        onChanged();
        return getMergeTreeMaxBytesToUseCacheFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The maximum request size in bytes to use the cache of uncompressed data. The cache is not used for requests larger
       * than the specified value.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value merge_tree_max_bytes_to_use_cache = 53 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getMergeTreeMaxBytesToUseCacheOrBuilder() {
        if (mergeTreeMaxBytesToUseCacheBuilder_ != null) {
          return mergeTreeMaxBytesToUseCacheBuilder_.getMessageOrBuilder();
        } else {
          return mergeTreeMaxBytesToUseCache_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : mergeTreeMaxBytesToUseCache_;
        }
      }
      /**
       * <pre>
       * The maximum request size in bytes to use the cache of uncompressed data. The cache is not used for requests larger
       * than the specified value.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value merge_tree_max_bytes_to_use_cache = 53 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getMergeTreeMaxBytesToUseCacheFieldBuilder() {
        if (mergeTreeMaxBytesToUseCacheBuilder_ == null) {
          mergeTreeMaxBytesToUseCacheBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getMergeTreeMaxBytesToUseCache(),
                  getParentForChildren(),
                  isClean());
          mergeTreeMaxBytesToUseCache_ = null;
        }
        return mergeTreeMaxBytesToUseCacheBuilder_;
      }

      private com.google.protobuf.Int64Value mergeTreeMinRowsForConcurrentRead_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> mergeTreeMinRowsForConcurrentReadBuilder_;
      /**
       * <pre>
       * The minimum number of rows to be read from a file to enable concurrent read.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#setting-merge_tree_min_rows_for_concurrent_read).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value merge_tree_min_rows_for_concurrent_read = 54 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public boolean hasMergeTreeMinRowsForConcurrentRead() {
        return mergeTreeMinRowsForConcurrentReadBuilder_ != null || mergeTreeMinRowsForConcurrentRead_ != null;
      }
      /**
       * <pre>
       * The minimum number of rows to be read from a file to enable concurrent read.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#setting-merge_tree_min_rows_for_concurrent_read).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value merge_tree_min_rows_for_concurrent_read = 54 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public com.google.protobuf.Int64Value getMergeTreeMinRowsForConcurrentRead() {
        if (mergeTreeMinRowsForConcurrentReadBuilder_ == null) {
          return mergeTreeMinRowsForConcurrentRead_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : mergeTreeMinRowsForConcurrentRead_;
        } else {
          return mergeTreeMinRowsForConcurrentReadBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The minimum number of rows to be read from a file to enable concurrent read.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#setting-merge_tree_min_rows_for_concurrent_read).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value merge_tree_min_rows_for_concurrent_read = 54 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public Builder setMergeTreeMinRowsForConcurrentRead(com.google.protobuf.Int64Value value) {
        if (mergeTreeMinRowsForConcurrentReadBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          mergeTreeMinRowsForConcurrentRead_ = value;
          onChanged();
        } else {
          mergeTreeMinRowsForConcurrentReadBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The minimum number of rows to be read from a file to enable concurrent read.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#setting-merge_tree_min_rows_for_concurrent_read).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value merge_tree_min_rows_for_concurrent_read = 54 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public Builder setMergeTreeMinRowsForConcurrentRead(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (mergeTreeMinRowsForConcurrentReadBuilder_ == null) {
          mergeTreeMinRowsForConcurrentRead_ = builderForValue.build();
          onChanged();
        } else {
          mergeTreeMinRowsForConcurrentReadBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The minimum number of rows to be read from a file to enable concurrent read.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#setting-merge_tree_min_rows_for_concurrent_read).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value merge_tree_min_rows_for_concurrent_read = 54 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public Builder mergeMergeTreeMinRowsForConcurrentRead(com.google.protobuf.Int64Value value) {
        if (mergeTreeMinRowsForConcurrentReadBuilder_ == null) {
          if (mergeTreeMinRowsForConcurrentRead_ != null) {
            mergeTreeMinRowsForConcurrentRead_ =
              com.google.protobuf.Int64Value.newBuilder(mergeTreeMinRowsForConcurrentRead_).mergeFrom(value).buildPartial();
          } else {
            mergeTreeMinRowsForConcurrentRead_ = value;
          }
          onChanged();
        } else {
          mergeTreeMinRowsForConcurrentReadBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The minimum number of rows to be read from a file to enable concurrent read.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#setting-merge_tree_min_rows_for_concurrent_read).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value merge_tree_min_rows_for_concurrent_read = 54 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public Builder clearMergeTreeMinRowsForConcurrentRead() {
        if (mergeTreeMinRowsForConcurrentReadBuilder_ == null) {
          mergeTreeMinRowsForConcurrentRead_ = null;
          onChanged();
        } else {
          mergeTreeMinRowsForConcurrentRead_ = null;
          mergeTreeMinRowsForConcurrentReadBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The minimum number of rows to be read from a file to enable concurrent read.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#setting-merge_tree_min_rows_for_concurrent_read).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value merge_tree_min_rows_for_concurrent_read = 54 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public com.google.protobuf.Int64Value.Builder getMergeTreeMinRowsForConcurrentReadBuilder() {
        
        onChanged();
        return getMergeTreeMinRowsForConcurrentReadFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The minimum number of rows to be read from a file to enable concurrent read.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#setting-merge_tree_min_rows_for_concurrent_read).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value merge_tree_min_rows_for_concurrent_read = 54 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getMergeTreeMinRowsForConcurrentReadOrBuilder() {
        if (mergeTreeMinRowsForConcurrentReadBuilder_ != null) {
          return mergeTreeMinRowsForConcurrentReadBuilder_.getMessageOrBuilder();
        } else {
          return mergeTreeMinRowsForConcurrentRead_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : mergeTreeMinRowsForConcurrentRead_;
        }
      }
      /**
       * <pre>
       * The minimum number of rows to be read from a file to enable concurrent read.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#setting-merge_tree_min_rows_for_concurrent_read).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value merge_tree_min_rows_for_concurrent_read = 54 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getMergeTreeMinRowsForConcurrentReadFieldBuilder() {
        if (mergeTreeMinRowsForConcurrentReadBuilder_ == null) {
          mergeTreeMinRowsForConcurrentReadBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getMergeTreeMinRowsForConcurrentRead(),
                  getParentForChildren(),
                  isClean());
          mergeTreeMinRowsForConcurrentRead_ = null;
        }
        return mergeTreeMinRowsForConcurrentReadBuilder_;
      }

      private com.google.protobuf.Int64Value mergeTreeMinBytesForConcurrentRead_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> mergeTreeMinBytesForConcurrentReadBuilder_;
      /**
       * <pre>
       * The minimum number of bytes to be read from a file to enable concurrent read.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value merge_tree_min_bytes_for_concurrent_read = 55 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public boolean hasMergeTreeMinBytesForConcurrentRead() {
        return mergeTreeMinBytesForConcurrentReadBuilder_ != null || mergeTreeMinBytesForConcurrentRead_ != null;
      }
      /**
       * <pre>
       * The minimum number of bytes to be read from a file to enable concurrent read.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value merge_tree_min_bytes_for_concurrent_read = 55 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public com.google.protobuf.Int64Value getMergeTreeMinBytesForConcurrentRead() {
        if (mergeTreeMinBytesForConcurrentReadBuilder_ == null) {
          return mergeTreeMinBytesForConcurrentRead_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : mergeTreeMinBytesForConcurrentRead_;
        } else {
          return mergeTreeMinBytesForConcurrentReadBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The minimum number of bytes to be read from a file to enable concurrent read.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value merge_tree_min_bytes_for_concurrent_read = 55 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public Builder setMergeTreeMinBytesForConcurrentRead(com.google.protobuf.Int64Value value) {
        if (mergeTreeMinBytesForConcurrentReadBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          mergeTreeMinBytesForConcurrentRead_ = value;
          onChanged();
        } else {
          mergeTreeMinBytesForConcurrentReadBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The minimum number of bytes to be read from a file to enable concurrent read.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value merge_tree_min_bytes_for_concurrent_read = 55 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public Builder setMergeTreeMinBytesForConcurrentRead(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (mergeTreeMinBytesForConcurrentReadBuilder_ == null) {
          mergeTreeMinBytesForConcurrentRead_ = builderForValue.build();
          onChanged();
        } else {
          mergeTreeMinBytesForConcurrentReadBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The minimum number of bytes to be read from a file to enable concurrent read.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value merge_tree_min_bytes_for_concurrent_read = 55 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public Builder mergeMergeTreeMinBytesForConcurrentRead(com.google.protobuf.Int64Value value) {
        if (mergeTreeMinBytesForConcurrentReadBuilder_ == null) {
          if (mergeTreeMinBytesForConcurrentRead_ != null) {
            mergeTreeMinBytesForConcurrentRead_ =
              com.google.protobuf.Int64Value.newBuilder(mergeTreeMinBytesForConcurrentRead_).mergeFrom(value).buildPartial();
          } else {
            mergeTreeMinBytesForConcurrentRead_ = value;
          }
          onChanged();
        } else {
          mergeTreeMinBytesForConcurrentReadBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The minimum number of bytes to be read from a file to enable concurrent read.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value merge_tree_min_bytes_for_concurrent_read = 55 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public Builder clearMergeTreeMinBytesForConcurrentRead() {
        if (mergeTreeMinBytesForConcurrentReadBuilder_ == null) {
          mergeTreeMinBytesForConcurrentRead_ = null;
          onChanged();
        } else {
          mergeTreeMinBytesForConcurrentRead_ = null;
          mergeTreeMinBytesForConcurrentReadBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The minimum number of bytes to be read from a file to enable concurrent read.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value merge_tree_min_bytes_for_concurrent_read = 55 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public com.google.protobuf.Int64Value.Builder getMergeTreeMinBytesForConcurrentReadBuilder() {
        
        onChanged();
        return getMergeTreeMinBytesForConcurrentReadFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The minimum number of bytes to be read from a file to enable concurrent read.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value merge_tree_min_bytes_for_concurrent_read = 55 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getMergeTreeMinBytesForConcurrentReadOrBuilder() {
        if (mergeTreeMinBytesForConcurrentReadBuilder_ != null) {
          return mergeTreeMinBytesForConcurrentReadBuilder_.getMessageOrBuilder();
        } else {
          return mergeTreeMinBytesForConcurrentRead_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : mergeTreeMinBytesForConcurrentRead_;
        }
      }
      /**
       * <pre>
       * The minimum number of bytes to be read from a file to enable concurrent read.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value merge_tree_min_bytes_for_concurrent_read = 55 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getMergeTreeMinBytesForConcurrentReadFieldBuilder() {
        if (mergeTreeMinBytesForConcurrentReadBuilder_ == null) {
          mergeTreeMinBytesForConcurrentReadBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getMergeTreeMinBytesForConcurrentRead(),
                  getParentForChildren(),
                  isClean());
          mergeTreeMinBytesForConcurrentRead_ = null;
        }
        return mergeTreeMinBytesForConcurrentReadBuilder_;
      }

      private com.google.protobuf.Int64Value maxBytesBeforeExternalGroupBy_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> maxBytesBeforeExternalGroupByBuilder_;
      /**
       * <code>.google.protobuf.Int64Value max_bytes_before_external_group_by = 74;</code>
       */
      public boolean hasMaxBytesBeforeExternalGroupBy() {
        return maxBytesBeforeExternalGroupByBuilder_ != null || maxBytesBeforeExternalGroupBy_ != null;
      }
      /**
       * <code>.google.protobuf.Int64Value max_bytes_before_external_group_by = 74;</code>
       */
      public com.google.protobuf.Int64Value getMaxBytesBeforeExternalGroupBy() {
        if (maxBytesBeforeExternalGroupByBuilder_ == null) {
          return maxBytesBeforeExternalGroupBy_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : maxBytesBeforeExternalGroupBy_;
        } else {
          return maxBytesBeforeExternalGroupByBuilder_.getMessage();
        }
      }
      /**
       * <code>.google.protobuf.Int64Value max_bytes_before_external_group_by = 74;</code>
       */
      public Builder setMaxBytesBeforeExternalGroupBy(com.google.protobuf.Int64Value value) {
        if (maxBytesBeforeExternalGroupByBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          maxBytesBeforeExternalGroupBy_ = value;
          onChanged();
        } else {
          maxBytesBeforeExternalGroupByBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Int64Value max_bytes_before_external_group_by = 74;</code>
       */
      public Builder setMaxBytesBeforeExternalGroupBy(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (maxBytesBeforeExternalGroupByBuilder_ == null) {
          maxBytesBeforeExternalGroupBy_ = builderForValue.build();
          onChanged();
        } else {
          maxBytesBeforeExternalGroupByBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Int64Value max_bytes_before_external_group_by = 74;</code>
       */
      public Builder mergeMaxBytesBeforeExternalGroupBy(com.google.protobuf.Int64Value value) {
        if (maxBytesBeforeExternalGroupByBuilder_ == null) {
          if (maxBytesBeforeExternalGroupBy_ != null) {
            maxBytesBeforeExternalGroupBy_ =
              com.google.protobuf.Int64Value.newBuilder(maxBytesBeforeExternalGroupBy_).mergeFrom(value).buildPartial();
          } else {
            maxBytesBeforeExternalGroupBy_ = value;
          }
          onChanged();
        } else {
          maxBytesBeforeExternalGroupByBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Int64Value max_bytes_before_external_group_by = 74;</code>
       */
      public Builder clearMaxBytesBeforeExternalGroupBy() {
        if (maxBytesBeforeExternalGroupByBuilder_ == null) {
          maxBytesBeforeExternalGroupBy_ = null;
          onChanged();
        } else {
          maxBytesBeforeExternalGroupBy_ = null;
          maxBytesBeforeExternalGroupByBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Int64Value max_bytes_before_external_group_by = 74;</code>
       */
      public com.google.protobuf.Int64Value.Builder getMaxBytesBeforeExternalGroupByBuilder() {
        
        onChanged();
        return getMaxBytesBeforeExternalGroupByFieldBuilder().getBuilder();
      }
      /**
       * <code>.google.protobuf.Int64Value max_bytes_before_external_group_by = 74;</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getMaxBytesBeforeExternalGroupByOrBuilder() {
        if (maxBytesBeforeExternalGroupByBuilder_ != null) {
          return maxBytesBeforeExternalGroupByBuilder_.getMessageOrBuilder();
        } else {
          return maxBytesBeforeExternalGroupBy_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : maxBytesBeforeExternalGroupBy_;
        }
      }
      /**
       * <code>.google.protobuf.Int64Value max_bytes_before_external_group_by = 74;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getMaxBytesBeforeExternalGroupByFieldBuilder() {
        if (maxBytesBeforeExternalGroupByBuilder_ == null) {
          maxBytesBeforeExternalGroupByBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getMaxBytesBeforeExternalGroupBy(),
                  getParentForChildren(),
                  isClean());
          maxBytesBeforeExternalGroupBy_ = null;
        }
        return maxBytesBeforeExternalGroupByBuilder_;
      }

      private com.google.protobuf.Int64Value maxBytesBeforeExternalSort_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> maxBytesBeforeExternalSortBuilder_;
      /**
       * <code>.google.protobuf.Int64Value max_bytes_before_external_sort = 75;</code>
       */
      public boolean hasMaxBytesBeforeExternalSort() {
        return maxBytesBeforeExternalSortBuilder_ != null || maxBytesBeforeExternalSort_ != null;
      }
      /**
       * <code>.google.protobuf.Int64Value max_bytes_before_external_sort = 75;</code>
       */
      public com.google.protobuf.Int64Value getMaxBytesBeforeExternalSort() {
        if (maxBytesBeforeExternalSortBuilder_ == null) {
          return maxBytesBeforeExternalSort_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : maxBytesBeforeExternalSort_;
        } else {
          return maxBytesBeforeExternalSortBuilder_.getMessage();
        }
      }
      /**
       * <code>.google.protobuf.Int64Value max_bytes_before_external_sort = 75;</code>
       */
      public Builder setMaxBytesBeforeExternalSort(com.google.protobuf.Int64Value value) {
        if (maxBytesBeforeExternalSortBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          maxBytesBeforeExternalSort_ = value;
          onChanged();
        } else {
          maxBytesBeforeExternalSortBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Int64Value max_bytes_before_external_sort = 75;</code>
       */
      public Builder setMaxBytesBeforeExternalSort(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (maxBytesBeforeExternalSortBuilder_ == null) {
          maxBytesBeforeExternalSort_ = builderForValue.build();
          onChanged();
        } else {
          maxBytesBeforeExternalSortBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Int64Value max_bytes_before_external_sort = 75;</code>
       */
      public Builder mergeMaxBytesBeforeExternalSort(com.google.protobuf.Int64Value value) {
        if (maxBytesBeforeExternalSortBuilder_ == null) {
          if (maxBytesBeforeExternalSort_ != null) {
            maxBytesBeforeExternalSort_ =
              com.google.protobuf.Int64Value.newBuilder(maxBytesBeforeExternalSort_).mergeFrom(value).buildPartial();
          } else {
            maxBytesBeforeExternalSort_ = value;
          }
          onChanged();
        } else {
          maxBytesBeforeExternalSortBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Int64Value max_bytes_before_external_sort = 75;</code>
       */
      public Builder clearMaxBytesBeforeExternalSort() {
        if (maxBytesBeforeExternalSortBuilder_ == null) {
          maxBytesBeforeExternalSort_ = null;
          onChanged();
        } else {
          maxBytesBeforeExternalSort_ = null;
          maxBytesBeforeExternalSortBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Int64Value max_bytes_before_external_sort = 75;</code>
       */
      public com.google.protobuf.Int64Value.Builder getMaxBytesBeforeExternalSortBuilder() {
        
        onChanged();
        return getMaxBytesBeforeExternalSortFieldBuilder().getBuilder();
      }
      /**
       * <code>.google.protobuf.Int64Value max_bytes_before_external_sort = 75;</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getMaxBytesBeforeExternalSortOrBuilder() {
        if (maxBytesBeforeExternalSortBuilder_ != null) {
          return maxBytesBeforeExternalSortBuilder_.getMessageOrBuilder();
        } else {
          return maxBytesBeforeExternalSort_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : maxBytesBeforeExternalSort_;
        }
      }
      /**
       * <code>.google.protobuf.Int64Value max_bytes_before_external_sort = 75;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getMaxBytesBeforeExternalSortFieldBuilder() {
        if (maxBytesBeforeExternalSortBuilder_ == null) {
          maxBytesBeforeExternalSortBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getMaxBytesBeforeExternalSort(),
                  getParentForChildren(),
                  isClean());
          maxBytesBeforeExternalSort_ = null;
        }
        return maxBytesBeforeExternalSortBuilder_;
      }

      private com.google.protobuf.Int64Value groupByTwoLevelThreshold_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> groupByTwoLevelThresholdBuilder_;
      /**
       * <code>.google.protobuf.Int64Value group_by_two_level_threshold = 76;</code>
       */
      public boolean hasGroupByTwoLevelThreshold() {
        return groupByTwoLevelThresholdBuilder_ != null || groupByTwoLevelThreshold_ != null;
      }
      /**
       * <code>.google.protobuf.Int64Value group_by_two_level_threshold = 76;</code>
       */
      public com.google.protobuf.Int64Value getGroupByTwoLevelThreshold() {
        if (groupByTwoLevelThresholdBuilder_ == null) {
          return groupByTwoLevelThreshold_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : groupByTwoLevelThreshold_;
        } else {
          return groupByTwoLevelThresholdBuilder_.getMessage();
        }
      }
      /**
       * <code>.google.protobuf.Int64Value group_by_two_level_threshold = 76;</code>
       */
      public Builder setGroupByTwoLevelThreshold(com.google.protobuf.Int64Value value) {
        if (groupByTwoLevelThresholdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          groupByTwoLevelThreshold_ = value;
          onChanged();
        } else {
          groupByTwoLevelThresholdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Int64Value group_by_two_level_threshold = 76;</code>
       */
      public Builder setGroupByTwoLevelThreshold(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (groupByTwoLevelThresholdBuilder_ == null) {
          groupByTwoLevelThreshold_ = builderForValue.build();
          onChanged();
        } else {
          groupByTwoLevelThresholdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Int64Value group_by_two_level_threshold = 76;</code>
       */
      public Builder mergeGroupByTwoLevelThreshold(com.google.protobuf.Int64Value value) {
        if (groupByTwoLevelThresholdBuilder_ == null) {
          if (groupByTwoLevelThreshold_ != null) {
            groupByTwoLevelThreshold_ =
              com.google.protobuf.Int64Value.newBuilder(groupByTwoLevelThreshold_).mergeFrom(value).buildPartial();
          } else {
            groupByTwoLevelThreshold_ = value;
          }
          onChanged();
        } else {
          groupByTwoLevelThresholdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Int64Value group_by_two_level_threshold = 76;</code>
       */
      public Builder clearGroupByTwoLevelThreshold() {
        if (groupByTwoLevelThresholdBuilder_ == null) {
          groupByTwoLevelThreshold_ = null;
          onChanged();
        } else {
          groupByTwoLevelThreshold_ = null;
          groupByTwoLevelThresholdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Int64Value group_by_two_level_threshold = 76;</code>
       */
      public com.google.protobuf.Int64Value.Builder getGroupByTwoLevelThresholdBuilder() {
        
        onChanged();
        return getGroupByTwoLevelThresholdFieldBuilder().getBuilder();
      }
      /**
       * <code>.google.protobuf.Int64Value group_by_two_level_threshold = 76;</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getGroupByTwoLevelThresholdOrBuilder() {
        if (groupByTwoLevelThresholdBuilder_ != null) {
          return groupByTwoLevelThresholdBuilder_.getMessageOrBuilder();
        } else {
          return groupByTwoLevelThreshold_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : groupByTwoLevelThreshold_;
        }
      }
      /**
       * <code>.google.protobuf.Int64Value group_by_two_level_threshold = 76;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getGroupByTwoLevelThresholdFieldBuilder() {
        if (groupByTwoLevelThresholdBuilder_ == null) {
          groupByTwoLevelThresholdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getGroupByTwoLevelThreshold(),
                  getParentForChildren(),
                  isClean());
          groupByTwoLevelThreshold_ = null;
        }
        return groupByTwoLevelThresholdBuilder_;
      }

      private com.google.protobuf.Int64Value groupByTwoLevelThresholdBytes_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> groupByTwoLevelThresholdBytesBuilder_;
      /**
       * <code>.google.protobuf.Int64Value group_by_two_level_threshold_bytes = 77;</code>
       */
      public boolean hasGroupByTwoLevelThresholdBytes() {
        return groupByTwoLevelThresholdBytesBuilder_ != null || groupByTwoLevelThresholdBytes_ != null;
      }
      /**
       * <code>.google.protobuf.Int64Value group_by_two_level_threshold_bytes = 77;</code>
       */
      public com.google.protobuf.Int64Value getGroupByTwoLevelThresholdBytes() {
        if (groupByTwoLevelThresholdBytesBuilder_ == null) {
          return groupByTwoLevelThresholdBytes_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : groupByTwoLevelThresholdBytes_;
        } else {
          return groupByTwoLevelThresholdBytesBuilder_.getMessage();
        }
      }
      /**
       * <code>.google.protobuf.Int64Value group_by_two_level_threshold_bytes = 77;</code>
       */
      public Builder setGroupByTwoLevelThresholdBytes(com.google.protobuf.Int64Value value) {
        if (groupByTwoLevelThresholdBytesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          groupByTwoLevelThresholdBytes_ = value;
          onChanged();
        } else {
          groupByTwoLevelThresholdBytesBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Int64Value group_by_two_level_threshold_bytes = 77;</code>
       */
      public Builder setGroupByTwoLevelThresholdBytes(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (groupByTwoLevelThresholdBytesBuilder_ == null) {
          groupByTwoLevelThresholdBytes_ = builderForValue.build();
          onChanged();
        } else {
          groupByTwoLevelThresholdBytesBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Int64Value group_by_two_level_threshold_bytes = 77;</code>
       */
      public Builder mergeGroupByTwoLevelThresholdBytes(com.google.protobuf.Int64Value value) {
        if (groupByTwoLevelThresholdBytesBuilder_ == null) {
          if (groupByTwoLevelThresholdBytes_ != null) {
            groupByTwoLevelThresholdBytes_ =
              com.google.protobuf.Int64Value.newBuilder(groupByTwoLevelThresholdBytes_).mergeFrom(value).buildPartial();
          } else {
            groupByTwoLevelThresholdBytes_ = value;
          }
          onChanged();
        } else {
          groupByTwoLevelThresholdBytesBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Int64Value group_by_two_level_threshold_bytes = 77;</code>
       */
      public Builder clearGroupByTwoLevelThresholdBytes() {
        if (groupByTwoLevelThresholdBytesBuilder_ == null) {
          groupByTwoLevelThresholdBytes_ = null;
          onChanged();
        } else {
          groupByTwoLevelThresholdBytes_ = null;
          groupByTwoLevelThresholdBytesBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Int64Value group_by_two_level_threshold_bytes = 77;</code>
       */
      public com.google.protobuf.Int64Value.Builder getGroupByTwoLevelThresholdBytesBuilder() {
        
        onChanged();
        return getGroupByTwoLevelThresholdBytesFieldBuilder().getBuilder();
      }
      /**
       * <code>.google.protobuf.Int64Value group_by_two_level_threshold_bytes = 77;</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getGroupByTwoLevelThresholdBytesOrBuilder() {
        if (groupByTwoLevelThresholdBytesBuilder_ != null) {
          return groupByTwoLevelThresholdBytesBuilder_.getMessageOrBuilder();
        } else {
          return groupByTwoLevelThresholdBytes_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : groupByTwoLevelThresholdBytes_;
        }
      }
      /**
       * <code>.google.protobuf.Int64Value group_by_two_level_threshold_bytes = 77;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getGroupByTwoLevelThresholdBytesFieldBuilder() {
        if (groupByTwoLevelThresholdBytesBuilder_ == null) {
          groupByTwoLevelThresholdBytesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getGroupByTwoLevelThresholdBytes(),
                  getParentForChildren(),
                  isClean());
          groupByTwoLevelThresholdBytes_ = null;
        }
        return groupByTwoLevelThresholdBytesBuilder_;
      }

      private com.google.protobuf.Int64Value priority_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> priorityBuilder_;
      /**
       * <pre>
       * Priority of the query.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value priority = 56 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public boolean hasPriority() {
        return priorityBuilder_ != null || priority_ != null;
      }
      /**
       * <pre>
       * Priority of the query.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value priority = 56 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64Value getPriority() {
        if (priorityBuilder_ == null) {
          return priority_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : priority_;
        } else {
          return priorityBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Priority of the query.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value priority = 56 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder setPriority(com.google.protobuf.Int64Value value) {
        if (priorityBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          priority_ = value;
          onChanged();
        } else {
          priorityBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Priority of the query.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value priority = 56 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder setPriority(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (priorityBuilder_ == null) {
          priority_ = builderForValue.build();
          onChanged();
        } else {
          priorityBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Priority of the query.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value priority = 56 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder mergePriority(com.google.protobuf.Int64Value value) {
        if (priorityBuilder_ == null) {
          if (priority_ != null) {
            priority_ =
              com.google.protobuf.Int64Value.newBuilder(priority_).mergeFrom(value).buildPartial();
          } else {
            priority_ = value;
          }
          onChanged();
        } else {
          priorityBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Priority of the query.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value priority = 56 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder clearPriority() {
        if (priorityBuilder_ == null) {
          priority_ = null;
          onChanged();
        } else {
          priority_ = null;
          priorityBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Priority of the query.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value priority = 56 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64Value.Builder getPriorityBuilder() {
        
        onChanged();
        return getPriorityFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Priority of the query.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value priority = 56 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getPriorityOrBuilder() {
        if (priorityBuilder_ != null) {
          return priorityBuilder_.getMessageOrBuilder();
        } else {
          return priority_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : priority_;
        }
      }
      /**
       * <pre>
       * Priority of the query.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value priority = 56 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getPriorityFieldBuilder() {
        if (priorityBuilder_ == null) {
          priorityBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getPriority(),
                  getParentForChildren(),
                  isClean());
          priority_ = null;
        }
        return priorityBuilder_;
      }

      private com.google.protobuf.Int64Value maxThreads_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> maxThreadsBuilder_;
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_threads).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_threads = 8 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public boolean hasMaxThreads() {
        return maxThreadsBuilder_ != null || maxThreads_ != null;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_threads).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_threads = 8 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public com.google.protobuf.Int64Value getMaxThreads() {
        if (maxThreadsBuilder_ == null) {
          return maxThreads_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : maxThreads_;
        } else {
          return maxThreadsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_threads).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_threads = 8 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public Builder setMaxThreads(com.google.protobuf.Int64Value value) {
        if (maxThreadsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          maxThreads_ = value;
          onChanged();
        } else {
          maxThreadsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_threads).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_threads = 8 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public Builder setMaxThreads(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (maxThreadsBuilder_ == null) {
          maxThreads_ = builderForValue.build();
          onChanged();
        } else {
          maxThreadsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_threads).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_threads = 8 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public Builder mergeMaxThreads(com.google.protobuf.Int64Value value) {
        if (maxThreadsBuilder_ == null) {
          if (maxThreads_ != null) {
            maxThreads_ =
              com.google.protobuf.Int64Value.newBuilder(maxThreads_).mergeFrom(value).buildPartial();
          } else {
            maxThreads_ = value;
          }
          onChanged();
        } else {
          maxThreadsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_threads).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_threads = 8 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public Builder clearMaxThreads() {
        if (maxThreadsBuilder_ == null) {
          maxThreads_ = null;
          onChanged();
        } else {
          maxThreads_ = null;
          maxThreadsBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_threads).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_threads = 8 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public com.google.protobuf.Int64Value.Builder getMaxThreadsBuilder() {
        
        onChanged();
        return getMaxThreadsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_threads).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_threads = 8 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getMaxThreadsOrBuilder() {
        if (maxThreadsBuilder_ != null) {
          return maxThreadsBuilder_.getMessageOrBuilder();
        } else {
          return maxThreads_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : maxThreads_;
        }
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_threads).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_threads = 8 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getMaxThreadsFieldBuilder() {
        if (maxThreadsBuilder_ == null) {
          maxThreadsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getMaxThreads(),
                  getParentForChildren(),
                  isClean());
          maxThreads_ = null;
        }
        return maxThreadsBuilder_;
      }

      private com.google.protobuf.Int64Value maxMemoryUsage_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> maxMemoryUsageBuilder_;
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#settings_max_memory_usage).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_memory_usage = 11 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public boolean hasMaxMemoryUsage() {
        return maxMemoryUsageBuilder_ != null || maxMemoryUsage_ != null;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#settings_max_memory_usage).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_memory_usage = 11 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64Value getMaxMemoryUsage() {
        if (maxMemoryUsageBuilder_ == null) {
          return maxMemoryUsage_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : maxMemoryUsage_;
        } else {
          return maxMemoryUsageBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#settings_max_memory_usage).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_memory_usage = 11 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder setMaxMemoryUsage(com.google.protobuf.Int64Value value) {
        if (maxMemoryUsageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          maxMemoryUsage_ = value;
          onChanged();
        } else {
          maxMemoryUsageBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#settings_max_memory_usage).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_memory_usage = 11 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder setMaxMemoryUsage(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (maxMemoryUsageBuilder_ == null) {
          maxMemoryUsage_ = builderForValue.build();
          onChanged();
        } else {
          maxMemoryUsageBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#settings_max_memory_usage).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_memory_usage = 11 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder mergeMaxMemoryUsage(com.google.protobuf.Int64Value value) {
        if (maxMemoryUsageBuilder_ == null) {
          if (maxMemoryUsage_ != null) {
            maxMemoryUsage_ =
              com.google.protobuf.Int64Value.newBuilder(maxMemoryUsage_).mergeFrom(value).buildPartial();
          } else {
            maxMemoryUsage_ = value;
          }
          onChanged();
        } else {
          maxMemoryUsageBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#settings_max_memory_usage).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_memory_usage = 11 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder clearMaxMemoryUsage() {
        if (maxMemoryUsageBuilder_ == null) {
          maxMemoryUsage_ = null;
          onChanged();
        } else {
          maxMemoryUsage_ = null;
          maxMemoryUsageBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#settings_max_memory_usage).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_memory_usage = 11 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64Value.Builder getMaxMemoryUsageBuilder() {
        
        onChanged();
        return getMaxMemoryUsageFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#settings_max_memory_usage).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_memory_usage = 11 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getMaxMemoryUsageOrBuilder() {
        if (maxMemoryUsageBuilder_ != null) {
          return maxMemoryUsageBuilder_.getMessageOrBuilder();
        } else {
          return maxMemoryUsage_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : maxMemoryUsage_;
        }
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#settings_max_memory_usage).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_memory_usage = 11 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getMaxMemoryUsageFieldBuilder() {
        if (maxMemoryUsageBuilder_ == null) {
          maxMemoryUsageBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getMaxMemoryUsage(),
                  getParentForChildren(),
                  isClean());
          maxMemoryUsage_ = null;
        }
        return maxMemoryUsageBuilder_;
      }

      private com.google.protobuf.Int64Value maxMemoryUsageForUser_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> maxMemoryUsageForUserBuilder_;
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-memory-usage-for-user).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_memory_usage_for_user = 12 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public boolean hasMaxMemoryUsageForUser() {
        return maxMemoryUsageForUserBuilder_ != null || maxMemoryUsageForUser_ != null;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-memory-usage-for-user).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_memory_usage_for_user = 12 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64Value getMaxMemoryUsageForUser() {
        if (maxMemoryUsageForUserBuilder_ == null) {
          return maxMemoryUsageForUser_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : maxMemoryUsageForUser_;
        } else {
          return maxMemoryUsageForUserBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-memory-usage-for-user).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_memory_usage_for_user = 12 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder setMaxMemoryUsageForUser(com.google.protobuf.Int64Value value) {
        if (maxMemoryUsageForUserBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          maxMemoryUsageForUser_ = value;
          onChanged();
        } else {
          maxMemoryUsageForUserBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-memory-usage-for-user).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_memory_usage_for_user = 12 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder setMaxMemoryUsageForUser(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (maxMemoryUsageForUserBuilder_ == null) {
          maxMemoryUsageForUser_ = builderForValue.build();
          onChanged();
        } else {
          maxMemoryUsageForUserBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-memory-usage-for-user).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_memory_usage_for_user = 12 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder mergeMaxMemoryUsageForUser(com.google.protobuf.Int64Value value) {
        if (maxMemoryUsageForUserBuilder_ == null) {
          if (maxMemoryUsageForUser_ != null) {
            maxMemoryUsageForUser_ =
              com.google.protobuf.Int64Value.newBuilder(maxMemoryUsageForUser_).mergeFrom(value).buildPartial();
          } else {
            maxMemoryUsageForUser_ = value;
          }
          onChanged();
        } else {
          maxMemoryUsageForUserBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-memory-usage-for-user).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_memory_usage_for_user = 12 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder clearMaxMemoryUsageForUser() {
        if (maxMemoryUsageForUserBuilder_ == null) {
          maxMemoryUsageForUser_ = null;
          onChanged();
        } else {
          maxMemoryUsageForUser_ = null;
          maxMemoryUsageForUserBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-memory-usage-for-user).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_memory_usage_for_user = 12 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64Value.Builder getMaxMemoryUsageForUserBuilder() {
        
        onChanged();
        return getMaxMemoryUsageForUserFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-memory-usage-for-user).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_memory_usage_for_user = 12 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getMaxMemoryUsageForUserOrBuilder() {
        if (maxMemoryUsageForUserBuilder_ != null) {
          return maxMemoryUsageForUserBuilder_.getMessageOrBuilder();
        } else {
          return maxMemoryUsageForUser_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : maxMemoryUsageForUser_;
        }
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-memory-usage-for-user).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_memory_usage_for_user = 12 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getMaxMemoryUsageForUserFieldBuilder() {
        if (maxMemoryUsageForUserBuilder_ == null) {
          maxMemoryUsageForUserBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getMaxMemoryUsageForUser(),
                  getParentForChildren(),
                  isClean());
          maxMemoryUsageForUser_ = null;
        }
        return maxMemoryUsageForUserBuilder_;
      }

      private com.google.protobuf.Int64Value maxNetworkBandwidth_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> maxNetworkBandwidthBuilder_;
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_network_bandwidth).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_network_bandwidth = 57;</code>
       */
      public boolean hasMaxNetworkBandwidth() {
        return maxNetworkBandwidthBuilder_ != null || maxNetworkBandwidth_ != null;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_network_bandwidth).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_network_bandwidth = 57;</code>
       */
      public com.google.protobuf.Int64Value getMaxNetworkBandwidth() {
        if (maxNetworkBandwidthBuilder_ == null) {
          return maxNetworkBandwidth_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : maxNetworkBandwidth_;
        } else {
          return maxNetworkBandwidthBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_network_bandwidth).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_network_bandwidth = 57;</code>
       */
      public Builder setMaxNetworkBandwidth(com.google.protobuf.Int64Value value) {
        if (maxNetworkBandwidthBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          maxNetworkBandwidth_ = value;
          onChanged();
        } else {
          maxNetworkBandwidthBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_network_bandwidth).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_network_bandwidth = 57;</code>
       */
      public Builder setMaxNetworkBandwidth(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (maxNetworkBandwidthBuilder_ == null) {
          maxNetworkBandwidth_ = builderForValue.build();
          onChanged();
        } else {
          maxNetworkBandwidthBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_network_bandwidth).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_network_bandwidth = 57;</code>
       */
      public Builder mergeMaxNetworkBandwidth(com.google.protobuf.Int64Value value) {
        if (maxNetworkBandwidthBuilder_ == null) {
          if (maxNetworkBandwidth_ != null) {
            maxNetworkBandwidth_ =
              com.google.protobuf.Int64Value.newBuilder(maxNetworkBandwidth_).mergeFrom(value).buildPartial();
          } else {
            maxNetworkBandwidth_ = value;
          }
          onChanged();
        } else {
          maxNetworkBandwidthBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_network_bandwidth).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_network_bandwidth = 57;</code>
       */
      public Builder clearMaxNetworkBandwidth() {
        if (maxNetworkBandwidthBuilder_ == null) {
          maxNetworkBandwidth_ = null;
          onChanged();
        } else {
          maxNetworkBandwidth_ = null;
          maxNetworkBandwidthBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_network_bandwidth).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_network_bandwidth = 57;</code>
       */
      public com.google.protobuf.Int64Value.Builder getMaxNetworkBandwidthBuilder() {
        
        onChanged();
        return getMaxNetworkBandwidthFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_network_bandwidth).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_network_bandwidth = 57;</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getMaxNetworkBandwidthOrBuilder() {
        if (maxNetworkBandwidthBuilder_ != null) {
          return maxNetworkBandwidthBuilder_.getMessageOrBuilder();
        } else {
          return maxNetworkBandwidth_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : maxNetworkBandwidth_;
        }
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_network_bandwidth).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_network_bandwidth = 57;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getMaxNetworkBandwidthFieldBuilder() {
        if (maxNetworkBandwidthBuilder_ == null) {
          maxNetworkBandwidthBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getMaxNetworkBandwidth(),
                  getParentForChildren(),
                  isClean());
          maxNetworkBandwidth_ = null;
        }
        return maxNetworkBandwidthBuilder_;
      }

      private com.google.protobuf.Int64Value maxNetworkBandwidthForUser_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> maxNetworkBandwidthForUserBuilder_;
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_network_bandwidth_for_user).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_network_bandwidth_for_user = 58;</code>
       */
      public boolean hasMaxNetworkBandwidthForUser() {
        return maxNetworkBandwidthForUserBuilder_ != null || maxNetworkBandwidthForUser_ != null;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_network_bandwidth_for_user).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_network_bandwidth_for_user = 58;</code>
       */
      public com.google.protobuf.Int64Value getMaxNetworkBandwidthForUser() {
        if (maxNetworkBandwidthForUserBuilder_ == null) {
          return maxNetworkBandwidthForUser_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : maxNetworkBandwidthForUser_;
        } else {
          return maxNetworkBandwidthForUserBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_network_bandwidth_for_user).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_network_bandwidth_for_user = 58;</code>
       */
      public Builder setMaxNetworkBandwidthForUser(com.google.protobuf.Int64Value value) {
        if (maxNetworkBandwidthForUserBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          maxNetworkBandwidthForUser_ = value;
          onChanged();
        } else {
          maxNetworkBandwidthForUserBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_network_bandwidth_for_user).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_network_bandwidth_for_user = 58;</code>
       */
      public Builder setMaxNetworkBandwidthForUser(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (maxNetworkBandwidthForUserBuilder_ == null) {
          maxNetworkBandwidthForUser_ = builderForValue.build();
          onChanged();
        } else {
          maxNetworkBandwidthForUserBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_network_bandwidth_for_user).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_network_bandwidth_for_user = 58;</code>
       */
      public Builder mergeMaxNetworkBandwidthForUser(com.google.protobuf.Int64Value value) {
        if (maxNetworkBandwidthForUserBuilder_ == null) {
          if (maxNetworkBandwidthForUser_ != null) {
            maxNetworkBandwidthForUser_ =
              com.google.protobuf.Int64Value.newBuilder(maxNetworkBandwidthForUser_).mergeFrom(value).buildPartial();
          } else {
            maxNetworkBandwidthForUser_ = value;
          }
          onChanged();
        } else {
          maxNetworkBandwidthForUserBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_network_bandwidth_for_user).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_network_bandwidth_for_user = 58;</code>
       */
      public Builder clearMaxNetworkBandwidthForUser() {
        if (maxNetworkBandwidthForUserBuilder_ == null) {
          maxNetworkBandwidthForUser_ = null;
          onChanged();
        } else {
          maxNetworkBandwidthForUser_ = null;
          maxNetworkBandwidthForUserBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_network_bandwidth_for_user).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_network_bandwidth_for_user = 58;</code>
       */
      public com.google.protobuf.Int64Value.Builder getMaxNetworkBandwidthForUserBuilder() {
        
        onChanged();
        return getMaxNetworkBandwidthForUserFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_network_bandwidth_for_user).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_network_bandwidth_for_user = 58;</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getMaxNetworkBandwidthForUserOrBuilder() {
        if (maxNetworkBandwidthForUserBuilder_ != null) {
          return maxNetworkBandwidthForUserBuilder_.getMessageOrBuilder();
        } else {
          return maxNetworkBandwidthForUser_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : maxNetworkBandwidthForUser_;
        }
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_network_bandwidth_for_user).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_network_bandwidth_for_user = 58;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getMaxNetworkBandwidthForUserFieldBuilder() {
        if (maxNetworkBandwidthForUserBuilder_ == null) {
          maxNetworkBandwidthForUserBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getMaxNetworkBandwidthForUser(),
                  getParentForChildren(),
                  isClean());
          maxNetworkBandwidthForUser_ = null;
        }
        return maxNetworkBandwidthForUserBuilder_;
      }

      private com.google.protobuf.BoolValue forceIndexByDate_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> forceIndexByDateBuilder_;
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-force_index_by_date).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue force_index_by_date = 59;</code>
       */
      public boolean hasForceIndexByDate() {
        return forceIndexByDateBuilder_ != null || forceIndexByDate_ != null;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-force_index_by_date).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue force_index_by_date = 59;</code>
       */
      public com.google.protobuf.BoolValue getForceIndexByDate() {
        if (forceIndexByDateBuilder_ == null) {
          return forceIndexByDate_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : forceIndexByDate_;
        } else {
          return forceIndexByDateBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-force_index_by_date).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue force_index_by_date = 59;</code>
       */
      public Builder setForceIndexByDate(com.google.protobuf.BoolValue value) {
        if (forceIndexByDateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          forceIndexByDate_ = value;
          onChanged();
        } else {
          forceIndexByDateBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-force_index_by_date).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue force_index_by_date = 59;</code>
       */
      public Builder setForceIndexByDate(
          com.google.protobuf.BoolValue.Builder builderForValue) {
        if (forceIndexByDateBuilder_ == null) {
          forceIndexByDate_ = builderForValue.build();
          onChanged();
        } else {
          forceIndexByDateBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-force_index_by_date).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue force_index_by_date = 59;</code>
       */
      public Builder mergeForceIndexByDate(com.google.protobuf.BoolValue value) {
        if (forceIndexByDateBuilder_ == null) {
          if (forceIndexByDate_ != null) {
            forceIndexByDate_ =
              com.google.protobuf.BoolValue.newBuilder(forceIndexByDate_).mergeFrom(value).buildPartial();
          } else {
            forceIndexByDate_ = value;
          }
          onChanged();
        } else {
          forceIndexByDateBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-force_index_by_date).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue force_index_by_date = 59;</code>
       */
      public Builder clearForceIndexByDate() {
        if (forceIndexByDateBuilder_ == null) {
          forceIndexByDate_ = null;
          onChanged();
        } else {
          forceIndexByDate_ = null;
          forceIndexByDateBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-force_index_by_date).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue force_index_by_date = 59;</code>
       */
      public com.google.protobuf.BoolValue.Builder getForceIndexByDateBuilder() {
        
        onChanged();
        return getForceIndexByDateFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-force_index_by_date).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue force_index_by_date = 59;</code>
       */
      public com.google.protobuf.BoolValueOrBuilder getForceIndexByDateOrBuilder() {
        if (forceIndexByDateBuilder_ != null) {
          return forceIndexByDateBuilder_.getMessageOrBuilder();
        } else {
          return forceIndexByDate_ == null ?
              com.google.protobuf.BoolValue.getDefaultInstance() : forceIndexByDate_;
        }
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-force_index_by_date).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue force_index_by_date = 59;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> 
          getForceIndexByDateFieldBuilder() {
        if (forceIndexByDateBuilder_ == null) {
          forceIndexByDateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder>(
                  getForceIndexByDate(),
                  getParentForChildren(),
                  isClean());
          forceIndexByDate_ = null;
        }
        return forceIndexByDateBuilder_;
      }

      private com.google.protobuf.BoolValue forcePrimaryKey_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> forcePrimaryKeyBuilder_;
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#force-primary-key).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue force_primary_key = 60;</code>
       */
      public boolean hasForcePrimaryKey() {
        return forcePrimaryKeyBuilder_ != null || forcePrimaryKey_ != null;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#force-primary-key).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue force_primary_key = 60;</code>
       */
      public com.google.protobuf.BoolValue getForcePrimaryKey() {
        if (forcePrimaryKeyBuilder_ == null) {
          return forcePrimaryKey_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : forcePrimaryKey_;
        } else {
          return forcePrimaryKeyBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#force-primary-key).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue force_primary_key = 60;</code>
       */
      public Builder setForcePrimaryKey(com.google.protobuf.BoolValue value) {
        if (forcePrimaryKeyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          forcePrimaryKey_ = value;
          onChanged();
        } else {
          forcePrimaryKeyBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#force-primary-key).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue force_primary_key = 60;</code>
       */
      public Builder setForcePrimaryKey(
          com.google.protobuf.BoolValue.Builder builderForValue) {
        if (forcePrimaryKeyBuilder_ == null) {
          forcePrimaryKey_ = builderForValue.build();
          onChanged();
        } else {
          forcePrimaryKeyBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#force-primary-key).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue force_primary_key = 60;</code>
       */
      public Builder mergeForcePrimaryKey(com.google.protobuf.BoolValue value) {
        if (forcePrimaryKeyBuilder_ == null) {
          if (forcePrimaryKey_ != null) {
            forcePrimaryKey_ =
              com.google.protobuf.BoolValue.newBuilder(forcePrimaryKey_).mergeFrom(value).buildPartial();
          } else {
            forcePrimaryKey_ = value;
          }
          onChanged();
        } else {
          forcePrimaryKeyBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#force-primary-key).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue force_primary_key = 60;</code>
       */
      public Builder clearForcePrimaryKey() {
        if (forcePrimaryKeyBuilder_ == null) {
          forcePrimaryKey_ = null;
          onChanged();
        } else {
          forcePrimaryKey_ = null;
          forcePrimaryKeyBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#force-primary-key).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue force_primary_key = 60;</code>
       */
      public com.google.protobuf.BoolValue.Builder getForcePrimaryKeyBuilder() {
        
        onChanged();
        return getForcePrimaryKeyFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#force-primary-key).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue force_primary_key = 60;</code>
       */
      public com.google.protobuf.BoolValueOrBuilder getForcePrimaryKeyOrBuilder() {
        if (forcePrimaryKeyBuilder_ != null) {
          return forcePrimaryKeyBuilder_.getMessageOrBuilder();
        } else {
          return forcePrimaryKey_ == null ?
              com.google.protobuf.BoolValue.getDefaultInstance() : forcePrimaryKey_;
        }
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#force-primary-key).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue force_primary_key = 60;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> 
          getForcePrimaryKeyFieldBuilder() {
        if (forcePrimaryKeyBuilder_ == null) {
          forcePrimaryKeyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder>(
                  getForcePrimaryKey(),
                  getParentForChildren(),
                  isClean());
          forcePrimaryKey_ = null;
        }
        return forcePrimaryKeyBuilder_;
      }

      private com.google.protobuf.Int64Value maxRowsToRead_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> maxRowsToReadBuilder_;
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-rows-to-read).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_rows_to_read = 13 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public boolean hasMaxRowsToRead() {
        return maxRowsToReadBuilder_ != null || maxRowsToRead_ != null;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-rows-to-read).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_rows_to_read = 13 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64Value getMaxRowsToRead() {
        if (maxRowsToReadBuilder_ == null) {
          return maxRowsToRead_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : maxRowsToRead_;
        } else {
          return maxRowsToReadBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-rows-to-read).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_rows_to_read = 13 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder setMaxRowsToRead(com.google.protobuf.Int64Value value) {
        if (maxRowsToReadBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          maxRowsToRead_ = value;
          onChanged();
        } else {
          maxRowsToReadBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-rows-to-read).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_rows_to_read = 13 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder setMaxRowsToRead(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (maxRowsToReadBuilder_ == null) {
          maxRowsToRead_ = builderForValue.build();
          onChanged();
        } else {
          maxRowsToReadBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-rows-to-read).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_rows_to_read = 13 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder mergeMaxRowsToRead(com.google.protobuf.Int64Value value) {
        if (maxRowsToReadBuilder_ == null) {
          if (maxRowsToRead_ != null) {
            maxRowsToRead_ =
              com.google.protobuf.Int64Value.newBuilder(maxRowsToRead_).mergeFrom(value).buildPartial();
          } else {
            maxRowsToRead_ = value;
          }
          onChanged();
        } else {
          maxRowsToReadBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-rows-to-read).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_rows_to_read = 13 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder clearMaxRowsToRead() {
        if (maxRowsToReadBuilder_ == null) {
          maxRowsToRead_ = null;
          onChanged();
        } else {
          maxRowsToRead_ = null;
          maxRowsToReadBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-rows-to-read).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_rows_to_read = 13 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64Value.Builder getMaxRowsToReadBuilder() {
        
        onChanged();
        return getMaxRowsToReadFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-rows-to-read).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_rows_to_read = 13 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getMaxRowsToReadOrBuilder() {
        if (maxRowsToReadBuilder_ != null) {
          return maxRowsToReadBuilder_.getMessageOrBuilder();
        } else {
          return maxRowsToRead_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : maxRowsToRead_;
        }
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-rows-to-read).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_rows_to_read = 13 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getMaxRowsToReadFieldBuilder() {
        if (maxRowsToReadBuilder_ == null) {
          maxRowsToReadBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getMaxRowsToRead(),
                  getParentForChildren(),
                  isClean());
          maxRowsToRead_ = null;
        }
        return maxRowsToReadBuilder_;
      }

      private com.google.protobuf.Int64Value maxBytesToRead_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> maxBytesToReadBuilder_;
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-bytes-to-read).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_bytes_to_read = 14 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public boolean hasMaxBytesToRead() {
        return maxBytesToReadBuilder_ != null || maxBytesToRead_ != null;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-bytes-to-read).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_bytes_to_read = 14 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64Value getMaxBytesToRead() {
        if (maxBytesToReadBuilder_ == null) {
          return maxBytesToRead_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : maxBytesToRead_;
        } else {
          return maxBytesToReadBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-bytes-to-read).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_bytes_to_read = 14 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder setMaxBytesToRead(com.google.protobuf.Int64Value value) {
        if (maxBytesToReadBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          maxBytesToRead_ = value;
          onChanged();
        } else {
          maxBytesToReadBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-bytes-to-read).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_bytes_to_read = 14 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder setMaxBytesToRead(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (maxBytesToReadBuilder_ == null) {
          maxBytesToRead_ = builderForValue.build();
          onChanged();
        } else {
          maxBytesToReadBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-bytes-to-read).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_bytes_to_read = 14 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder mergeMaxBytesToRead(com.google.protobuf.Int64Value value) {
        if (maxBytesToReadBuilder_ == null) {
          if (maxBytesToRead_ != null) {
            maxBytesToRead_ =
              com.google.protobuf.Int64Value.newBuilder(maxBytesToRead_).mergeFrom(value).buildPartial();
          } else {
            maxBytesToRead_ = value;
          }
          onChanged();
        } else {
          maxBytesToReadBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-bytes-to-read).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_bytes_to_read = 14 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder clearMaxBytesToRead() {
        if (maxBytesToReadBuilder_ == null) {
          maxBytesToRead_ = null;
          onChanged();
        } else {
          maxBytesToRead_ = null;
          maxBytesToReadBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-bytes-to-read).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_bytes_to_read = 14 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64Value.Builder getMaxBytesToReadBuilder() {
        
        onChanged();
        return getMaxBytesToReadFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-bytes-to-read).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_bytes_to_read = 14 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getMaxBytesToReadOrBuilder() {
        if (maxBytesToReadBuilder_ != null) {
          return maxBytesToReadBuilder_.getMessageOrBuilder();
        } else {
          return maxBytesToRead_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : maxBytesToRead_;
        }
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-bytes-to-read).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_bytes_to_read = 14 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getMaxBytesToReadFieldBuilder() {
        if (maxBytesToReadBuilder_ == null) {
          maxBytesToReadBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getMaxBytesToRead(),
                  getParentForChildren(),
                  isClean());
          maxBytesToRead_ = null;
        }
        return maxBytesToReadBuilder_;
      }

      private int readOverflowMode_ = 0;
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#read-overflow-mode).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.UserSettings.OverflowMode read_overflow_mode = 15;</code>
       */
      public int getReadOverflowModeValue() {
        return readOverflowMode_;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#read-overflow-mode).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.UserSettings.OverflowMode read_overflow_mode = 15;</code>
       */
      public Builder setReadOverflowModeValue(int value) {
        readOverflowMode_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#read-overflow-mode).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.UserSettings.OverflowMode read_overflow_mode = 15;</code>
       */
      public yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.OverflowMode getReadOverflowMode() {
        @SuppressWarnings("deprecation")
        yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.OverflowMode result = yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.OverflowMode.valueOf(readOverflowMode_);
        return result == null ? yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.OverflowMode.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#read-overflow-mode).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.UserSettings.OverflowMode read_overflow_mode = 15;</code>
       */
      public Builder setReadOverflowMode(yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.OverflowMode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        readOverflowMode_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#read-overflow-mode).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.UserSettings.OverflowMode read_overflow_mode = 15;</code>
       */
      public Builder clearReadOverflowMode() {
        
        readOverflowMode_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Int64Value maxRowsToGroupBy_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> maxRowsToGroupByBuilder_;
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-rows-to-group-by).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_rows_to_group_by = 16 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public boolean hasMaxRowsToGroupBy() {
        return maxRowsToGroupByBuilder_ != null || maxRowsToGroupBy_ != null;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-rows-to-group-by).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_rows_to_group_by = 16 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64Value getMaxRowsToGroupBy() {
        if (maxRowsToGroupByBuilder_ == null) {
          return maxRowsToGroupBy_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : maxRowsToGroupBy_;
        } else {
          return maxRowsToGroupByBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-rows-to-group-by).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_rows_to_group_by = 16 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder setMaxRowsToGroupBy(com.google.protobuf.Int64Value value) {
        if (maxRowsToGroupByBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          maxRowsToGroupBy_ = value;
          onChanged();
        } else {
          maxRowsToGroupByBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-rows-to-group-by).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_rows_to_group_by = 16 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder setMaxRowsToGroupBy(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (maxRowsToGroupByBuilder_ == null) {
          maxRowsToGroupBy_ = builderForValue.build();
          onChanged();
        } else {
          maxRowsToGroupByBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-rows-to-group-by).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_rows_to_group_by = 16 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder mergeMaxRowsToGroupBy(com.google.protobuf.Int64Value value) {
        if (maxRowsToGroupByBuilder_ == null) {
          if (maxRowsToGroupBy_ != null) {
            maxRowsToGroupBy_ =
              com.google.protobuf.Int64Value.newBuilder(maxRowsToGroupBy_).mergeFrom(value).buildPartial();
          } else {
            maxRowsToGroupBy_ = value;
          }
          onChanged();
        } else {
          maxRowsToGroupByBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-rows-to-group-by).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_rows_to_group_by = 16 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder clearMaxRowsToGroupBy() {
        if (maxRowsToGroupByBuilder_ == null) {
          maxRowsToGroupBy_ = null;
          onChanged();
        } else {
          maxRowsToGroupBy_ = null;
          maxRowsToGroupByBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-rows-to-group-by).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_rows_to_group_by = 16 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64Value.Builder getMaxRowsToGroupByBuilder() {
        
        onChanged();
        return getMaxRowsToGroupByFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-rows-to-group-by).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_rows_to_group_by = 16 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getMaxRowsToGroupByOrBuilder() {
        if (maxRowsToGroupByBuilder_ != null) {
          return maxRowsToGroupByBuilder_.getMessageOrBuilder();
        } else {
          return maxRowsToGroupBy_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : maxRowsToGroupBy_;
        }
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-rows-to-group-by).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_rows_to_group_by = 16 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getMaxRowsToGroupByFieldBuilder() {
        if (maxRowsToGroupByBuilder_ == null) {
          maxRowsToGroupByBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getMaxRowsToGroupBy(),
                  getParentForChildren(),
                  isClean());
          maxRowsToGroupBy_ = null;
        }
        return maxRowsToGroupByBuilder_;
      }

      private int groupByOverflowMode_ = 0;
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#group-by-overflow-mode).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.UserSettings.GroupByOverflowMode group_by_overflow_mode = 17;</code>
       */
      public int getGroupByOverflowModeValue() {
        return groupByOverflowMode_;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#group-by-overflow-mode).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.UserSettings.GroupByOverflowMode group_by_overflow_mode = 17;</code>
       */
      public Builder setGroupByOverflowModeValue(int value) {
        groupByOverflowMode_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#group-by-overflow-mode).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.UserSettings.GroupByOverflowMode group_by_overflow_mode = 17;</code>
       */
      public yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.GroupByOverflowMode getGroupByOverflowMode() {
        @SuppressWarnings("deprecation")
        yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.GroupByOverflowMode result = yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.GroupByOverflowMode.valueOf(groupByOverflowMode_);
        return result == null ? yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.GroupByOverflowMode.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#group-by-overflow-mode).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.UserSettings.GroupByOverflowMode group_by_overflow_mode = 17;</code>
       */
      public Builder setGroupByOverflowMode(yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.GroupByOverflowMode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        groupByOverflowMode_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#group-by-overflow-mode).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.UserSettings.GroupByOverflowMode group_by_overflow_mode = 17;</code>
       */
      public Builder clearGroupByOverflowMode() {
        
        groupByOverflowMode_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Int64Value maxRowsToSort_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> maxRowsToSortBuilder_;
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-rows-to-sort).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_rows_to_sort = 18 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public boolean hasMaxRowsToSort() {
        return maxRowsToSortBuilder_ != null || maxRowsToSort_ != null;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-rows-to-sort).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_rows_to_sort = 18 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64Value getMaxRowsToSort() {
        if (maxRowsToSortBuilder_ == null) {
          return maxRowsToSort_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : maxRowsToSort_;
        } else {
          return maxRowsToSortBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-rows-to-sort).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_rows_to_sort = 18 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder setMaxRowsToSort(com.google.protobuf.Int64Value value) {
        if (maxRowsToSortBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          maxRowsToSort_ = value;
          onChanged();
        } else {
          maxRowsToSortBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-rows-to-sort).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_rows_to_sort = 18 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder setMaxRowsToSort(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (maxRowsToSortBuilder_ == null) {
          maxRowsToSort_ = builderForValue.build();
          onChanged();
        } else {
          maxRowsToSortBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-rows-to-sort).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_rows_to_sort = 18 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder mergeMaxRowsToSort(com.google.protobuf.Int64Value value) {
        if (maxRowsToSortBuilder_ == null) {
          if (maxRowsToSort_ != null) {
            maxRowsToSort_ =
              com.google.protobuf.Int64Value.newBuilder(maxRowsToSort_).mergeFrom(value).buildPartial();
          } else {
            maxRowsToSort_ = value;
          }
          onChanged();
        } else {
          maxRowsToSortBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-rows-to-sort).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_rows_to_sort = 18 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder clearMaxRowsToSort() {
        if (maxRowsToSortBuilder_ == null) {
          maxRowsToSort_ = null;
          onChanged();
        } else {
          maxRowsToSort_ = null;
          maxRowsToSortBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-rows-to-sort).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_rows_to_sort = 18 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64Value.Builder getMaxRowsToSortBuilder() {
        
        onChanged();
        return getMaxRowsToSortFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-rows-to-sort).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_rows_to_sort = 18 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getMaxRowsToSortOrBuilder() {
        if (maxRowsToSortBuilder_ != null) {
          return maxRowsToSortBuilder_.getMessageOrBuilder();
        } else {
          return maxRowsToSort_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : maxRowsToSort_;
        }
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-rows-to-sort).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_rows_to_sort = 18 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getMaxRowsToSortFieldBuilder() {
        if (maxRowsToSortBuilder_ == null) {
          maxRowsToSortBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getMaxRowsToSort(),
                  getParentForChildren(),
                  isClean());
          maxRowsToSort_ = null;
        }
        return maxRowsToSortBuilder_;
      }

      private com.google.protobuf.Int64Value maxBytesToSort_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> maxBytesToSortBuilder_;
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-bytes-to-sort).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_bytes_to_sort = 19 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public boolean hasMaxBytesToSort() {
        return maxBytesToSortBuilder_ != null || maxBytesToSort_ != null;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-bytes-to-sort).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_bytes_to_sort = 19 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64Value getMaxBytesToSort() {
        if (maxBytesToSortBuilder_ == null) {
          return maxBytesToSort_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : maxBytesToSort_;
        } else {
          return maxBytesToSortBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-bytes-to-sort).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_bytes_to_sort = 19 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder setMaxBytesToSort(com.google.protobuf.Int64Value value) {
        if (maxBytesToSortBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          maxBytesToSort_ = value;
          onChanged();
        } else {
          maxBytesToSortBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-bytes-to-sort).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_bytes_to_sort = 19 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder setMaxBytesToSort(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (maxBytesToSortBuilder_ == null) {
          maxBytesToSort_ = builderForValue.build();
          onChanged();
        } else {
          maxBytesToSortBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-bytes-to-sort).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_bytes_to_sort = 19 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder mergeMaxBytesToSort(com.google.protobuf.Int64Value value) {
        if (maxBytesToSortBuilder_ == null) {
          if (maxBytesToSort_ != null) {
            maxBytesToSort_ =
              com.google.protobuf.Int64Value.newBuilder(maxBytesToSort_).mergeFrom(value).buildPartial();
          } else {
            maxBytesToSort_ = value;
          }
          onChanged();
        } else {
          maxBytesToSortBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-bytes-to-sort).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_bytes_to_sort = 19 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder clearMaxBytesToSort() {
        if (maxBytesToSortBuilder_ == null) {
          maxBytesToSort_ = null;
          onChanged();
        } else {
          maxBytesToSort_ = null;
          maxBytesToSortBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-bytes-to-sort).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_bytes_to_sort = 19 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64Value.Builder getMaxBytesToSortBuilder() {
        
        onChanged();
        return getMaxBytesToSortFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-bytes-to-sort).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_bytes_to_sort = 19 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getMaxBytesToSortOrBuilder() {
        if (maxBytesToSortBuilder_ != null) {
          return maxBytesToSortBuilder_.getMessageOrBuilder();
        } else {
          return maxBytesToSort_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : maxBytesToSort_;
        }
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-bytes-to-sort).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_bytes_to_sort = 19 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getMaxBytesToSortFieldBuilder() {
        if (maxBytesToSortBuilder_ == null) {
          maxBytesToSortBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getMaxBytesToSort(),
                  getParentForChildren(),
                  isClean());
          maxBytesToSort_ = null;
        }
        return maxBytesToSortBuilder_;
      }

      private int sortOverflowMode_ = 0;
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#sort-overflow-mode).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.UserSettings.OverflowMode sort_overflow_mode = 20;</code>
       */
      public int getSortOverflowModeValue() {
        return sortOverflowMode_;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#sort-overflow-mode).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.UserSettings.OverflowMode sort_overflow_mode = 20;</code>
       */
      public Builder setSortOverflowModeValue(int value) {
        sortOverflowMode_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#sort-overflow-mode).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.UserSettings.OverflowMode sort_overflow_mode = 20;</code>
       */
      public yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.OverflowMode getSortOverflowMode() {
        @SuppressWarnings("deprecation")
        yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.OverflowMode result = yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.OverflowMode.valueOf(sortOverflowMode_);
        return result == null ? yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.OverflowMode.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#sort-overflow-mode).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.UserSettings.OverflowMode sort_overflow_mode = 20;</code>
       */
      public Builder setSortOverflowMode(yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.OverflowMode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        sortOverflowMode_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#sort-overflow-mode).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.UserSettings.OverflowMode sort_overflow_mode = 20;</code>
       */
      public Builder clearSortOverflowMode() {
        
        sortOverflowMode_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Int64Value maxResultRows_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> maxResultRowsBuilder_;
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-result-rows).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_result_rows = 21 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public boolean hasMaxResultRows() {
        return maxResultRowsBuilder_ != null || maxResultRows_ != null;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-result-rows).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_result_rows = 21 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64Value getMaxResultRows() {
        if (maxResultRowsBuilder_ == null) {
          return maxResultRows_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : maxResultRows_;
        } else {
          return maxResultRowsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-result-rows).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_result_rows = 21 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder setMaxResultRows(com.google.protobuf.Int64Value value) {
        if (maxResultRowsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          maxResultRows_ = value;
          onChanged();
        } else {
          maxResultRowsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-result-rows).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_result_rows = 21 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder setMaxResultRows(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (maxResultRowsBuilder_ == null) {
          maxResultRows_ = builderForValue.build();
          onChanged();
        } else {
          maxResultRowsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-result-rows).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_result_rows = 21 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder mergeMaxResultRows(com.google.protobuf.Int64Value value) {
        if (maxResultRowsBuilder_ == null) {
          if (maxResultRows_ != null) {
            maxResultRows_ =
              com.google.protobuf.Int64Value.newBuilder(maxResultRows_).mergeFrom(value).buildPartial();
          } else {
            maxResultRows_ = value;
          }
          onChanged();
        } else {
          maxResultRowsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-result-rows).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_result_rows = 21 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder clearMaxResultRows() {
        if (maxResultRowsBuilder_ == null) {
          maxResultRows_ = null;
          onChanged();
        } else {
          maxResultRows_ = null;
          maxResultRowsBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-result-rows).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_result_rows = 21 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64Value.Builder getMaxResultRowsBuilder() {
        
        onChanged();
        return getMaxResultRowsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-result-rows).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_result_rows = 21 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getMaxResultRowsOrBuilder() {
        if (maxResultRowsBuilder_ != null) {
          return maxResultRowsBuilder_.getMessageOrBuilder();
        } else {
          return maxResultRows_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : maxResultRows_;
        }
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-result-rows).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_result_rows = 21 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getMaxResultRowsFieldBuilder() {
        if (maxResultRowsBuilder_ == null) {
          maxResultRowsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getMaxResultRows(),
                  getParentForChildren(),
                  isClean());
          maxResultRows_ = null;
        }
        return maxResultRowsBuilder_;
      }

      private com.google.protobuf.Int64Value maxResultBytes_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> maxResultBytesBuilder_;
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-result-bytes).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_result_bytes = 22 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public boolean hasMaxResultBytes() {
        return maxResultBytesBuilder_ != null || maxResultBytes_ != null;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-result-bytes).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_result_bytes = 22 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64Value getMaxResultBytes() {
        if (maxResultBytesBuilder_ == null) {
          return maxResultBytes_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : maxResultBytes_;
        } else {
          return maxResultBytesBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-result-bytes).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_result_bytes = 22 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder setMaxResultBytes(com.google.protobuf.Int64Value value) {
        if (maxResultBytesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          maxResultBytes_ = value;
          onChanged();
        } else {
          maxResultBytesBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-result-bytes).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_result_bytes = 22 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder setMaxResultBytes(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (maxResultBytesBuilder_ == null) {
          maxResultBytes_ = builderForValue.build();
          onChanged();
        } else {
          maxResultBytesBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-result-bytes).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_result_bytes = 22 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder mergeMaxResultBytes(com.google.protobuf.Int64Value value) {
        if (maxResultBytesBuilder_ == null) {
          if (maxResultBytes_ != null) {
            maxResultBytes_ =
              com.google.protobuf.Int64Value.newBuilder(maxResultBytes_).mergeFrom(value).buildPartial();
          } else {
            maxResultBytes_ = value;
          }
          onChanged();
        } else {
          maxResultBytesBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-result-bytes).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_result_bytes = 22 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder clearMaxResultBytes() {
        if (maxResultBytesBuilder_ == null) {
          maxResultBytes_ = null;
          onChanged();
        } else {
          maxResultBytes_ = null;
          maxResultBytesBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-result-bytes).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_result_bytes = 22 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64Value.Builder getMaxResultBytesBuilder() {
        
        onChanged();
        return getMaxResultBytesFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-result-bytes).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_result_bytes = 22 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getMaxResultBytesOrBuilder() {
        if (maxResultBytesBuilder_ != null) {
          return maxResultBytesBuilder_.getMessageOrBuilder();
        } else {
          return maxResultBytes_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : maxResultBytes_;
        }
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-result-bytes).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_result_bytes = 22 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getMaxResultBytesFieldBuilder() {
        if (maxResultBytesBuilder_ == null) {
          maxResultBytesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getMaxResultBytes(),
                  getParentForChildren(),
                  isClean());
          maxResultBytes_ = null;
        }
        return maxResultBytesBuilder_;
      }

      private int resultOverflowMode_ = 0;
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#result-overflow-mode).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.UserSettings.OverflowMode result_overflow_mode = 23;</code>
       */
      public int getResultOverflowModeValue() {
        return resultOverflowMode_;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#result-overflow-mode).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.UserSettings.OverflowMode result_overflow_mode = 23;</code>
       */
      public Builder setResultOverflowModeValue(int value) {
        resultOverflowMode_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#result-overflow-mode).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.UserSettings.OverflowMode result_overflow_mode = 23;</code>
       */
      public yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.OverflowMode getResultOverflowMode() {
        @SuppressWarnings("deprecation")
        yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.OverflowMode result = yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.OverflowMode.valueOf(resultOverflowMode_);
        return result == null ? yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.OverflowMode.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#result-overflow-mode).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.UserSettings.OverflowMode result_overflow_mode = 23;</code>
       */
      public Builder setResultOverflowMode(yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.OverflowMode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        resultOverflowMode_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#result-overflow-mode).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.UserSettings.OverflowMode result_overflow_mode = 23;</code>
       */
      public Builder clearResultOverflowMode() {
        
        resultOverflowMode_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Int64Value maxRowsInDistinct_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> maxRowsInDistinctBuilder_;
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-rows-in-distinct).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_rows_in_distinct = 24 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public boolean hasMaxRowsInDistinct() {
        return maxRowsInDistinctBuilder_ != null || maxRowsInDistinct_ != null;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-rows-in-distinct).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_rows_in_distinct = 24 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64Value getMaxRowsInDistinct() {
        if (maxRowsInDistinctBuilder_ == null) {
          return maxRowsInDistinct_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : maxRowsInDistinct_;
        } else {
          return maxRowsInDistinctBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-rows-in-distinct).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_rows_in_distinct = 24 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder setMaxRowsInDistinct(com.google.protobuf.Int64Value value) {
        if (maxRowsInDistinctBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          maxRowsInDistinct_ = value;
          onChanged();
        } else {
          maxRowsInDistinctBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-rows-in-distinct).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_rows_in_distinct = 24 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder setMaxRowsInDistinct(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (maxRowsInDistinctBuilder_ == null) {
          maxRowsInDistinct_ = builderForValue.build();
          onChanged();
        } else {
          maxRowsInDistinctBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-rows-in-distinct).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_rows_in_distinct = 24 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder mergeMaxRowsInDistinct(com.google.protobuf.Int64Value value) {
        if (maxRowsInDistinctBuilder_ == null) {
          if (maxRowsInDistinct_ != null) {
            maxRowsInDistinct_ =
              com.google.protobuf.Int64Value.newBuilder(maxRowsInDistinct_).mergeFrom(value).buildPartial();
          } else {
            maxRowsInDistinct_ = value;
          }
          onChanged();
        } else {
          maxRowsInDistinctBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-rows-in-distinct).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_rows_in_distinct = 24 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder clearMaxRowsInDistinct() {
        if (maxRowsInDistinctBuilder_ == null) {
          maxRowsInDistinct_ = null;
          onChanged();
        } else {
          maxRowsInDistinct_ = null;
          maxRowsInDistinctBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-rows-in-distinct).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_rows_in_distinct = 24 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64Value.Builder getMaxRowsInDistinctBuilder() {
        
        onChanged();
        return getMaxRowsInDistinctFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-rows-in-distinct).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_rows_in_distinct = 24 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getMaxRowsInDistinctOrBuilder() {
        if (maxRowsInDistinctBuilder_ != null) {
          return maxRowsInDistinctBuilder_.getMessageOrBuilder();
        } else {
          return maxRowsInDistinct_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : maxRowsInDistinct_;
        }
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-rows-in-distinct).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_rows_in_distinct = 24 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getMaxRowsInDistinctFieldBuilder() {
        if (maxRowsInDistinctBuilder_ == null) {
          maxRowsInDistinctBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getMaxRowsInDistinct(),
                  getParentForChildren(),
                  isClean());
          maxRowsInDistinct_ = null;
        }
        return maxRowsInDistinctBuilder_;
      }

      private com.google.protobuf.Int64Value maxBytesInDistinct_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> maxBytesInDistinctBuilder_;
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-bytes-in-distinct).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_bytes_in_distinct = 25 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public boolean hasMaxBytesInDistinct() {
        return maxBytesInDistinctBuilder_ != null || maxBytesInDistinct_ != null;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-bytes-in-distinct).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_bytes_in_distinct = 25 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64Value getMaxBytesInDistinct() {
        if (maxBytesInDistinctBuilder_ == null) {
          return maxBytesInDistinct_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : maxBytesInDistinct_;
        } else {
          return maxBytesInDistinctBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-bytes-in-distinct).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_bytes_in_distinct = 25 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder setMaxBytesInDistinct(com.google.protobuf.Int64Value value) {
        if (maxBytesInDistinctBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          maxBytesInDistinct_ = value;
          onChanged();
        } else {
          maxBytesInDistinctBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-bytes-in-distinct).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_bytes_in_distinct = 25 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder setMaxBytesInDistinct(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (maxBytesInDistinctBuilder_ == null) {
          maxBytesInDistinct_ = builderForValue.build();
          onChanged();
        } else {
          maxBytesInDistinctBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-bytes-in-distinct).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_bytes_in_distinct = 25 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder mergeMaxBytesInDistinct(com.google.protobuf.Int64Value value) {
        if (maxBytesInDistinctBuilder_ == null) {
          if (maxBytesInDistinct_ != null) {
            maxBytesInDistinct_ =
              com.google.protobuf.Int64Value.newBuilder(maxBytesInDistinct_).mergeFrom(value).buildPartial();
          } else {
            maxBytesInDistinct_ = value;
          }
          onChanged();
        } else {
          maxBytesInDistinctBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-bytes-in-distinct).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_bytes_in_distinct = 25 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder clearMaxBytesInDistinct() {
        if (maxBytesInDistinctBuilder_ == null) {
          maxBytesInDistinct_ = null;
          onChanged();
        } else {
          maxBytesInDistinct_ = null;
          maxBytesInDistinctBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-bytes-in-distinct).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_bytes_in_distinct = 25 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64Value.Builder getMaxBytesInDistinctBuilder() {
        
        onChanged();
        return getMaxBytesInDistinctFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-bytes-in-distinct).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_bytes_in_distinct = 25 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getMaxBytesInDistinctOrBuilder() {
        if (maxBytesInDistinctBuilder_ != null) {
          return maxBytesInDistinctBuilder_.getMessageOrBuilder();
        } else {
          return maxBytesInDistinct_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : maxBytesInDistinct_;
        }
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-bytes-in-distinct).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_bytes_in_distinct = 25 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getMaxBytesInDistinctFieldBuilder() {
        if (maxBytesInDistinctBuilder_ == null) {
          maxBytesInDistinctBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getMaxBytesInDistinct(),
                  getParentForChildren(),
                  isClean());
          maxBytesInDistinct_ = null;
        }
        return maxBytesInDistinctBuilder_;
      }

      private int distinctOverflowMode_ = 0;
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#distinct-overflow-mode).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.UserSettings.OverflowMode distinct_overflow_mode = 26;</code>
       */
      public int getDistinctOverflowModeValue() {
        return distinctOverflowMode_;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#distinct-overflow-mode).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.UserSettings.OverflowMode distinct_overflow_mode = 26;</code>
       */
      public Builder setDistinctOverflowModeValue(int value) {
        distinctOverflowMode_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#distinct-overflow-mode).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.UserSettings.OverflowMode distinct_overflow_mode = 26;</code>
       */
      public yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.OverflowMode getDistinctOverflowMode() {
        @SuppressWarnings("deprecation")
        yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.OverflowMode result = yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.OverflowMode.valueOf(distinctOverflowMode_);
        return result == null ? yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.OverflowMode.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#distinct-overflow-mode).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.UserSettings.OverflowMode distinct_overflow_mode = 26;</code>
       */
      public Builder setDistinctOverflowMode(yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.OverflowMode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        distinctOverflowMode_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#distinct-overflow-mode).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.UserSettings.OverflowMode distinct_overflow_mode = 26;</code>
       */
      public Builder clearDistinctOverflowMode() {
        
        distinctOverflowMode_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Int64Value maxRowsToTransfer_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> maxRowsToTransferBuilder_;
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-rows-to-transfer).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_rows_to_transfer = 27 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public boolean hasMaxRowsToTransfer() {
        return maxRowsToTransferBuilder_ != null || maxRowsToTransfer_ != null;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-rows-to-transfer).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_rows_to_transfer = 27 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64Value getMaxRowsToTransfer() {
        if (maxRowsToTransferBuilder_ == null) {
          return maxRowsToTransfer_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : maxRowsToTransfer_;
        } else {
          return maxRowsToTransferBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-rows-to-transfer).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_rows_to_transfer = 27 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder setMaxRowsToTransfer(com.google.protobuf.Int64Value value) {
        if (maxRowsToTransferBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          maxRowsToTransfer_ = value;
          onChanged();
        } else {
          maxRowsToTransferBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-rows-to-transfer).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_rows_to_transfer = 27 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder setMaxRowsToTransfer(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (maxRowsToTransferBuilder_ == null) {
          maxRowsToTransfer_ = builderForValue.build();
          onChanged();
        } else {
          maxRowsToTransferBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-rows-to-transfer).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_rows_to_transfer = 27 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder mergeMaxRowsToTransfer(com.google.protobuf.Int64Value value) {
        if (maxRowsToTransferBuilder_ == null) {
          if (maxRowsToTransfer_ != null) {
            maxRowsToTransfer_ =
              com.google.protobuf.Int64Value.newBuilder(maxRowsToTransfer_).mergeFrom(value).buildPartial();
          } else {
            maxRowsToTransfer_ = value;
          }
          onChanged();
        } else {
          maxRowsToTransferBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-rows-to-transfer).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_rows_to_transfer = 27 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder clearMaxRowsToTransfer() {
        if (maxRowsToTransferBuilder_ == null) {
          maxRowsToTransfer_ = null;
          onChanged();
        } else {
          maxRowsToTransfer_ = null;
          maxRowsToTransferBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-rows-to-transfer).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_rows_to_transfer = 27 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64Value.Builder getMaxRowsToTransferBuilder() {
        
        onChanged();
        return getMaxRowsToTransferFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-rows-to-transfer).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_rows_to_transfer = 27 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getMaxRowsToTransferOrBuilder() {
        if (maxRowsToTransferBuilder_ != null) {
          return maxRowsToTransferBuilder_.getMessageOrBuilder();
        } else {
          return maxRowsToTransfer_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : maxRowsToTransfer_;
        }
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-rows-to-transfer).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_rows_to_transfer = 27 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getMaxRowsToTransferFieldBuilder() {
        if (maxRowsToTransferBuilder_ == null) {
          maxRowsToTransferBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getMaxRowsToTransfer(),
                  getParentForChildren(),
                  isClean());
          maxRowsToTransfer_ = null;
        }
        return maxRowsToTransferBuilder_;
      }

      private com.google.protobuf.Int64Value maxBytesToTransfer_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> maxBytesToTransferBuilder_;
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-bytes-to-transfer).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_bytes_to_transfer = 28 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public boolean hasMaxBytesToTransfer() {
        return maxBytesToTransferBuilder_ != null || maxBytesToTransfer_ != null;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-bytes-to-transfer).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_bytes_to_transfer = 28 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64Value getMaxBytesToTransfer() {
        if (maxBytesToTransferBuilder_ == null) {
          return maxBytesToTransfer_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : maxBytesToTransfer_;
        } else {
          return maxBytesToTransferBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-bytes-to-transfer).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_bytes_to_transfer = 28 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder setMaxBytesToTransfer(com.google.protobuf.Int64Value value) {
        if (maxBytesToTransferBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          maxBytesToTransfer_ = value;
          onChanged();
        } else {
          maxBytesToTransferBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-bytes-to-transfer).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_bytes_to_transfer = 28 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder setMaxBytesToTransfer(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (maxBytesToTransferBuilder_ == null) {
          maxBytesToTransfer_ = builderForValue.build();
          onChanged();
        } else {
          maxBytesToTransferBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-bytes-to-transfer).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_bytes_to_transfer = 28 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder mergeMaxBytesToTransfer(com.google.protobuf.Int64Value value) {
        if (maxBytesToTransferBuilder_ == null) {
          if (maxBytesToTransfer_ != null) {
            maxBytesToTransfer_ =
              com.google.protobuf.Int64Value.newBuilder(maxBytesToTransfer_).mergeFrom(value).buildPartial();
          } else {
            maxBytesToTransfer_ = value;
          }
          onChanged();
        } else {
          maxBytesToTransferBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-bytes-to-transfer).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_bytes_to_transfer = 28 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder clearMaxBytesToTransfer() {
        if (maxBytesToTransferBuilder_ == null) {
          maxBytesToTransfer_ = null;
          onChanged();
        } else {
          maxBytesToTransfer_ = null;
          maxBytesToTransferBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-bytes-to-transfer).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_bytes_to_transfer = 28 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64Value.Builder getMaxBytesToTransferBuilder() {
        
        onChanged();
        return getMaxBytesToTransferFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-bytes-to-transfer).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_bytes_to_transfer = 28 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getMaxBytesToTransferOrBuilder() {
        if (maxBytesToTransferBuilder_ != null) {
          return maxBytesToTransferBuilder_.getMessageOrBuilder();
        } else {
          return maxBytesToTransfer_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : maxBytesToTransfer_;
        }
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-bytes-to-transfer).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_bytes_to_transfer = 28 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getMaxBytesToTransferFieldBuilder() {
        if (maxBytesToTransferBuilder_ == null) {
          maxBytesToTransferBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getMaxBytesToTransfer(),
                  getParentForChildren(),
                  isClean());
          maxBytesToTransfer_ = null;
        }
        return maxBytesToTransferBuilder_;
      }

      private int transferOverflowMode_ = 0;
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#transfer-overflow-mode).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.UserSettings.OverflowMode transfer_overflow_mode = 29;</code>
       */
      public int getTransferOverflowModeValue() {
        return transferOverflowMode_;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#transfer-overflow-mode).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.UserSettings.OverflowMode transfer_overflow_mode = 29;</code>
       */
      public Builder setTransferOverflowModeValue(int value) {
        transferOverflowMode_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#transfer-overflow-mode).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.UserSettings.OverflowMode transfer_overflow_mode = 29;</code>
       */
      public yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.OverflowMode getTransferOverflowMode() {
        @SuppressWarnings("deprecation")
        yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.OverflowMode result = yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.OverflowMode.valueOf(transferOverflowMode_);
        return result == null ? yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.OverflowMode.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#transfer-overflow-mode).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.UserSettings.OverflowMode transfer_overflow_mode = 29;</code>
       */
      public Builder setTransferOverflowMode(yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.OverflowMode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        transferOverflowMode_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#transfer-overflow-mode).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.UserSettings.OverflowMode transfer_overflow_mode = 29;</code>
       */
      public Builder clearTransferOverflowMode() {
        
        transferOverflowMode_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Int64Value maxExecutionTime_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> maxExecutionTimeBuilder_;
      /**
       * <pre>
       * Maximum query execution time in milliseconds.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-execution-time).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_execution_time = 30 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public boolean hasMaxExecutionTime() {
        return maxExecutionTimeBuilder_ != null || maxExecutionTime_ != null;
      }
      /**
       * <pre>
       * Maximum query execution time in milliseconds.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-execution-time).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_execution_time = 30 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64Value getMaxExecutionTime() {
        if (maxExecutionTimeBuilder_ == null) {
          return maxExecutionTime_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : maxExecutionTime_;
        } else {
          return maxExecutionTimeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Maximum query execution time in milliseconds.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-execution-time).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_execution_time = 30 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder setMaxExecutionTime(com.google.protobuf.Int64Value value) {
        if (maxExecutionTimeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          maxExecutionTime_ = value;
          onChanged();
        } else {
          maxExecutionTimeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Maximum query execution time in milliseconds.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-execution-time).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_execution_time = 30 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder setMaxExecutionTime(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (maxExecutionTimeBuilder_ == null) {
          maxExecutionTime_ = builderForValue.build();
          onChanged();
        } else {
          maxExecutionTimeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Maximum query execution time in milliseconds.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-execution-time).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_execution_time = 30 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder mergeMaxExecutionTime(com.google.protobuf.Int64Value value) {
        if (maxExecutionTimeBuilder_ == null) {
          if (maxExecutionTime_ != null) {
            maxExecutionTime_ =
              com.google.protobuf.Int64Value.newBuilder(maxExecutionTime_).mergeFrom(value).buildPartial();
          } else {
            maxExecutionTime_ = value;
          }
          onChanged();
        } else {
          maxExecutionTimeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Maximum query execution time in milliseconds.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-execution-time).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_execution_time = 30 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder clearMaxExecutionTime() {
        if (maxExecutionTimeBuilder_ == null) {
          maxExecutionTime_ = null;
          onChanged();
        } else {
          maxExecutionTime_ = null;
          maxExecutionTimeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Maximum query execution time in milliseconds.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-execution-time).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_execution_time = 30 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64Value.Builder getMaxExecutionTimeBuilder() {
        
        onChanged();
        return getMaxExecutionTimeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Maximum query execution time in milliseconds.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-execution-time).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_execution_time = 30 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getMaxExecutionTimeOrBuilder() {
        if (maxExecutionTimeBuilder_ != null) {
          return maxExecutionTimeBuilder_.getMessageOrBuilder();
        } else {
          return maxExecutionTime_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : maxExecutionTime_;
        }
      }
      /**
       * <pre>
       * Maximum query execution time in milliseconds.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-execution-time).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_execution_time = 30 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getMaxExecutionTimeFieldBuilder() {
        if (maxExecutionTimeBuilder_ == null) {
          maxExecutionTimeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getMaxExecutionTime(),
                  getParentForChildren(),
                  isClean());
          maxExecutionTime_ = null;
        }
        return maxExecutionTimeBuilder_;
      }

      private int timeoutOverflowMode_ = 0;
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#timeout-overflow-mode).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.UserSettings.OverflowMode timeout_overflow_mode = 31;</code>
       */
      public int getTimeoutOverflowModeValue() {
        return timeoutOverflowMode_;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#timeout-overflow-mode).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.UserSettings.OverflowMode timeout_overflow_mode = 31;</code>
       */
      public Builder setTimeoutOverflowModeValue(int value) {
        timeoutOverflowMode_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#timeout-overflow-mode).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.UserSettings.OverflowMode timeout_overflow_mode = 31;</code>
       */
      public yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.OverflowMode getTimeoutOverflowMode() {
        @SuppressWarnings("deprecation")
        yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.OverflowMode result = yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.OverflowMode.valueOf(timeoutOverflowMode_);
        return result == null ? yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.OverflowMode.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#timeout-overflow-mode).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.UserSettings.OverflowMode timeout_overflow_mode = 31;</code>
       */
      public Builder setTimeoutOverflowMode(yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings.OverflowMode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        timeoutOverflowMode_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#timeout-overflow-mode).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.UserSettings.OverflowMode timeout_overflow_mode = 31;</code>
       */
      public Builder clearTimeoutOverflowMode() {
        
        timeoutOverflowMode_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Int64Value maxColumnsToRead_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> maxColumnsToReadBuilder_;
      /**
       * <pre>
       * Maximum number of columns that can be read from a table in a single query.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-columns-to-read).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_columns_to_read = 32 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public boolean hasMaxColumnsToRead() {
        return maxColumnsToReadBuilder_ != null || maxColumnsToRead_ != null;
      }
      /**
       * <pre>
       * Maximum number of columns that can be read from a table in a single query.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-columns-to-read).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_columns_to_read = 32 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64Value getMaxColumnsToRead() {
        if (maxColumnsToReadBuilder_ == null) {
          return maxColumnsToRead_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : maxColumnsToRead_;
        } else {
          return maxColumnsToReadBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Maximum number of columns that can be read from a table in a single query.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-columns-to-read).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_columns_to_read = 32 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder setMaxColumnsToRead(com.google.protobuf.Int64Value value) {
        if (maxColumnsToReadBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          maxColumnsToRead_ = value;
          onChanged();
        } else {
          maxColumnsToReadBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Maximum number of columns that can be read from a table in a single query.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-columns-to-read).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_columns_to_read = 32 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder setMaxColumnsToRead(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (maxColumnsToReadBuilder_ == null) {
          maxColumnsToRead_ = builderForValue.build();
          onChanged();
        } else {
          maxColumnsToReadBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Maximum number of columns that can be read from a table in a single query.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-columns-to-read).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_columns_to_read = 32 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder mergeMaxColumnsToRead(com.google.protobuf.Int64Value value) {
        if (maxColumnsToReadBuilder_ == null) {
          if (maxColumnsToRead_ != null) {
            maxColumnsToRead_ =
              com.google.protobuf.Int64Value.newBuilder(maxColumnsToRead_).mergeFrom(value).buildPartial();
          } else {
            maxColumnsToRead_ = value;
          }
          onChanged();
        } else {
          maxColumnsToReadBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Maximum number of columns that can be read from a table in a single query.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-columns-to-read).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_columns_to_read = 32 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder clearMaxColumnsToRead() {
        if (maxColumnsToReadBuilder_ == null) {
          maxColumnsToRead_ = null;
          onChanged();
        } else {
          maxColumnsToRead_ = null;
          maxColumnsToReadBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Maximum number of columns that can be read from a table in a single query.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-columns-to-read).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_columns_to_read = 32 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64Value.Builder getMaxColumnsToReadBuilder() {
        
        onChanged();
        return getMaxColumnsToReadFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Maximum number of columns that can be read from a table in a single query.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-columns-to-read).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_columns_to_read = 32 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getMaxColumnsToReadOrBuilder() {
        if (maxColumnsToReadBuilder_ != null) {
          return maxColumnsToReadBuilder_.getMessageOrBuilder();
        } else {
          return maxColumnsToRead_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : maxColumnsToRead_;
        }
      }
      /**
       * <pre>
       * Maximum number of columns that can be read from a table in a single query.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-columns-to-read).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_columns_to_read = 32 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getMaxColumnsToReadFieldBuilder() {
        if (maxColumnsToReadBuilder_ == null) {
          maxColumnsToReadBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getMaxColumnsToRead(),
                  getParentForChildren(),
                  isClean());
          maxColumnsToRead_ = null;
        }
        return maxColumnsToReadBuilder_;
      }

      private com.google.protobuf.Int64Value maxTemporaryColumns_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> maxTemporaryColumnsBuilder_;
      /**
       * <pre>
       * Maximum number of temporary columns that must be kept in RAM at the same time when running a query, including constant columns.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-temporary-columns).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_temporary_columns = 33 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public boolean hasMaxTemporaryColumns() {
        return maxTemporaryColumnsBuilder_ != null || maxTemporaryColumns_ != null;
      }
      /**
       * <pre>
       * Maximum number of temporary columns that must be kept in RAM at the same time when running a query, including constant columns.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-temporary-columns).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_temporary_columns = 33 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64Value getMaxTemporaryColumns() {
        if (maxTemporaryColumnsBuilder_ == null) {
          return maxTemporaryColumns_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : maxTemporaryColumns_;
        } else {
          return maxTemporaryColumnsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Maximum number of temporary columns that must be kept in RAM at the same time when running a query, including constant columns.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-temporary-columns).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_temporary_columns = 33 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder setMaxTemporaryColumns(com.google.protobuf.Int64Value value) {
        if (maxTemporaryColumnsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          maxTemporaryColumns_ = value;
          onChanged();
        } else {
          maxTemporaryColumnsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Maximum number of temporary columns that must be kept in RAM at the same time when running a query, including constant columns.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-temporary-columns).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_temporary_columns = 33 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder setMaxTemporaryColumns(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (maxTemporaryColumnsBuilder_ == null) {
          maxTemporaryColumns_ = builderForValue.build();
          onChanged();
        } else {
          maxTemporaryColumnsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Maximum number of temporary columns that must be kept in RAM at the same time when running a query, including constant columns.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-temporary-columns).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_temporary_columns = 33 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder mergeMaxTemporaryColumns(com.google.protobuf.Int64Value value) {
        if (maxTemporaryColumnsBuilder_ == null) {
          if (maxTemporaryColumns_ != null) {
            maxTemporaryColumns_ =
              com.google.protobuf.Int64Value.newBuilder(maxTemporaryColumns_).mergeFrom(value).buildPartial();
          } else {
            maxTemporaryColumns_ = value;
          }
          onChanged();
        } else {
          maxTemporaryColumnsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Maximum number of temporary columns that must be kept in RAM at the same time when running a query, including constant columns.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-temporary-columns).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_temporary_columns = 33 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder clearMaxTemporaryColumns() {
        if (maxTemporaryColumnsBuilder_ == null) {
          maxTemporaryColumns_ = null;
          onChanged();
        } else {
          maxTemporaryColumns_ = null;
          maxTemporaryColumnsBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Maximum number of temporary columns that must be kept in RAM at the same time when running a query, including constant columns.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-temporary-columns).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_temporary_columns = 33 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64Value.Builder getMaxTemporaryColumnsBuilder() {
        
        onChanged();
        return getMaxTemporaryColumnsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Maximum number of temporary columns that must be kept in RAM at the same time when running a query, including constant columns.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-temporary-columns).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_temporary_columns = 33 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getMaxTemporaryColumnsOrBuilder() {
        if (maxTemporaryColumnsBuilder_ != null) {
          return maxTemporaryColumnsBuilder_.getMessageOrBuilder();
        } else {
          return maxTemporaryColumns_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : maxTemporaryColumns_;
        }
      }
      /**
       * <pre>
       * Maximum number of temporary columns that must be kept in RAM at the same time when running a query, including constant columns.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-temporary-columns).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_temporary_columns = 33 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getMaxTemporaryColumnsFieldBuilder() {
        if (maxTemporaryColumnsBuilder_ == null) {
          maxTemporaryColumnsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getMaxTemporaryColumns(),
                  getParentForChildren(),
                  isClean());
          maxTemporaryColumns_ = null;
        }
        return maxTemporaryColumnsBuilder_;
      }

      private com.google.protobuf.Int64Value maxTemporaryNonConstColumns_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> maxTemporaryNonConstColumnsBuilder_;
      /**
       * <pre>
       * Maximum number of temporary columns that must be kept in RAM at the same time when running a query, excluding constant columns.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-temporary-non-const-columns).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_temporary_non_const_columns = 34 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public boolean hasMaxTemporaryNonConstColumns() {
        return maxTemporaryNonConstColumnsBuilder_ != null || maxTemporaryNonConstColumns_ != null;
      }
      /**
       * <pre>
       * Maximum number of temporary columns that must be kept in RAM at the same time when running a query, excluding constant columns.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-temporary-non-const-columns).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_temporary_non_const_columns = 34 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64Value getMaxTemporaryNonConstColumns() {
        if (maxTemporaryNonConstColumnsBuilder_ == null) {
          return maxTemporaryNonConstColumns_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : maxTemporaryNonConstColumns_;
        } else {
          return maxTemporaryNonConstColumnsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Maximum number of temporary columns that must be kept in RAM at the same time when running a query, excluding constant columns.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-temporary-non-const-columns).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_temporary_non_const_columns = 34 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder setMaxTemporaryNonConstColumns(com.google.protobuf.Int64Value value) {
        if (maxTemporaryNonConstColumnsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          maxTemporaryNonConstColumns_ = value;
          onChanged();
        } else {
          maxTemporaryNonConstColumnsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Maximum number of temporary columns that must be kept in RAM at the same time when running a query, excluding constant columns.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-temporary-non-const-columns).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_temporary_non_const_columns = 34 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder setMaxTemporaryNonConstColumns(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (maxTemporaryNonConstColumnsBuilder_ == null) {
          maxTemporaryNonConstColumns_ = builderForValue.build();
          onChanged();
        } else {
          maxTemporaryNonConstColumnsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Maximum number of temporary columns that must be kept in RAM at the same time when running a query, excluding constant columns.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-temporary-non-const-columns).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_temporary_non_const_columns = 34 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder mergeMaxTemporaryNonConstColumns(com.google.protobuf.Int64Value value) {
        if (maxTemporaryNonConstColumnsBuilder_ == null) {
          if (maxTemporaryNonConstColumns_ != null) {
            maxTemporaryNonConstColumns_ =
              com.google.protobuf.Int64Value.newBuilder(maxTemporaryNonConstColumns_).mergeFrom(value).buildPartial();
          } else {
            maxTemporaryNonConstColumns_ = value;
          }
          onChanged();
        } else {
          maxTemporaryNonConstColumnsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Maximum number of temporary columns that must be kept in RAM at the same time when running a query, excluding constant columns.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-temporary-non-const-columns).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_temporary_non_const_columns = 34 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder clearMaxTemporaryNonConstColumns() {
        if (maxTemporaryNonConstColumnsBuilder_ == null) {
          maxTemporaryNonConstColumns_ = null;
          onChanged();
        } else {
          maxTemporaryNonConstColumns_ = null;
          maxTemporaryNonConstColumnsBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Maximum number of temporary columns that must be kept in RAM at the same time when running a query, excluding constant columns.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-temporary-non-const-columns).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_temporary_non_const_columns = 34 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64Value.Builder getMaxTemporaryNonConstColumnsBuilder() {
        
        onChanged();
        return getMaxTemporaryNonConstColumnsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Maximum number of temporary columns that must be kept in RAM at the same time when running a query, excluding constant columns.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-temporary-non-const-columns).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_temporary_non_const_columns = 34 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getMaxTemporaryNonConstColumnsOrBuilder() {
        if (maxTemporaryNonConstColumnsBuilder_ != null) {
          return maxTemporaryNonConstColumnsBuilder_.getMessageOrBuilder();
        } else {
          return maxTemporaryNonConstColumns_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : maxTemporaryNonConstColumns_;
        }
      }
      /**
       * <pre>
       * Maximum number of temporary columns that must be kept in RAM at the same time when running a query, excluding constant columns.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-temporary-non-const-columns).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_temporary_non_const_columns = 34 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getMaxTemporaryNonConstColumnsFieldBuilder() {
        if (maxTemporaryNonConstColumnsBuilder_ == null) {
          maxTemporaryNonConstColumnsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getMaxTemporaryNonConstColumns(),
                  getParentForChildren(),
                  isClean());
          maxTemporaryNonConstColumns_ = null;
        }
        return maxTemporaryNonConstColumnsBuilder_;
      }

      private com.google.protobuf.Int64Value maxQuerySize_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> maxQuerySizeBuilder_;
      /**
       * <pre>
       * The maximum part of a query that can be taken to RAM for parsing with the SQL parser, in bytes. Default value: 262144.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_query_size).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_query_size = 35 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public boolean hasMaxQuerySize() {
        return maxQuerySizeBuilder_ != null || maxQuerySize_ != null;
      }
      /**
       * <pre>
       * The maximum part of a query that can be taken to RAM for parsing with the SQL parser, in bytes. Default value: 262144.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_query_size).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_query_size = 35 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public com.google.protobuf.Int64Value getMaxQuerySize() {
        if (maxQuerySizeBuilder_ == null) {
          return maxQuerySize_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : maxQuerySize_;
        } else {
          return maxQuerySizeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The maximum part of a query that can be taken to RAM for parsing with the SQL parser, in bytes. Default value: 262144.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_query_size).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_query_size = 35 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public Builder setMaxQuerySize(com.google.protobuf.Int64Value value) {
        if (maxQuerySizeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          maxQuerySize_ = value;
          onChanged();
        } else {
          maxQuerySizeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The maximum part of a query that can be taken to RAM for parsing with the SQL parser, in bytes. Default value: 262144.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_query_size).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_query_size = 35 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public Builder setMaxQuerySize(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (maxQuerySizeBuilder_ == null) {
          maxQuerySize_ = builderForValue.build();
          onChanged();
        } else {
          maxQuerySizeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The maximum part of a query that can be taken to RAM for parsing with the SQL parser, in bytes. Default value: 262144.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_query_size).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_query_size = 35 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public Builder mergeMaxQuerySize(com.google.protobuf.Int64Value value) {
        if (maxQuerySizeBuilder_ == null) {
          if (maxQuerySize_ != null) {
            maxQuerySize_ =
              com.google.protobuf.Int64Value.newBuilder(maxQuerySize_).mergeFrom(value).buildPartial();
          } else {
            maxQuerySize_ = value;
          }
          onChanged();
        } else {
          maxQuerySizeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The maximum part of a query that can be taken to RAM for parsing with the SQL parser, in bytes. Default value: 262144.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_query_size).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_query_size = 35 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public Builder clearMaxQuerySize() {
        if (maxQuerySizeBuilder_ == null) {
          maxQuerySize_ = null;
          onChanged();
        } else {
          maxQuerySize_ = null;
          maxQuerySizeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The maximum part of a query that can be taken to RAM for parsing with the SQL parser, in bytes. Default value: 262144.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_query_size).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_query_size = 35 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public com.google.protobuf.Int64Value.Builder getMaxQuerySizeBuilder() {
        
        onChanged();
        return getMaxQuerySizeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The maximum part of a query that can be taken to RAM for parsing with the SQL parser, in bytes. Default value: 262144.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_query_size).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_query_size = 35 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getMaxQuerySizeOrBuilder() {
        if (maxQuerySizeBuilder_ != null) {
          return maxQuerySizeBuilder_.getMessageOrBuilder();
        } else {
          return maxQuerySize_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : maxQuerySize_;
        }
      }
      /**
       * <pre>
       * The maximum part of a query that can be taken to RAM for parsing with the SQL parser, in bytes. Default value: 262144.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_query_size).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_query_size = 35 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getMaxQuerySizeFieldBuilder() {
        if (maxQuerySizeBuilder_ == null) {
          maxQuerySizeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getMaxQuerySize(),
                  getParentForChildren(),
                  isClean());
          maxQuerySize_ = null;
        }
        return maxQuerySizeBuilder_;
      }

      private com.google.protobuf.Int64Value maxAstDepth_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> maxAstDepthBuilder_;
      /**
       * <pre>
       * Maximum depth of query syntax tree. Default value: 1000.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-ast-depth).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_ast_depth = 36 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public boolean hasMaxAstDepth() {
        return maxAstDepthBuilder_ != null || maxAstDepth_ != null;
      }
      /**
       * <pre>
       * Maximum depth of query syntax tree. Default value: 1000.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-ast-depth).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_ast_depth = 36 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public com.google.protobuf.Int64Value getMaxAstDepth() {
        if (maxAstDepthBuilder_ == null) {
          return maxAstDepth_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : maxAstDepth_;
        } else {
          return maxAstDepthBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Maximum depth of query syntax tree. Default value: 1000.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-ast-depth).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_ast_depth = 36 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public Builder setMaxAstDepth(com.google.protobuf.Int64Value value) {
        if (maxAstDepthBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          maxAstDepth_ = value;
          onChanged();
        } else {
          maxAstDepthBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Maximum depth of query syntax tree. Default value: 1000.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-ast-depth).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_ast_depth = 36 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public Builder setMaxAstDepth(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (maxAstDepthBuilder_ == null) {
          maxAstDepth_ = builderForValue.build();
          onChanged();
        } else {
          maxAstDepthBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Maximum depth of query syntax tree. Default value: 1000.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-ast-depth).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_ast_depth = 36 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public Builder mergeMaxAstDepth(com.google.protobuf.Int64Value value) {
        if (maxAstDepthBuilder_ == null) {
          if (maxAstDepth_ != null) {
            maxAstDepth_ =
              com.google.protobuf.Int64Value.newBuilder(maxAstDepth_).mergeFrom(value).buildPartial();
          } else {
            maxAstDepth_ = value;
          }
          onChanged();
        } else {
          maxAstDepthBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Maximum depth of query syntax tree. Default value: 1000.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-ast-depth).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_ast_depth = 36 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public Builder clearMaxAstDepth() {
        if (maxAstDepthBuilder_ == null) {
          maxAstDepth_ = null;
          onChanged();
        } else {
          maxAstDepth_ = null;
          maxAstDepthBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Maximum depth of query syntax tree. Default value: 1000.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-ast-depth).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_ast_depth = 36 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public com.google.protobuf.Int64Value.Builder getMaxAstDepthBuilder() {
        
        onChanged();
        return getMaxAstDepthFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Maximum depth of query syntax tree. Default value: 1000.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-ast-depth).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_ast_depth = 36 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getMaxAstDepthOrBuilder() {
        if (maxAstDepthBuilder_ != null) {
          return maxAstDepthBuilder_.getMessageOrBuilder();
        } else {
          return maxAstDepth_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : maxAstDepth_;
        }
      }
      /**
       * <pre>
       * Maximum depth of query syntax tree. Default value: 1000.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-ast-depth).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_ast_depth = 36 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getMaxAstDepthFieldBuilder() {
        if (maxAstDepthBuilder_ == null) {
          maxAstDepthBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getMaxAstDepth(),
                  getParentForChildren(),
                  isClean());
          maxAstDepth_ = null;
        }
        return maxAstDepthBuilder_;
      }

      private com.google.protobuf.Int64Value maxAstElements_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> maxAstElementsBuilder_;
      /**
       * <pre>
       * Maximum size of query syntax tree in number of nodes. Default value: 50000.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-ast-elements).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_ast_elements = 37 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public boolean hasMaxAstElements() {
        return maxAstElementsBuilder_ != null || maxAstElements_ != null;
      }
      /**
       * <pre>
       * Maximum size of query syntax tree in number of nodes. Default value: 50000.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-ast-elements).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_ast_elements = 37 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public com.google.protobuf.Int64Value getMaxAstElements() {
        if (maxAstElementsBuilder_ == null) {
          return maxAstElements_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : maxAstElements_;
        } else {
          return maxAstElementsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Maximum size of query syntax tree in number of nodes. Default value: 50000.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-ast-elements).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_ast_elements = 37 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public Builder setMaxAstElements(com.google.protobuf.Int64Value value) {
        if (maxAstElementsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          maxAstElements_ = value;
          onChanged();
        } else {
          maxAstElementsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Maximum size of query syntax tree in number of nodes. Default value: 50000.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-ast-elements).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_ast_elements = 37 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public Builder setMaxAstElements(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (maxAstElementsBuilder_ == null) {
          maxAstElements_ = builderForValue.build();
          onChanged();
        } else {
          maxAstElementsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Maximum size of query syntax tree in number of nodes. Default value: 50000.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-ast-elements).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_ast_elements = 37 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public Builder mergeMaxAstElements(com.google.protobuf.Int64Value value) {
        if (maxAstElementsBuilder_ == null) {
          if (maxAstElements_ != null) {
            maxAstElements_ =
              com.google.protobuf.Int64Value.newBuilder(maxAstElements_).mergeFrom(value).buildPartial();
          } else {
            maxAstElements_ = value;
          }
          onChanged();
        } else {
          maxAstElementsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Maximum size of query syntax tree in number of nodes. Default value: 50000.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-ast-elements).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_ast_elements = 37 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public Builder clearMaxAstElements() {
        if (maxAstElementsBuilder_ == null) {
          maxAstElements_ = null;
          onChanged();
        } else {
          maxAstElements_ = null;
          maxAstElementsBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Maximum size of query syntax tree in number of nodes. Default value: 50000.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-ast-elements).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_ast_elements = 37 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public com.google.protobuf.Int64Value.Builder getMaxAstElementsBuilder() {
        
        onChanged();
        return getMaxAstElementsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Maximum size of query syntax tree in number of nodes. Default value: 50000.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-ast-elements).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_ast_elements = 37 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getMaxAstElementsOrBuilder() {
        if (maxAstElementsBuilder_ != null) {
          return maxAstElementsBuilder_.getMessageOrBuilder();
        } else {
          return maxAstElements_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : maxAstElements_;
        }
      }
      /**
       * <pre>
       * Maximum size of query syntax tree in number of nodes. Default value: 50000.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-ast-elements).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_ast_elements = 37 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getMaxAstElementsFieldBuilder() {
        if (maxAstElementsBuilder_ == null) {
          maxAstElementsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getMaxAstElements(),
                  getParentForChildren(),
                  isClean());
          maxAstElements_ = null;
        }
        return maxAstElementsBuilder_;
      }

      private com.google.protobuf.Int64Value maxExpandedAstElements_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> maxExpandedAstElementsBuilder_;
      /**
       * <pre>
       * Maximum size of query syntax tree in number of nodes after expansion of aliases and the asterisk. Default value: 500000.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_expanded_ast_elements = 38 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public boolean hasMaxExpandedAstElements() {
        return maxExpandedAstElementsBuilder_ != null || maxExpandedAstElements_ != null;
      }
      /**
       * <pre>
       * Maximum size of query syntax tree in number of nodes after expansion of aliases and the asterisk. Default value: 500000.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_expanded_ast_elements = 38 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public com.google.protobuf.Int64Value getMaxExpandedAstElements() {
        if (maxExpandedAstElementsBuilder_ == null) {
          return maxExpandedAstElements_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : maxExpandedAstElements_;
        } else {
          return maxExpandedAstElementsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Maximum size of query syntax tree in number of nodes after expansion of aliases and the asterisk. Default value: 500000.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_expanded_ast_elements = 38 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public Builder setMaxExpandedAstElements(com.google.protobuf.Int64Value value) {
        if (maxExpandedAstElementsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          maxExpandedAstElements_ = value;
          onChanged();
        } else {
          maxExpandedAstElementsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Maximum size of query syntax tree in number of nodes after expansion of aliases and the asterisk. Default value: 500000.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_expanded_ast_elements = 38 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public Builder setMaxExpandedAstElements(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (maxExpandedAstElementsBuilder_ == null) {
          maxExpandedAstElements_ = builderForValue.build();
          onChanged();
        } else {
          maxExpandedAstElementsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Maximum size of query syntax tree in number of nodes after expansion of aliases and the asterisk. Default value: 500000.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_expanded_ast_elements = 38 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public Builder mergeMaxExpandedAstElements(com.google.protobuf.Int64Value value) {
        if (maxExpandedAstElementsBuilder_ == null) {
          if (maxExpandedAstElements_ != null) {
            maxExpandedAstElements_ =
              com.google.protobuf.Int64Value.newBuilder(maxExpandedAstElements_).mergeFrom(value).buildPartial();
          } else {
            maxExpandedAstElements_ = value;
          }
          onChanged();
        } else {
          maxExpandedAstElementsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Maximum size of query syntax tree in number of nodes after expansion of aliases and the asterisk. Default value: 500000.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_expanded_ast_elements = 38 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public Builder clearMaxExpandedAstElements() {
        if (maxExpandedAstElementsBuilder_ == null) {
          maxExpandedAstElements_ = null;
          onChanged();
        } else {
          maxExpandedAstElements_ = null;
          maxExpandedAstElementsBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Maximum size of query syntax tree in number of nodes after expansion of aliases and the asterisk. Default value: 500000.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_expanded_ast_elements = 38 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public com.google.protobuf.Int64Value.Builder getMaxExpandedAstElementsBuilder() {
        
        onChanged();
        return getMaxExpandedAstElementsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Maximum size of query syntax tree in number of nodes after expansion of aliases and the asterisk. Default value: 500000.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_expanded_ast_elements = 38 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getMaxExpandedAstElementsOrBuilder() {
        if (maxExpandedAstElementsBuilder_ != null) {
          return maxExpandedAstElementsBuilder_.getMessageOrBuilder();
        } else {
          return maxExpandedAstElements_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : maxExpandedAstElements_;
        }
      }
      /**
       * <pre>
       * Maximum size of query syntax tree in number of nodes after expansion of aliases and the asterisk. Default value: 500000.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_expanded_ast_elements = 38 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getMaxExpandedAstElementsFieldBuilder() {
        if (maxExpandedAstElementsBuilder_ == null) {
          maxExpandedAstElementsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getMaxExpandedAstElements(),
                  getParentForChildren(),
                  isClean());
          maxExpandedAstElements_ = null;
        }
        return maxExpandedAstElementsBuilder_;
      }

      private com.google.protobuf.BoolValue inputFormatValuesInterpretExpressions_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> inputFormatValuesInterpretExpressionsBuilder_;
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-input_format_values_interpret_expressions).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue input_format_values_interpret_expressions = 61;</code>
       */
      public boolean hasInputFormatValuesInterpretExpressions() {
        return inputFormatValuesInterpretExpressionsBuilder_ != null || inputFormatValuesInterpretExpressions_ != null;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-input_format_values_interpret_expressions).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue input_format_values_interpret_expressions = 61;</code>
       */
      public com.google.protobuf.BoolValue getInputFormatValuesInterpretExpressions() {
        if (inputFormatValuesInterpretExpressionsBuilder_ == null) {
          return inputFormatValuesInterpretExpressions_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : inputFormatValuesInterpretExpressions_;
        } else {
          return inputFormatValuesInterpretExpressionsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-input_format_values_interpret_expressions).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue input_format_values_interpret_expressions = 61;</code>
       */
      public Builder setInputFormatValuesInterpretExpressions(com.google.protobuf.BoolValue value) {
        if (inputFormatValuesInterpretExpressionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          inputFormatValuesInterpretExpressions_ = value;
          onChanged();
        } else {
          inputFormatValuesInterpretExpressionsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-input_format_values_interpret_expressions).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue input_format_values_interpret_expressions = 61;</code>
       */
      public Builder setInputFormatValuesInterpretExpressions(
          com.google.protobuf.BoolValue.Builder builderForValue) {
        if (inputFormatValuesInterpretExpressionsBuilder_ == null) {
          inputFormatValuesInterpretExpressions_ = builderForValue.build();
          onChanged();
        } else {
          inputFormatValuesInterpretExpressionsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-input_format_values_interpret_expressions).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue input_format_values_interpret_expressions = 61;</code>
       */
      public Builder mergeInputFormatValuesInterpretExpressions(com.google.protobuf.BoolValue value) {
        if (inputFormatValuesInterpretExpressionsBuilder_ == null) {
          if (inputFormatValuesInterpretExpressions_ != null) {
            inputFormatValuesInterpretExpressions_ =
              com.google.protobuf.BoolValue.newBuilder(inputFormatValuesInterpretExpressions_).mergeFrom(value).buildPartial();
          } else {
            inputFormatValuesInterpretExpressions_ = value;
          }
          onChanged();
        } else {
          inputFormatValuesInterpretExpressionsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-input_format_values_interpret_expressions).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue input_format_values_interpret_expressions = 61;</code>
       */
      public Builder clearInputFormatValuesInterpretExpressions() {
        if (inputFormatValuesInterpretExpressionsBuilder_ == null) {
          inputFormatValuesInterpretExpressions_ = null;
          onChanged();
        } else {
          inputFormatValuesInterpretExpressions_ = null;
          inputFormatValuesInterpretExpressionsBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-input_format_values_interpret_expressions).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue input_format_values_interpret_expressions = 61;</code>
       */
      public com.google.protobuf.BoolValue.Builder getInputFormatValuesInterpretExpressionsBuilder() {
        
        onChanged();
        return getInputFormatValuesInterpretExpressionsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-input_format_values_interpret_expressions).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue input_format_values_interpret_expressions = 61;</code>
       */
      public com.google.protobuf.BoolValueOrBuilder getInputFormatValuesInterpretExpressionsOrBuilder() {
        if (inputFormatValuesInterpretExpressionsBuilder_ != null) {
          return inputFormatValuesInterpretExpressionsBuilder_.getMessageOrBuilder();
        } else {
          return inputFormatValuesInterpretExpressions_ == null ?
              com.google.protobuf.BoolValue.getDefaultInstance() : inputFormatValuesInterpretExpressions_;
        }
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-input_format_values_interpret_expressions).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue input_format_values_interpret_expressions = 61;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> 
          getInputFormatValuesInterpretExpressionsFieldBuilder() {
        if (inputFormatValuesInterpretExpressionsBuilder_ == null) {
          inputFormatValuesInterpretExpressionsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder>(
                  getInputFormatValuesInterpretExpressions(),
                  getParentForChildren(),
                  isClean());
          inputFormatValuesInterpretExpressions_ = null;
        }
        return inputFormatValuesInterpretExpressionsBuilder_;
      }

      private com.google.protobuf.BoolValue inputFormatDefaultsForOmittedFields_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> inputFormatDefaultsForOmittedFieldsBuilder_;
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#session_settings-input_format_defaults_for_omitted_fields).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue input_format_defaults_for_omitted_fields = 62;</code>
       */
      public boolean hasInputFormatDefaultsForOmittedFields() {
        return inputFormatDefaultsForOmittedFieldsBuilder_ != null || inputFormatDefaultsForOmittedFields_ != null;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#session_settings-input_format_defaults_for_omitted_fields).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue input_format_defaults_for_omitted_fields = 62;</code>
       */
      public com.google.protobuf.BoolValue getInputFormatDefaultsForOmittedFields() {
        if (inputFormatDefaultsForOmittedFieldsBuilder_ == null) {
          return inputFormatDefaultsForOmittedFields_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : inputFormatDefaultsForOmittedFields_;
        } else {
          return inputFormatDefaultsForOmittedFieldsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#session_settings-input_format_defaults_for_omitted_fields).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue input_format_defaults_for_omitted_fields = 62;</code>
       */
      public Builder setInputFormatDefaultsForOmittedFields(com.google.protobuf.BoolValue value) {
        if (inputFormatDefaultsForOmittedFieldsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          inputFormatDefaultsForOmittedFields_ = value;
          onChanged();
        } else {
          inputFormatDefaultsForOmittedFieldsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#session_settings-input_format_defaults_for_omitted_fields).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue input_format_defaults_for_omitted_fields = 62;</code>
       */
      public Builder setInputFormatDefaultsForOmittedFields(
          com.google.protobuf.BoolValue.Builder builderForValue) {
        if (inputFormatDefaultsForOmittedFieldsBuilder_ == null) {
          inputFormatDefaultsForOmittedFields_ = builderForValue.build();
          onChanged();
        } else {
          inputFormatDefaultsForOmittedFieldsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#session_settings-input_format_defaults_for_omitted_fields).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue input_format_defaults_for_omitted_fields = 62;</code>
       */
      public Builder mergeInputFormatDefaultsForOmittedFields(com.google.protobuf.BoolValue value) {
        if (inputFormatDefaultsForOmittedFieldsBuilder_ == null) {
          if (inputFormatDefaultsForOmittedFields_ != null) {
            inputFormatDefaultsForOmittedFields_ =
              com.google.protobuf.BoolValue.newBuilder(inputFormatDefaultsForOmittedFields_).mergeFrom(value).buildPartial();
          } else {
            inputFormatDefaultsForOmittedFields_ = value;
          }
          onChanged();
        } else {
          inputFormatDefaultsForOmittedFieldsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#session_settings-input_format_defaults_for_omitted_fields).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue input_format_defaults_for_omitted_fields = 62;</code>
       */
      public Builder clearInputFormatDefaultsForOmittedFields() {
        if (inputFormatDefaultsForOmittedFieldsBuilder_ == null) {
          inputFormatDefaultsForOmittedFields_ = null;
          onChanged();
        } else {
          inputFormatDefaultsForOmittedFields_ = null;
          inputFormatDefaultsForOmittedFieldsBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#session_settings-input_format_defaults_for_omitted_fields).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue input_format_defaults_for_omitted_fields = 62;</code>
       */
      public com.google.protobuf.BoolValue.Builder getInputFormatDefaultsForOmittedFieldsBuilder() {
        
        onChanged();
        return getInputFormatDefaultsForOmittedFieldsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#session_settings-input_format_defaults_for_omitted_fields).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue input_format_defaults_for_omitted_fields = 62;</code>
       */
      public com.google.protobuf.BoolValueOrBuilder getInputFormatDefaultsForOmittedFieldsOrBuilder() {
        if (inputFormatDefaultsForOmittedFieldsBuilder_ != null) {
          return inputFormatDefaultsForOmittedFieldsBuilder_.getMessageOrBuilder();
        } else {
          return inputFormatDefaultsForOmittedFields_ == null ?
              com.google.protobuf.BoolValue.getDefaultInstance() : inputFormatDefaultsForOmittedFields_;
        }
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#session_settings-input_format_defaults_for_omitted_fields).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue input_format_defaults_for_omitted_fields = 62;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> 
          getInputFormatDefaultsForOmittedFieldsFieldBuilder() {
        if (inputFormatDefaultsForOmittedFieldsBuilder_ == null) {
          inputFormatDefaultsForOmittedFieldsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder>(
                  getInputFormatDefaultsForOmittedFields(),
                  getParentForChildren(),
                  isClean());
          inputFormatDefaultsForOmittedFields_ = null;
        }
        return inputFormatDefaultsForOmittedFieldsBuilder_;
      }

      private com.google.protobuf.BoolValue outputFormatJsonQuote64BitIntegers_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> outputFormatJsonQuote64BitIntegersBuilder_;
      /**
       * <pre>
       * Whether quoting of 64-bit integers is enabled in JSON output format.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#session_settings-output_format_json_quote_64bit_integers).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue output_format_json_quote_64bit_integers = 63;</code>
       */
      public boolean hasOutputFormatJsonQuote64BitIntegers() {
        return outputFormatJsonQuote64BitIntegersBuilder_ != null || outputFormatJsonQuote64BitIntegers_ != null;
      }
      /**
       * <pre>
       * Whether quoting of 64-bit integers is enabled in JSON output format.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#session_settings-output_format_json_quote_64bit_integers).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue output_format_json_quote_64bit_integers = 63;</code>
       */
      public com.google.protobuf.BoolValue getOutputFormatJsonQuote64BitIntegers() {
        if (outputFormatJsonQuote64BitIntegersBuilder_ == null) {
          return outputFormatJsonQuote64BitIntegers_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : outputFormatJsonQuote64BitIntegers_;
        } else {
          return outputFormatJsonQuote64BitIntegersBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Whether quoting of 64-bit integers is enabled in JSON output format.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#session_settings-output_format_json_quote_64bit_integers).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue output_format_json_quote_64bit_integers = 63;</code>
       */
      public Builder setOutputFormatJsonQuote64BitIntegers(com.google.protobuf.BoolValue value) {
        if (outputFormatJsonQuote64BitIntegersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          outputFormatJsonQuote64BitIntegers_ = value;
          onChanged();
        } else {
          outputFormatJsonQuote64BitIntegersBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Whether quoting of 64-bit integers is enabled in JSON output format.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#session_settings-output_format_json_quote_64bit_integers).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue output_format_json_quote_64bit_integers = 63;</code>
       */
      public Builder setOutputFormatJsonQuote64BitIntegers(
          com.google.protobuf.BoolValue.Builder builderForValue) {
        if (outputFormatJsonQuote64BitIntegersBuilder_ == null) {
          outputFormatJsonQuote64BitIntegers_ = builderForValue.build();
          onChanged();
        } else {
          outputFormatJsonQuote64BitIntegersBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Whether quoting of 64-bit integers is enabled in JSON output format.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#session_settings-output_format_json_quote_64bit_integers).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue output_format_json_quote_64bit_integers = 63;</code>
       */
      public Builder mergeOutputFormatJsonQuote64BitIntegers(com.google.protobuf.BoolValue value) {
        if (outputFormatJsonQuote64BitIntegersBuilder_ == null) {
          if (outputFormatJsonQuote64BitIntegers_ != null) {
            outputFormatJsonQuote64BitIntegers_ =
              com.google.protobuf.BoolValue.newBuilder(outputFormatJsonQuote64BitIntegers_).mergeFrom(value).buildPartial();
          } else {
            outputFormatJsonQuote64BitIntegers_ = value;
          }
          onChanged();
        } else {
          outputFormatJsonQuote64BitIntegersBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Whether quoting of 64-bit integers is enabled in JSON output format.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#session_settings-output_format_json_quote_64bit_integers).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue output_format_json_quote_64bit_integers = 63;</code>
       */
      public Builder clearOutputFormatJsonQuote64BitIntegers() {
        if (outputFormatJsonQuote64BitIntegersBuilder_ == null) {
          outputFormatJsonQuote64BitIntegers_ = null;
          onChanged();
        } else {
          outputFormatJsonQuote64BitIntegers_ = null;
          outputFormatJsonQuote64BitIntegersBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Whether quoting of 64-bit integers is enabled in JSON output format.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#session_settings-output_format_json_quote_64bit_integers).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue output_format_json_quote_64bit_integers = 63;</code>
       */
      public com.google.protobuf.BoolValue.Builder getOutputFormatJsonQuote64BitIntegersBuilder() {
        
        onChanged();
        return getOutputFormatJsonQuote64BitIntegersFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Whether quoting of 64-bit integers is enabled in JSON output format.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#session_settings-output_format_json_quote_64bit_integers).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue output_format_json_quote_64bit_integers = 63;</code>
       */
      public com.google.protobuf.BoolValueOrBuilder getOutputFormatJsonQuote64BitIntegersOrBuilder() {
        if (outputFormatJsonQuote64BitIntegersBuilder_ != null) {
          return outputFormatJsonQuote64BitIntegersBuilder_.getMessageOrBuilder();
        } else {
          return outputFormatJsonQuote64BitIntegers_ == null ?
              com.google.protobuf.BoolValue.getDefaultInstance() : outputFormatJsonQuote64BitIntegers_;
        }
      }
      /**
       * <pre>
       * Whether quoting of 64-bit integers is enabled in JSON output format.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#session_settings-output_format_json_quote_64bit_integers).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue output_format_json_quote_64bit_integers = 63;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> 
          getOutputFormatJsonQuote64BitIntegersFieldBuilder() {
        if (outputFormatJsonQuote64BitIntegersBuilder_ == null) {
          outputFormatJsonQuote64BitIntegersBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder>(
                  getOutputFormatJsonQuote64BitIntegers(),
                  getParentForChildren(),
                  isClean());
          outputFormatJsonQuote64BitIntegers_ = null;
        }
        return outputFormatJsonQuote64BitIntegersBuilder_;
      }

      private com.google.protobuf.BoolValue outputFormatJsonQuoteDenormals_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> outputFormatJsonQuoteDenormalsBuilder_;
      /**
       * <pre>
       * Whether output of special floating-point values (`+nan`, `-nan`, `+inf` and `-inf`) is enabled in JSON output format.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue output_format_json_quote_denormals = 64;</code>
       */
      public boolean hasOutputFormatJsonQuoteDenormals() {
        return outputFormatJsonQuoteDenormalsBuilder_ != null || outputFormatJsonQuoteDenormals_ != null;
      }
      /**
       * <pre>
       * Whether output of special floating-point values (`+nan`, `-nan`, `+inf` and `-inf`) is enabled in JSON output format.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue output_format_json_quote_denormals = 64;</code>
       */
      public com.google.protobuf.BoolValue getOutputFormatJsonQuoteDenormals() {
        if (outputFormatJsonQuoteDenormalsBuilder_ == null) {
          return outputFormatJsonQuoteDenormals_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : outputFormatJsonQuoteDenormals_;
        } else {
          return outputFormatJsonQuoteDenormalsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Whether output of special floating-point values (`+nan`, `-nan`, `+inf` and `-inf`) is enabled in JSON output format.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue output_format_json_quote_denormals = 64;</code>
       */
      public Builder setOutputFormatJsonQuoteDenormals(com.google.protobuf.BoolValue value) {
        if (outputFormatJsonQuoteDenormalsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          outputFormatJsonQuoteDenormals_ = value;
          onChanged();
        } else {
          outputFormatJsonQuoteDenormalsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Whether output of special floating-point values (`+nan`, `-nan`, `+inf` and `-inf`) is enabled in JSON output format.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue output_format_json_quote_denormals = 64;</code>
       */
      public Builder setOutputFormatJsonQuoteDenormals(
          com.google.protobuf.BoolValue.Builder builderForValue) {
        if (outputFormatJsonQuoteDenormalsBuilder_ == null) {
          outputFormatJsonQuoteDenormals_ = builderForValue.build();
          onChanged();
        } else {
          outputFormatJsonQuoteDenormalsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Whether output of special floating-point values (`+nan`, `-nan`, `+inf` and `-inf`) is enabled in JSON output format.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue output_format_json_quote_denormals = 64;</code>
       */
      public Builder mergeOutputFormatJsonQuoteDenormals(com.google.protobuf.BoolValue value) {
        if (outputFormatJsonQuoteDenormalsBuilder_ == null) {
          if (outputFormatJsonQuoteDenormals_ != null) {
            outputFormatJsonQuoteDenormals_ =
              com.google.protobuf.BoolValue.newBuilder(outputFormatJsonQuoteDenormals_).mergeFrom(value).buildPartial();
          } else {
            outputFormatJsonQuoteDenormals_ = value;
          }
          onChanged();
        } else {
          outputFormatJsonQuoteDenormalsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Whether output of special floating-point values (`+nan`, `-nan`, `+inf` and `-inf`) is enabled in JSON output format.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue output_format_json_quote_denormals = 64;</code>
       */
      public Builder clearOutputFormatJsonQuoteDenormals() {
        if (outputFormatJsonQuoteDenormalsBuilder_ == null) {
          outputFormatJsonQuoteDenormals_ = null;
          onChanged();
        } else {
          outputFormatJsonQuoteDenormals_ = null;
          outputFormatJsonQuoteDenormalsBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Whether output of special floating-point values (`+nan`, `-nan`, `+inf` and `-inf`) is enabled in JSON output format.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue output_format_json_quote_denormals = 64;</code>
       */
      public com.google.protobuf.BoolValue.Builder getOutputFormatJsonQuoteDenormalsBuilder() {
        
        onChanged();
        return getOutputFormatJsonQuoteDenormalsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Whether output of special floating-point values (`+nan`, `-nan`, `+inf` and `-inf`) is enabled in JSON output format.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue output_format_json_quote_denormals = 64;</code>
       */
      public com.google.protobuf.BoolValueOrBuilder getOutputFormatJsonQuoteDenormalsOrBuilder() {
        if (outputFormatJsonQuoteDenormalsBuilder_ != null) {
          return outputFormatJsonQuoteDenormalsBuilder_.getMessageOrBuilder();
        } else {
          return outputFormatJsonQuoteDenormals_ == null ?
              com.google.protobuf.BoolValue.getDefaultInstance() : outputFormatJsonQuoteDenormals_;
        }
      }
      /**
       * <pre>
       * Whether output of special floating-point values (`+nan`, `-nan`, `+inf` and `-inf`) is enabled in JSON output format.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue output_format_json_quote_denormals = 64;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> 
          getOutputFormatJsonQuoteDenormalsFieldBuilder() {
        if (outputFormatJsonQuoteDenormalsBuilder_ == null) {
          outputFormatJsonQuoteDenormalsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder>(
                  getOutputFormatJsonQuoteDenormals(),
                  getParentForChildren(),
                  isClean());
          outputFormatJsonQuoteDenormals_ = null;
        }
        return outputFormatJsonQuoteDenormalsBuilder_;
      }

      private com.google.protobuf.BoolValue lowCardinalityAllowInNativeFormat_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> lowCardinalityAllowInNativeFormatBuilder_;
      /**
       * <code>.google.protobuf.BoolValue low_cardinality_allow_in_native_format = 78;</code>
       */
      public boolean hasLowCardinalityAllowInNativeFormat() {
        return lowCardinalityAllowInNativeFormatBuilder_ != null || lowCardinalityAllowInNativeFormat_ != null;
      }
      /**
       * <code>.google.protobuf.BoolValue low_cardinality_allow_in_native_format = 78;</code>
       */
      public com.google.protobuf.BoolValue getLowCardinalityAllowInNativeFormat() {
        if (lowCardinalityAllowInNativeFormatBuilder_ == null) {
          return lowCardinalityAllowInNativeFormat_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : lowCardinalityAllowInNativeFormat_;
        } else {
          return lowCardinalityAllowInNativeFormatBuilder_.getMessage();
        }
      }
      /**
       * <code>.google.protobuf.BoolValue low_cardinality_allow_in_native_format = 78;</code>
       */
      public Builder setLowCardinalityAllowInNativeFormat(com.google.protobuf.BoolValue value) {
        if (lowCardinalityAllowInNativeFormatBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          lowCardinalityAllowInNativeFormat_ = value;
          onChanged();
        } else {
          lowCardinalityAllowInNativeFormatBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.google.protobuf.BoolValue low_cardinality_allow_in_native_format = 78;</code>
       */
      public Builder setLowCardinalityAllowInNativeFormat(
          com.google.protobuf.BoolValue.Builder builderForValue) {
        if (lowCardinalityAllowInNativeFormatBuilder_ == null) {
          lowCardinalityAllowInNativeFormat_ = builderForValue.build();
          onChanged();
        } else {
          lowCardinalityAllowInNativeFormatBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.google.protobuf.BoolValue low_cardinality_allow_in_native_format = 78;</code>
       */
      public Builder mergeLowCardinalityAllowInNativeFormat(com.google.protobuf.BoolValue value) {
        if (lowCardinalityAllowInNativeFormatBuilder_ == null) {
          if (lowCardinalityAllowInNativeFormat_ != null) {
            lowCardinalityAllowInNativeFormat_ =
              com.google.protobuf.BoolValue.newBuilder(lowCardinalityAllowInNativeFormat_).mergeFrom(value).buildPartial();
          } else {
            lowCardinalityAllowInNativeFormat_ = value;
          }
          onChanged();
        } else {
          lowCardinalityAllowInNativeFormatBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.google.protobuf.BoolValue low_cardinality_allow_in_native_format = 78;</code>
       */
      public Builder clearLowCardinalityAllowInNativeFormat() {
        if (lowCardinalityAllowInNativeFormatBuilder_ == null) {
          lowCardinalityAllowInNativeFormat_ = null;
          onChanged();
        } else {
          lowCardinalityAllowInNativeFormat_ = null;
          lowCardinalityAllowInNativeFormatBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.google.protobuf.BoolValue low_cardinality_allow_in_native_format = 78;</code>
       */
      public com.google.protobuf.BoolValue.Builder getLowCardinalityAllowInNativeFormatBuilder() {
        
        onChanged();
        return getLowCardinalityAllowInNativeFormatFieldBuilder().getBuilder();
      }
      /**
       * <code>.google.protobuf.BoolValue low_cardinality_allow_in_native_format = 78;</code>
       */
      public com.google.protobuf.BoolValueOrBuilder getLowCardinalityAllowInNativeFormatOrBuilder() {
        if (lowCardinalityAllowInNativeFormatBuilder_ != null) {
          return lowCardinalityAllowInNativeFormatBuilder_.getMessageOrBuilder();
        } else {
          return lowCardinalityAllowInNativeFormat_ == null ?
              com.google.protobuf.BoolValue.getDefaultInstance() : lowCardinalityAllowInNativeFormat_;
        }
      }
      /**
       * <code>.google.protobuf.BoolValue low_cardinality_allow_in_native_format = 78;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> 
          getLowCardinalityAllowInNativeFormatFieldBuilder() {
        if (lowCardinalityAllowInNativeFormatBuilder_ == null) {
          lowCardinalityAllowInNativeFormatBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder>(
                  getLowCardinalityAllowInNativeFormat(),
                  getParentForChildren(),
                  isClean());
          lowCardinalityAllowInNativeFormat_ = null;
        }
        return lowCardinalityAllowInNativeFormatBuilder_;
      }

      private com.google.protobuf.BoolValue emptyResultForAggregationByEmptySet_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> emptyResultForAggregationByEmptySetBuilder_;
      /**
       * <code>.google.protobuf.BoolValue empty_result_for_aggregation_by_empty_set = 79;</code>
       */
      public boolean hasEmptyResultForAggregationByEmptySet() {
        return emptyResultForAggregationByEmptySetBuilder_ != null || emptyResultForAggregationByEmptySet_ != null;
      }
      /**
       * <code>.google.protobuf.BoolValue empty_result_for_aggregation_by_empty_set = 79;</code>
       */
      public com.google.protobuf.BoolValue getEmptyResultForAggregationByEmptySet() {
        if (emptyResultForAggregationByEmptySetBuilder_ == null) {
          return emptyResultForAggregationByEmptySet_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : emptyResultForAggregationByEmptySet_;
        } else {
          return emptyResultForAggregationByEmptySetBuilder_.getMessage();
        }
      }
      /**
       * <code>.google.protobuf.BoolValue empty_result_for_aggregation_by_empty_set = 79;</code>
       */
      public Builder setEmptyResultForAggregationByEmptySet(com.google.protobuf.BoolValue value) {
        if (emptyResultForAggregationByEmptySetBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          emptyResultForAggregationByEmptySet_ = value;
          onChanged();
        } else {
          emptyResultForAggregationByEmptySetBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.google.protobuf.BoolValue empty_result_for_aggregation_by_empty_set = 79;</code>
       */
      public Builder setEmptyResultForAggregationByEmptySet(
          com.google.protobuf.BoolValue.Builder builderForValue) {
        if (emptyResultForAggregationByEmptySetBuilder_ == null) {
          emptyResultForAggregationByEmptySet_ = builderForValue.build();
          onChanged();
        } else {
          emptyResultForAggregationByEmptySetBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.google.protobuf.BoolValue empty_result_for_aggregation_by_empty_set = 79;</code>
       */
      public Builder mergeEmptyResultForAggregationByEmptySet(com.google.protobuf.BoolValue value) {
        if (emptyResultForAggregationByEmptySetBuilder_ == null) {
          if (emptyResultForAggregationByEmptySet_ != null) {
            emptyResultForAggregationByEmptySet_ =
              com.google.protobuf.BoolValue.newBuilder(emptyResultForAggregationByEmptySet_).mergeFrom(value).buildPartial();
          } else {
            emptyResultForAggregationByEmptySet_ = value;
          }
          onChanged();
        } else {
          emptyResultForAggregationByEmptySetBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.google.protobuf.BoolValue empty_result_for_aggregation_by_empty_set = 79;</code>
       */
      public Builder clearEmptyResultForAggregationByEmptySet() {
        if (emptyResultForAggregationByEmptySetBuilder_ == null) {
          emptyResultForAggregationByEmptySet_ = null;
          onChanged();
        } else {
          emptyResultForAggregationByEmptySet_ = null;
          emptyResultForAggregationByEmptySetBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.google.protobuf.BoolValue empty_result_for_aggregation_by_empty_set = 79;</code>
       */
      public com.google.protobuf.BoolValue.Builder getEmptyResultForAggregationByEmptySetBuilder() {
        
        onChanged();
        return getEmptyResultForAggregationByEmptySetFieldBuilder().getBuilder();
      }
      /**
       * <code>.google.protobuf.BoolValue empty_result_for_aggregation_by_empty_set = 79;</code>
       */
      public com.google.protobuf.BoolValueOrBuilder getEmptyResultForAggregationByEmptySetOrBuilder() {
        if (emptyResultForAggregationByEmptySetBuilder_ != null) {
          return emptyResultForAggregationByEmptySetBuilder_.getMessageOrBuilder();
        } else {
          return emptyResultForAggregationByEmptySet_ == null ?
              com.google.protobuf.BoolValue.getDefaultInstance() : emptyResultForAggregationByEmptySet_;
        }
      }
      /**
       * <code>.google.protobuf.BoolValue empty_result_for_aggregation_by_empty_set = 79;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> 
          getEmptyResultForAggregationByEmptySetFieldBuilder() {
        if (emptyResultForAggregationByEmptySetBuilder_ == null) {
          emptyResultForAggregationByEmptySetBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder>(
                  getEmptyResultForAggregationByEmptySet(),
                  getParentForChildren(),
                  isClean());
          emptyResultForAggregationByEmptySet_ = null;
        }
        return emptyResultForAggregationByEmptySetBuilder_;
      }

      private com.google.protobuf.Int64Value httpConnectionTimeout_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> httpConnectionTimeoutBuilder_;
      /**
       * <pre>
       * HTTP connection timeout, in milliseconds.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value http_connection_timeout = 65;</code>
       */
      public boolean hasHttpConnectionTimeout() {
        return httpConnectionTimeoutBuilder_ != null || httpConnectionTimeout_ != null;
      }
      /**
       * <pre>
       * HTTP connection timeout, in milliseconds.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value http_connection_timeout = 65;</code>
       */
      public com.google.protobuf.Int64Value getHttpConnectionTimeout() {
        if (httpConnectionTimeoutBuilder_ == null) {
          return httpConnectionTimeout_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : httpConnectionTimeout_;
        } else {
          return httpConnectionTimeoutBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * HTTP connection timeout, in milliseconds.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value http_connection_timeout = 65;</code>
       */
      public Builder setHttpConnectionTimeout(com.google.protobuf.Int64Value value) {
        if (httpConnectionTimeoutBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          httpConnectionTimeout_ = value;
          onChanged();
        } else {
          httpConnectionTimeoutBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * HTTP connection timeout, in milliseconds.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value http_connection_timeout = 65;</code>
       */
      public Builder setHttpConnectionTimeout(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (httpConnectionTimeoutBuilder_ == null) {
          httpConnectionTimeout_ = builderForValue.build();
          onChanged();
        } else {
          httpConnectionTimeoutBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * HTTP connection timeout, in milliseconds.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value http_connection_timeout = 65;</code>
       */
      public Builder mergeHttpConnectionTimeout(com.google.protobuf.Int64Value value) {
        if (httpConnectionTimeoutBuilder_ == null) {
          if (httpConnectionTimeout_ != null) {
            httpConnectionTimeout_ =
              com.google.protobuf.Int64Value.newBuilder(httpConnectionTimeout_).mergeFrom(value).buildPartial();
          } else {
            httpConnectionTimeout_ = value;
          }
          onChanged();
        } else {
          httpConnectionTimeoutBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * HTTP connection timeout, in milliseconds.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value http_connection_timeout = 65;</code>
       */
      public Builder clearHttpConnectionTimeout() {
        if (httpConnectionTimeoutBuilder_ == null) {
          httpConnectionTimeout_ = null;
          onChanged();
        } else {
          httpConnectionTimeout_ = null;
          httpConnectionTimeoutBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * HTTP connection timeout, in milliseconds.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value http_connection_timeout = 65;</code>
       */
      public com.google.protobuf.Int64Value.Builder getHttpConnectionTimeoutBuilder() {
        
        onChanged();
        return getHttpConnectionTimeoutFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * HTTP connection timeout, in milliseconds.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value http_connection_timeout = 65;</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getHttpConnectionTimeoutOrBuilder() {
        if (httpConnectionTimeoutBuilder_ != null) {
          return httpConnectionTimeoutBuilder_.getMessageOrBuilder();
        } else {
          return httpConnectionTimeout_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : httpConnectionTimeout_;
        }
      }
      /**
       * <pre>
       * HTTP connection timeout, in milliseconds.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value http_connection_timeout = 65;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getHttpConnectionTimeoutFieldBuilder() {
        if (httpConnectionTimeoutBuilder_ == null) {
          httpConnectionTimeoutBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getHttpConnectionTimeout(),
                  getParentForChildren(),
                  isClean());
          httpConnectionTimeout_ = null;
        }
        return httpConnectionTimeoutBuilder_;
      }

      private com.google.protobuf.Int64Value httpReceiveTimeout_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> httpReceiveTimeoutBuilder_;
      /**
       * <pre>
       * HTTP receive timeout, in milliseconds.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value http_receive_timeout = 66;</code>
       */
      public boolean hasHttpReceiveTimeout() {
        return httpReceiveTimeoutBuilder_ != null || httpReceiveTimeout_ != null;
      }
      /**
       * <pre>
       * HTTP receive timeout, in milliseconds.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value http_receive_timeout = 66;</code>
       */
      public com.google.protobuf.Int64Value getHttpReceiveTimeout() {
        if (httpReceiveTimeoutBuilder_ == null) {
          return httpReceiveTimeout_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : httpReceiveTimeout_;
        } else {
          return httpReceiveTimeoutBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * HTTP receive timeout, in milliseconds.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value http_receive_timeout = 66;</code>
       */
      public Builder setHttpReceiveTimeout(com.google.protobuf.Int64Value value) {
        if (httpReceiveTimeoutBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          httpReceiveTimeout_ = value;
          onChanged();
        } else {
          httpReceiveTimeoutBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * HTTP receive timeout, in milliseconds.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value http_receive_timeout = 66;</code>
       */
      public Builder setHttpReceiveTimeout(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (httpReceiveTimeoutBuilder_ == null) {
          httpReceiveTimeout_ = builderForValue.build();
          onChanged();
        } else {
          httpReceiveTimeoutBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * HTTP receive timeout, in milliseconds.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value http_receive_timeout = 66;</code>
       */
      public Builder mergeHttpReceiveTimeout(com.google.protobuf.Int64Value value) {
        if (httpReceiveTimeoutBuilder_ == null) {
          if (httpReceiveTimeout_ != null) {
            httpReceiveTimeout_ =
              com.google.protobuf.Int64Value.newBuilder(httpReceiveTimeout_).mergeFrom(value).buildPartial();
          } else {
            httpReceiveTimeout_ = value;
          }
          onChanged();
        } else {
          httpReceiveTimeoutBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * HTTP receive timeout, in milliseconds.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value http_receive_timeout = 66;</code>
       */
      public Builder clearHttpReceiveTimeout() {
        if (httpReceiveTimeoutBuilder_ == null) {
          httpReceiveTimeout_ = null;
          onChanged();
        } else {
          httpReceiveTimeout_ = null;
          httpReceiveTimeoutBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * HTTP receive timeout, in milliseconds.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value http_receive_timeout = 66;</code>
       */
      public com.google.protobuf.Int64Value.Builder getHttpReceiveTimeoutBuilder() {
        
        onChanged();
        return getHttpReceiveTimeoutFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * HTTP receive timeout, in milliseconds.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value http_receive_timeout = 66;</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getHttpReceiveTimeoutOrBuilder() {
        if (httpReceiveTimeoutBuilder_ != null) {
          return httpReceiveTimeoutBuilder_.getMessageOrBuilder();
        } else {
          return httpReceiveTimeout_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : httpReceiveTimeout_;
        }
      }
      /**
       * <pre>
       * HTTP receive timeout, in milliseconds.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value http_receive_timeout = 66;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getHttpReceiveTimeoutFieldBuilder() {
        if (httpReceiveTimeoutBuilder_ == null) {
          httpReceiveTimeoutBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getHttpReceiveTimeout(),
                  getParentForChildren(),
                  isClean());
          httpReceiveTimeout_ = null;
        }
        return httpReceiveTimeoutBuilder_;
      }

      private com.google.protobuf.Int64Value httpSendTimeout_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> httpSendTimeoutBuilder_;
      /**
       * <pre>
       * HTTP send timeout, in milliseconds.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value http_send_timeout = 67;</code>
       */
      public boolean hasHttpSendTimeout() {
        return httpSendTimeoutBuilder_ != null || httpSendTimeout_ != null;
      }
      /**
       * <pre>
       * HTTP send timeout, in milliseconds.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value http_send_timeout = 67;</code>
       */
      public com.google.protobuf.Int64Value getHttpSendTimeout() {
        if (httpSendTimeoutBuilder_ == null) {
          return httpSendTimeout_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : httpSendTimeout_;
        } else {
          return httpSendTimeoutBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * HTTP send timeout, in milliseconds.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value http_send_timeout = 67;</code>
       */
      public Builder setHttpSendTimeout(com.google.protobuf.Int64Value value) {
        if (httpSendTimeoutBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          httpSendTimeout_ = value;
          onChanged();
        } else {
          httpSendTimeoutBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * HTTP send timeout, in milliseconds.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value http_send_timeout = 67;</code>
       */
      public Builder setHttpSendTimeout(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (httpSendTimeoutBuilder_ == null) {
          httpSendTimeout_ = builderForValue.build();
          onChanged();
        } else {
          httpSendTimeoutBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * HTTP send timeout, in milliseconds.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value http_send_timeout = 67;</code>
       */
      public Builder mergeHttpSendTimeout(com.google.protobuf.Int64Value value) {
        if (httpSendTimeoutBuilder_ == null) {
          if (httpSendTimeout_ != null) {
            httpSendTimeout_ =
              com.google.protobuf.Int64Value.newBuilder(httpSendTimeout_).mergeFrom(value).buildPartial();
          } else {
            httpSendTimeout_ = value;
          }
          onChanged();
        } else {
          httpSendTimeoutBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * HTTP send timeout, in milliseconds.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value http_send_timeout = 67;</code>
       */
      public Builder clearHttpSendTimeout() {
        if (httpSendTimeoutBuilder_ == null) {
          httpSendTimeout_ = null;
          onChanged();
        } else {
          httpSendTimeout_ = null;
          httpSendTimeoutBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * HTTP send timeout, in milliseconds.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value http_send_timeout = 67;</code>
       */
      public com.google.protobuf.Int64Value.Builder getHttpSendTimeoutBuilder() {
        
        onChanged();
        return getHttpSendTimeoutFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * HTTP send timeout, in milliseconds.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value http_send_timeout = 67;</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getHttpSendTimeoutOrBuilder() {
        if (httpSendTimeoutBuilder_ != null) {
          return httpSendTimeoutBuilder_.getMessageOrBuilder();
        } else {
          return httpSendTimeout_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : httpSendTimeout_;
        }
      }
      /**
       * <pre>
       * HTTP send timeout, in milliseconds.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value http_send_timeout = 67;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getHttpSendTimeoutFieldBuilder() {
        if (httpSendTimeoutBuilder_ == null) {
          httpSendTimeoutBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getHttpSendTimeout(),
                  getParentForChildren(),
                  isClean());
          httpSendTimeout_ = null;
        }
        return httpSendTimeoutBuilder_;
      }

      private com.google.protobuf.BoolValue enableHttpCompression_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> enableHttpCompressionBuilder_;
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-enable_http_compression).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue enable_http_compression = 68;</code>
       */
      public boolean hasEnableHttpCompression() {
        return enableHttpCompressionBuilder_ != null || enableHttpCompression_ != null;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-enable_http_compression).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue enable_http_compression = 68;</code>
       */
      public com.google.protobuf.BoolValue getEnableHttpCompression() {
        if (enableHttpCompressionBuilder_ == null) {
          return enableHttpCompression_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : enableHttpCompression_;
        } else {
          return enableHttpCompressionBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-enable_http_compression).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue enable_http_compression = 68;</code>
       */
      public Builder setEnableHttpCompression(com.google.protobuf.BoolValue value) {
        if (enableHttpCompressionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          enableHttpCompression_ = value;
          onChanged();
        } else {
          enableHttpCompressionBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-enable_http_compression).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue enable_http_compression = 68;</code>
       */
      public Builder setEnableHttpCompression(
          com.google.protobuf.BoolValue.Builder builderForValue) {
        if (enableHttpCompressionBuilder_ == null) {
          enableHttpCompression_ = builderForValue.build();
          onChanged();
        } else {
          enableHttpCompressionBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-enable_http_compression).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue enable_http_compression = 68;</code>
       */
      public Builder mergeEnableHttpCompression(com.google.protobuf.BoolValue value) {
        if (enableHttpCompressionBuilder_ == null) {
          if (enableHttpCompression_ != null) {
            enableHttpCompression_ =
              com.google.protobuf.BoolValue.newBuilder(enableHttpCompression_).mergeFrom(value).buildPartial();
          } else {
            enableHttpCompression_ = value;
          }
          onChanged();
        } else {
          enableHttpCompressionBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-enable_http_compression).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue enable_http_compression = 68;</code>
       */
      public Builder clearEnableHttpCompression() {
        if (enableHttpCompressionBuilder_ == null) {
          enableHttpCompression_ = null;
          onChanged();
        } else {
          enableHttpCompression_ = null;
          enableHttpCompressionBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-enable_http_compression).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue enable_http_compression = 68;</code>
       */
      public com.google.protobuf.BoolValue.Builder getEnableHttpCompressionBuilder() {
        
        onChanged();
        return getEnableHttpCompressionFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-enable_http_compression).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue enable_http_compression = 68;</code>
       */
      public com.google.protobuf.BoolValueOrBuilder getEnableHttpCompressionOrBuilder() {
        if (enableHttpCompressionBuilder_ != null) {
          return enableHttpCompressionBuilder_.getMessageOrBuilder();
        } else {
          return enableHttpCompression_ == null ?
              com.google.protobuf.BoolValue.getDefaultInstance() : enableHttpCompression_;
        }
      }
      /**
       * <pre>
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-enable_http_compression).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue enable_http_compression = 68;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> 
          getEnableHttpCompressionFieldBuilder() {
        if (enableHttpCompressionBuilder_ == null) {
          enableHttpCompressionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder>(
                  getEnableHttpCompression(),
                  getParentForChildren(),
                  isClean());
          enableHttpCompression_ = null;
        }
        return enableHttpCompressionBuilder_;
      }

      private com.google.protobuf.BoolValue sendProgressInHttpHeaders_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> sendProgressInHttpHeadersBuilder_;
      /**
       * <pre>
       * Whether progress notifications using X-ClickHouse-Progress headers are enabled. Default value: `false`.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-send_progress_in_http_headers).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue send_progress_in_http_headers = 69;</code>
       */
      public boolean hasSendProgressInHttpHeaders() {
        return sendProgressInHttpHeadersBuilder_ != null || sendProgressInHttpHeaders_ != null;
      }
      /**
       * <pre>
       * Whether progress notifications using X-ClickHouse-Progress headers are enabled. Default value: `false`.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-send_progress_in_http_headers).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue send_progress_in_http_headers = 69;</code>
       */
      public com.google.protobuf.BoolValue getSendProgressInHttpHeaders() {
        if (sendProgressInHttpHeadersBuilder_ == null) {
          return sendProgressInHttpHeaders_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : sendProgressInHttpHeaders_;
        } else {
          return sendProgressInHttpHeadersBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Whether progress notifications using X-ClickHouse-Progress headers are enabled. Default value: `false`.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-send_progress_in_http_headers).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue send_progress_in_http_headers = 69;</code>
       */
      public Builder setSendProgressInHttpHeaders(com.google.protobuf.BoolValue value) {
        if (sendProgressInHttpHeadersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          sendProgressInHttpHeaders_ = value;
          onChanged();
        } else {
          sendProgressInHttpHeadersBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Whether progress notifications using X-ClickHouse-Progress headers are enabled. Default value: `false`.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-send_progress_in_http_headers).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue send_progress_in_http_headers = 69;</code>
       */
      public Builder setSendProgressInHttpHeaders(
          com.google.protobuf.BoolValue.Builder builderForValue) {
        if (sendProgressInHttpHeadersBuilder_ == null) {
          sendProgressInHttpHeaders_ = builderForValue.build();
          onChanged();
        } else {
          sendProgressInHttpHeadersBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Whether progress notifications using X-ClickHouse-Progress headers are enabled. Default value: `false`.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-send_progress_in_http_headers).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue send_progress_in_http_headers = 69;</code>
       */
      public Builder mergeSendProgressInHttpHeaders(com.google.protobuf.BoolValue value) {
        if (sendProgressInHttpHeadersBuilder_ == null) {
          if (sendProgressInHttpHeaders_ != null) {
            sendProgressInHttpHeaders_ =
              com.google.protobuf.BoolValue.newBuilder(sendProgressInHttpHeaders_).mergeFrom(value).buildPartial();
          } else {
            sendProgressInHttpHeaders_ = value;
          }
          onChanged();
        } else {
          sendProgressInHttpHeadersBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Whether progress notifications using X-ClickHouse-Progress headers are enabled. Default value: `false`.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-send_progress_in_http_headers).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue send_progress_in_http_headers = 69;</code>
       */
      public Builder clearSendProgressInHttpHeaders() {
        if (sendProgressInHttpHeadersBuilder_ == null) {
          sendProgressInHttpHeaders_ = null;
          onChanged();
        } else {
          sendProgressInHttpHeaders_ = null;
          sendProgressInHttpHeadersBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Whether progress notifications using X-ClickHouse-Progress headers are enabled. Default value: `false`.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-send_progress_in_http_headers).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue send_progress_in_http_headers = 69;</code>
       */
      public com.google.protobuf.BoolValue.Builder getSendProgressInHttpHeadersBuilder() {
        
        onChanged();
        return getSendProgressInHttpHeadersFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Whether progress notifications using X-ClickHouse-Progress headers are enabled. Default value: `false`.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-send_progress_in_http_headers).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue send_progress_in_http_headers = 69;</code>
       */
      public com.google.protobuf.BoolValueOrBuilder getSendProgressInHttpHeadersOrBuilder() {
        if (sendProgressInHttpHeadersBuilder_ != null) {
          return sendProgressInHttpHeadersBuilder_.getMessageOrBuilder();
        } else {
          return sendProgressInHttpHeaders_ == null ?
              com.google.protobuf.BoolValue.getDefaultInstance() : sendProgressInHttpHeaders_;
        }
      }
      /**
       * <pre>
       * Whether progress notifications using X-ClickHouse-Progress headers are enabled. Default value: `false`.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-send_progress_in_http_headers).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue send_progress_in_http_headers = 69;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> 
          getSendProgressInHttpHeadersFieldBuilder() {
        if (sendProgressInHttpHeadersBuilder_ == null) {
          sendProgressInHttpHeadersBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder>(
                  getSendProgressInHttpHeaders(),
                  getParentForChildren(),
                  isClean());
          sendProgressInHttpHeaders_ = null;
        }
        return sendProgressInHttpHeadersBuilder_;
      }

      private com.google.protobuf.Int64Value httpHeadersProgressInterval_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> httpHeadersProgressIntervalBuilder_;
      /**
       * <pre>
       * Minimum interval between progress notifications, in milliseconds. Default value: 100.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value http_headers_progress_interval = 70;</code>
       */
      public boolean hasHttpHeadersProgressInterval() {
        return httpHeadersProgressIntervalBuilder_ != null || httpHeadersProgressInterval_ != null;
      }
      /**
       * <pre>
       * Minimum interval between progress notifications, in milliseconds. Default value: 100.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value http_headers_progress_interval = 70;</code>
       */
      public com.google.protobuf.Int64Value getHttpHeadersProgressInterval() {
        if (httpHeadersProgressIntervalBuilder_ == null) {
          return httpHeadersProgressInterval_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : httpHeadersProgressInterval_;
        } else {
          return httpHeadersProgressIntervalBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Minimum interval between progress notifications, in milliseconds. Default value: 100.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value http_headers_progress_interval = 70;</code>
       */
      public Builder setHttpHeadersProgressInterval(com.google.protobuf.Int64Value value) {
        if (httpHeadersProgressIntervalBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          httpHeadersProgressInterval_ = value;
          onChanged();
        } else {
          httpHeadersProgressIntervalBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Minimum interval between progress notifications, in milliseconds. Default value: 100.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value http_headers_progress_interval = 70;</code>
       */
      public Builder setHttpHeadersProgressInterval(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (httpHeadersProgressIntervalBuilder_ == null) {
          httpHeadersProgressInterval_ = builderForValue.build();
          onChanged();
        } else {
          httpHeadersProgressIntervalBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Minimum interval between progress notifications, in milliseconds. Default value: 100.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value http_headers_progress_interval = 70;</code>
       */
      public Builder mergeHttpHeadersProgressInterval(com.google.protobuf.Int64Value value) {
        if (httpHeadersProgressIntervalBuilder_ == null) {
          if (httpHeadersProgressInterval_ != null) {
            httpHeadersProgressInterval_ =
              com.google.protobuf.Int64Value.newBuilder(httpHeadersProgressInterval_).mergeFrom(value).buildPartial();
          } else {
            httpHeadersProgressInterval_ = value;
          }
          onChanged();
        } else {
          httpHeadersProgressIntervalBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Minimum interval between progress notifications, in milliseconds. Default value: 100.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value http_headers_progress_interval = 70;</code>
       */
      public Builder clearHttpHeadersProgressInterval() {
        if (httpHeadersProgressIntervalBuilder_ == null) {
          httpHeadersProgressInterval_ = null;
          onChanged();
        } else {
          httpHeadersProgressInterval_ = null;
          httpHeadersProgressIntervalBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Minimum interval between progress notifications, in milliseconds. Default value: 100.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value http_headers_progress_interval = 70;</code>
       */
      public com.google.protobuf.Int64Value.Builder getHttpHeadersProgressIntervalBuilder() {
        
        onChanged();
        return getHttpHeadersProgressIntervalFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Minimum interval between progress notifications, in milliseconds. Default value: 100.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value http_headers_progress_interval = 70;</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getHttpHeadersProgressIntervalOrBuilder() {
        if (httpHeadersProgressIntervalBuilder_ != null) {
          return httpHeadersProgressIntervalBuilder_.getMessageOrBuilder();
        } else {
          return httpHeadersProgressInterval_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : httpHeadersProgressInterval_;
        }
      }
      /**
       * <pre>
       * Minimum interval between progress notifications, in milliseconds. Default value: 100.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value http_headers_progress_interval = 70;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getHttpHeadersProgressIntervalFieldBuilder() {
        if (httpHeadersProgressIntervalBuilder_ == null) {
          httpHeadersProgressIntervalBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getHttpHeadersProgressInterval(),
                  getParentForChildren(),
                  isClean());
          httpHeadersProgressInterval_ = null;
        }
        return httpHeadersProgressIntervalBuilder_;
      }

      private com.google.protobuf.BoolValue addHttpCorsHeader_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> addHttpCorsHeaderBuilder_;
      /**
       * <pre>
       * Whether CORS header in HTTP responses is enabled. Default value: `false`.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue add_http_cors_header = 71;</code>
       */
      public boolean hasAddHttpCorsHeader() {
        return addHttpCorsHeaderBuilder_ != null || addHttpCorsHeader_ != null;
      }
      /**
       * <pre>
       * Whether CORS header in HTTP responses is enabled. Default value: `false`.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue add_http_cors_header = 71;</code>
       */
      public com.google.protobuf.BoolValue getAddHttpCorsHeader() {
        if (addHttpCorsHeaderBuilder_ == null) {
          return addHttpCorsHeader_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : addHttpCorsHeader_;
        } else {
          return addHttpCorsHeaderBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Whether CORS header in HTTP responses is enabled. Default value: `false`.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue add_http_cors_header = 71;</code>
       */
      public Builder setAddHttpCorsHeader(com.google.protobuf.BoolValue value) {
        if (addHttpCorsHeaderBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          addHttpCorsHeader_ = value;
          onChanged();
        } else {
          addHttpCorsHeaderBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Whether CORS header in HTTP responses is enabled. Default value: `false`.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue add_http_cors_header = 71;</code>
       */
      public Builder setAddHttpCorsHeader(
          com.google.protobuf.BoolValue.Builder builderForValue) {
        if (addHttpCorsHeaderBuilder_ == null) {
          addHttpCorsHeader_ = builderForValue.build();
          onChanged();
        } else {
          addHttpCorsHeaderBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Whether CORS header in HTTP responses is enabled. Default value: `false`.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue add_http_cors_header = 71;</code>
       */
      public Builder mergeAddHttpCorsHeader(com.google.protobuf.BoolValue value) {
        if (addHttpCorsHeaderBuilder_ == null) {
          if (addHttpCorsHeader_ != null) {
            addHttpCorsHeader_ =
              com.google.protobuf.BoolValue.newBuilder(addHttpCorsHeader_).mergeFrom(value).buildPartial();
          } else {
            addHttpCorsHeader_ = value;
          }
          onChanged();
        } else {
          addHttpCorsHeaderBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Whether CORS header in HTTP responses is enabled. Default value: `false`.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue add_http_cors_header = 71;</code>
       */
      public Builder clearAddHttpCorsHeader() {
        if (addHttpCorsHeaderBuilder_ == null) {
          addHttpCorsHeader_ = null;
          onChanged();
        } else {
          addHttpCorsHeader_ = null;
          addHttpCorsHeaderBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Whether CORS header in HTTP responses is enabled. Default value: `false`.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue add_http_cors_header = 71;</code>
       */
      public com.google.protobuf.BoolValue.Builder getAddHttpCorsHeaderBuilder() {
        
        onChanged();
        return getAddHttpCorsHeaderFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Whether CORS header in HTTP responses is enabled. Default value: `false`.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue add_http_cors_header = 71;</code>
       */
      public com.google.protobuf.BoolValueOrBuilder getAddHttpCorsHeaderOrBuilder() {
        if (addHttpCorsHeaderBuilder_ != null) {
          return addHttpCorsHeaderBuilder_.getMessageOrBuilder();
        } else {
          return addHttpCorsHeader_ == null ?
              com.google.protobuf.BoolValue.getDefaultInstance() : addHttpCorsHeader_;
        }
      }
      /**
       * <pre>
       * Whether CORS header in HTTP responses is enabled. Default value: `false`.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue add_http_cors_header = 71;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> 
          getAddHttpCorsHeaderFieldBuilder() {
        if (addHttpCorsHeaderBuilder_ == null) {
          addHttpCorsHeaderBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder>(
                  getAddHttpCorsHeader(),
                  getParentForChildren(),
                  isClean());
          addHttpCorsHeader_ = null;
        }
        return addHttpCorsHeaderBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:yandex.cloud.mdb.clickhouse.v1.UserSettings)
    }

    // @@protoc_insertion_point(class_scope:yandex.cloud.mdb.clickhouse.v1.UserSettings)
    private static final yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings();
    }

    public static yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<UserSettings>
        PARSER = new com.google.protobuf.AbstractParser<UserSettings>() {
      @java.lang.Override
      public UserSettings parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new UserSettings(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<UserSettings> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<UserSettings> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserSettings getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface UserQuotaOrBuilder extends
      // @@protoc_insertion_point(interface_extends:yandex.cloud.mdb.clickhouse.v1.UserQuota)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Duration of interval for quota in milliseconds.
     * Minimal value is 1 minute.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value interval_duration = 1 [(.yandex.cloud.value) = "&gt;=60000"];</code>
     */
    boolean hasIntervalDuration();
    /**
     * <pre>
     * Duration of interval for quota in milliseconds.
     * Minimal value is 1 minute.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value interval_duration = 1 [(.yandex.cloud.value) = "&gt;=60000"];</code>
     */
    com.google.protobuf.Int64Value getIntervalDuration();
    /**
     * <pre>
     * Duration of interval for quota in milliseconds.
     * Minimal value is 1 minute.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value interval_duration = 1 [(.yandex.cloud.value) = "&gt;=60000"];</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getIntervalDurationOrBuilder();

    /**
     * <pre>
     * The total number of queries.
     * 0 - unlimited.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value queries = 2 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    boolean hasQueries();
    /**
     * <pre>
     * The total number of queries.
     * 0 - unlimited.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value queries = 2 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    com.google.protobuf.Int64Value getQueries();
    /**
     * <pre>
     * The total number of queries.
     * 0 - unlimited.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value queries = 2 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getQueriesOrBuilder();

    /**
     * <pre>
     * The number of queries that threw exception.
     * 0 - unlimited.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value errors = 3 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    boolean hasErrors();
    /**
     * <pre>
     * The number of queries that threw exception.
     * 0 - unlimited.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value errors = 3 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    com.google.protobuf.Int64Value getErrors();
    /**
     * <pre>
     * The number of queries that threw exception.
     * 0 - unlimited.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value errors = 3 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getErrorsOrBuilder();

    /**
     * <pre>
     * The total number of rows given as the result..
     * 0 - unlimited.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value result_rows = 4 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    boolean hasResultRows();
    /**
     * <pre>
     * The total number of rows given as the result..
     * 0 - unlimited.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value result_rows = 4 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    com.google.protobuf.Int64Value getResultRows();
    /**
     * <pre>
     * The total number of rows given as the result..
     * 0 - unlimited.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value result_rows = 4 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getResultRowsOrBuilder();

    /**
     * <pre>
     * The total number of source rows read from tables for running the query, on all remote servers.
     * 0 - unlimited.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value read_rows = 5 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    boolean hasReadRows();
    /**
     * <pre>
     * The total number of source rows read from tables for running the query, on all remote servers.
     * 0 - unlimited.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value read_rows = 5 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    com.google.protobuf.Int64Value getReadRows();
    /**
     * <pre>
     * The total number of source rows read from tables for running the query, on all remote servers.
     * 0 - unlimited.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value read_rows = 5 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getReadRowsOrBuilder();

    /**
     * <pre>
     * The total query execution time, in milliseconds (wall time).
     * 0 - unlimited.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value execution_time = 6 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    boolean hasExecutionTime();
    /**
     * <pre>
     * The total query execution time, in milliseconds (wall time).
     * 0 - unlimited.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value execution_time = 6 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    com.google.protobuf.Int64Value getExecutionTime();
    /**
     * <pre>
     * The total query execution time, in milliseconds (wall time).
     * 0 - unlimited.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value execution_time = 6 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getExecutionTimeOrBuilder();
  }
  /**
   * <pre>
   * ClickHouse quota representation. Each quota associated with an user and limits it resource usage for an interval.
   * See in-depth description [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/quotas/).
   * </pre>
   *
   * Protobuf type {@code yandex.cloud.mdb.clickhouse.v1.UserQuota}
   */
  public  static final class UserQuota extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:yandex.cloud.mdb.clickhouse.v1.UserQuota)
      UserQuotaOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use UserQuota.newBuilder() to construct.
    private UserQuota(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private UserQuota() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private UserQuota(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (intervalDuration_ != null) {
                subBuilder = intervalDuration_.toBuilder();
              }
              intervalDuration_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(intervalDuration_);
                intervalDuration_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (queries_ != null) {
                subBuilder = queries_.toBuilder();
              }
              queries_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(queries_);
                queries_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (errors_ != null) {
                subBuilder = errors_.toBuilder();
              }
              errors_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(errors_);
                errors_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (resultRows_ != null) {
                subBuilder = resultRows_.toBuilder();
              }
              resultRows_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(resultRows_);
                resultRows_ = subBuilder.buildPartial();
              }

              break;
            }
            case 42: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (readRows_ != null) {
                subBuilder = readRows_.toBuilder();
              }
              readRows_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(readRows_);
                readRows_ = subBuilder.buildPartial();
              }

              break;
            }
            case 50: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (executionTime_ != null) {
                subBuilder = executionTime_.toBuilder();
              }
              executionTime_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(executionTime_);
                executionTime_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.internal_static_yandex_cloud_mdb_clickhouse_v1_UserQuota_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.internal_static_yandex_cloud_mdb_clickhouse_v1_UserQuota_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuota.class, yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuota.Builder.class);
    }

    public static final int INTERVAL_DURATION_FIELD_NUMBER = 1;
    private com.google.protobuf.Int64Value intervalDuration_;
    /**
     * <pre>
     * Duration of interval for quota in milliseconds.
     * Minimal value is 1 minute.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value interval_duration = 1 [(.yandex.cloud.value) = "&gt;=60000"];</code>
     */
    public boolean hasIntervalDuration() {
      return intervalDuration_ != null;
    }
    /**
     * <pre>
     * Duration of interval for quota in milliseconds.
     * Minimal value is 1 minute.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value interval_duration = 1 [(.yandex.cloud.value) = "&gt;=60000"];</code>
     */
    public com.google.protobuf.Int64Value getIntervalDuration() {
      return intervalDuration_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : intervalDuration_;
    }
    /**
     * <pre>
     * Duration of interval for quota in milliseconds.
     * Minimal value is 1 minute.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value interval_duration = 1 [(.yandex.cloud.value) = "&gt;=60000"];</code>
     */
    public com.google.protobuf.Int64ValueOrBuilder getIntervalDurationOrBuilder() {
      return getIntervalDuration();
    }

    public static final int QUERIES_FIELD_NUMBER = 2;
    private com.google.protobuf.Int64Value queries_;
    /**
     * <pre>
     * The total number of queries.
     * 0 - unlimited.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value queries = 2 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    public boolean hasQueries() {
      return queries_ != null;
    }
    /**
     * <pre>
     * The total number of queries.
     * 0 - unlimited.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value queries = 2 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    public com.google.protobuf.Int64Value getQueries() {
      return queries_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : queries_;
    }
    /**
     * <pre>
     * The total number of queries.
     * 0 - unlimited.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value queries = 2 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    public com.google.protobuf.Int64ValueOrBuilder getQueriesOrBuilder() {
      return getQueries();
    }

    public static final int ERRORS_FIELD_NUMBER = 3;
    private com.google.protobuf.Int64Value errors_;
    /**
     * <pre>
     * The number of queries that threw exception.
     * 0 - unlimited.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value errors = 3 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    public boolean hasErrors() {
      return errors_ != null;
    }
    /**
     * <pre>
     * The number of queries that threw exception.
     * 0 - unlimited.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value errors = 3 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    public com.google.protobuf.Int64Value getErrors() {
      return errors_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : errors_;
    }
    /**
     * <pre>
     * The number of queries that threw exception.
     * 0 - unlimited.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value errors = 3 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    public com.google.protobuf.Int64ValueOrBuilder getErrorsOrBuilder() {
      return getErrors();
    }

    public static final int RESULT_ROWS_FIELD_NUMBER = 4;
    private com.google.protobuf.Int64Value resultRows_;
    /**
     * <pre>
     * The total number of rows given as the result..
     * 0 - unlimited.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value result_rows = 4 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    public boolean hasResultRows() {
      return resultRows_ != null;
    }
    /**
     * <pre>
     * The total number of rows given as the result..
     * 0 - unlimited.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value result_rows = 4 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    public com.google.protobuf.Int64Value getResultRows() {
      return resultRows_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : resultRows_;
    }
    /**
     * <pre>
     * The total number of rows given as the result..
     * 0 - unlimited.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value result_rows = 4 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    public com.google.protobuf.Int64ValueOrBuilder getResultRowsOrBuilder() {
      return getResultRows();
    }

    public static final int READ_ROWS_FIELD_NUMBER = 5;
    private com.google.protobuf.Int64Value readRows_;
    /**
     * <pre>
     * The total number of source rows read from tables for running the query, on all remote servers.
     * 0 - unlimited.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value read_rows = 5 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    public boolean hasReadRows() {
      return readRows_ != null;
    }
    /**
     * <pre>
     * The total number of source rows read from tables for running the query, on all remote servers.
     * 0 - unlimited.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value read_rows = 5 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    public com.google.protobuf.Int64Value getReadRows() {
      return readRows_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : readRows_;
    }
    /**
     * <pre>
     * The total number of source rows read from tables for running the query, on all remote servers.
     * 0 - unlimited.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value read_rows = 5 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    public com.google.protobuf.Int64ValueOrBuilder getReadRowsOrBuilder() {
      return getReadRows();
    }

    public static final int EXECUTION_TIME_FIELD_NUMBER = 6;
    private com.google.protobuf.Int64Value executionTime_;
    /**
     * <pre>
     * The total query execution time, in milliseconds (wall time).
     * 0 - unlimited.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value execution_time = 6 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    public boolean hasExecutionTime() {
      return executionTime_ != null;
    }
    /**
     * <pre>
     * The total query execution time, in milliseconds (wall time).
     * 0 - unlimited.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value execution_time = 6 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    public com.google.protobuf.Int64Value getExecutionTime() {
      return executionTime_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : executionTime_;
    }
    /**
     * <pre>
     * The total query execution time, in milliseconds (wall time).
     * 0 - unlimited.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value execution_time = 6 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    public com.google.protobuf.Int64ValueOrBuilder getExecutionTimeOrBuilder() {
      return getExecutionTime();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (intervalDuration_ != null) {
        output.writeMessage(1, getIntervalDuration());
      }
      if (queries_ != null) {
        output.writeMessage(2, getQueries());
      }
      if (errors_ != null) {
        output.writeMessage(3, getErrors());
      }
      if (resultRows_ != null) {
        output.writeMessage(4, getResultRows());
      }
      if (readRows_ != null) {
        output.writeMessage(5, getReadRows());
      }
      if (executionTime_ != null) {
        output.writeMessage(6, getExecutionTime());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (intervalDuration_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getIntervalDuration());
      }
      if (queries_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getQueries());
      }
      if (errors_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getErrors());
      }
      if (resultRows_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getResultRows());
      }
      if (readRows_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getReadRows());
      }
      if (executionTime_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getExecutionTime());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuota)) {
        return super.equals(obj);
      }
      yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuota other = (yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuota) obj;

      boolean result = true;
      result = result && (hasIntervalDuration() == other.hasIntervalDuration());
      if (hasIntervalDuration()) {
        result = result && getIntervalDuration()
            .equals(other.getIntervalDuration());
      }
      result = result && (hasQueries() == other.hasQueries());
      if (hasQueries()) {
        result = result && getQueries()
            .equals(other.getQueries());
      }
      result = result && (hasErrors() == other.hasErrors());
      if (hasErrors()) {
        result = result && getErrors()
            .equals(other.getErrors());
      }
      result = result && (hasResultRows() == other.hasResultRows());
      if (hasResultRows()) {
        result = result && getResultRows()
            .equals(other.getResultRows());
      }
      result = result && (hasReadRows() == other.hasReadRows());
      if (hasReadRows()) {
        result = result && getReadRows()
            .equals(other.getReadRows());
      }
      result = result && (hasExecutionTime() == other.hasExecutionTime());
      if (hasExecutionTime()) {
        result = result && getExecutionTime()
            .equals(other.getExecutionTime());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasIntervalDuration()) {
        hash = (37 * hash) + INTERVAL_DURATION_FIELD_NUMBER;
        hash = (53 * hash) + getIntervalDuration().hashCode();
      }
      if (hasQueries()) {
        hash = (37 * hash) + QUERIES_FIELD_NUMBER;
        hash = (53 * hash) + getQueries().hashCode();
      }
      if (hasErrors()) {
        hash = (37 * hash) + ERRORS_FIELD_NUMBER;
        hash = (53 * hash) + getErrors().hashCode();
      }
      if (hasResultRows()) {
        hash = (37 * hash) + RESULT_ROWS_FIELD_NUMBER;
        hash = (53 * hash) + getResultRows().hashCode();
      }
      if (hasReadRows()) {
        hash = (37 * hash) + READ_ROWS_FIELD_NUMBER;
        hash = (53 * hash) + getReadRows().hashCode();
      }
      if (hasExecutionTime()) {
        hash = (37 * hash) + EXECUTION_TIME_FIELD_NUMBER;
        hash = (53 * hash) + getExecutionTime().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuota parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuota parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuota parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuota parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuota parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuota parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuota parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuota parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuota parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuota parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuota parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuota parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuota prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * ClickHouse quota representation. Each quota associated with an user and limits it resource usage for an interval.
     * See in-depth description [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/quotas/).
     * </pre>
     *
     * Protobuf type {@code yandex.cloud.mdb.clickhouse.v1.UserQuota}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:yandex.cloud.mdb.clickhouse.v1.UserQuota)
        yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuotaOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.internal_static_yandex_cloud_mdb_clickhouse_v1_UserQuota_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.internal_static_yandex_cloud_mdb_clickhouse_v1_UserQuota_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuota.class, yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuota.Builder.class);
      }

      // Construct using yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuota.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (intervalDurationBuilder_ == null) {
          intervalDuration_ = null;
        } else {
          intervalDuration_ = null;
          intervalDurationBuilder_ = null;
        }
        if (queriesBuilder_ == null) {
          queries_ = null;
        } else {
          queries_ = null;
          queriesBuilder_ = null;
        }
        if (errorsBuilder_ == null) {
          errors_ = null;
        } else {
          errors_ = null;
          errorsBuilder_ = null;
        }
        if (resultRowsBuilder_ == null) {
          resultRows_ = null;
        } else {
          resultRows_ = null;
          resultRowsBuilder_ = null;
        }
        if (readRowsBuilder_ == null) {
          readRows_ = null;
        } else {
          readRows_ = null;
          readRowsBuilder_ = null;
        }
        if (executionTimeBuilder_ == null) {
          executionTime_ = null;
        } else {
          executionTime_ = null;
          executionTimeBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.internal_static_yandex_cloud_mdb_clickhouse_v1_UserQuota_descriptor;
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuota getDefaultInstanceForType() {
        return yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuota.getDefaultInstance();
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuota build() {
        yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuota result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuota buildPartial() {
        yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuota result = new yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuota(this);
        if (intervalDurationBuilder_ == null) {
          result.intervalDuration_ = intervalDuration_;
        } else {
          result.intervalDuration_ = intervalDurationBuilder_.build();
        }
        if (queriesBuilder_ == null) {
          result.queries_ = queries_;
        } else {
          result.queries_ = queriesBuilder_.build();
        }
        if (errorsBuilder_ == null) {
          result.errors_ = errors_;
        } else {
          result.errors_ = errorsBuilder_.build();
        }
        if (resultRowsBuilder_ == null) {
          result.resultRows_ = resultRows_;
        } else {
          result.resultRows_ = resultRowsBuilder_.build();
        }
        if (readRowsBuilder_ == null) {
          result.readRows_ = readRows_;
        } else {
          result.readRows_ = readRowsBuilder_.build();
        }
        if (executionTimeBuilder_ == null) {
          result.executionTime_ = executionTime_;
        } else {
          result.executionTime_ = executionTimeBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuota) {
          return mergeFrom((yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuota)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuota other) {
        if (other == yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuota.getDefaultInstance()) return this;
        if (other.hasIntervalDuration()) {
          mergeIntervalDuration(other.getIntervalDuration());
        }
        if (other.hasQueries()) {
          mergeQueries(other.getQueries());
        }
        if (other.hasErrors()) {
          mergeErrors(other.getErrors());
        }
        if (other.hasResultRows()) {
          mergeResultRows(other.getResultRows());
        }
        if (other.hasReadRows()) {
          mergeReadRows(other.getReadRows());
        }
        if (other.hasExecutionTime()) {
          mergeExecutionTime(other.getExecutionTime());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuota parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuota) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.google.protobuf.Int64Value intervalDuration_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> intervalDurationBuilder_;
      /**
       * <pre>
       * Duration of interval for quota in milliseconds.
       * Minimal value is 1 minute.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value interval_duration = 1 [(.yandex.cloud.value) = "&gt;=60000"];</code>
       */
      public boolean hasIntervalDuration() {
        return intervalDurationBuilder_ != null || intervalDuration_ != null;
      }
      /**
       * <pre>
       * Duration of interval for quota in milliseconds.
       * Minimal value is 1 minute.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value interval_duration = 1 [(.yandex.cloud.value) = "&gt;=60000"];</code>
       */
      public com.google.protobuf.Int64Value getIntervalDuration() {
        if (intervalDurationBuilder_ == null) {
          return intervalDuration_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : intervalDuration_;
        } else {
          return intervalDurationBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Duration of interval for quota in milliseconds.
       * Minimal value is 1 minute.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value interval_duration = 1 [(.yandex.cloud.value) = "&gt;=60000"];</code>
       */
      public Builder setIntervalDuration(com.google.protobuf.Int64Value value) {
        if (intervalDurationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          intervalDuration_ = value;
          onChanged();
        } else {
          intervalDurationBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Duration of interval for quota in milliseconds.
       * Minimal value is 1 minute.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value interval_duration = 1 [(.yandex.cloud.value) = "&gt;=60000"];</code>
       */
      public Builder setIntervalDuration(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (intervalDurationBuilder_ == null) {
          intervalDuration_ = builderForValue.build();
          onChanged();
        } else {
          intervalDurationBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Duration of interval for quota in milliseconds.
       * Minimal value is 1 minute.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value interval_duration = 1 [(.yandex.cloud.value) = "&gt;=60000"];</code>
       */
      public Builder mergeIntervalDuration(com.google.protobuf.Int64Value value) {
        if (intervalDurationBuilder_ == null) {
          if (intervalDuration_ != null) {
            intervalDuration_ =
              com.google.protobuf.Int64Value.newBuilder(intervalDuration_).mergeFrom(value).buildPartial();
          } else {
            intervalDuration_ = value;
          }
          onChanged();
        } else {
          intervalDurationBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Duration of interval for quota in milliseconds.
       * Minimal value is 1 minute.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value interval_duration = 1 [(.yandex.cloud.value) = "&gt;=60000"];</code>
       */
      public Builder clearIntervalDuration() {
        if (intervalDurationBuilder_ == null) {
          intervalDuration_ = null;
          onChanged();
        } else {
          intervalDuration_ = null;
          intervalDurationBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Duration of interval for quota in milliseconds.
       * Minimal value is 1 minute.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value interval_duration = 1 [(.yandex.cloud.value) = "&gt;=60000"];</code>
       */
      public com.google.protobuf.Int64Value.Builder getIntervalDurationBuilder() {
        
        onChanged();
        return getIntervalDurationFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Duration of interval for quota in milliseconds.
       * Minimal value is 1 minute.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value interval_duration = 1 [(.yandex.cloud.value) = "&gt;=60000"];</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getIntervalDurationOrBuilder() {
        if (intervalDurationBuilder_ != null) {
          return intervalDurationBuilder_.getMessageOrBuilder();
        } else {
          return intervalDuration_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : intervalDuration_;
        }
      }
      /**
       * <pre>
       * Duration of interval for quota in milliseconds.
       * Minimal value is 1 minute.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value interval_duration = 1 [(.yandex.cloud.value) = "&gt;=60000"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getIntervalDurationFieldBuilder() {
        if (intervalDurationBuilder_ == null) {
          intervalDurationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getIntervalDuration(),
                  getParentForChildren(),
                  isClean());
          intervalDuration_ = null;
        }
        return intervalDurationBuilder_;
      }

      private com.google.protobuf.Int64Value queries_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> queriesBuilder_;
      /**
       * <pre>
       * The total number of queries.
       * 0 - unlimited.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value queries = 2 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public boolean hasQueries() {
        return queriesBuilder_ != null || queries_ != null;
      }
      /**
       * <pre>
       * The total number of queries.
       * 0 - unlimited.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value queries = 2 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64Value getQueries() {
        if (queriesBuilder_ == null) {
          return queries_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : queries_;
        } else {
          return queriesBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The total number of queries.
       * 0 - unlimited.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value queries = 2 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder setQueries(com.google.protobuf.Int64Value value) {
        if (queriesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          queries_ = value;
          onChanged();
        } else {
          queriesBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The total number of queries.
       * 0 - unlimited.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value queries = 2 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder setQueries(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (queriesBuilder_ == null) {
          queries_ = builderForValue.build();
          onChanged();
        } else {
          queriesBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The total number of queries.
       * 0 - unlimited.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value queries = 2 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder mergeQueries(com.google.protobuf.Int64Value value) {
        if (queriesBuilder_ == null) {
          if (queries_ != null) {
            queries_ =
              com.google.protobuf.Int64Value.newBuilder(queries_).mergeFrom(value).buildPartial();
          } else {
            queries_ = value;
          }
          onChanged();
        } else {
          queriesBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The total number of queries.
       * 0 - unlimited.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value queries = 2 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder clearQueries() {
        if (queriesBuilder_ == null) {
          queries_ = null;
          onChanged();
        } else {
          queries_ = null;
          queriesBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The total number of queries.
       * 0 - unlimited.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value queries = 2 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64Value.Builder getQueriesBuilder() {
        
        onChanged();
        return getQueriesFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The total number of queries.
       * 0 - unlimited.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value queries = 2 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getQueriesOrBuilder() {
        if (queriesBuilder_ != null) {
          return queriesBuilder_.getMessageOrBuilder();
        } else {
          return queries_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : queries_;
        }
      }
      /**
       * <pre>
       * The total number of queries.
       * 0 - unlimited.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value queries = 2 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getQueriesFieldBuilder() {
        if (queriesBuilder_ == null) {
          queriesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getQueries(),
                  getParentForChildren(),
                  isClean());
          queries_ = null;
        }
        return queriesBuilder_;
      }

      private com.google.protobuf.Int64Value errors_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> errorsBuilder_;
      /**
       * <pre>
       * The number of queries that threw exception.
       * 0 - unlimited.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value errors = 3 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public boolean hasErrors() {
        return errorsBuilder_ != null || errors_ != null;
      }
      /**
       * <pre>
       * The number of queries that threw exception.
       * 0 - unlimited.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value errors = 3 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64Value getErrors() {
        if (errorsBuilder_ == null) {
          return errors_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : errors_;
        } else {
          return errorsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The number of queries that threw exception.
       * 0 - unlimited.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value errors = 3 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder setErrors(com.google.protobuf.Int64Value value) {
        if (errorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          errors_ = value;
          onChanged();
        } else {
          errorsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The number of queries that threw exception.
       * 0 - unlimited.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value errors = 3 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder setErrors(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (errorsBuilder_ == null) {
          errors_ = builderForValue.build();
          onChanged();
        } else {
          errorsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The number of queries that threw exception.
       * 0 - unlimited.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value errors = 3 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder mergeErrors(com.google.protobuf.Int64Value value) {
        if (errorsBuilder_ == null) {
          if (errors_ != null) {
            errors_ =
              com.google.protobuf.Int64Value.newBuilder(errors_).mergeFrom(value).buildPartial();
          } else {
            errors_ = value;
          }
          onChanged();
        } else {
          errorsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The number of queries that threw exception.
       * 0 - unlimited.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value errors = 3 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder clearErrors() {
        if (errorsBuilder_ == null) {
          errors_ = null;
          onChanged();
        } else {
          errors_ = null;
          errorsBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The number of queries that threw exception.
       * 0 - unlimited.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value errors = 3 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64Value.Builder getErrorsBuilder() {
        
        onChanged();
        return getErrorsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The number of queries that threw exception.
       * 0 - unlimited.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value errors = 3 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getErrorsOrBuilder() {
        if (errorsBuilder_ != null) {
          return errorsBuilder_.getMessageOrBuilder();
        } else {
          return errors_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : errors_;
        }
      }
      /**
       * <pre>
       * The number of queries that threw exception.
       * 0 - unlimited.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value errors = 3 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getErrorsFieldBuilder() {
        if (errorsBuilder_ == null) {
          errorsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getErrors(),
                  getParentForChildren(),
                  isClean());
          errors_ = null;
        }
        return errorsBuilder_;
      }

      private com.google.protobuf.Int64Value resultRows_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> resultRowsBuilder_;
      /**
       * <pre>
       * The total number of rows given as the result..
       * 0 - unlimited.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value result_rows = 4 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public boolean hasResultRows() {
        return resultRowsBuilder_ != null || resultRows_ != null;
      }
      /**
       * <pre>
       * The total number of rows given as the result..
       * 0 - unlimited.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value result_rows = 4 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64Value getResultRows() {
        if (resultRowsBuilder_ == null) {
          return resultRows_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : resultRows_;
        } else {
          return resultRowsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The total number of rows given as the result..
       * 0 - unlimited.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value result_rows = 4 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder setResultRows(com.google.protobuf.Int64Value value) {
        if (resultRowsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          resultRows_ = value;
          onChanged();
        } else {
          resultRowsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The total number of rows given as the result..
       * 0 - unlimited.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value result_rows = 4 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder setResultRows(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (resultRowsBuilder_ == null) {
          resultRows_ = builderForValue.build();
          onChanged();
        } else {
          resultRowsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The total number of rows given as the result..
       * 0 - unlimited.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value result_rows = 4 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder mergeResultRows(com.google.protobuf.Int64Value value) {
        if (resultRowsBuilder_ == null) {
          if (resultRows_ != null) {
            resultRows_ =
              com.google.protobuf.Int64Value.newBuilder(resultRows_).mergeFrom(value).buildPartial();
          } else {
            resultRows_ = value;
          }
          onChanged();
        } else {
          resultRowsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The total number of rows given as the result..
       * 0 - unlimited.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value result_rows = 4 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder clearResultRows() {
        if (resultRowsBuilder_ == null) {
          resultRows_ = null;
          onChanged();
        } else {
          resultRows_ = null;
          resultRowsBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The total number of rows given as the result..
       * 0 - unlimited.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value result_rows = 4 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64Value.Builder getResultRowsBuilder() {
        
        onChanged();
        return getResultRowsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The total number of rows given as the result..
       * 0 - unlimited.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value result_rows = 4 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getResultRowsOrBuilder() {
        if (resultRowsBuilder_ != null) {
          return resultRowsBuilder_.getMessageOrBuilder();
        } else {
          return resultRows_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : resultRows_;
        }
      }
      /**
       * <pre>
       * The total number of rows given as the result..
       * 0 - unlimited.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value result_rows = 4 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getResultRowsFieldBuilder() {
        if (resultRowsBuilder_ == null) {
          resultRowsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getResultRows(),
                  getParentForChildren(),
                  isClean());
          resultRows_ = null;
        }
        return resultRowsBuilder_;
      }

      private com.google.protobuf.Int64Value readRows_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> readRowsBuilder_;
      /**
       * <pre>
       * The total number of source rows read from tables for running the query, on all remote servers.
       * 0 - unlimited.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value read_rows = 5 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public boolean hasReadRows() {
        return readRowsBuilder_ != null || readRows_ != null;
      }
      /**
       * <pre>
       * The total number of source rows read from tables for running the query, on all remote servers.
       * 0 - unlimited.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value read_rows = 5 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64Value getReadRows() {
        if (readRowsBuilder_ == null) {
          return readRows_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : readRows_;
        } else {
          return readRowsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The total number of source rows read from tables for running the query, on all remote servers.
       * 0 - unlimited.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value read_rows = 5 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder setReadRows(com.google.protobuf.Int64Value value) {
        if (readRowsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          readRows_ = value;
          onChanged();
        } else {
          readRowsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The total number of source rows read from tables for running the query, on all remote servers.
       * 0 - unlimited.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value read_rows = 5 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder setReadRows(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (readRowsBuilder_ == null) {
          readRows_ = builderForValue.build();
          onChanged();
        } else {
          readRowsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The total number of source rows read from tables for running the query, on all remote servers.
       * 0 - unlimited.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value read_rows = 5 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder mergeReadRows(com.google.protobuf.Int64Value value) {
        if (readRowsBuilder_ == null) {
          if (readRows_ != null) {
            readRows_ =
              com.google.protobuf.Int64Value.newBuilder(readRows_).mergeFrom(value).buildPartial();
          } else {
            readRows_ = value;
          }
          onChanged();
        } else {
          readRowsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The total number of source rows read from tables for running the query, on all remote servers.
       * 0 - unlimited.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value read_rows = 5 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder clearReadRows() {
        if (readRowsBuilder_ == null) {
          readRows_ = null;
          onChanged();
        } else {
          readRows_ = null;
          readRowsBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The total number of source rows read from tables for running the query, on all remote servers.
       * 0 - unlimited.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value read_rows = 5 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64Value.Builder getReadRowsBuilder() {
        
        onChanged();
        return getReadRowsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The total number of source rows read from tables for running the query, on all remote servers.
       * 0 - unlimited.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value read_rows = 5 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getReadRowsOrBuilder() {
        if (readRowsBuilder_ != null) {
          return readRowsBuilder_.getMessageOrBuilder();
        } else {
          return readRows_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : readRows_;
        }
      }
      /**
       * <pre>
       * The total number of source rows read from tables for running the query, on all remote servers.
       * 0 - unlimited.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value read_rows = 5 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getReadRowsFieldBuilder() {
        if (readRowsBuilder_ == null) {
          readRowsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getReadRows(),
                  getParentForChildren(),
                  isClean());
          readRows_ = null;
        }
        return readRowsBuilder_;
      }

      private com.google.protobuf.Int64Value executionTime_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> executionTimeBuilder_;
      /**
       * <pre>
       * The total query execution time, in milliseconds (wall time).
       * 0 - unlimited.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value execution_time = 6 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public boolean hasExecutionTime() {
        return executionTimeBuilder_ != null || executionTime_ != null;
      }
      /**
       * <pre>
       * The total query execution time, in milliseconds (wall time).
       * 0 - unlimited.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value execution_time = 6 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64Value getExecutionTime() {
        if (executionTimeBuilder_ == null) {
          return executionTime_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : executionTime_;
        } else {
          return executionTimeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The total query execution time, in milliseconds (wall time).
       * 0 - unlimited.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value execution_time = 6 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder setExecutionTime(com.google.protobuf.Int64Value value) {
        if (executionTimeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          executionTime_ = value;
          onChanged();
        } else {
          executionTimeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The total query execution time, in milliseconds (wall time).
       * 0 - unlimited.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value execution_time = 6 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder setExecutionTime(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (executionTimeBuilder_ == null) {
          executionTime_ = builderForValue.build();
          onChanged();
        } else {
          executionTimeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The total query execution time, in milliseconds (wall time).
       * 0 - unlimited.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value execution_time = 6 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder mergeExecutionTime(com.google.protobuf.Int64Value value) {
        if (executionTimeBuilder_ == null) {
          if (executionTime_ != null) {
            executionTime_ =
              com.google.protobuf.Int64Value.newBuilder(executionTime_).mergeFrom(value).buildPartial();
          } else {
            executionTime_ = value;
          }
          onChanged();
        } else {
          executionTimeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The total query execution time, in milliseconds (wall time).
       * 0 - unlimited.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value execution_time = 6 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder clearExecutionTime() {
        if (executionTimeBuilder_ == null) {
          executionTime_ = null;
          onChanged();
        } else {
          executionTime_ = null;
          executionTimeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The total query execution time, in milliseconds (wall time).
       * 0 - unlimited.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value execution_time = 6 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64Value.Builder getExecutionTimeBuilder() {
        
        onChanged();
        return getExecutionTimeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The total query execution time, in milliseconds (wall time).
       * 0 - unlimited.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value execution_time = 6 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getExecutionTimeOrBuilder() {
        if (executionTimeBuilder_ != null) {
          return executionTimeBuilder_.getMessageOrBuilder();
        } else {
          return executionTime_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : executionTime_;
        }
      }
      /**
       * <pre>
       * The total query execution time, in milliseconds (wall time).
       * 0 - unlimited.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value execution_time = 6 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getExecutionTimeFieldBuilder() {
        if (executionTimeBuilder_ == null) {
          executionTimeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getExecutionTime(),
                  getParentForChildren(),
                  isClean());
          executionTime_ = null;
        }
        return executionTimeBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:yandex.cloud.mdb.clickhouse.v1.UserQuota)
    }

    // @@protoc_insertion_point(class_scope:yandex.cloud.mdb.clickhouse.v1.UserQuota)
    private static final yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuota DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuota();
    }

    public static yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuota getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<UserQuota>
        PARSER = new com.google.protobuf.AbstractParser<UserQuota>() {
      @java.lang.Override
      public UserQuota parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new UserQuota(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<UserQuota> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<UserQuota> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public yandex.cloud.api.mdb.clickhouse.v1.UserOuterClass.UserQuota getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_yandex_cloud_mdb_clickhouse_v1_User_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_yandex_cloud_mdb_clickhouse_v1_User_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_yandex_cloud_mdb_clickhouse_v1_Permission_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_yandex_cloud_mdb_clickhouse_v1_Permission_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_yandex_cloud_mdb_clickhouse_v1_UserSpec_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_yandex_cloud_mdb_clickhouse_v1_UserSpec_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_yandex_cloud_mdb_clickhouse_v1_UserSettings_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_yandex_cloud_mdb_clickhouse_v1_UserSettings_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_yandex_cloud_mdb_clickhouse_v1_UserQuota_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_yandex_cloud_mdb_clickhouse_v1_UserQuota_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n)yandex/cloud/mdb/clickhouse/v1/user.pr" +
      "oto\022\036yandex.cloud.mdb.clickhouse.v1\032\036goo" +
      "gle/protobuf/wrappers.proto\032\035yandex/clou" +
      "d/validation.proto\"\344\001\n\004User\022\014\n\004name\030\001 \001(" +
      "\t\022\022\n\ncluster_id\030\002 \001(\t\022?\n\013permissions\030\003 \003" +
      "(\0132*.yandex.cloud.mdb.clickhouse.v1.Perm" +
      "ission\022>\n\010settings\030\004 \001(\0132,.yandex.cloud." +
      "mdb.clickhouse.v1.UserSettings\0229\n\006quotas" +
      "\030\005 \003(\0132).yandex.cloud.mdb.clickhouse.v1." +
      "UserQuota\")\n\nPermission\022\025\n\rdatabase_name" +
      "\030\001 \001(\tJ\004\010\002\020\003\"\224\002\n\010UserSpec\022+\n\004name\030\001 \001(\tB" +
      "\035\350\3071\001\212\3101\004<=63\362\3071\r[a-zA-Z0-9_]*\022\037\n\010passwo" +
      "rd\030\002 \001(\tB\r\350\3071\001\212\3101\0058-128\022?\n\013permissions\030\003" +
      " \003(\0132*.yandex.cloud.mdb.clickhouse.v1.Pe" +
      "rmission\022>\n\010settings\030\004 \001(\0132,.yandex.clou" +
      "d.mdb.clickhouse.v1.UserSettings\0229\n\006quot" +
      "as\030\005 \003(\0132).yandex.cloud.mdb.clickhouse.v" +
      "1.UserQuota\"\230/\n\014UserSettings\0226\n\010readonly" +
      "\030\001 \001(\0132\033.google.protobuf.Int64ValueB\007\372\3071" +
      "\0030-2\022-\n\tallow_ddl\030\002 \001(\0132\032.google.protobu" +
      "f.BoolValue\022;\n\rinsert_quorum\030\003 \001(\0132\033.goo" +
      "gle.protobuf.Int64ValueB\007\372\3071\003>=0\022<\n\017conn" +
      "ect_timeout\030\' \001(\0132\033.google.protobuf.Int6" +
      "4ValueB\006\372\3071\002>0\022<\n\017receive_timeout\030( \001(\0132" +
      "\033.google.protobuf.Int64ValueB\006\372\3071\002>0\0229\n\014" +
      "send_timeout\030) \001(\0132\033.google.protobuf.Int" +
      "64ValueB\006\372\3071\002>0\022F\n\025insert_quorum_timeout" +
      "\030\004 \001(\0132\033.google.protobuf.Int64ValueB\n\372\3071" +
      "\006>=1000\022A\n\035select_sequential_consistency" +
      "\030\005 \001(\0132\032.google.protobuf.BoolValue\022Z\n)ma" +
      "x_replica_delay_for_distributed_queries\030" +
      "\006 \001(\0132\033.google.protobuf.Int64ValueB\n\372\3071\006" +
      ">=1000\022V\n2fallback_to_stale_replicas_for" +
      "_distributed_queries\030\007 \001(\0132\032.google.prot" +
      "obuf.BoolValue\022O\n!replication_alter_part" +
      "itions_sync\030* \001(\0132\033.google.protobuf.Int6" +
      "4ValueB\007\372\3071\0030-2\022e\n\030distributed_product_m" +
      "ode\030+ \001(\0162C.yandex.cloud.mdb.clickhouse." +
      "v1.UserSettings.DistributedProductMode\022L" +
      "\n(distributed_aggregation_memory_efficie" +
      "nt\030H \001(\0132\032.google.protobuf.BoolValue\022A\n\034" +
      "distributed_ddl_task_timeout\030I \001(\0132\033.goo" +
      "gle.protobuf.Int64Value\022+\n\007compile\030, \001(\013" +
      "2\032.google.protobuf.BoolValue\022B\n\024min_coun" +
      "t_to_compile\030- \001(\0132\033.google.protobuf.Int" +
      "64ValueB\007\372\3071\003>=0\0227\n\023compile_expressions\030" +
      ". \001(\0132\032.google.protobuf.BoolValue\022M\n\037min" +
      "_count_to_compile_expression\030/ \001(\0132\033.goo" +
      "gle.protobuf.Int64ValueB\007\372\3071\003>=0\022;\n\016max_" +
      "block_size\030\t \001(\0132\033.google.protobuf.Int64" +
      "ValueB\006\372\3071\002>0\022H\n\032min_insert_block_size_r" +
      "ows\0300 \001(\0132\033.google.protobuf.Int64ValueB\007" +
      "\372\3071\003>=0\022I\n\033min_insert_block_size_bytes\0301" +
      " \001(\0132\033.google.protobuf.Int64ValueB\007\372\3071\003>" +
      "=0\022B\n\025max_insert_block_size\030\n \001(\0132\033.goog" +
      "le.protobuf.Int64ValueB\006\372\3071\002>0\022H\n\032min_by" +
      "tes_to_use_direct_io\0302 \001(\0132\033.google.prot" +
      "obuf.Int64ValueB\007\372\3071\003>=0\022:\n\026use_uncompre" +
      "ssed_cache\0303 \001(\0132\032.google.protobuf.BoolV" +
      "alue\022M\n merge_tree_max_rows_to_use_cache" +
      "\0304 \001(\0132\033.google.protobuf.Int64ValueB\006\372\3071" +
      "\002>0\022N\n!merge_tree_max_bytes_to_use_cache" +
      "\0305 \001(\0132\033.google.protobuf.Int64ValueB\006\372\3071" +
      "\002>0\022T\n\'merge_tree_min_rows_for_concurren" +
      "t_read\0306 \001(\0132\033.google.protobuf.Int64Valu" +
      "eB\006\372\3071\002>0\022U\n(merge_tree_min_bytes_for_co" +
      "ncurrent_read\0307 \001(\0132\033.google.protobuf.In" +
      "t64ValueB\006\372\3071\002>0\022G\n\"max_bytes_before_ext" +
      "ernal_group_by\030J \001(\0132\033.google.protobuf.I" +
      "nt64Value\022C\n\036max_bytes_before_external_s" +
      "ort\030K \001(\0132\033.google.protobuf.Int64Value\022A" +
      "\n\034group_by_two_level_threshold\030L \001(\0132\033.g" +
      "oogle.protobuf.Int64Value\022G\n\"group_by_tw" +
      "o_level_threshold_bytes\030M \001(\0132\033.google.p" +
      "rotobuf.Int64Value\0226\n\010priority\0308 \001(\0132\033.g" +
      "oogle.protobuf.Int64ValueB\007\372\3071\003>=0\0228\n\013ma" +
      "x_threads\030\010 \001(\0132\033.google.protobuf.Int64V" +
      "alueB\006\372\3071\002>0\022>\n\020max_memory_usage\030\013 \001(\0132\033" +
      ".google.protobuf.Int64ValueB\007\372\3071\003>=0\022G\n\031" +
      "max_memory_usage_for_user\030\014 \001(\0132\033.google" +
      ".protobuf.Int64ValueB\007\372\3071\003>=0\022:\n\025max_net" +
      "work_bandwidth\0309 \001(\0132\033.google.protobuf.I" +
      "nt64Value\022C\n\036max_network_bandwidth_for_u" +
      "ser\030: \001(\0132\033.google.protobuf.Int64Value\0227" +
      "\n\023force_index_by_date\030; \001(\0132\032.google.pro" +
      "tobuf.BoolValue\0225\n\021force_primary_key\030< \001" +
      "(\0132\032.google.protobuf.BoolValue\022>\n\020max_ro" +
      "ws_to_read\030\r \001(\0132\033.google.protobuf.Int64" +
      "ValueB\007\372\3071\003>=0\022?\n\021max_bytes_to_read\030\016 \001(" +
      "\0132\033.google.protobuf.Int64ValueB\007\372\3071\003>=0\022" +
      "U\n\022read_overflow_mode\030\017 \001(\01629.yandex.clo" +
      "ud.mdb.clickhouse.v1.UserSettings.Overfl" +
      "owMode\022B\n\024max_rows_to_group_by\030\020 \001(\0132\033.g" +
      "oogle.protobuf.Int64ValueB\007\372\3071\003>=0\022`\n\026gr" +
      "oup_by_overflow_mode\030\021 \001(\0162@.yandex.clou" +
      "d.mdb.clickhouse.v1.UserSettings.GroupBy" +
      "OverflowMode\022>\n\020max_rows_to_sort\030\022 \001(\0132\033" +
      ".google.protobuf.Int64ValueB\007\372\3071\003>=0\022?\n\021" +
      "max_bytes_to_sort\030\023 \001(\0132\033.google.protobu" +
      "f.Int64ValueB\007\372\3071\003>=0\022U\n\022sort_overflow_m" +
      "ode\030\024 \001(\01629.yandex.cloud.mdb.clickhouse." +
      "v1.UserSettings.OverflowMode\022=\n\017max_resu" +
      "lt_rows\030\025 \001(\0132\033.google.protobuf.Int64Val" +
      "ueB\007\372\3071\003>=0\022>\n\020max_result_bytes\030\026 \001(\0132\033." +
      "google.protobuf.Int64ValueB\007\372\3071\003>=0\022W\n\024r" +
      "esult_overflow_mode\030\027 \001(\01629.yandex.cloud" +
      ".mdb.clickhouse.v1.UserSettings.Overflow" +
      "Mode\022B\n\024max_rows_in_distinct\030\030 \001(\0132\033.goo" +
      "gle.protobuf.Int64ValueB\007\372\3071\003>=0\022C\n\025max_" +
      "bytes_in_distinct\030\031 \001(\0132\033.google.protobu" +
      "f.Int64ValueB\007\372\3071\003>=0\022Y\n\026distinct_overfl" +
      "ow_mode\030\032 \001(\01629.yandex.cloud.mdb.clickho" +
      "use.v1.UserSettings.OverflowMode\022B\n\024max_" +
      "rows_to_transfer\030\033 \001(\0132\033.google.protobuf" +
      ".Int64ValueB\007\372\3071\003>=0\022C\n\025max_bytes_to_tra" +
      "nsfer\030\034 \001(\0132\033.google.protobuf.Int64Value" +
      "B\007\372\3071\003>=0\022Y\n\026transfer_overflow_mode\030\035 \001(" +
      "\01629.yandex.cloud.mdb.clickhouse.v1.UserS" +
      "ettings.OverflowMode\022@\n\022max_execution_ti" +
      "me\030\036 \001(\0132\033.google.protobuf.Int64ValueB\007\372" +
      "\3071\003>=0\022X\n\025timeout_overflow_mode\030\037 \001(\01629." +
      "yandex.cloud.mdb.clickhouse.v1.UserSetti" +
      "ngs.OverflowMode\022A\n\023max_columns_to_read\030" +
      "  \001(\0132\033.google.protobuf.Int64ValueB\007\372\3071\003" +
      ">=0\022C\n\025max_temporary_columns\030! \001(\0132\033.goo" +
      "gle.protobuf.Int64ValueB\007\372\3071\003>=0\022M\n\037max_" +
      "temporary_non_const_columns\030\" \001(\0132\033.goog" +
      "le.protobuf.Int64ValueB\007\372\3071\003>=0\022;\n\016max_q" +
      "uery_size\030# \001(\0132\033.google.protobuf.Int64V" +
      "alueB\006\372\3071\002>0\022:\n\rmax_ast_depth\030$ \001(\0132\033.go" +
      "ogle.protobuf.Int64ValueB\006\372\3071\002>0\022=\n\020max_" +
      "ast_elements\030% \001(\0132\033.google.protobuf.Int" +
      "64ValueB\006\372\3071\002>0\022F\n\031max_expanded_ast_elem" +
      "ents\030& \001(\0132\033.google.protobuf.Int64ValueB" +
      "\006\372\3071\002>0\022M\n)input_format_values_interpret" +
      "_expressions\030= \001(\0132\032.google.protobuf.Boo" +
      "lValue\022L\n(input_format_defaults_for_omit" +
      "ted_fields\030> \001(\0132\032.google.protobuf.BoolV" +
      "alue\022K\n\'output_format_json_quote_64bit_i" +
      "ntegers\030? \001(\0132\032.google.protobuf.BoolValu" +
      "e\022F\n\"output_format_json_quote_denormals\030" +
      "@ \001(\0132\032.google.protobuf.BoolValue\022J\n&low" +
      "_cardinality_allow_in_native_format\030N \001(" +
      "\0132\032.google.protobuf.BoolValue\022M\n)empty_r" +
      "esult_for_aggregation_by_empty_set\030O \001(\013" +
      "2\032.google.protobuf.BoolValue\022<\n\027http_con" +
      "nection_timeout\030A \001(\0132\033.google.protobuf." +
      "Int64Value\0229\n\024http_receive_timeout\030B \001(\013" +
      "2\033.google.protobuf.Int64Value\0226\n\021http_se" +
      "nd_timeout\030C \001(\0132\033.google.protobuf.Int64" +
      "Value\022;\n\027enable_http_compression\030D \001(\0132\032" +
      ".google.protobuf.BoolValue\022A\n\035send_progr" +
      "ess_in_http_headers\030E \001(\0132\032.google.proto" +
      "buf.BoolValue\022C\n\036http_headers_progress_i" +
      "nterval\030F \001(\0132\033.google.protobuf.Int64Val" +
      "ue\0228\n\024add_http_cors_header\030G \001(\0132\032.googl" +
      "e.protobuf.BoolValue\"_\n\014OverflowMode\022\035\n\031" +
      "OVERFLOW_MODE_UNSPECIFIED\020\000\022\027\n\023OVERFLOW_" +
      "MODE_THROW\020\001\022\027\n\023OVERFLOW_MODE_BREAK\020\002\"\241\001" +
      "\n\023GroupByOverflowMode\022&\n\"GROUP_BY_OVERFL" +
      "OW_MODE_UNSPECIFIED\020\000\022 \n\034GROUP_BY_OVERFL" +
      "OW_MODE_THROW\020\001\022 \n\034GROUP_BY_OVERFLOW_MOD" +
      "E_BREAK\020\002\022\036\n\032GROUP_BY_OVERFLOW_MODE_ANY\020" +
      "\003\"\322\001\n\026DistributedProductMode\022(\n$DISTRIBU" +
      "TED_PRODUCT_MODE_UNSPECIFIED\020\000\022!\n\035DISTRI" +
      "BUTED_PRODUCT_MODE_DENY\020\001\022\"\n\036DISTRIBUTED" +
      "_PRODUCT_MODE_LOCAL\020\002\022#\n\037DISTRIBUTED_PRO" +
      "DUCT_MODE_GLOBAL\020\003\022\"\n\036DISTRIBUTED_PRODUC" +
      "T_MODE_ALLOW\020\004\"\357\002\n\tUserQuota\022C\n\021interval" +
      "_duration\030\001 \001(\0132\033.google.protobuf.Int64V" +
      "alueB\013\372\3071\007>=60000\0225\n\007queries\030\002 \001(\0132\033.goo" +
      "gle.protobuf.Int64ValueB\007\372\3071\003>=0\0224\n\006erro" +
      "rs\030\003 \001(\0132\033.google.protobuf.Int64ValueB\007\372" +
      "\3071\003>=0\0229\n\013result_rows\030\004 \001(\0132\033.google.pro" +
      "tobuf.Int64ValueB\007\372\3071\003>=0\0227\n\tread_rows\030\005" +
      " \001(\0132\033.google.protobuf.Int64ValueB\007\372\3071\003>" +
      "=0\022<\n\016execution_time\030\006 \001(\0132\033.google.prot" +
      "obuf.Int64ValueB\007\372\3071\003>=0Bs\n\"yandex.cloud" +
      ".api.mdb.clickhouse.v1ZMgithub.com/yande" +
      "x-cloud/go-genproto/yandex/cloud/mdb/cli" +
      "ckhouse/v1;clickhouseb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.protobuf.WrappersProto.getDescriptor(),
          yandex.cloud.api.Validation.getDescriptor(),
        }, assigner);
    internal_static_yandex_cloud_mdb_clickhouse_v1_User_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_yandex_cloud_mdb_clickhouse_v1_User_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_yandex_cloud_mdb_clickhouse_v1_User_descriptor,
        new java.lang.String[] { "Name", "ClusterId", "Permissions", "Settings", "Quotas", });
    internal_static_yandex_cloud_mdb_clickhouse_v1_Permission_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_yandex_cloud_mdb_clickhouse_v1_Permission_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_yandex_cloud_mdb_clickhouse_v1_Permission_descriptor,
        new java.lang.String[] { "DatabaseName", });
    internal_static_yandex_cloud_mdb_clickhouse_v1_UserSpec_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_yandex_cloud_mdb_clickhouse_v1_UserSpec_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_yandex_cloud_mdb_clickhouse_v1_UserSpec_descriptor,
        new java.lang.String[] { "Name", "Password", "Permissions", "Settings", "Quotas", });
    internal_static_yandex_cloud_mdb_clickhouse_v1_UserSettings_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_yandex_cloud_mdb_clickhouse_v1_UserSettings_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_yandex_cloud_mdb_clickhouse_v1_UserSettings_descriptor,
        new java.lang.String[] { "Readonly", "AllowDdl", "InsertQuorum", "ConnectTimeout", "ReceiveTimeout", "SendTimeout", "InsertQuorumTimeout", "SelectSequentialConsistency", "MaxReplicaDelayForDistributedQueries", "FallbackToStaleReplicasForDistributedQueries", "ReplicationAlterPartitionsSync", "DistributedProductMode", "DistributedAggregationMemoryEfficient", "DistributedDdlTaskTimeout", "Compile", "MinCountToCompile", "CompileExpressions", "MinCountToCompileExpression", "MaxBlockSize", "MinInsertBlockSizeRows", "MinInsertBlockSizeBytes", "MaxInsertBlockSize", "MinBytesToUseDirectIo", "UseUncompressedCache", "MergeTreeMaxRowsToUseCache", "MergeTreeMaxBytesToUseCache", "MergeTreeMinRowsForConcurrentRead", "MergeTreeMinBytesForConcurrentRead", "MaxBytesBeforeExternalGroupBy", "MaxBytesBeforeExternalSort", "GroupByTwoLevelThreshold", "GroupByTwoLevelThresholdBytes", "Priority", "MaxThreads", "MaxMemoryUsage", "MaxMemoryUsageForUser", "MaxNetworkBandwidth", "MaxNetworkBandwidthForUser", "ForceIndexByDate", "ForcePrimaryKey", "MaxRowsToRead", "MaxBytesToRead", "ReadOverflowMode", "MaxRowsToGroupBy", "GroupByOverflowMode", "MaxRowsToSort", "MaxBytesToSort", "SortOverflowMode", "MaxResultRows", "MaxResultBytes", "ResultOverflowMode", "MaxRowsInDistinct", "MaxBytesInDistinct", "DistinctOverflowMode", "MaxRowsToTransfer", "MaxBytesToTransfer", "TransferOverflowMode", "MaxExecutionTime", "TimeoutOverflowMode", "MaxColumnsToRead", "MaxTemporaryColumns", "MaxTemporaryNonConstColumns", "MaxQuerySize", "MaxAstDepth", "MaxAstElements", "MaxExpandedAstElements", "InputFormatValuesInterpretExpressions", "InputFormatDefaultsForOmittedFields", "OutputFormatJsonQuote64BitIntegers", "OutputFormatJsonQuoteDenormals", "LowCardinalityAllowInNativeFormat", "EmptyResultForAggregationByEmptySet", "HttpConnectionTimeout", "HttpReceiveTimeout", "HttpSendTimeout", "EnableHttpCompression", "SendProgressInHttpHeaders", "HttpHeadersProgressInterval", "AddHttpCorsHeader", });
    internal_static_yandex_cloud_mdb_clickhouse_v1_UserQuota_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_yandex_cloud_mdb_clickhouse_v1_UserQuota_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_yandex_cloud_mdb_clickhouse_v1_UserQuota_descriptor,
        new java.lang.String[] { "IntervalDuration", "Queries", "Errors", "ResultRows", "ReadRows", "ExecutionTime", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(yandex.cloud.api.Validation.length);
    registry.add(yandex.cloud.api.Validation.pattern);
    registry.add(yandex.cloud.api.Validation.required);
    registry.add(yandex.cloud.api.Validation.value);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.google.protobuf.WrappersProto.getDescriptor();
    yandex.cloud.api.Validation.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
